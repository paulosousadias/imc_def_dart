// GENERATED CODE - DO NOT MODIFY BY HAND

// **************************************************************************
// IMC Code Generator
// **************************************************************************

part of 'imc_def.dart';

/// Entity State immutable class
///
class _$EntityState extends EntityState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EntityStateEnumState state;
  @override
  final EntityStateBitfieldFlags flags;
  @override
  final String description;

  factory _$EntityState([void updates(EntityStateBuilder b)]) =>
      (new EntityStateBuilder()..update(updates)).build();

  _$EntityState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state,
      this.flags,
      this.description})
      : super._();

  @override
  EntityState rebuild(void updates(EntityStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityStateBuilder toBuilder() => new EntityStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state &&
        flags == this.flags &&
        description == this.description;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        state.hashCode), 
        flags.hashCode), 
        description.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('state', state)
          ..add('flags', flags)
          ..add('description', description))
        .toString();
  }
}

/// Entity State builder class
///
class EntityStateBuilder implements Builder<EntityState, EntityStateBuilder> {
  _$EntityState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EntityStateEnumState _state;
  EntityStateEnumState get state => _$this._state;
  set state(EntityStateEnumState state) => _$this._state = state;

  EntityStateBitfieldFlags _flags;
  EntityStateBitfieldFlags get flags => _$this._flags;
  set flags(EntityStateBitfieldFlags flags) => _$this._flags = flags;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  EntityStateBuilder();

  EntityStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _flags = _$v.flags;
      _description = _$v.description;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EntityState;
  }

  @override
  void update(void updates(EntityStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityState build() {
    final _$result = _$v ??
        new _$EntityState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            state: state,
            flags: flags,
            description: description);
    replace(_$result);
    return _$result;
  }
}

/// Query Entity State immutable class
///
class _$QueryEntityState extends QueryEntityState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$QueryEntityState([void updates(QueryEntityStateBuilder b)]) =>
      (new QueryEntityStateBuilder()..update(updates)).build();

  _$QueryEntityState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  QueryEntityState rebuild(void updates(QueryEntityStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryEntityStateBuilder toBuilder() => new QueryEntityStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryEntityState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryEntityState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt))
        .toString();
  }
}

/// Query Entity State builder class
///
class QueryEntityStateBuilder implements Builder<QueryEntityState, QueryEntityStateBuilder> {
  _$QueryEntityState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  QueryEntityStateBuilder();

  QueryEntityStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryEntityState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$QueryEntityState;
  }

  @override
  void update(void updates(QueryEntityStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryEntityState build() {
    final _$result = _$v ??
        new _$QueryEntityState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt);
    replace(_$result);
    return _$result;
  }
}

/// Entity Information immutable class
///
class _$EntityInfo extends EntityInfo {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final String label;
  @override
  final String component;
  @override
  final int act_time;
  @override
  final int deact_time;

  factory _$EntityInfo([void updates(EntityInfoBuilder b)]) =>
      (new EntityInfoBuilder()..update(updates)).build();

  _$EntityInfo._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.label,
      this.component,
      this.act_time,
      this.deact_time})
      : super._();

  @override
  EntityInfo rebuild(void updates(EntityInfoBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityInfoBuilder toBuilder() => new EntityInfoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityInfo &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        label == this.label &&
        component == this.component &&
        act_time == this.act_time &&
        deact_time == this.deact_time;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        id.hashCode), 
        label.hashCode), 
        component.hashCode), 
        act_time.hashCode), 
        deact_time.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityInfo')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('id', id)
          ..add('label', label)
          ..add('component', component)
          ..add('act_time', act_time)
          ..add('deact_time', deact_time))
        .toString();
  }
}

/// Entity Information builder class
///
class EntityInfoBuilder implements Builder<EntityInfo, EntityInfoBuilder> {
  _$EntityInfo _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  String _label;
  String get label => _$this._label;
  set label(String label) => _$this._label = label;

  String _component;
  String get component => _$this._component;
  set component(String component) => _$this._component = component;

  int _act_time;
  int get act_time => _$this._act_time;
  set act_time(int act_time) => _$this._act_time = act_time;

  int _deact_time;
  int get deact_time => _$this._deact_time;
  set deact_time(int deact_time) => _$this._deact_time = deact_time;

  EntityInfoBuilder();

  EntityInfoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _label = _$v.label;
      _component = _$v.component;
      _act_time = _$v.act_time;
      _deact_time = _$v.deact_time;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityInfo other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EntityInfo;
  }

  @override
  void update(void updates(EntityInfoBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityInfo build() {
    final _$result = _$v ??
        new _$EntityInfo._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            id: id,
            label: label,
            component: component,
            act_time: act_time,
            deact_time: deact_time);
    replace(_$result);
    return _$result;
  }
}

/// Query Entity Information immutable class
///
class _$QueryEntityInfo extends QueryEntityInfo {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;

  factory _$QueryEntityInfo([void updates(QueryEntityInfoBuilder b)]) =>
      (new QueryEntityInfoBuilder()..update(updates)).build();

  _$QueryEntityInfo._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id})
      : super._();

  @override
  QueryEntityInfo rebuild(void updates(QueryEntityInfoBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryEntityInfoBuilder toBuilder() => new QueryEntityInfoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryEntityInfo &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryEntityInfo')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('id', id))
        .toString();
  }
}

/// Query Entity Information builder class
///
class QueryEntityInfoBuilder implements Builder<QueryEntityInfo, QueryEntityInfoBuilder> {
  _$QueryEntityInfo _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  QueryEntityInfoBuilder();

  QueryEntityInfoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryEntityInfo other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$QueryEntityInfo;
  }

  @override
  void update(void updates(QueryEntityInfoBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryEntityInfo build() {
    final _$result = _$v ??
        new _$QueryEntityInfo._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            id: id);
    replace(_$result);
    return _$result;
  }
}

/// Entity List immutable class
///
class _$EntityList extends EntityList {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EntityListEnumOp op;
  @override
  final String list;

  factory _$EntityList([void updates(EntityListBuilder b)]) =>
      (new EntityListBuilder()..update(updates)).build();

  _$EntityList._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.list})
      : super._();

  @override
  EntityList rebuild(void updates(EntityListBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityListBuilder toBuilder() => new EntityListBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityList &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        list == this.list;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        list.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityList')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('list', list))
        .toString();
  }
}

/// Entity List builder class
///
class EntityListBuilder implements Builder<EntityList, EntityListBuilder> {
  _$EntityList _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EntityListEnumOp _op;
  EntityListEnumOp get op => _$this._op;
  set op(EntityListEnumOp op) => _$this._op = op;

  String _list;
  String get list => _$this._list;
  set list(String list) => _$this._list = list;

  EntityListBuilder();

  EntityListBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _list = _$v.list;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityList other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EntityList;
  }

  @override
  void update(void updates(EntityListBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityList build() {
    final _$result = _$v ??
        new _$EntityList._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            list: list);
    replace(_$result);
    return _$result;
  }
}

/// CPU Usage immutable class
///
class _$CpuUsage extends CpuUsage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int value;

  factory _$CpuUsage([void updates(CpuUsageBuilder b)]) =>
      (new CpuUsageBuilder()..update(updates)).build();

  _$CpuUsage._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  CpuUsage rebuild(void updates(CpuUsageBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CpuUsageBuilder toBuilder() => new CpuUsageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CpuUsage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CpuUsage')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// CPU Usage builder class
///
class CpuUsageBuilder implements Builder<CpuUsage, CpuUsageBuilder> {
  _$CpuUsage _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _value;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  CpuUsageBuilder();

  CpuUsageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CpuUsage other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CpuUsage;
  }

  @override
  void update(void updates(CpuUsageBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CpuUsage build() {
    final _$result = _$v ??
        new _$CpuUsage._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Transport Bindings immutable class
///
class _$TransportBindings extends TransportBindings {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String consumer;
  @override
  final int message_id;

  factory _$TransportBindings([void updates(TransportBindingsBuilder b)]) =>
      (new TransportBindingsBuilder()..update(updates)).build();

  _$TransportBindings._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.consumer,
      this.message_id})
      : super._();

  @override
  TransportBindings rebuild(void updates(TransportBindingsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TransportBindingsBuilder toBuilder() => new TransportBindingsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TransportBindings &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        consumer == this.consumer &&
        message_id == this.message_id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        consumer.hashCode), 
        message_id.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TransportBindings')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('consumer', consumer)
          ..add('message_id', message_id))
        .toString();
  }
}

/// Transport Bindings builder class
///
class TransportBindingsBuilder implements Builder<TransportBindings, TransportBindingsBuilder> {
  _$TransportBindings _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _consumer;
  String get consumer => _$this._consumer;
  set consumer(String consumer) => _$this._consumer = consumer;

  int _message_id;
  int get message_id => _$this._message_id;
  set message_id(int message_id) => _$this._message_id = message_id;

  TransportBindingsBuilder();

  TransportBindingsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _consumer = _$v.consumer;
      _message_id = _$v.message_id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TransportBindings other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TransportBindings;
  }

  @override
  void update(void updates(TransportBindingsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TransportBindings build() {
    final _$result = _$v ??
        new _$TransportBindings._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            consumer: consumer,
            message_id: message_id);
    replace(_$result);
    return _$result;
  }
}

/// Restart System immutable class
///
class _$RestartSystem extends RestartSystem {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final RestartSystemEnumType type;

  factory _$RestartSystem([void updates(RestartSystemBuilder b)]) =>
      (new RestartSystemBuilder()..update(updates)).build();

  _$RestartSystem._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type})
      : super._();

  @override
  RestartSystem rebuild(void updates(RestartSystemBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RestartSystemBuilder toBuilder() => new RestartSystemBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RestartSystem &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RestartSystem')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type))
        .toString();
  }
}

/// Restart System builder class
///
class RestartSystemBuilder implements Builder<RestartSystem, RestartSystemBuilder> {
  _$RestartSystem _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  RestartSystemEnumType _type;
  RestartSystemEnumType get type => _$this._type;
  set type(RestartSystemEnumType type) => _$this._type = type;

  RestartSystemBuilder();

  RestartSystemBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RestartSystem other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RestartSystem;
  }

  @override
  void update(void updates(RestartSystemBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RestartSystem build() {
    final _$result = _$v ??
        new _$RestartSystem._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type);
    replace(_$result);
    return _$result;
  }
}

/// Device Calibration Control immutable class
///
class _$DevCalibrationControl extends DevCalibrationControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DevCalibrationControlEnumOp op;

  factory _$DevCalibrationControl([void updates(DevCalibrationControlBuilder b)]) =>
      (new DevCalibrationControlBuilder()..update(updates)).build();

  _$DevCalibrationControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op})
      : super._();

  @override
  DevCalibrationControl rebuild(void updates(DevCalibrationControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DevCalibrationControlBuilder toBuilder() => new DevCalibrationControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DevCalibrationControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DevCalibrationControl')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op))
        .toString();
  }
}

/// Device Calibration Control builder class
///
class DevCalibrationControlBuilder implements Builder<DevCalibrationControl, DevCalibrationControlBuilder> {
  _$DevCalibrationControl _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DevCalibrationControlEnumOp _op;
  DevCalibrationControlEnumOp get op => _$this._op;
  set op(DevCalibrationControlEnumOp op) => _$this._op = op;

  DevCalibrationControlBuilder();

  DevCalibrationControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DevCalibrationControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DevCalibrationControl;
  }

  @override
  void update(void updates(DevCalibrationControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DevCalibrationControl build() {
    final _$result = _$v ??
        new _$DevCalibrationControl._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op);
    replace(_$result);
    return _$result;
  }
}

/// Device Calibration State immutable class
///
class _$DevCalibrationState extends DevCalibrationState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int total_steps;
  @override
  final int step_number;
  @override
  final String step;
  @override
  final DevCalibrationStateBitfieldFlags flags;

  factory _$DevCalibrationState([void updates(DevCalibrationStateBuilder b)]) =>
      (new DevCalibrationStateBuilder()..update(updates)).build();

  _$DevCalibrationState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.total_steps,
      this.step_number,
      this.step,
      this.flags})
      : super._();

  @override
  DevCalibrationState rebuild(void updates(DevCalibrationStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DevCalibrationStateBuilder toBuilder() => new DevCalibrationStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DevCalibrationState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        total_steps == this.total_steps &&
        step_number == this.step_number &&
        step == this.step &&
        flags == this.flags;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        total_steps.hashCode), 
        step_number.hashCode), 
        step.hashCode), 
        flags.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DevCalibrationState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('total_steps', total_steps)
          ..add('step_number', step_number)
          ..add('step', step)
          ..add('flags', flags))
        .toString();
  }
}

/// Device Calibration State builder class
///
class DevCalibrationStateBuilder implements Builder<DevCalibrationState, DevCalibrationStateBuilder> {
  _$DevCalibrationState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _total_steps;
  int get total_steps => _$this._total_steps;
  set total_steps(int total_steps) => _$this._total_steps = total_steps;

  int _step_number;
  int get step_number => _$this._step_number;
  set step_number(int step_number) => _$this._step_number = step_number;

  String _step;
  String get step => _$this._step;
  set step(String step) => _$this._step = step;

  DevCalibrationStateBitfieldFlags _flags;
  DevCalibrationStateBitfieldFlags get flags => _$this._flags;
  set flags(DevCalibrationStateBitfieldFlags flags) => _$this._flags = flags;

  DevCalibrationStateBuilder();

  DevCalibrationStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _total_steps = _$v.total_steps;
      _step_number = _$v.step_number;
      _step = _$v.step;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DevCalibrationState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DevCalibrationState;
  }

  @override
  void update(void updates(DevCalibrationStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DevCalibrationState build() {
    final _$result = _$v ??
        new _$DevCalibrationState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            total_steps: total_steps,
            step_number: step_number,
            step: step,
            flags: flags);
    replace(_$result);
    return _$result;
  }
}

/// Entity Activation State immutable class
///
class _$EntityActivationState extends EntityActivationState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EntityActivationStateEnumState state;
  @override
  final String error;

  factory _$EntityActivationState([void updates(EntityActivationStateBuilder b)]) =>
      (new EntityActivationStateBuilder()..update(updates)).build();

  _$EntityActivationState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state,
      this.error})
      : super._();

  @override
  EntityActivationState rebuild(void updates(EntityActivationStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityActivationStateBuilder toBuilder() => new EntityActivationStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityActivationState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state &&
        error == this.error;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        state.hashCode), 
        error.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityActivationState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('state', state)
          ..add('error', error))
        .toString();
  }
}

/// Entity Activation State builder class
///
class EntityActivationStateBuilder implements Builder<EntityActivationState, EntityActivationStateBuilder> {
  _$EntityActivationState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EntityActivationStateEnumState _state;
  EntityActivationStateEnumState get state => _$this._state;
  set state(EntityActivationStateEnumState state) => _$this._state = state;

  String _error;
  String get error => _$this._error;
  set error(String error) => _$this._error = error;

  EntityActivationStateBuilder();

  EntityActivationStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _error = _$v.error;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityActivationState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EntityActivationState;
  }

  @override
  void update(void updates(EntityActivationStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityActivationState build() {
    final _$result = _$v ??
        new _$EntityActivationState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            state: state,
            error: error);
    replace(_$result);
    return _$result;
  }
}

/// Query Entity Activation State immutable class
///
class _$QueryEntityActivationState extends QueryEntityActivationState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$QueryEntityActivationState([void updates(QueryEntityActivationStateBuilder b)]) =>
      (new QueryEntityActivationStateBuilder()..update(updates)).build();

  _$QueryEntityActivationState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  QueryEntityActivationState rebuild(void updates(QueryEntityActivationStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryEntityActivationStateBuilder toBuilder() => new QueryEntityActivationStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryEntityActivationState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryEntityActivationState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt))
        .toString();
  }
}

/// Query Entity Activation State builder class
///
class QueryEntityActivationStateBuilder implements Builder<QueryEntityActivationState, QueryEntityActivationStateBuilder> {
  _$QueryEntityActivationState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  QueryEntityActivationStateBuilder();

  QueryEntityActivationStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryEntityActivationState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$QueryEntityActivationState;
  }

  @override
  void update(void updates(QueryEntityActivationStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryEntityActivationState build() {
    final _$result = _$v ??
        new _$QueryEntityActivationState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Operational Limits immutable class
///
class _$VehicleOperationalLimits extends VehicleOperationalLimits {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VehicleOperationalLimitsEnumOp op;
  @override
  final double speed_min;
  @override
  final double speed_max;
  @override
  final double long_accel;
  @override
  final double alt_max_msl;
  @override
  final double dive_fraction_max;
  @override
  final double climb_fraction_max;
  @override
  final double bank_max;
  @override
  final double p_max;
  @override
  final double pitch_min;
  @override
  final double pitch_max;
  @override
  final double q_max;
  @override
  final double g_min;
  @override
  final double g_max;
  @override
  final double g_lat_max;
  @override
  final double rpm_min;
  @override
  final double rpm_max;
  @override
  final double rpm_rate_max;

  factory _$VehicleOperationalLimits([void updates(VehicleOperationalLimitsBuilder b)]) =>
      (new VehicleOperationalLimitsBuilder()..update(updates)).build();

  _$VehicleOperationalLimits._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.speed_min,
      this.speed_max,
      this.long_accel,
      this.alt_max_msl,
      this.dive_fraction_max,
      this.climb_fraction_max,
      this.bank_max,
      this.p_max,
      this.pitch_min,
      this.pitch_max,
      this.q_max,
      this.g_min,
      this.g_max,
      this.g_lat_max,
      this.rpm_min,
      this.rpm_max,
      this.rpm_rate_max})
      : super._();

  @override
  VehicleOperationalLimits rebuild(void updates(VehicleOperationalLimitsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleOperationalLimitsBuilder toBuilder() => new VehicleOperationalLimitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleOperationalLimits &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        speed_min == this.speed_min &&
        speed_max == this.speed_max &&
        long_accel == this.long_accel &&
        alt_max_msl == this.alt_max_msl &&
        dive_fraction_max == this.dive_fraction_max &&
        climb_fraction_max == this.climb_fraction_max &&
        bank_max == this.bank_max &&
        p_max == this.p_max &&
        pitch_min == this.pitch_min &&
        pitch_max == this.pitch_max &&
        q_max == this.q_max &&
        g_min == this.g_min &&
        g_max == this.g_max &&
        g_lat_max == this.g_lat_max &&
        rpm_min == this.rpm_min &&
        rpm_max == this.rpm_max &&
        rpm_rate_max == this.rpm_rate_max;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        speed_min.hashCode), 
        speed_max.hashCode), 
        long_accel.hashCode), 
        alt_max_msl.hashCode), 
        dive_fraction_max.hashCode), 
        climb_fraction_max.hashCode), 
        bank_max.hashCode), 
        p_max.hashCode), 
        pitch_min.hashCode), 
        pitch_max.hashCode), 
        q_max.hashCode), 
        g_min.hashCode), 
        g_max.hashCode), 
        g_lat_max.hashCode), 
        rpm_min.hashCode), 
        rpm_max.hashCode), 
        rpm_rate_max.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleOperationalLimits')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('speed_min', speed_min)
          ..add('speed_max', speed_max)
          ..add('long_accel', long_accel)
          ..add('alt_max_msl', alt_max_msl)
          ..add('dive_fraction_max', dive_fraction_max)
          ..add('climb_fraction_max', climb_fraction_max)
          ..add('bank_max', bank_max)
          ..add('p_max', p_max)
          ..add('pitch_min', pitch_min)
          ..add('pitch_max', pitch_max)
          ..add('q_max', q_max)
          ..add('g_min', g_min)
          ..add('g_max', g_max)
          ..add('g_lat_max', g_lat_max)
          ..add('rpm_min', rpm_min)
          ..add('rpm_max', rpm_max)
          ..add('rpm_rate_max', rpm_rate_max))
        .toString();
  }
}

/// Vehicle Operational Limits builder class
///
class VehicleOperationalLimitsBuilder implements Builder<VehicleOperationalLimits, VehicleOperationalLimitsBuilder> {
  _$VehicleOperationalLimits _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VehicleOperationalLimitsEnumOp _op;
  VehicleOperationalLimitsEnumOp get op => _$this._op;
  set op(VehicleOperationalLimitsEnumOp op) => _$this._op = op;

  double _speed_min;
  double get speed_min => _$this._speed_min;
  set speed_min(double speed_min) => _$this._speed_min = speed_min;

  double _speed_max;
  double get speed_max => _$this._speed_max;
  set speed_max(double speed_max) => _$this._speed_max = speed_max;

  double _long_accel;
  double get long_accel => _$this._long_accel;
  set long_accel(double long_accel) => _$this._long_accel = long_accel;

  double _alt_max_msl;
  double get alt_max_msl => _$this._alt_max_msl;
  set alt_max_msl(double alt_max_msl) => _$this._alt_max_msl = alt_max_msl;

  double _dive_fraction_max;
  double get dive_fraction_max => _$this._dive_fraction_max;
  set dive_fraction_max(double dive_fraction_max) => _$this._dive_fraction_max = dive_fraction_max;

  double _climb_fraction_max;
  double get climb_fraction_max => _$this._climb_fraction_max;
  set climb_fraction_max(double climb_fraction_max) => _$this._climb_fraction_max = climb_fraction_max;

  double _bank_max;
  double get bank_max => _$this._bank_max;
  set bank_max(double bank_max) => _$this._bank_max = bank_max;

  double _p_max;
  double get p_max => _$this._p_max;
  set p_max(double p_max) => _$this._p_max = p_max;

  double _pitch_min;
  double get pitch_min => _$this._pitch_min;
  set pitch_min(double pitch_min) => _$this._pitch_min = pitch_min;

  double _pitch_max;
  double get pitch_max => _$this._pitch_max;
  set pitch_max(double pitch_max) => _$this._pitch_max = pitch_max;

  double _q_max;
  double get q_max => _$this._q_max;
  set q_max(double q_max) => _$this._q_max = q_max;

  double _g_min;
  double get g_min => _$this._g_min;
  set g_min(double g_min) => _$this._g_min = g_min;

  double _g_max;
  double get g_max => _$this._g_max;
  set g_max(double g_max) => _$this._g_max = g_max;

  double _g_lat_max;
  double get g_lat_max => _$this._g_lat_max;
  set g_lat_max(double g_lat_max) => _$this._g_lat_max = g_lat_max;

  double _rpm_min;
  double get rpm_min => _$this._rpm_min;
  set rpm_min(double rpm_min) => _$this._rpm_min = rpm_min;

  double _rpm_max;
  double get rpm_max => _$this._rpm_max;
  set rpm_max(double rpm_max) => _$this._rpm_max = rpm_max;

  double _rpm_rate_max;
  double get rpm_rate_max => _$this._rpm_rate_max;
  set rpm_rate_max(double rpm_rate_max) => _$this._rpm_rate_max = rpm_rate_max;

  VehicleOperationalLimitsBuilder();

  VehicleOperationalLimitsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _speed_min = _$v.speed_min;
      _speed_max = _$v.speed_max;
      _long_accel = _$v.long_accel;
      _alt_max_msl = _$v.alt_max_msl;
      _dive_fraction_max = _$v.dive_fraction_max;
      _climb_fraction_max = _$v.climb_fraction_max;
      _bank_max = _$v.bank_max;
      _p_max = _$v.p_max;
      _pitch_min = _$v.pitch_min;
      _pitch_max = _$v.pitch_max;
      _q_max = _$v.q_max;
      _g_min = _$v.g_min;
      _g_max = _$v.g_max;
      _g_lat_max = _$v.g_lat_max;
      _rpm_min = _$v.rpm_min;
      _rpm_max = _$v.rpm_max;
      _rpm_rate_max = _$v.rpm_rate_max;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleOperationalLimits other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleOperationalLimits;
  }

  @override
  void update(void updates(VehicleOperationalLimitsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleOperationalLimits build() {
    final _$result = _$v ??
        new _$VehicleOperationalLimits._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            speed_min: speed_min,
            speed_max: speed_max,
            long_accel: long_accel,
            alt_max_msl: alt_max_msl,
            dive_fraction_max: dive_fraction_max,
            climb_fraction_max: climb_fraction_max,
            bank_max: bank_max,
            p_max: p_max,
            pitch_min: pitch_min,
            pitch_max: pitch_max,
            q_max: q_max,
            g_min: g_min,
            g_max: g_max,
            g_lat_max: g_lat_max,
            rpm_min: rpm_min,
            rpm_max: rpm_max,
            rpm_rate_max: rpm_rate_max);
    replace(_$result);
    return _$result;
  }
}

/// Message List immutable class
///
class _$MsgList extends MsgList {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final List<ImcMessage> msgs;

  factory _$MsgList([void updates(MsgListBuilder b)]) =>
      (new MsgListBuilder()..update(updates)).build();

  _$MsgList._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.msgs})
      : super._();

  @override
  MsgList rebuild(void updates(MsgListBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MsgListBuilder toBuilder() => new MsgListBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MsgList &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        msgs == this.msgs;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        msgs.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MsgList')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('msgs', msgs))
        .toString();
  }
}

/// Message List builder class
///
class MsgListBuilder implements Builder<MsgList, MsgListBuilder> {
  _$MsgList _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  List<ImcMessage> _msgs;
  List<ImcMessage> get msgs => _$this._msgs;
  set msgs(List<ImcMessage> msgs) => _$this._msgs = msgs;

  MsgListBuilder();

  MsgListBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _msgs = _$v.msgs;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MsgList other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$MsgList;
  }

  @override
  void update(void updates(MsgListBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$MsgList build() {
    final _$result = _$v ??
        new _$MsgList._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            msgs: msgs);
    replace(_$result);
    return _$result;
  }
}

/// Simulated State immutable class
///
class _$SimulatedState extends SimulatedState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double u;
  @override
  final double v;
  @override
  final double w;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final double svx;
  @override
  final double svy;
  @override
  final double svz;

  factory _$SimulatedState([void updates(SimulatedStateBuilder b)]) =>
      (new SimulatedStateBuilder()..update(updates)).build();

  _$SimulatedState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.height,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi,
      this.u,
      this.v,
      this.w,
      this.p,
      this.q,
      this.r,
      this.svx,
      this.svy,
      this.svz})
      : super._();

  @override
  SimulatedState rebuild(void updates(SimulatedStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SimulatedStateBuilder toBuilder() => new SimulatedStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SimulatedState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        height == this.height &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi &&
        u == this.u &&
        v == this.v &&
        w == this.w &&
        p == this.p &&
        q == this.q &&
        r == this.r &&
        svx == this.svx &&
        svy == this.svy &&
        svz == this.svz;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        height.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode), 
        phi.hashCode), 
        theta.hashCode), 
        psi.hashCode), 
        u.hashCode), 
        v.hashCode), 
        w.hashCode), 
        p.hashCode), 
        q.hashCode), 
        r.hashCode), 
        svx.hashCode), 
        svy.hashCode), 
        svz.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SimulatedState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('height', height)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi)
          ..add('u', u)
          ..add('v', v)
          ..add('w', w)
          ..add('p', p)
          ..add('q', q)
          ..add('r', r)
          ..add('svx', svx)
          ..add('svy', svy)
          ..add('svz', svz))
        .toString();
  }
}

/// Simulated State builder class
///
class SimulatedStateBuilder implements Builder<SimulatedState, SimulatedStateBuilder> {
  _$SimulatedState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _u;
  double get u => _$this._u;
  set u(double u) => _$this._u = u;

  double _v;
  double get v => _$this._v;
  set v(double v) => _$this._v = v;

  double _w;
  double get w => _$this._w;
  set w(double w) => _$this._w = w;

  double _p;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  double _svx;
  double get svx => _$this._svx;
  set svx(double svx) => _$this._svx = svx;

  double _svy;
  double get svy => _$this._svy;
  set svy(double svy) => _$this._svy = svy;

  double _svz;
  double get svz => _$this._svz;
  set svz(double svz) => _$this._svz = svz;

  SimulatedStateBuilder();

  SimulatedStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _u = _$v.u;
      _v = _$v.v;
      _w = _$v.w;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _svx = _$v.svx;
      _svy = _$v.svy;
      _svz = _$v.svz;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SimulatedState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SimulatedState;
  }

  @override
  void update(void updates(SimulatedStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SimulatedState build() {
    final _$result = _$v ??
        new _$SimulatedState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            height: height,
            x: x,
            y: y,
            z: z,
            phi: phi,
            theta: theta,
            psi: psi,
            u: u,
            v: v,
            w: w,
            p: p,
            q: q,
            r: r,
            svx: svx,
            svy: svy,
            svz: svz);
    replace(_$result);
    return _$result;
  }
}

/// Leak Simulation immutable class
///
class _$LeakSimulation extends LeakSimulation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LeakSimulationEnumOp op;
  @override
  final String entities;

  factory _$LeakSimulation([void updates(LeakSimulationBuilder b)]) =>
      (new LeakSimulationBuilder()..update(updates)).build();

  _$LeakSimulation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.entities})
      : super._();

  @override
  LeakSimulation rebuild(void updates(LeakSimulationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LeakSimulationBuilder toBuilder() => new LeakSimulationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LeakSimulation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        entities == this.entities;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        entities.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LeakSimulation')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('entities', entities))
        .toString();
  }
}

/// Leak Simulation builder class
///
class LeakSimulationBuilder implements Builder<LeakSimulation, LeakSimulationBuilder> {
  _$LeakSimulation _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LeakSimulationEnumOp _op;
  LeakSimulationEnumOp get op => _$this._op;
  set op(LeakSimulationEnumOp op) => _$this._op = op;

  String _entities;
  String get entities => _$this._entities;
  set entities(String entities) => _$this._entities = entities;

  LeakSimulationBuilder();

  LeakSimulationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _entities = _$v.entities;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LeakSimulation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LeakSimulation;
  }

  @override
  void update(void updates(LeakSimulationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LeakSimulation build() {
    final _$result = _$v ??
        new _$LeakSimulation._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            entities: entities);
    replace(_$result);
    return _$result;
  }
}

/// Underwater Acoustics Simulation immutable class
///
class _$UASimulation extends UASimulation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final UASimulationEnumType type;
  @override
  final int speed;
  @override
  final List<int> data;

  factory _$UASimulation([void updates(UASimulationBuilder b)]) =>
      (new UASimulationBuilder()..update(updates)).build();

  _$UASimulation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.speed,
      this.data})
      : super._();

  @override
  UASimulation rebuild(void updates(UASimulationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UASimulationBuilder toBuilder() => new UASimulationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UASimulation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        speed == this.speed &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode), 
        speed.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UASimulation')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type)
          ..add('speed', speed)
          ..add('data', data))
        .toString();
  }
}

/// Underwater Acoustics Simulation builder class
///
class UASimulationBuilder implements Builder<UASimulation, UASimulationBuilder> {
  _$UASimulation _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  UASimulationEnumType _type;
  UASimulationEnumType get type => _$this._type;
  set type(UASimulationEnumType type) => _$this._type = type;

  int _speed;
  int get speed => _$this._speed;
  set speed(int speed) => _$this._speed = speed;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  UASimulationBuilder();

  UASimulationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _speed = _$v.speed;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UASimulation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UASimulation;
  }

  @override
  void update(void updates(UASimulationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UASimulation build() {
    final _$result = _$v ??
        new _$UASimulation._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type,
            speed: speed,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// Dynamics Simulation Parameters immutable class
///
class _$DynamicsSimParam extends DynamicsSimParam {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DynamicsSimParamEnumOp op;
  @override
  final double tas2acc_pgain;
  @override
  final double bank2p_pgain;

  factory _$DynamicsSimParam([void updates(DynamicsSimParamBuilder b)]) =>
      (new DynamicsSimParamBuilder()..update(updates)).build();

  _$DynamicsSimParam._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.tas2acc_pgain,
      this.bank2p_pgain})
      : super._();

  @override
  DynamicsSimParam rebuild(void updates(DynamicsSimParamBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DynamicsSimParamBuilder toBuilder() => new DynamicsSimParamBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DynamicsSimParam &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        tas2acc_pgain == this.tas2acc_pgain &&
        bank2p_pgain == this.bank2p_pgain;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        tas2acc_pgain.hashCode), 
        bank2p_pgain.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DynamicsSimParam')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('tas2acc_pgain', tas2acc_pgain)
          ..add('bank2p_pgain', bank2p_pgain))
        .toString();
  }
}

/// Dynamics Simulation Parameters builder class
///
class DynamicsSimParamBuilder implements Builder<DynamicsSimParam, DynamicsSimParamBuilder> {
  _$DynamicsSimParam _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DynamicsSimParamEnumOp _op;
  DynamicsSimParamEnumOp get op => _$this._op;
  set op(DynamicsSimParamEnumOp op) => _$this._op = op;

  double _tas2acc_pgain;
  double get tas2acc_pgain => _$this._tas2acc_pgain;
  set tas2acc_pgain(double tas2acc_pgain) => _$this._tas2acc_pgain = tas2acc_pgain;

  double _bank2p_pgain;
  double get bank2p_pgain => _$this._bank2p_pgain;
  set bank2p_pgain(double bank2p_pgain) => _$this._bank2p_pgain = bank2p_pgain;

  DynamicsSimParamBuilder();

  DynamicsSimParamBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _tas2acc_pgain = _$v.tas2acc_pgain;
      _bank2p_pgain = _$v.bank2p_pgain;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DynamicsSimParam other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DynamicsSimParam;
  }

  @override
  void update(void updates(DynamicsSimParamBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DynamicsSimParam build() {
    final _$result = _$v ??
        new _$DynamicsSimParam._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            tas2acc_pgain: tas2acc_pgain,
            bank2p_pgain: bank2p_pgain);
    replace(_$result);
    return _$result;
  }
}

/// Storage Usage immutable class
///
class _$StorageUsage extends StorageUsage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int available;
  @override
  final int value;

  factory _$StorageUsage([void updates(StorageUsageBuilder b)]) =>
      (new StorageUsageBuilder()..update(updates)).build();

  _$StorageUsage._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.available,
      this.value})
      : super._();

  @override
  StorageUsage rebuild(void updates(StorageUsageBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  StorageUsageBuilder toBuilder() => new StorageUsageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StorageUsage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        available == this.available &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        available.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StorageUsage')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('available', available)
          ..add('value', value))
        .toString();
  }
}

/// Storage Usage builder class
///
class StorageUsageBuilder implements Builder<StorageUsage, StorageUsageBuilder> {
  _$StorageUsage _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _available;
  int get available => _$this._available;
  set available(int available) => _$this._available = available;

  int _value;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  StorageUsageBuilder();

  StorageUsageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _available = _$v.available;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StorageUsage other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$StorageUsage;
  }

  @override
  void update(void updates(StorageUsageBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$StorageUsage build() {
    final _$result = _$v ??
        new _$StorageUsage._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            available: available,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Cache Control immutable class
///
class _$CacheControl extends CacheControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final CacheControlEnumOp op;
  @override
  final String snapshot;
  @override
  final ImcMessage message;

  factory _$CacheControl([void updates(CacheControlBuilder b)]) =>
      (new CacheControlBuilder()..update(updates)).build();

  _$CacheControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.snapshot,
      this.message})
      : super._();

  @override
  CacheControl rebuild(void updates(CacheControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CacheControlBuilder toBuilder() => new CacheControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CacheControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        snapshot == this.snapshot &&
        message == this.message;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        snapshot.hashCode), 
        message.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CacheControl')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('snapshot', snapshot)
          ..add('message', message))
        .toString();
  }
}

/// Cache Control builder class
///
class CacheControlBuilder implements Builder<CacheControl, CacheControlBuilder> {
  _$CacheControl _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  CacheControlEnumOp _op;
  CacheControlEnumOp get op => _$this._op;
  set op(CacheControlEnumOp op) => _$this._op = op;

  String _snapshot;
  String get snapshot => _$this._snapshot;
  set snapshot(String snapshot) => _$this._snapshot = snapshot;

  ImcMessage _message;
  ImcMessage get message => _$this._message;
  set message(ImcMessage message) => _$this._message = message;

  CacheControlBuilder();

  CacheControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _snapshot = _$v.snapshot;
      _message = _$v.message;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CacheControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CacheControl;
  }

  @override
  void update(void updates(CacheControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CacheControl build() {
    final _$result = _$v ??
        new _$CacheControl._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            snapshot: snapshot,
            message: message);
    replace(_$result);
    return _$result;
  }
}

/// Logging Control immutable class
///
class _$LoggingControl extends LoggingControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LoggingControlEnumOp op;
  @override
  final String name;

  factory _$LoggingControl([void updates(LoggingControlBuilder b)]) =>
      (new LoggingControlBuilder()..update(updates)).build();

  _$LoggingControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.name})
      : super._();

  @override
  LoggingControl rebuild(void updates(LoggingControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LoggingControlBuilder toBuilder() => new LoggingControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LoggingControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        name == this.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LoggingControl')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('name', name))
        .toString();
  }
}

/// Logging Control builder class
///
class LoggingControlBuilder implements Builder<LoggingControl, LoggingControlBuilder> {
  _$LoggingControl _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LoggingControlEnumOp _op;
  LoggingControlEnumOp get op => _$this._op;
  set op(LoggingControlEnumOp op) => _$this._op = op;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  LoggingControlBuilder();

  LoggingControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LoggingControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LoggingControl;
  }

  @override
  void update(void updates(LoggingControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LoggingControl build() {
    final _$result = _$v ??
        new _$LoggingControl._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            name: name);
    replace(_$result);
    return _$result;
  }
}

/// Log Book Entry immutable class
///
class _$LogBookEntry extends LogBookEntry {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LogBookEntryEnumType type;
  @override
  final double htime;
  @override
  final String context;
  @override
  final String text;

  factory _$LogBookEntry([void updates(LogBookEntryBuilder b)]) =>
      (new LogBookEntryBuilder()..update(updates)).build();

  _$LogBookEntry._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.htime,
      this.context,
      this.text})
      : super._();

  @override
  LogBookEntry rebuild(void updates(LogBookEntryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LogBookEntryBuilder toBuilder() => new LogBookEntryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LogBookEntry &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        htime == this.htime &&
        context == this.context &&
        text == this.text;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode), 
        htime.hashCode), 
        context.hashCode), 
        text.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LogBookEntry')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type)
          ..add('htime', htime)
          ..add('context', context)
          ..add('text', text))
        .toString();
  }
}

/// Log Book Entry builder class
///
class LogBookEntryBuilder implements Builder<LogBookEntry, LogBookEntryBuilder> {
  _$LogBookEntry _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LogBookEntryEnumType _type;
  LogBookEntryEnumType get type => _$this._type;
  set type(LogBookEntryEnumType type) => _$this._type = type;

  double _htime;
  double get htime => _$this._htime;
  set htime(double htime) => _$this._htime = htime;

  String _context;
  String get context => _$this._context;
  set context(String context) => _$this._context = context;

  String _text;
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  LogBookEntryBuilder();

  LogBookEntryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _htime = _$v.htime;
      _context = _$v.context;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LogBookEntry other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LogBookEntry;
  }

  @override
  void update(void updates(LogBookEntryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LogBookEntry build() {
    final _$result = _$v ??
        new _$LogBookEntry._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type,
            htime: htime,
            context: context,
            text: text);
    replace(_$result);
    return _$result;
  }
}

/// Log Book Control immutable class
///
class _$LogBookControl extends LogBookControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LogBookControlEnumCommand command;
  @override
  final double htime;
  @override
  final List<LogBookEntry> msg;

  factory _$LogBookControl([void updates(LogBookControlBuilder b)]) =>
      (new LogBookControlBuilder()..update(updates)).build();

  _$LogBookControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.command,
      this.htime,
      this.msg})
      : super._();

  @override
  LogBookControl rebuild(void updates(LogBookControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LogBookControlBuilder toBuilder() => new LogBookControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LogBookControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        command == this.command &&
        htime == this.htime &&
        msg == this.msg;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        command.hashCode), 
        htime.hashCode), 
        msg.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LogBookControl')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('command', command)
          ..add('htime', htime)
          ..add('msg', msg))
        .toString();
  }
}

/// Log Book Control builder class
///
class LogBookControlBuilder implements Builder<LogBookControl, LogBookControlBuilder> {
  _$LogBookControl _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LogBookControlEnumCommand _command;
  LogBookControlEnumCommand get command => _$this._command;
  set command(LogBookControlEnumCommand command) => _$this._command = command;

  double _htime;
  double get htime => _$this._htime;
  set htime(double htime) => _$this._htime = htime;

  List<LogBookEntry> _msg;
  List<LogBookEntry> get msg => _$this._msg;
  set msg(List<LogBookEntry> msg) => _$this._msg = msg;

  LogBookControlBuilder();

  LogBookControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _command = _$v.command;
      _htime = _$v.htime;
      _msg = _$v.msg;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LogBookControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LogBookControl;
  }

  @override
  void update(void updates(LogBookControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LogBookControl build() {
    final _$result = _$v ??
        new _$LogBookControl._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            command: command,
            htime: htime,
            msg: msg);
    replace(_$result);
    return _$result;
  }
}

/// Replay Control immutable class
///
class _$ReplayControl extends ReplayControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ReplayControlEnumOp op;
  @override
  final String file;

  factory _$ReplayControl([void updates(ReplayControlBuilder b)]) =>
      (new ReplayControlBuilder()..update(updates)).build();

  _$ReplayControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.file})
      : super._();

  @override
  ReplayControl rebuild(void updates(ReplayControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ReplayControlBuilder toBuilder() => new ReplayControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ReplayControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        file == this.file;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        file.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ReplayControl')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('file', file))
        .toString();
  }
}

/// Replay Control builder class
///
class ReplayControlBuilder implements Builder<ReplayControl, ReplayControlBuilder> {
  _$ReplayControl _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ReplayControlEnumOp _op;
  ReplayControlEnumOp get op => _$this._op;
  set op(ReplayControlEnumOp op) => _$this._op = op;

  String _file;
  String get file => _$this._file;
  set file(String file) => _$this._file = file;

  ReplayControlBuilder();

  ReplayControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _file = _$v.file;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ReplayControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ReplayControl;
  }

  @override
  void update(void updates(ReplayControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ReplayControl build() {
    final _$result = _$v ??
        new _$ReplayControl._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            file: file);
    replace(_$result);
    return _$result;
  }
}

/// Clock Control immutable class
///
class _$ClockControl extends ClockControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ClockControlEnumOp op;
  @override
  final double clock;
  @override
  final int tz;

  factory _$ClockControl([void updates(ClockControlBuilder b)]) =>
      (new ClockControlBuilder()..update(updates)).build();

  _$ClockControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.clock,
      this.tz})
      : super._();

  @override
  ClockControl rebuild(void updates(ClockControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ClockControlBuilder toBuilder() => new ClockControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ClockControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        clock == this.clock &&
        tz == this.tz;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        clock.hashCode), 
        tz.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ClockControl')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('clock', clock)
          ..add('tz', tz))
        .toString();
  }
}

/// Clock Control builder class
///
class ClockControlBuilder implements Builder<ClockControl, ClockControlBuilder> {
  _$ClockControl _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ClockControlEnumOp _op;
  ClockControlEnumOp get op => _$this._op;
  set op(ClockControlEnumOp op) => _$this._op = op;

  double _clock;
  double get clock => _$this._clock;
  set clock(double clock) => _$this._clock = clock;

  int _tz;
  int get tz => _$this._tz;
  set tz(int tz) => _$this._tz = tz;

  ClockControlBuilder();

  ClockControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _clock = _$v.clock;
      _tz = _$v.tz;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ClockControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ClockControl;
  }

  @override
  void update(void updates(ClockControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ClockControl build() {
    final _$result = _$v ??
        new _$ClockControl._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            clock: clock,
            tz: tz);
    replace(_$result);
    return _$result;
  }
}

/// Historic CTD immutable class
///
class _$HistoricCTD extends HistoricCTD {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double conductivity;
  @override
  final double temperature;
  @override
  final double depth;

  factory _$HistoricCTD([void updates(HistoricCTDBuilder b)]) =>
      (new HistoricCTDBuilder()..update(updates)).build();

  _$HistoricCTD._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.conductivity,
      this.temperature,
      this.depth})
      : super._();

  @override
  HistoricCTD rebuild(void updates(HistoricCTDBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricCTDBuilder toBuilder() => new HistoricCTDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricCTD &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        conductivity == this.conductivity &&
        temperature == this.temperature &&
        depth == this.depth;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        conductivity.hashCode), 
        temperature.hashCode), 
        depth.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricCTD')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('conductivity', conductivity)
          ..add('temperature', temperature)
          ..add('depth', depth))
        .toString();
  }
}

/// Historic CTD builder class
///
class HistoricCTDBuilder implements Builder<HistoricCTD, HistoricCTDBuilder> {
  _$HistoricCTD _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _conductivity;
  double get conductivity => _$this._conductivity;
  set conductivity(double conductivity) => _$this._conductivity = conductivity;

  double _temperature;
  double get temperature => _$this._temperature;
  set temperature(double temperature) => _$this._temperature = temperature;

  double _depth;
  double get depth => _$this._depth;
  set depth(double depth) => _$this._depth = depth;

  HistoricCTDBuilder();

  HistoricCTDBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _conductivity = _$v.conductivity;
      _temperature = _$v.temperature;
      _depth = _$v.depth;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricCTD other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricCTD;
  }

  @override
  void update(void updates(HistoricCTDBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricCTD build() {
    final _$result = _$v ??
        new _$HistoricCTD._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            conductivity: conductivity,
            temperature: temperature,
            depth: depth);
    replace(_$result);
    return _$result;
  }
}

/// Historic Telemetry immutable class
///
class _$HistoricTelemetry extends HistoricTelemetry {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double altitude;
  @override
  final int roll;
  @override
  final int pitch;
  @override
  final int yaw;
  @override
  final int speed;

  factory _$HistoricTelemetry([void updates(HistoricTelemetryBuilder b)]) =>
      (new HistoricTelemetryBuilder()..update(updates)).build();

  _$HistoricTelemetry._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.altitude,
      this.roll,
      this.pitch,
      this.yaw,
      this.speed})
      : super._();

  @override
  HistoricTelemetry rebuild(void updates(HistoricTelemetryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricTelemetryBuilder toBuilder() => new HistoricTelemetryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricTelemetry &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        altitude == this.altitude &&
        roll == this.roll &&
        pitch == this.pitch &&
        yaw == this.yaw &&
        speed == this.speed;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        altitude.hashCode), 
        roll.hashCode), 
        pitch.hashCode), 
        yaw.hashCode), 
        speed.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricTelemetry')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('altitude', altitude)
          ..add('roll', roll)
          ..add('pitch', pitch)
          ..add('yaw', yaw)
          ..add('speed', speed))
        .toString();
  }
}

/// Historic Telemetry builder class
///
class HistoricTelemetryBuilder implements Builder<HistoricTelemetry, HistoricTelemetryBuilder> {
  _$HistoricTelemetry _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _altitude;
  double get altitude => _$this._altitude;
  set altitude(double altitude) => _$this._altitude = altitude;

  int _roll;
  int get roll => _$this._roll;
  set roll(int roll) => _$this._roll = roll;

  int _pitch;
  int get pitch => _$this._pitch;
  set pitch(int pitch) => _$this._pitch = pitch;

  int _yaw;
  int get yaw => _$this._yaw;
  set yaw(int yaw) => _$this._yaw = yaw;

  int _speed;
  int get speed => _$this._speed;
  set speed(int speed) => _$this._speed = speed;

  HistoricTelemetryBuilder();

  HistoricTelemetryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _altitude = _$v.altitude;
      _roll = _$v.roll;
      _pitch = _$v.pitch;
      _yaw = _$v.yaw;
      _speed = _$v.speed;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricTelemetry other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricTelemetry;
  }

  @override
  void update(void updates(HistoricTelemetryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricTelemetry build() {
    final _$result = _$v ??
        new _$HistoricTelemetry._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            altitude: altitude,
            roll: roll,
            pitch: pitch,
            yaw: yaw,
            speed: speed);
    replace(_$result);
    return _$result;
  }
}

/// Historic Sonar Data immutable class
///
class _$HistoricSonarData extends HistoricSonarData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double altitude;
  @override
  final double width;
  @override
  final double length;
  @override
  final double bearing;
  @override
  final int pxl;
  @override
  final HistoricSonarDataEnumEncoding encoding;
  @override
  final List<int> sonar_data;

  factory _$HistoricSonarData([void updates(HistoricSonarDataBuilder b)]) =>
      (new HistoricSonarDataBuilder()..update(updates)).build();

  _$HistoricSonarData._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.altitude,
      this.width,
      this.length,
      this.bearing,
      this.pxl,
      this.encoding,
      this.sonar_data})
      : super._();

  @override
  HistoricSonarData rebuild(void updates(HistoricSonarDataBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricSonarDataBuilder toBuilder() => new HistoricSonarDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricSonarData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        altitude == this.altitude &&
        width == this.width &&
        length == this.length &&
        bearing == this.bearing &&
        pxl == this.pxl &&
        encoding == this.encoding &&
        sonar_data == this.sonar_data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        altitude.hashCode), 
        width.hashCode), 
        length.hashCode), 
        bearing.hashCode), 
        pxl.hashCode), 
        encoding.hashCode), 
        sonar_data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricSonarData')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('altitude', altitude)
          ..add('width', width)
          ..add('length', length)
          ..add('bearing', bearing)
          ..add('pxl', pxl)
          ..add('encoding', encoding)
          ..add('sonar_data', sonar_data))
        .toString();
  }
}

/// Historic Sonar Data builder class
///
class HistoricSonarDataBuilder implements Builder<HistoricSonarData, HistoricSonarDataBuilder> {
  _$HistoricSonarData _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _altitude;
  double get altitude => _$this._altitude;
  set altitude(double altitude) => _$this._altitude = altitude;

  double _width;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  double _length;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  int _pxl;
  int get pxl => _$this._pxl;
  set pxl(int pxl) => _$this._pxl = pxl;

  HistoricSonarDataEnumEncoding _encoding;
  HistoricSonarDataEnumEncoding get encoding => _$this._encoding;
  set encoding(HistoricSonarDataEnumEncoding encoding) => _$this._encoding = encoding;

  List<int> _sonar_data;
  List<int> get sonar_data => _$this._sonar_data;
  set sonar_data(List<int> sonar_data) => _$this._sonar_data = sonar_data;

  HistoricSonarDataBuilder();

  HistoricSonarDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _altitude = _$v.altitude;
      _width = _$v.width;
      _length = _$v.length;
      _bearing = _$v.bearing;
      _pxl = _$v.pxl;
      _encoding = _$v.encoding;
      _sonar_data = _$v.sonar_data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricSonarData other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricSonarData;
  }

  @override
  void update(void updates(HistoricSonarDataBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricSonarData build() {
    final _$result = _$v ??
        new _$HistoricSonarData._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            altitude: altitude,
            width: width,
            length: length,
            bearing: bearing,
            pxl: pxl,
            encoding: encoding,
            sonar_data: sonar_data);
    replace(_$result);
    return _$result;
  }
}

/// Historic Event immutable class
///
class _$HistoricEvent extends HistoricEvent {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String text;
  @override
  final HistoricEventEnumType type;

  factory _$HistoricEvent([void updates(HistoricEventBuilder b)]) =>
      (new HistoricEventBuilder()..update(updates)).build();

  _$HistoricEvent._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.text,
      this.type})
      : super._();

  @override
  HistoricEvent rebuild(void updates(HistoricEventBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricEventBuilder toBuilder() => new HistoricEventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricEvent &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        text == this.text &&
        type == this.type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        text.hashCode), 
        type.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricEvent')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('text', text)
          ..add('type', type))
        .toString();
  }
}

/// Historic Event builder class
///
class HistoricEventBuilder implements Builder<HistoricEvent, HistoricEventBuilder> {
  _$HistoricEvent _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _text;
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  HistoricEventEnumType _type;
  HistoricEventEnumType get type => _$this._type;
  set type(HistoricEventEnumType type) => _$this._type = type;

  HistoricEventBuilder();

  HistoricEventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _text = _$v.text;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricEvent other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricEvent;
  }

  @override
  void update(void updates(HistoricEventBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricEvent build() {
    final _$result = _$v ??
        new _$HistoricEvent._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            text: text,
            type: type);
    replace(_$result);
    return _$result;
  }
}

/// Vertical Profile immutable class
///
class _$VerticalProfile extends VerticalProfile {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VerticalProfileEnumParameter parameter;
  @override
  final int numSamples;
  @override
  final List<ProfileSample> samples;
  @override
  final double lat;
  @override
  final double lon;

  factory _$VerticalProfile([void updates(VerticalProfileBuilder b)]) =>
      (new VerticalProfileBuilder()..update(updates)).build();

  _$VerticalProfile._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.parameter,
      this.numSamples,
      this.samples,
      this.lat,
      this.lon})
      : super._();

  @override
  VerticalProfile rebuild(void updates(VerticalProfileBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VerticalProfileBuilder toBuilder() => new VerticalProfileBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VerticalProfile &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        parameter == this.parameter &&
        numSamples == this.numSamples &&
        samples == this.samples &&
        lat == this.lat &&
        lon == this.lon;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        parameter.hashCode), 
        numSamples.hashCode), 
        samples.hashCode), 
        lat.hashCode), 
        lon.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VerticalProfile')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('parameter', parameter)
          ..add('numSamples', numSamples)
          ..add('samples', samples)
          ..add('lat', lat)
          ..add('lon', lon))
        .toString();
  }
}

/// Vertical Profile builder class
///
class VerticalProfileBuilder implements Builder<VerticalProfile, VerticalProfileBuilder> {
  _$VerticalProfile _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VerticalProfileEnumParameter _parameter;
  VerticalProfileEnumParameter get parameter => _$this._parameter;
  set parameter(VerticalProfileEnumParameter parameter) => _$this._parameter = parameter;

  int _numSamples;
  int get numSamples => _$this._numSamples;
  set numSamples(int numSamples) => _$this._numSamples = numSamples;

  List<ProfileSample> _samples;
  List<ProfileSample> get samples => _$this._samples;
  set samples(List<ProfileSample> samples) => _$this._samples = samples;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  VerticalProfileBuilder();

  VerticalProfileBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _parameter = _$v.parameter;
      _numSamples = _$v.numSamples;
      _samples = _$v.samples;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VerticalProfile other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VerticalProfile;
  }

  @override
  void update(void updates(VerticalProfileBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VerticalProfile build() {
    final _$result = _$v ??
        new _$VerticalProfile._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            parameter: parameter,
            numSamples: numSamples,
            samples: samples,
            lat: lat,
            lon: lon);
    replace(_$result);
    return _$result;
  }
}

/// Profile Sample immutable class
///
class _$ProfileSample extends ProfileSample {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int depth;
  @override
  final double avg;

  factory _$ProfileSample([void updates(ProfileSampleBuilder b)]) =>
      (new ProfileSampleBuilder()..update(updates)).build();

  _$ProfileSample._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.depth,
      this.avg})
      : super._();

  @override
  ProfileSample rebuild(void updates(ProfileSampleBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ProfileSampleBuilder toBuilder() => new ProfileSampleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ProfileSample &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        depth == this.depth &&
        avg == this.avg;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        depth.hashCode), 
        avg.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ProfileSample')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('depth', depth)
          ..add('avg', avg))
        .toString();
  }
}

/// Profile Sample builder class
///
class ProfileSampleBuilder implements Builder<ProfileSample, ProfileSampleBuilder> {
  _$ProfileSample _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _depth;
  int get depth => _$this._depth;
  set depth(int depth) => _$this._depth = depth;

  double _avg;
  double get avg => _$this._avg;
  set avg(double avg) => _$this._avg = avg;

  ProfileSampleBuilder();

  ProfileSampleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _depth = _$v.depth;
      _avg = _$v.avg;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ProfileSample other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ProfileSample;
  }

  @override
  void update(void updates(ProfileSampleBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ProfileSample build() {
    final _$result = _$v ??
        new _$ProfileSample._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            depth: depth,
            avg: avg);
    replace(_$result);
    return _$result;
  }
}

/// Heartbeat immutable class
///
class _$Heartbeat extends Heartbeat {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$Heartbeat([void updates(HeartbeatBuilder b)]) =>
      (new HeartbeatBuilder()..update(updates)).build();

  _$Heartbeat._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  Heartbeat rebuild(void updates(HeartbeatBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HeartbeatBuilder toBuilder() => new HeartbeatBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Heartbeat &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Heartbeat')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt))
        .toString();
  }
}

/// Heartbeat builder class
///
class HeartbeatBuilder implements Builder<Heartbeat, HeartbeatBuilder> {
  _$Heartbeat _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  HeartbeatBuilder();

  HeartbeatBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Heartbeat other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Heartbeat;
  }

  @override
  void update(void updates(HeartbeatBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Heartbeat build() {
    final _$result = _$v ??
        new _$Heartbeat._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt);
    replace(_$result);
    return _$result;
  }
}

/// Announce immutable class
///
class _$Announce extends Announce {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String sys_name;
  @override
  final SystemTypeEnum sys_type;
  @override
  final int owner;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final String services;

  factory _$Announce([void updates(AnnounceBuilder b)]) =>
      (new AnnounceBuilder()..update(updates)).build();

  _$Announce._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sys_name,
      this.sys_type,
      this.owner,
      this.lat,
      this.lon,
      this.height,
      this.services})
      : super._();

  @override
  Announce rebuild(void updates(AnnounceBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AnnounceBuilder toBuilder() => new AnnounceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Announce &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sys_name == this.sys_name &&
        sys_type == this.sys_type &&
        owner == this.owner &&
        lat == this.lat &&
        lon == this.lon &&
        height == this.height &&
        services == this.services;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        sys_name.hashCode), 
        sys_type.hashCode), 
        owner.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        height.hashCode), 
        services.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Announce')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('sys_name', sys_name)
          ..add('sys_type', sys_type)
          ..add('owner', owner)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('height', height)
          ..add('services', services))
        .toString();
  }
}

/// Announce builder class
///
class AnnounceBuilder implements Builder<Announce, AnnounceBuilder> {
  _$Announce _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _sys_name;
  String get sys_name => _$this._sys_name;
  set sys_name(String sys_name) => _$this._sys_name = sys_name;

  SystemTypeEnum _sys_type;
  SystemTypeEnum get sys_type => _$this._sys_type;
  set sys_type(SystemTypeEnum sys_type) => _$this._sys_type = sys_type;

  int _owner;
  int get owner => _$this._owner;
  set owner(int owner) => _$this._owner = owner;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  String _services;
  String get services => _$this._services;
  set services(String services) => _$this._services = services;

  AnnounceBuilder();

  AnnounceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sys_name = _$v.sys_name;
      _sys_type = _$v.sys_type;
      _owner = _$v.owner;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _services = _$v.services;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Announce other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Announce;
  }

  @override
  void update(void updates(AnnounceBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Announce build() {
    final _$result = _$v ??
        new _$Announce._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            sys_name: sys_name,
            sys_type: sys_type,
            owner: owner,
            lat: lat,
            lon: lon,
            height: height,
            services: services);
    replace(_$result);
    return _$result;
  }
}

/// Announce Service immutable class
///
class _$AnnounceService extends AnnounceService {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String service;
  @override
  final AnnounceServiceBitfieldServiceType service_type;

  factory _$AnnounceService([void updates(AnnounceServiceBuilder b)]) =>
      (new AnnounceServiceBuilder()..update(updates)).build();

  _$AnnounceService._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.service,
      this.service_type})
      : super._();

  @override
  AnnounceService rebuild(void updates(AnnounceServiceBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AnnounceServiceBuilder toBuilder() => new AnnounceServiceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AnnounceService &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        service == this.service &&
        service_type == this.service_type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        service.hashCode), 
        service_type.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AnnounceService')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('service', service)
          ..add('service_type', service_type))
        .toString();
  }
}

/// Announce Service builder class
///
class AnnounceServiceBuilder implements Builder<AnnounceService, AnnounceServiceBuilder> {
  _$AnnounceService _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _service;
  String get service => _$this._service;
  set service(String service) => _$this._service = service;

  AnnounceServiceBitfieldServiceType _service_type;
  AnnounceServiceBitfieldServiceType get service_type => _$this._service_type;
  set service_type(AnnounceServiceBitfieldServiceType service_type) => _$this._service_type = service_type;

  AnnounceServiceBuilder();

  AnnounceServiceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _service = _$v.service;
      _service_type = _$v.service_type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AnnounceService other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AnnounceService;
  }

  @override
  void update(void updates(AnnounceServiceBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AnnounceService build() {
    final _$result = _$v ??
        new _$AnnounceService._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            service: service,
            service_type: service_type);
    replace(_$result);
    return _$result;
  }
}

/// Receive Signal Strength Information immutable class
///
class _$RSSI extends RSSI {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$RSSI([void updates(RSSIBuilder b)]) =>
      (new RSSIBuilder()..update(updates)).build();

  _$RSSI._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  RSSI rebuild(void updates(RSSIBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RSSIBuilder toBuilder() => new RSSIBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RSSI &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RSSI')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Receive Signal Strength Information builder class
///
class RSSIBuilder implements Builder<RSSI, RSSIBuilder> {
  _$RSSI _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RSSIBuilder();

  RSSIBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RSSI other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RSSI;
  }

  @override
  void update(void updates(RSSIBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RSSI build() {
    final _$result = _$v ??
        new _$RSSI._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Voltage Standing Wave Ratio immutable class
///
class _$VSWR extends VSWR {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$VSWR([void updates(VSWRBuilder b)]) =>
      (new VSWRBuilder()..update(updates)).build();

  _$VSWR._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  VSWR rebuild(void updates(VSWRBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VSWRBuilder toBuilder() => new VSWRBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VSWR &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VSWR')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Voltage Standing Wave Ratio builder class
///
class VSWRBuilder implements Builder<VSWR, VSWRBuilder> {
  _$VSWR _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  VSWRBuilder();

  VSWRBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VSWR other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VSWR;
  }

  @override
  void update(void updates(VSWRBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VSWR build() {
    final _$result = _$v ??
        new _$VSWR._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Link Level immutable class
///
class _$LinkLevel extends LinkLevel {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$LinkLevel([void updates(LinkLevelBuilder b)]) =>
      (new LinkLevelBuilder()..update(updates)).build();

  _$LinkLevel._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  LinkLevel rebuild(void updates(LinkLevelBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LinkLevelBuilder toBuilder() => new LinkLevelBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LinkLevel &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LinkLevel')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Link Level builder class
///
class LinkLevelBuilder implements Builder<LinkLevel, LinkLevelBuilder> {
  _$LinkLevel _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  LinkLevelBuilder();

  LinkLevelBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LinkLevel other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LinkLevel;
  }

  @override
  void update(void updates(LinkLevelBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LinkLevel build() {
    final _$result = _$v ??
        new _$LinkLevel._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// SMS immutable class
///
class _$Sms extends Sms {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String number;
  @override
  final int timeout;
  @override
  final String contents;

  factory _$Sms([void updates(SmsBuilder b)]) =>
      (new SmsBuilder()..update(updates)).build();

  _$Sms._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.number,
      this.timeout,
      this.contents})
      : super._();

  @override
  Sms rebuild(void updates(SmsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsBuilder toBuilder() => new SmsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Sms &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        number == this.number &&
        timeout == this.timeout &&
        contents == this.contents;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        number.hashCode), 
        timeout.hashCode), 
        contents.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Sms')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('number', number)
          ..add('timeout', timeout)
          ..add('contents', contents))
        .toString();
  }
}

/// SMS builder class
///
class SmsBuilder implements Builder<Sms, SmsBuilder> {
  _$Sms _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _number;
  String get number => _$this._number;
  set number(String number) => _$this._number = number;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  String _contents;
  String get contents => _$this._contents;
  set contents(String contents) => _$this._contents = contents;

  SmsBuilder();

  SmsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _number = _$v.number;
      _timeout = _$v.timeout;
      _contents = _$v.contents;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Sms other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Sms;
  }

  @override
  void update(void updates(SmsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Sms build() {
    final _$result = _$v ??
        new _$Sms._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            number: number,
            timeout: timeout,
            contents: contents);
    replace(_$result);
    return _$result;
  }
}

/// SMS Transmit immutable class
///
class _$SmsTx extends SmsTx {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final String destination;
  @override
  final int timeout;
  @override
  final List<int> data;

  factory _$SmsTx([void updates(SmsTxBuilder b)]) =>
      (new SmsTxBuilder()..update(updates)).build();

  _$SmsTx._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.seq,
      this.destination,
      this.timeout,
      this.data})
      : super._();

  @override
  SmsTx rebuild(void updates(SmsTxBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsTxBuilder toBuilder() => new SmsTxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsTx &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == this.seq &&
        destination == this.destination &&
        timeout == this.timeout &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        seq.hashCode), 
        destination.hashCode), 
        timeout.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsTx')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('seq', seq)
          ..add('destination', destination)
          ..add('timeout', timeout)
          ..add('data', data))
        .toString();
  }
}

/// SMS Transmit builder class
///
class SmsTxBuilder implements Builder<SmsTx, SmsTxBuilder> {
  _$SmsTx _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  String _destination;
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  SmsTxBuilder();

  SmsTxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _destination = _$v.destination;
      _timeout = _$v.timeout;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsTx other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SmsTx;
  }

  @override
  void update(void updates(SmsTxBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsTx build() {
    final _$result = _$v ??
        new _$SmsTx._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            seq: seq,
            destination: destination,
            timeout: timeout,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// SMS Receive immutable class
///
class _$SmsRx extends SmsRx {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String source;
  @override
  final List<int> data;

  factory _$SmsRx([void updates(SmsRxBuilder b)]) =>
      (new SmsRxBuilder()..update(updates)).build();

  _$SmsRx._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.source,
      this.data})
      : super._();

  @override
  SmsRx rebuild(void updates(SmsRxBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsRxBuilder toBuilder() => new SmsRxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsRx &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        source == this.source &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        source.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsRx')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('source', source)
          ..add('data', data))
        .toString();
  }
}

/// SMS Receive builder class
///
class SmsRxBuilder implements Builder<SmsRx, SmsRxBuilder> {
  _$SmsRx _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _source;
  String get source => _$this._source;
  set source(String source) => _$this._source = source;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  SmsRxBuilder();

  SmsRxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _source = _$v.source;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsRx other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SmsRx;
  }

  @override
  void update(void updates(SmsRxBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsRx build() {
    final _$result = _$v ??
        new _$SmsRx._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            source: source,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// SMS State immutable class
///
class _$SmsState extends SmsState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final SmsStateEnumState state;
  @override
  final String error;

  factory _$SmsState([void updates(SmsStateBuilder b)]) =>
      (new SmsStateBuilder()..update(updates)).build();

  _$SmsState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.seq,
      this.state,
      this.error})
      : super._();

  @override
  SmsState rebuild(void updates(SmsStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsStateBuilder toBuilder() => new SmsStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == this.seq &&
        state == this.state &&
        error == this.error;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        seq.hashCode), 
        state.hashCode), 
        error.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('seq', seq)
          ..add('state', state)
          ..add('error', error))
        .toString();
  }
}

/// SMS State builder class
///
class SmsStateBuilder implements Builder<SmsState, SmsStateBuilder> {
  _$SmsState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  SmsStateEnumState _state;
  SmsStateEnumState get state => _$this._state;
  set state(SmsStateEnumState state) => _$this._state = state;

  String _error;
  String get error => _$this._error;
  set error(String error) => _$this._error = error;

  SmsStateBuilder();

  SmsStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _state = _$v.state;
      _error = _$v.error;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SmsState;
  }

  @override
  void update(void updates(SmsStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsState build() {
    final _$result = _$v ??
        new _$SmsState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            seq: seq,
            state: state,
            error: error);
    replace(_$result);
    return _$result;
  }
}

/// Text Message immutable class
///
class _$TextMessage extends TextMessage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String origin;
  @override
  final String text;

  factory _$TextMessage([void updates(TextMessageBuilder b)]) =>
      (new TextMessageBuilder()..update(updates)).build();

  _$TextMessage._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.origin,
      this.text})
      : super._();

  @override
  TextMessage rebuild(void updates(TextMessageBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TextMessageBuilder toBuilder() => new TextMessageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TextMessage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        origin == this.origin &&
        text == this.text;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        origin.hashCode), 
        text.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TextMessage')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('origin', origin)
          ..add('text', text))
        .toString();
  }
}

/// Text Message builder class
///
class TextMessageBuilder implements Builder<TextMessage, TextMessageBuilder> {
  _$TextMessage _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _origin;
  String get origin => _$this._origin;
  set origin(String origin) => _$this._origin = origin;

  String _text;
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  TextMessageBuilder();

  TextMessageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _origin = _$v.origin;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TextMessage other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TextMessage;
  }

  @override
  void update(void updates(TextMessageBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TextMessage build() {
    final _$result = _$v ??
        new _$TextMessage._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            origin: origin,
            text: text);
    replace(_$result);
    return _$result;
  }
}

/// Received Iridium Message immutable class
///
class _$IridiumMsgRx extends IridiumMsgRx {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String origin;
  @override
  final double htime;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final List<int> data;

  factory _$IridiumMsgRx([void updates(IridiumMsgRxBuilder b)]) =>
      (new IridiumMsgRxBuilder()..update(updates)).build();

  _$IridiumMsgRx._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.origin,
      this.htime,
      this.lat,
      this.lon,
      this.data})
      : super._();

  @override
  IridiumMsgRx rebuild(void updates(IridiumMsgRxBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  IridiumMsgRxBuilder toBuilder() => new IridiumMsgRxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IridiumMsgRx &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        origin == this.origin &&
        htime == this.htime &&
        lat == this.lat &&
        lon == this.lon &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        origin.hashCode), 
        htime.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IridiumMsgRx')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('origin', origin)
          ..add('htime', htime)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('data', data))
        .toString();
  }
}

/// Received Iridium Message builder class
///
class IridiumMsgRxBuilder implements Builder<IridiumMsgRx, IridiumMsgRxBuilder> {
  _$IridiumMsgRx _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _origin;
  String get origin => _$this._origin;
  set origin(String origin) => _$this._origin = origin;

  double _htime;
  double get htime => _$this._htime;
  set htime(double htime) => _$this._htime = htime;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  IridiumMsgRxBuilder();

  IridiumMsgRxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _origin = _$v.origin;
      _htime = _$v.htime;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IridiumMsgRx other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$IridiumMsgRx;
  }

  @override
  void update(void updates(IridiumMsgRxBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$IridiumMsgRx build() {
    final _$result = _$v ??
        new _$IridiumMsgRx._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            origin: origin,
            htime: htime,
            lat: lat,
            lon: lon,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// Transmit Iridium Message immutable class
///
class _$IridiumMsgTx extends IridiumMsgTx {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int req_id;
  @override
  final int ttl;
  @override
  final String destination;
  @override
  final List<int> data;

  factory _$IridiumMsgTx([void updates(IridiumMsgTxBuilder b)]) =>
      (new IridiumMsgTxBuilder()..update(updates)).build();

  _$IridiumMsgTx._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.req_id,
      this.ttl,
      this.destination,
      this.data})
      : super._();

  @override
  IridiumMsgTx rebuild(void updates(IridiumMsgTxBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  IridiumMsgTxBuilder toBuilder() => new IridiumMsgTxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IridiumMsgTx &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        req_id == this.req_id &&
        ttl == this.ttl &&
        destination == this.destination &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        req_id.hashCode), 
        ttl.hashCode), 
        destination.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IridiumMsgTx')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('req_id', req_id)
          ..add('ttl', ttl)
          ..add('destination', destination)
          ..add('data', data))
        .toString();
  }
}

/// Transmit Iridium Message builder class
///
class IridiumMsgTxBuilder implements Builder<IridiumMsgTx, IridiumMsgTxBuilder> {
  _$IridiumMsgTx _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _req_id;
  int get req_id => _$this._req_id;
  set req_id(int req_id) => _$this._req_id = req_id;

  int _ttl;
  int get ttl => _$this._ttl;
  set ttl(int ttl) => _$this._ttl = ttl;

  String _destination;
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  IridiumMsgTxBuilder();

  IridiumMsgTxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _req_id = _$v.req_id;
      _ttl = _$v.ttl;
      _destination = _$v.destination;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IridiumMsgTx other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$IridiumMsgTx;
  }

  @override
  void update(void updates(IridiumMsgTxBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$IridiumMsgTx build() {
    final _$result = _$v ??
        new _$IridiumMsgTx._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            req_id: req_id,
            ttl: ttl,
            destination: destination,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// Iridium Transmission Status immutable class
///
class _$IridiumTxStatus extends IridiumTxStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int req_id;
  @override
  final IridiumTxStatusEnumStatus status;
  @override
  final String text;

  factory _$IridiumTxStatus([void updates(IridiumTxStatusBuilder b)]) =>
      (new IridiumTxStatusBuilder()..update(updates)).build();

  _$IridiumTxStatus._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.req_id,
      this.status,
      this.text})
      : super._();

  @override
  IridiumTxStatus rebuild(void updates(IridiumTxStatusBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  IridiumTxStatusBuilder toBuilder() => new IridiumTxStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IridiumTxStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        req_id == this.req_id &&
        status == this.status &&
        text == this.text;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        req_id.hashCode), 
        status.hashCode), 
        text.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IridiumTxStatus')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('req_id', req_id)
          ..add('status', status)
          ..add('text', text))
        .toString();
  }
}

/// Iridium Transmission Status builder class
///
class IridiumTxStatusBuilder implements Builder<IridiumTxStatus, IridiumTxStatusBuilder> {
  _$IridiumTxStatus _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _req_id;
  int get req_id => _$this._req_id;
  set req_id(int req_id) => _$this._req_id = req_id;

  IridiumTxStatusEnumStatus _status;
  IridiumTxStatusEnumStatus get status => _$this._status;
  set status(IridiumTxStatusEnumStatus status) => _$this._status = status;

  String _text;
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  IridiumTxStatusBuilder();

  IridiumTxStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _req_id = _$v.req_id;
      _status = _$v.status;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IridiumTxStatus other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$IridiumTxStatus;
  }

  @override
  void update(void updates(IridiumTxStatusBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$IridiumTxStatus build() {
    final _$result = _$v ??
        new _$IridiumTxStatus._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            req_id: req_id,
            status: status,
            text: text);
    replace(_$result);
    return _$result;
  }
}

/// Group Membership State immutable class
///
class _$GroupMembershipState extends GroupMembershipState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String group_name;
  @override
  final int links;

  factory _$GroupMembershipState([void updates(GroupMembershipStateBuilder b)]) =>
      (new GroupMembershipStateBuilder()..update(updates)).build();

  _$GroupMembershipState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.group_name,
      this.links})
      : super._();

  @override
  GroupMembershipState rebuild(void updates(GroupMembershipStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GroupMembershipStateBuilder toBuilder() => new GroupMembershipStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GroupMembershipState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        group_name == this.group_name &&
        links == this.links;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        group_name.hashCode), 
        links.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GroupMembershipState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('group_name', group_name)
          ..add('links', links))
        .toString();
  }
}

/// Group Membership State builder class
///
class GroupMembershipStateBuilder implements Builder<GroupMembershipState, GroupMembershipStateBuilder> {
  _$GroupMembershipState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _group_name;
  String get group_name => _$this._group_name;
  set group_name(String group_name) => _$this._group_name = group_name;

  int _links;
  int get links => _$this._links;
  set links(int links) => _$this._links = links;

  GroupMembershipStateBuilder();

  GroupMembershipStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _group_name = _$v.group_name;
      _links = _$v.links;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GroupMembershipState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GroupMembershipState;
  }

  @override
  void update(void updates(GroupMembershipStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GroupMembershipState build() {
    final _$result = _$v ??
        new _$GroupMembershipState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            group_name: group_name,
            links: links);
    replace(_$result);
    return _$result;
  }
}

/// System Group immutable class
///
class _$SystemGroup extends SystemGroup {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String GroupName;
  @override
  final SystemGroupEnumAction Action;
  @override
  final String GroupList;

  factory _$SystemGroup([void updates(SystemGroupBuilder b)]) =>
      (new SystemGroupBuilder()..update(updates)).build();

  _$SystemGroup._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.GroupName,
      this.Action,
      this.GroupList})
      : super._();

  @override
  SystemGroup rebuild(void updates(SystemGroupBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SystemGroupBuilder toBuilder() => new SystemGroupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SystemGroup &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        GroupName == this.GroupName &&
        Action == this.Action &&
        GroupList == this.GroupList;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        GroupName.hashCode), 
        Action.hashCode), 
        GroupList.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SystemGroup')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('GroupName', GroupName)
          ..add('Action', Action)
          ..add('GroupList', GroupList))
        .toString();
  }
}

/// System Group builder class
///
class SystemGroupBuilder implements Builder<SystemGroup, SystemGroupBuilder> {
  _$SystemGroup _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _GroupName;
  String get GroupName => _$this._GroupName;
  set GroupName(String GroupName) => _$this._GroupName = GroupName;

  SystemGroupEnumAction _Action;
  SystemGroupEnumAction get Action => _$this._Action;
  set Action(SystemGroupEnumAction Action) => _$this._Action = Action;

  String _GroupList;
  String get GroupList => _$this._GroupList;
  set GroupList(String GroupList) => _$this._GroupList = GroupList;

  SystemGroupBuilder();

  SystemGroupBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _GroupName = _$v.GroupName;
      _Action = _$v.Action;
      _GroupList = _$v.GroupList;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SystemGroup other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SystemGroup;
  }

  @override
  void update(void updates(SystemGroupBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SystemGroup build() {
    final _$result = _$v ??
        new _$SystemGroup._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            GroupName: GroupName,
            Action: Action,
            GroupList: GroupList);
    replace(_$result);
    return _$result;
  }
}

/// Link Latency immutable class
///
class _$LinkLatency extends LinkLatency {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final int sys_src;

  factory _$LinkLatency([void updates(LinkLatencyBuilder b)]) =>
      (new LinkLatencyBuilder()..update(updates)).build();

  _$LinkLatency._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value,
      this.sys_src})
      : super._();

  @override
  LinkLatency rebuild(void updates(LinkLatencyBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LinkLatencyBuilder toBuilder() => new LinkLatencyBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LinkLatency &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value &&
        sys_src == this.sys_src;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode), 
        sys_src.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LinkLatency')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value)
          ..add('sys_src', sys_src))
        .toString();
  }
}

/// Link Latency builder class
///
class LinkLatencyBuilder implements Builder<LinkLatency, LinkLatencyBuilder> {
  _$LinkLatency _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  int _sys_src;
  int get sys_src => _$this._sys_src;
  set sys_src(int sys_src) => _$this._sys_src = sys_src;

  LinkLatencyBuilder();

  LinkLatencyBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _sys_src = _$v.sys_src;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LinkLatency other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LinkLatency;
  }

  @override
  void update(void updates(LinkLatencyBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LinkLatency build() {
    final _$result = _$v ??
        new _$LinkLatency._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value,
            sys_src: sys_src);
    replace(_$result);
    return _$result;
  }
}

/// Extended Receive Signal Strength Information immutable class
///
class _$ExtendedRSSI extends ExtendedRSSI {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final RSSIUnitsEnum units;

  factory _$ExtendedRSSI([void updates(ExtendedRSSIBuilder b)]) =>
      (new ExtendedRSSIBuilder()..update(updates)).build();

  _$ExtendedRSSI._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value,
      this.units})
      : super._();

  @override
  ExtendedRSSI rebuild(void updates(ExtendedRSSIBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ExtendedRSSIBuilder toBuilder() => new ExtendedRSSIBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ExtendedRSSI &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value &&
        units == this.units;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode), 
        units.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ExtendedRSSI')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value)
          ..add('units', units))
        .toString();
  }
}

/// Extended Receive Signal Strength Information builder class
///
class ExtendedRSSIBuilder implements Builder<ExtendedRSSI, ExtendedRSSIBuilder> {
  _$ExtendedRSSI _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RSSIUnitsEnum _units;
  RSSIUnitsEnum get units => _$this._units;
  set units(RSSIUnitsEnum units) => _$this._units = units;

  ExtendedRSSIBuilder();

  ExtendedRSSIBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _units = _$v.units;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ExtendedRSSI other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ExtendedRSSI;
  }

  @override
  void update(void updates(ExtendedRSSIBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ExtendedRSSI build() {
    final _$result = _$v ??
        new _$ExtendedRSSI._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value,
            units: units);
    replace(_$result);
    return _$result;
  }
}

/// Historic Data Series immutable class
///
class _$HistoricData extends HistoricData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double base_lat;
  @override
  final double base_lon;
  @override
  final double base_time;
  @override
  final List<RemoteData> data;

  factory _$HistoricData([void updates(HistoricDataBuilder b)]) =>
      (new HistoricDataBuilder()..update(updates)).build();

  _$HistoricData._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.base_lat,
      this.base_lon,
      this.base_time,
      this.data})
      : super._();

  @override
  HistoricData rebuild(void updates(HistoricDataBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricDataBuilder toBuilder() => new HistoricDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        base_lat == this.base_lat &&
        base_lon == this.base_lon &&
        base_time == this.base_time &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        base_lat.hashCode), 
        base_lon.hashCode), 
        base_time.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricData')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('base_lat', base_lat)
          ..add('base_lon', base_lon)
          ..add('base_time', base_time)
          ..add('data', data))
        .toString();
  }
}

/// Historic Data Series builder class
///
class HistoricDataBuilder implements Builder<HistoricData, HistoricDataBuilder> {
  _$HistoricData _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _base_lat;
  double get base_lat => _$this._base_lat;
  set base_lat(double base_lat) => _$this._base_lat = base_lat;

  double _base_lon;
  double get base_lon => _$this._base_lon;
  set base_lon(double base_lon) => _$this._base_lon = base_lon;

  double _base_time;
  double get base_time => _$this._base_time;
  set base_time(double base_time) => _$this._base_time = base_time;

  List<RemoteData> _data;
  List<RemoteData> get data => _$this._data;
  set data(List<RemoteData> data) => _$this._data = data;

  HistoricDataBuilder();

  HistoricDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _base_lat = _$v.base_lat;
      _base_lon = _$v.base_lon;
      _base_time = _$v.base_time;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricData other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricData;
  }

  @override
  void update(void updates(HistoricDataBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricData build() {
    final _$result = _$v ??
        new _$HistoricData._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            base_lat: base_lat,
            base_lon: base_lon,
            base_time: base_time,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// Compressed Historic Data Series immutable class
///
class _$CompressedHistory extends CompressedHistory {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double base_lat;
  @override
  final double base_lon;
  @override
  final double base_time;
  @override
  final List<int> data;

  factory _$CompressedHistory([void updates(CompressedHistoryBuilder b)]) =>
      (new CompressedHistoryBuilder()..update(updates)).build();

  _$CompressedHistory._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.base_lat,
      this.base_lon,
      this.base_time,
      this.data})
      : super._();

  @override
  CompressedHistory rebuild(void updates(CompressedHistoryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CompressedHistoryBuilder toBuilder() => new CompressedHistoryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CompressedHistory &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        base_lat == this.base_lat &&
        base_lon == this.base_lon &&
        base_time == this.base_time &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        base_lat.hashCode), 
        base_lon.hashCode), 
        base_time.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CompressedHistory')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('base_lat', base_lat)
          ..add('base_lon', base_lon)
          ..add('base_time', base_time)
          ..add('data', data))
        .toString();
  }
}

/// Compressed Historic Data Series builder class
///
class CompressedHistoryBuilder implements Builder<CompressedHistory, CompressedHistoryBuilder> {
  _$CompressedHistory _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _base_lat;
  double get base_lat => _$this._base_lat;
  set base_lat(double base_lat) => _$this._base_lat = base_lat;

  double _base_lon;
  double get base_lon => _$this._base_lon;
  set base_lon(double base_lon) => _$this._base_lon = base_lon;

  double _base_time;
  double get base_time => _$this._base_time;
  set base_time(double base_time) => _$this._base_time = base_time;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  CompressedHistoryBuilder();

  CompressedHistoryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _base_lat = _$v.base_lat;
      _base_lon = _$v.base_lon;
      _base_time = _$v.base_time;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CompressedHistory other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CompressedHistory;
  }

  @override
  void update(void updates(CompressedHistoryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CompressedHistory build() {
    final _$result = _$v ??
        new _$CompressedHistory._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            base_lat: base_lat,
            base_lon: base_lon,
            base_time: base_time,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// Historic Data Sample immutable class
///
class _$HistoricSample extends HistoricSample {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sys_id;
  @override
  final int priority;
  @override
  final int x;
  @override
  final int y;
  @override
  final int z;
  @override
  final int t;
  @override
  final ImcMessage sample;

  factory _$HistoricSample([void updates(HistoricSampleBuilder b)]) =>
      (new HistoricSampleBuilder()..update(updates)).build();

  _$HistoricSample._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sys_id,
      this.priority,
      this.x,
      this.y,
      this.z,
      this.t,
      this.sample})
      : super._();

  @override
  HistoricSample rebuild(void updates(HistoricSampleBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricSampleBuilder toBuilder() => new HistoricSampleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricSample &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sys_id == this.sys_id &&
        priority == this.priority &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        t == this.t &&
        sample == this.sample;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        sys_id.hashCode), 
        priority.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode), 
        t.hashCode), 
        sample.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricSample')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('sys_id', sys_id)
          ..add('priority', priority)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('t', t)
          ..add('sample', sample))
        .toString();
  }
}

/// Historic Data Sample builder class
///
class HistoricSampleBuilder implements Builder<HistoricSample, HistoricSampleBuilder> {
  _$HistoricSample _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sys_id;
  int get sys_id => _$this._sys_id;
  set sys_id(int sys_id) => _$this._sys_id = sys_id;

  int _priority;
  int get priority => _$this._priority;
  set priority(int priority) => _$this._priority = priority;

  int _x;
  int get x => _$this._x;
  set x(int x) => _$this._x = x;

  int _y;
  int get y => _$this._y;
  set y(int y) => _$this._y = y;

  int _z;
  int get z => _$this._z;
  set z(int z) => _$this._z = z;

  int _t;
  int get t => _$this._t;
  set t(int t) => _$this._t = t;

  ImcMessage _sample;
  ImcMessage get sample => _$this._sample;
  set sample(ImcMessage sample) => _$this._sample = sample;

  HistoricSampleBuilder();

  HistoricSampleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sys_id = _$v.sys_id;
      _priority = _$v.priority;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _t = _$v.t;
      _sample = _$v.sample;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricSample other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricSample;
  }

  @override
  void update(void updates(HistoricSampleBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricSample build() {
    final _$result = _$v ??
        new _$HistoricSample._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            sys_id: sys_id,
            priority: priority,
            x: x,
            y: y,
            z: z,
            t: t,
            sample: sample);
    replace(_$result);
    return _$result;
  }
}

/// Historic Data Query immutable class
///
class _$HistoricDataQuery extends HistoricDataQuery {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int req_id;
  @override
  final HistoricDataQueryEnumType type;
  @override
  final int max_size;
  @override
  final HistoricData data;

  factory _$HistoricDataQuery([void updates(HistoricDataQueryBuilder b)]) =>
      (new HistoricDataQueryBuilder()..update(updates)).build();

  _$HistoricDataQuery._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.req_id,
      this.type,
      this.max_size,
      this.data})
      : super._();

  @override
  HistoricDataQuery rebuild(void updates(HistoricDataQueryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricDataQueryBuilder toBuilder() => new HistoricDataQueryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricDataQuery &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        req_id == this.req_id &&
        type == this.type &&
        max_size == this.max_size &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        req_id.hashCode), 
        type.hashCode), 
        max_size.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricDataQuery')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('req_id', req_id)
          ..add('type', type)
          ..add('max_size', max_size)
          ..add('data', data))
        .toString();
  }
}

/// Historic Data Query builder class
///
class HistoricDataQueryBuilder implements Builder<HistoricDataQuery, HistoricDataQueryBuilder> {
  _$HistoricDataQuery _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _req_id;
  int get req_id => _$this._req_id;
  set req_id(int req_id) => _$this._req_id = req_id;

  HistoricDataQueryEnumType _type;
  HistoricDataQueryEnumType get type => _$this._type;
  set type(HistoricDataQueryEnumType type) => _$this._type = type;

  int _max_size;
  int get max_size => _$this._max_size;
  set max_size(int max_size) => _$this._max_size = max_size;

  HistoricData _data;
  HistoricData get data => _$this._data;
  set data(HistoricData data) => _$this._data = data;

  HistoricDataQueryBuilder();

  HistoricDataQueryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _req_id = _$v.req_id;
      _type = _$v.type;
      _max_size = _$v.max_size;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricDataQuery other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricDataQuery;
  }

  @override
  void update(void updates(HistoricDataQueryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricDataQuery build() {
    final _$result = _$v ??
        new _$HistoricDataQuery._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            req_id: req_id,
            type: type,
            max_size: max_size,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// Remote Command immutable class
///
class _$RemoteCommand extends RemoteCommand {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int original_source;
  @override
  final int destination;
  @override
  final double timeout;
  @override
  final ImcMessage cmd;

  factory _$RemoteCommand([void updates(RemoteCommandBuilder b)]) =>
      (new RemoteCommandBuilder()..update(updates)).build();

  _$RemoteCommand._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.original_source,
      this.destination,
      this.timeout,
      this.cmd})
      : super._();

  @override
  RemoteCommand rebuild(void updates(RemoteCommandBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteCommandBuilder toBuilder() => new RemoteCommandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteCommand &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        original_source == this.original_source &&
        destination == this.destination &&
        timeout == this.timeout &&
        cmd == this.cmd;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        original_source.hashCode), 
        destination.hashCode), 
        timeout.hashCode), 
        cmd.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteCommand')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('original_source', original_source)
          ..add('destination', destination)
          ..add('timeout', timeout)
          ..add('cmd', cmd))
        .toString();
  }
}

/// Remote Command builder class
///
class RemoteCommandBuilder implements Builder<RemoteCommand, RemoteCommandBuilder> {
  _$RemoteCommand _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _original_source;
  int get original_source => _$this._original_source;
  set original_source(int original_source) => _$this._original_source = original_source;

  int _destination;
  int get destination => _$this._destination;
  set destination(int destination) => _$this._destination = destination;

  double _timeout;
  double get timeout => _$this._timeout;
  set timeout(double timeout) => _$this._timeout = timeout;

  ImcMessage _cmd;
  ImcMessage get cmd => _$this._cmd;
  set cmd(ImcMessage cmd) => _$this._cmd = cmd;

  RemoteCommandBuilder();

  RemoteCommandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _original_source = _$v.original_source;
      _destination = _$v.destination;
      _timeout = _$v.timeout;
      _cmd = _$v.cmd;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteCommand other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteCommand;
  }

  @override
  void update(void updates(RemoteCommandBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteCommand build() {
    final _$result = _$v ??
        new _$RemoteCommand._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            original_source: original_source,
            destination: destination,
            timeout: timeout,
            cmd: cmd);
    replace(_$result);
    return _$result;
  }
}

/// Communication Systems Query immutable class
///
class _$CommSystemsQuery extends CommSystemsQuery {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final CommSystemsQueryBitfieldType type;
  @override
  final CommSystemsQueryBitfieldCommInterface comm_interface;
  @override
  final CommSystemsQueryEnumModel model;
  @override
  final String list;

  factory _$CommSystemsQuery([void updates(CommSystemsQueryBuilder b)]) =>
      (new CommSystemsQueryBuilder()..update(updates)).build();

  _$CommSystemsQuery._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.comm_interface,
      this.model,
      this.list})
      : super._();

  @override
  CommSystemsQuery rebuild(void updates(CommSystemsQueryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CommSystemsQueryBuilder toBuilder() => new CommSystemsQueryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CommSystemsQuery &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        comm_interface == this.comm_interface &&
        model == this.model &&
        list == this.list;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode), 
        comm_interface.hashCode), 
        model.hashCode), 
        list.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CommSystemsQuery')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type)
          ..add('comm_interface', comm_interface)
          ..add('model', model)
          ..add('list', list))
        .toString();
  }
}

/// Communication Systems Query builder class
///
class CommSystemsQueryBuilder implements Builder<CommSystemsQuery, CommSystemsQueryBuilder> {
  _$CommSystemsQuery _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  CommSystemsQueryBitfieldType _type;
  CommSystemsQueryBitfieldType get type => _$this._type;
  set type(CommSystemsQueryBitfieldType type) => _$this._type = type;

  CommSystemsQueryBitfieldCommInterface _comm_interface;
  CommSystemsQueryBitfieldCommInterface get comm_interface => _$this._comm_interface;
  set comm_interface(CommSystemsQueryBitfieldCommInterface comm_interface) => _$this._comm_interface = comm_interface;

  CommSystemsQueryEnumModel _model;
  CommSystemsQueryEnumModel get model => _$this._model;
  set model(CommSystemsQueryEnumModel model) => _$this._model = model;

  String _list;
  String get list => _$this._list;
  set list(String list) => _$this._list = list;

  CommSystemsQueryBuilder();

  CommSystemsQueryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _comm_interface = _$v.comm_interface;
      _model = _$v.model;
      _list = _$v.list;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CommSystemsQuery other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CommSystemsQuery;
  }

  @override
  void update(void updates(CommSystemsQueryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CommSystemsQuery build() {
    final _$result = _$v ??
        new _$CommSystemsQuery._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type,
            comm_interface: comm_interface,
            model: model,
            list: list);
    replace(_$result);
    return _$result;
  }
}

/// Telemetry Message immutable class
///
class _$TelemetryMsg extends TelemetryMsg {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final TelemetryMsgEnumType type;
  @override
  final int req_id;
  @override
  final int ttl;
  @override
  final TelemetryMsgEnumCode code;
  @override
  final String destination;
  @override
  final String Source;
  @override
  final TelemetryMsgBitfieldAcknowledge acknowledge;
  @override
  final TelemetryMsgEnumStatus status;
  @override
  final List<int> data;

  factory _$TelemetryMsg([void updates(TelemetryMsgBuilder b)]) =>
      (new TelemetryMsgBuilder()..update(updates)).build();

  _$TelemetryMsg._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.req_id,
      this.ttl,
      this.code,
      this.destination,
      this.Source,
      this.acknowledge,
      this.status,
      this.data})
      : super._();

  @override
  TelemetryMsg rebuild(void updates(TelemetryMsgBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TelemetryMsgBuilder toBuilder() => new TelemetryMsgBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TelemetryMsg &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        req_id == this.req_id &&
        ttl == this.ttl &&
        code == this.code &&
        destination == this.destination &&
        Source == this.Source &&
        acknowledge == this.acknowledge &&
        status == this.status &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode), 
        req_id.hashCode), 
        ttl.hashCode), 
        code.hashCode), 
        destination.hashCode), 
        Source.hashCode), 
        acknowledge.hashCode), 
        status.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TelemetryMsg')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type)
          ..add('req_id', req_id)
          ..add('ttl', ttl)
          ..add('code', code)
          ..add('destination', destination)
          ..add('Source', Source)
          ..add('acknowledge', acknowledge)
          ..add('status', status)
          ..add('data', data))
        .toString();
  }
}

/// Telemetry Message builder class
///
class TelemetryMsgBuilder implements Builder<TelemetryMsg, TelemetryMsgBuilder> {
  _$TelemetryMsg _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  TelemetryMsgEnumType _type;
  TelemetryMsgEnumType get type => _$this._type;
  set type(TelemetryMsgEnumType type) => _$this._type = type;

  int _req_id;
  int get req_id => _$this._req_id;
  set req_id(int req_id) => _$this._req_id = req_id;

  int _ttl;
  int get ttl => _$this._ttl;
  set ttl(int ttl) => _$this._ttl = ttl;

  TelemetryMsgEnumCode _code;
  TelemetryMsgEnumCode get code => _$this._code;
  set code(TelemetryMsgEnumCode code) => _$this._code = code;

  String _destination;
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  String _Source;
  String get Source => _$this._Source;
  set Source(String Source) => _$this._Source = Source;

  TelemetryMsgBitfieldAcknowledge _acknowledge;
  TelemetryMsgBitfieldAcknowledge get acknowledge => _$this._acknowledge;
  set acknowledge(TelemetryMsgBitfieldAcknowledge acknowledge) => _$this._acknowledge = acknowledge;

  TelemetryMsgEnumStatus _status;
  TelemetryMsgEnumStatus get status => _$this._status;
  set status(TelemetryMsgEnumStatus status) => _$this._status = status;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  TelemetryMsgBuilder();

  TelemetryMsgBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _req_id = _$v.req_id;
      _ttl = _$v.ttl;
      _code = _$v.code;
      _destination = _$v.destination;
      _Source = _$v.Source;
      _acknowledge = _$v.acknowledge;
      _status = _$v.status;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TelemetryMsg other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TelemetryMsg;
  }

  @override
  void update(void updates(TelemetryMsgBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TelemetryMsg build() {
    final _$result = _$v ??
        new _$TelemetryMsg._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type,
            req_id: req_id,
            ttl: ttl,
            code: code,
            destination: destination,
            Source: Source,
            acknowledge: acknowledge,
            status: status,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// LBL Range immutable class
///
class _$LblRange extends LblRange {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double range;

  factory _$LblRange([void updates(LblRangeBuilder b)]) =>
      (new LblRangeBuilder()..update(updates)).build();

  _$LblRange._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.range})
      : super._();

  @override
  LblRange rebuild(void updates(LblRangeBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LblRangeBuilder toBuilder() => new LblRangeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblRange &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        range == this.range;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        id.hashCode), 
        range.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblRange')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('id', id)
          ..add('range', range))
        .toString();
  }
}

/// LBL Range builder class
///
class LblRangeBuilder implements Builder<LblRange, LblRangeBuilder> {
  _$LblRange _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _range;
  double get range => _$this._range;
  set range(double range) => _$this._range = range;

  LblRangeBuilder();

  LblRangeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _range = _$v.range;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblRange other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LblRange;
  }

  @override
  void update(void updates(LblRangeBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LblRange build() {
    final _$result = _$v ??
        new _$LblRange._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            id: id,
            range: range);
    replace(_$result);
    return _$result;
  }
}

/// LBL Beacon Configuration immutable class
///
class _$LblBeacon extends LblBeacon {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String beacon;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double depth;
  @override
  final int query_channel;
  @override
  final int reply_channel;
  @override
  final int transponder_delay;

  factory _$LblBeacon([void updates(LblBeaconBuilder b)]) =>
      (new LblBeaconBuilder()..update(updates)).build();

  _$LblBeacon._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.beacon,
      this.lat,
      this.lon,
      this.depth,
      this.query_channel,
      this.reply_channel,
      this.transponder_delay})
      : super._();

  @override
  LblBeacon rebuild(void updates(LblBeaconBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LblBeaconBuilder toBuilder() => new LblBeaconBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblBeacon &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        beacon == this.beacon &&
        lat == this.lat &&
        lon == this.lon &&
        depth == this.depth &&
        query_channel == this.query_channel &&
        reply_channel == this.reply_channel &&
        transponder_delay == this.transponder_delay;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        beacon.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        depth.hashCode), 
        query_channel.hashCode), 
        reply_channel.hashCode), 
        transponder_delay.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblBeacon')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('beacon', beacon)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('depth', depth)
          ..add('query_channel', query_channel)
          ..add('reply_channel', reply_channel)
          ..add('transponder_delay', transponder_delay))
        .toString();
  }
}

/// LBL Beacon Configuration builder class
///
class LblBeaconBuilder implements Builder<LblBeacon, LblBeaconBuilder> {
  _$LblBeacon _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _beacon;
  String get beacon => _$this._beacon;
  set beacon(String beacon) => _$this._beacon = beacon;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _depth;
  double get depth => _$this._depth;
  set depth(double depth) => _$this._depth = depth;

  int _query_channel;
  int get query_channel => _$this._query_channel;
  set query_channel(int query_channel) => _$this._query_channel = query_channel;

  int _reply_channel;
  int get reply_channel => _$this._reply_channel;
  set reply_channel(int reply_channel) => _$this._reply_channel = reply_channel;

  int _transponder_delay;
  int get transponder_delay => _$this._transponder_delay;
  set transponder_delay(int transponder_delay) => _$this._transponder_delay = transponder_delay;

  LblBeaconBuilder();

  LblBeaconBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _beacon = _$v.beacon;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _depth = _$v.depth;
      _query_channel = _$v.query_channel;
      _reply_channel = _$v.reply_channel;
      _transponder_delay = _$v.transponder_delay;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblBeacon other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LblBeacon;
  }

  @override
  void update(void updates(LblBeaconBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LblBeacon build() {
    final _$result = _$v ??
        new _$LblBeacon._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            beacon: beacon,
            lat: lat,
            lon: lon,
            depth: depth,
            query_channel: query_channel,
            reply_channel: reply_channel,
            transponder_delay: transponder_delay);
    replace(_$result);
    return _$result;
  }
}

/// LBL Configuration immutable class
///
class _$LblConfig extends LblConfig {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LblConfigEnumOp op;
  @override
  final List<LblBeacon> beacons;

  factory _$LblConfig([void updates(LblConfigBuilder b)]) =>
      (new LblConfigBuilder()..update(updates)).build();

  _$LblConfig._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.beacons})
      : super._();

  @override
  LblConfig rebuild(void updates(LblConfigBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LblConfigBuilder toBuilder() => new LblConfigBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblConfig &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        beacons == this.beacons;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        beacons.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblConfig')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('beacons', beacons))
        .toString();
  }
}

/// LBL Configuration builder class
///
class LblConfigBuilder implements Builder<LblConfig, LblConfigBuilder> {
  _$LblConfig _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LblConfigEnumOp _op;
  LblConfigEnumOp get op => _$this._op;
  set op(LblConfigEnumOp op) => _$this._op = op;

  List<LblBeacon> _beacons;
  List<LblBeacon> get beacons => _$this._beacons;
  set beacons(List<LblBeacon> beacons) => _$this._beacons = beacons;

  LblConfigBuilder();

  LblConfigBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _beacons = _$v.beacons;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblConfig other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LblConfig;
  }

  @override
  void update(void updates(LblConfigBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LblConfig build() {
    final _$result = _$v ??
        new _$LblConfig._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            beacons: beacons);
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Message immutable class
///
class _$AcousticMessage extends AcousticMessage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ImcMessage message;

  factory _$AcousticMessage([void updates(AcousticMessageBuilder b)]) =>
      (new AcousticMessageBuilder()..update(updates)).build();

  _$AcousticMessage._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.message})
      : super._();

  @override
  AcousticMessage rebuild(void updates(AcousticMessageBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticMessageBuilder toBuilder() => new AcousticMessageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticMessage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        message == this.message;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        message.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticMessage')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('message', message))
        .toString();
  }
}

/// Acoustic Message builder class
///
class AcousticMessageBuilder implements Builder<AcousticMessage, AcousticMessageBuilder> {
  _$AcousticMessage _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ImcMessage _message;
  ImcMessage get message => _$this._message;
  set message(ImcMessage message) => _$this._message = message;

  AcousticMessageBuilder();

  AcousticMessageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _message = _$v.message;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticMessage other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticMessage;
  }

  @override
  void update(void updates(AcousticMessageBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticMessage build() {
    final _$result = _$v ??
        new _$AcousticMessage._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            message: message);
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Operation immutable class
///
class _$AcousticOperation extends AcousticOperation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final AcousticOperationEnumOp op;
  @override
  final String system;
  @override
  final double range;
  @override
  final ImcMessage msg;

  factory _$AcousticOperation([void updates(AcousticOperationBuilder b)]) =>
      (new AcousticOperationBuilder()..update(updates)).build();

  _$AcousticOperation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.system,
      this.range,
      this.msg})
      : super._();

  @override
  AcousticOperation rebuild(void updates(AcousticOperationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticOperationBuilder toBuilder() => new AcousticOperationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticOperation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        system == this.system &&
        range == this.range &&
        msg == this.msg;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        system.hashCode), 
        range.hashCode), 
        msg.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticOperation')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('system', system)
          ..add('range', range)
          ..add('msg', msg))
        .toString();
  }
}

/// Acoustic Operation builder class
///
class AcousticOperationBuilder implements Builder<AcousticOperation, AcousticOperationBuilder> {
  _$AcousticOperation _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AcousticOperationEnumOp _op;
  AcousticOperationEnumOp get op => _$this._op;
  set op(AcousticOperationEnumOp op) => _$this._op = op;

  String _system;
  String get system => _$this._system;
  set system(String system) => _$this._system = system;

  double _range;
  double get range => _$this._range;
  set range(double range) => _$this._range = range;

  ImcMessage _msg;
  ImcMessage get msg => _$this._msg;
  set msg(ImcMessage msg) => _$this._msg = msg;

  AcousticOperationBuilder();

  AcousticOperationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _system = _$v.system;
      _range = _$v.range;
      _msg = _$v.msg;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticOperation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticOperation;
  }

  @override
  void update(void updates(AcousticOperationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticOperation build() {
    final _$result = _$v ??
        new _$AcousticOperation._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            system: system,
            range: range,
            msg: msg);
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Systems Query immutable class
///
class _$AcousticSystemsQuery extends AcousticSystemsQuery {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$AcousticSystemsQuery([void updates(AcousticSystemsQueryBuilder b)]) =>
      (new AcousticSystemsQueryBuilder()..update(updates)).build();

  _$AcousticSystemsQuery._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  AcousticSystemsQuery rebuild(void updates(AcousticSystemsQueryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticSystemsQueryBuilder toBuilder() => new AcousticSystemsQueryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticSystemsQuery &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticSystemsQuery')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt))
        .toString();
  }
}

/// Acoustic Systems Query builder class
///
class AcousticSystemsQueryBuilder implements Builder<AcousticSystemsQuery, AcousticSystemsQueryBuilder> {
  _$AcousticSystemsQuery _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AcousticSystemsQueryBuilder();

  AcousticSystemsQueryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticSystemsQuery other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticSystemsQuery;
  }

  @override
  void update(void updates(AcousticSystemsQueryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticSystemsQuery build() {
    final _$result = _$v ??
        new _$AcousticSystemsQuery._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt);
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Systems immutable class
///
class _$AcousticSystems extends AcousticSystems {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String list;

  factory _$AcousticSystems([void updates(AcousticSystemsBuilder b)]) =>
      (new AcousticSystemsBuilder()..update(updates)).build();

  _$AcousticSystems._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.list})
      : super._();

  @override
  AcousticSystems rebuild(void updates(AcousticSystemsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticSystemsBuilder toBuilder() => new AcousticSystemsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticSystems &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        list == this.list;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        list.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticSystems')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('list', list))
        .toString();
  }
}

/// Acoustic Systems builder class
///
class AcousticSystemsBuilder implements Builder<AcousticSystems, AcousticSystemsBuilder> {
  _$AcousticSystems _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _list;
  String get list => _$this._list;
  set list(String list) => _$this._list = list;

  AcousticSystemsBuilder();

  AcousticSystemsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _list = _$v.list;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticSystems other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticSystems;
  }

  @override
  void update(void updates(AcousticSystemsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticSystems build() {
    final _$result = _$v ??
        new _$AcousticSystems._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            list: list);
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Link Quality immutable class
///
class _$AcousticLink extends AcousticLink {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String peer;
  @override
  final double rssi;
  @override
  final int integrity;

  factory _$AcousticLink([void updates(AcousticLinkBuilder b)]) =>
      (new AcousticLinkBuilder()..update(updates)).build();

  _$AcousticLink._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.peer,
      this.rssi,
      this.integrity})
      : super._();

  @override
  AcousticLink rebuild(void updates(AcousticLinkBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticLinkBuilder toBuilder() => new AcousticLinkBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticLink &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        peer == this.peer &&
        rssi == this.rssi &&
        integrity == this.integrity;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        peer.hashCode), 
        rssi.hashCode), 
        integrity.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticLink')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('peer', peer)
          ..add('rssi', rssi)
          ..add('integrity', integrity))
        .toString();
  }
}

/// Acoustic Link Quality builder class
///
class AcousticLinkBuilder implements Builder<AcousticLink, AcousticLinkBuilder> {
  _$AcousticLink _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _peer;
  String get peer => _$this._peer;
  set peer(String peer) => _$this._peer = peer;

  double _rssi;
  double get rssi => _$this._rssi;
  set rssi(double rssi) => _$this._rssi = rssi;

  int _integrity;
  int get integrity => _$this._integrity;
  set integrity(int integrity) => _$this._integrity = integrity;

  AcousticLinkBuilder();

  AcousticLinkBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _peer = _$v.peer;
      _rssi = _$v.rssi;
      _integrity = _$v.integrity;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticLink other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticLink;
  }

  @override
  void update(void updates(AcousticLinkBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticLink build() {
    final _$result = _$v ??
        new _$AcousticLink._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            peer: peer,
            rssi: rssi,
            integrity: integrity);
    replace(_$result);
    return _$result;
  }
}

/// Revolutions Per Minute immutable class
///
class _$Rpm extends Rpm {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int value;

  factory _$Rpm([void updates(RpmBuilder b)]) =>
      (new RpmBuilder()..update(updates)).build();

  _$Rpm._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Rpm rebuild(void updates(RpmBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RpmBuilder toBuilder() => new RpmBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Rpm &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Rpm')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Revolutions Per Minute builder class
///
class RpmBuilder implements Builder<Rpm, RpmBuilder> {
  _$Rpm _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _value;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  RpmBuilder();

  RpmBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Rpm other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Rpm;
  }

  @override
  void update(void updates(RpmBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Rpm build() {
    final _$result = _$v ??
        new _$Rpm._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Voltage immutable class
///
class _$Voltage extends Voltage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Voltage([void updates(VoltageBuilder b)]) =>
      (new VoltageBuilder()..update(updates)).build();

  _$Voltage._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Voltage rebuild(void updates(VoltageBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VoltageBuilder toBuilder() => new VoltageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Voltage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Voltage')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Voltage builder class
///
class VoltageBuilder implements Builder<Voltage, VoltageBuilder> {
  _$Voltage _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  VoltageBuilder();

  VoltageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Voltage other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Voltage;
  }

  @override
  void update(void updates(VoltageBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Voltage build() {
    final _$result = _$v ??
        new _$Voltage._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Current immutable class
///
class _$Current extends Current {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Current([void updates(CurrentBuilder b)]) =>
      (new CurrentBuilder()..update(updates)).build();

  _$Current._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Current rebuild(void updates(CurrentBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CurrentBuilder toBuilder() => new CurrentBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Current &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Current')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Current builder class
///
class CurrentBuilder implements Builder<Current, CurrentBuilder> {
  _$Current _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  CurrentBuilder();

  CurrentBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Current other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Current;
  }

  @override
  void update(void updates(CurrentBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Current build() {
    final _$result = _$v ??
        new _$Current._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// GPS Fix immutable class
///
class _$GpsFix extends GpsFix {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final GpsFixBitfieldValidity validity;
  @override
  final GpsFixEnumType type;
  @override
  final int utc_year;
  @override
  final int utc_month;
  @override
  final int utc_day;
  @override
  final double utc_time;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final int satellites;
  @override
  final double cog;
  @override
  final double sog;
  @override
  final double hdop;
  @override
  final double vdop;
  @override
  final double hacc;
  @override
  final double vacc;

  factory _$GpsFix([void updates(GpsFixBuilder b)]) =>
      (new GpsFixBuilder()..update(updates)).build();

  _$GpsFix._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.validity,
      this.type,
      this.utc_year,
      this.utc_month,
      this.utc_day,
      this.utc_time,
      this.lat,
      this.lon,
      this.height,
      this.satellites,
      this.cog,
      this.sog,
      this.hdop,
      this.vdop,
      this.hacc,
      this.vacc})
      : super._();

  @override
  GpsFix rebuild(void updates(GpsFixBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GpsFixBuilder toBuilder() => new GpsFixBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GpsFix &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == this.validity &&
        type == this.type &&
        utc_year == this.utc_year &&
        utc_month == this.utc_month &&
        utc_day == this.utc_day &&
        utc_time == this.utc_time &&
        lat == this.lat &&
        lon == this.lon &&
        height == this.height &&
        satellites == this.satellites &&
        cog == this.cog &&
        sog == this.sog &&
        hdop == this.hdop &&
        vdop == this.vdop &&
        hacc == this.hacc &&
        vacc == this.vacc;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        validity.hashCode), 
        type.hashCode), 
        utc_year.hashCode), 
        utc_month.hashCode), 
        utc_day.hashCode), 
        utc_time.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        height.hashCode), 
        satellites.hashCode), 
        cog.hashCode), 
        sog.hashCode), 
        hdop.hashCode), 
        vdop.hashCode), 
        hacc.hashCode), 
        vacc.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GpsFix')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('validity', validity)
          ..add('type', type)
          ..add('utc_year', utc_year)
          ..add('utc_month', utc_month)
          ..add('utc_day', utc_day)
          ..add('utc_time', utc_time)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('height', height)
          ..add('satellites', satellites)
          ..add('cog', cog)
          ..add('sog', sog)
          ..add('hdop', hdop)
          ..add('vdop', vdop)
          ..add('hacc', hacc)
          ..add('vacc', vacc))
        .toString();
  }
}

/// GPS Fix builder class
///
class GpsFixBuilder implements Builder<GpsFix, GpsFixBuilder> {
  _$GpsFix _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GpsFixBitfieldValidity _validity;
  GpsFixBitfieldValidity get validity => _$this._validity;
  set validity(GpsFixBitfieldValidity validity) => _$this._validity = validity;

  GpsFixEnumType _type;
  GpsFixEnumType get type => _$this._type;
  set type(GpsFixEnumType type) => _$this._type = type;

  int _utc_year;
  int get utc_year => _$this._utc_year;
  set utc_year(int utc_year) => _$this._utc_year = utc_year;

  int _utc_month;
  int get utc_month => _$this._utc_month;
  set utc_month(int utc_month) => _$this._utc_month = utc_month;

  int _utc_day;
  int get utc_day => _$this._utc_day;
  set utc_day(int utc_day) => _$this._utc_day = utc_day;

  double _utc_time;
  double get utc_time => _$this._utc_time;
  set utc_time(double utc_time) => _$this._utc_time = utc_time;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  int _satellites;
  int get satellites => _$this._satellites;
  set satellites(int satellites) => _$this._satellites = satellites;

  double _cog;
  double get cog => _$this._cog;
  set cog(double cog) => _$this._cog = cog;

  double _sog;
  double get sog => _$this._sog;
  set sog(double sog) => _$this._sog = sog;

  double _hdop;
  double get hdop => _$this._hdop;
  set hdop(double hdop) => _$this._hdop = hdop;

  double _vdop;
  double get vdop => _$this._vdop;
  set vdop(double vdop) => _$this._vdop = vdop;

  double _hacc;
  double get hacc => _$this._hacc;
  set hacc(double hacc) => _$this._hacc = hacc;

  double _vacc;
  double get vacc => _$this._vacc;
  set vacc(double vacc) => _$this._vacc = vacc;

  GpsFixBuilder();

  GpsFixBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _type = _$v.type;
      _utc_year = _$v.utc_year;
      _utc_month = _$v.utc_month;
      _utc_day = _$v.utc_day;
      _utc_time = _$v.utc_time;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _satellites = _$v.satellites;
      _cog = _$v.cog;
      _sog = _$v.sog;
      _hdop = _$v.hdop;
      _vdop = _$v.vdop;
      _hacc = _$v.hacc;
      _vacc = _$v.vacc;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GpsFix other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GpsFix;
  }

  @override
  void update(void updates(GpsFixBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GpsFix build() {
    final _$result = _$v ??
        new _$GpsFix._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            validity: validity,
            type: type,
            utc_year: utc_year,
            utc_month: utc_month,
            utc_day: utc_day,
            utc_time: utc_time,
            lat: lat,
            lon: lon,
            height: height,
            satellites: satellites,
            cog: cog,
            sog: sog,
            hdop: hdop,
            vdop: vdop,
            hacc: hacc,
            vacc: vacc);
    replace(_$result);
    return _$result;
  }
}

/// Euler Angles immutable class
///
class _$EulerAngles extends EulerAngles {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double psi_magnetic;

  factory _$EulerAngles([void updates(EulerAnglesBuilder b)]) =>
      (new EulerAnglesBuilder()..update(updates)).build();

  _$EulerAngles._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.time,
      this.phi,
      this.theta,
      this.psi,
      this.psi_magnetic})
      : super._();

  @override
  EulerAngles rebuild(void updates(EulerAnglesBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EulerAnglesBuilder toBuilder() => new EulerAnglesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EulerAngles &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        time == this.time &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi &&
        psi_magnetic == this.psi_magnetic;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        time.hashCode), 
        phi.hashCode), 
        theta.hashCode), 
        psi.hashCode), 
        psi_magnetic.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EulerAngles')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('time', time)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi)
          ..add('psi_magnetic', psi_magnetic))
        .toString();
  }
}

/// Euler Angles builder class
///
class EulerAnglesBuilder implements Builder<EulerAngles, EulerAnglesBuilder> {
  _$EulerAngles _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _psi_magnetic;
  double get psi_magnetic => _$this._psi_magnetic;
  set psi_magnetic(double psi_magnetic) => _$this._psi_magnetic = psi_magnetic;

  EulerAnglesBuilder();

  EulerAnglesBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _psi_magnetic = _$v.psi_magnetic;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EulerAngles other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EulerAngles;
  }

  @override
  void update(void updates(EulerAnglesBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EulerAngles build() {
    final _$result = _$v ??
        new _$EulerAngles._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            time: time,
            phi: phi,
            theta: theta,
            psi: psi,
            psi_magnetic: psi_magnetic);
    replace(_$result);
    return _$result;
  }
}

/// Euler Angles Delta immutable class
///
class _$EulerAnglesDelta extends EulerAnglesDelta {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double timestep;

  factory _$EulerAnglesDelta([void updates(EulerAnglesDeltaBuilder b)]) =>
      (new EulerAnglesDeltaBuilder()..update(updates)).build();

  _$EulerAnglesDelta._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z,
      this.timestep})
      : super._();

  @override
  EulerAnglesDelta rebuild(void updates(EulerAnglesDeltaBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EulerAnglesDeltaBuilder toBuilder() => new EulerAnglesDeltaBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EulerAnglesDelta &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        time == this.time &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        timestep == this.timestep;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        time.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode), 
        timestep.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EulerAnglesDelta')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('time', time)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('timestep', timestep))
        .toString();
  }
}

/// Euler Angles Delta builder class
///
class EulerAnglesDeltaBuilder implements Builder<EulerAnglesDelta, EulerAnglesDeltaBuilder> {
  _$EulerAnglesDelta _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _timestep;
  double get timestep => _$this._timestep;
  set timestep(double timestep) => _$this._timestep = timestep;

  EulerAnglesDeltaBuilder();

  EulerAnglesDeltaBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _timestep = _$v.timestep;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EulerAnglesDelta other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EulerAnglesDelta;
  }

  @override
  void update(void updates(EulerAnglesDeltaBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EulerAnglesDelta build() {
    final _$result = _$v ??
        new _$EulerAnglesDelta._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            time: time,
            x: x,
            y: y,
            z: z,
            timestep: timestep);
    replace(_$result);
    return _$result;
  }
}

/// Angular Velocity immutable class
///
class _$AngularVelocity extends AngularVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$AngularVelocity([void updates(AngularVelocityBuilder b)]) =>
      (new AngularVelocityBuilder()..update(updates)).build();

  _$AngularVelocity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  AngularVelocity rebuild(void updates(AngularVelocityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AngularVelocityBuilder toBuilder() => new AngularVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AngularVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        time == this.time &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        time.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AngularVelocity')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('time', time)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Angular Velocity builder class
///
class AngularVelocityBuilder implements Builder<AngularVelocity, AngularVelocityBuilder> {
  _$AngularVelocity _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  AngularVelocityBuilder();

  AngularVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AngularVelocity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AngularVelocity;
  }

  @override
  void update(void updates(AngularVelocityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AngularVelocity build() {
    final _$result = _$v ??
        new _$AngularVelocity._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            time: time,
            x: x,
            y: y,
            z: z);
    replace(_$result);
    return _$result;
  }
}

/// Acceleration immutable class
///
class _$Acceleration extends Acceleration {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$Acceleration([void updates(AccelerationBuilder b)]) =>
      (new AccelerationBuilder()..update(updates)).build();

  _$Acceleration._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  Acceleration rebuild(void updates(AccelerationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AccelerationBuilder toBuilder() => new AccelerationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Acceleration &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        time == this.time &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        time.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Acceleration')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('time', time)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Acceleration builder class
///
class AccelerationBuilder implements Builder<Acceleration, AccelerationBuilder> {
  _$Acceleration _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  AccelerationBuilder();

  AccelerationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Acceleration other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Acceleration;
  }

  @override
  void update(void updates(AccelerationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Acceleration build() {
    final _$result = _$v ??
        new _$Acceleration._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            time: time,
            x: x,
            y: y,
            z: z);
    replace(_$result);
    return _$result;
  }
}

/// Magnetic Field immutable class
///
class _$MagneticField extends MagneticField {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$MagneticField([void updates(MagneticFieldBuilder b)]) =>
      (new MagneticFieldBuilder()..update(updates)).build();

  _$MagneticField._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  MagneticField rebuild(void updates(MagneticFieldBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MagneticFieldBuilder toBuilder() => new MagneticFieldBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MagneticField &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        time == this.time &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        time.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MagneticField')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('time', time)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Magnetic Field builder class
///
class MagneticFieldBuilder implements Builder<MagneticField, MagneticFieldBuilder> {
  _$MagneticField _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  MagneticFieldBuilder();

  MagneticFieldBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MagneticField other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$MagneticField;
  }

  @override
  void update(void updates(MagneticFieldBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$MagneticField build() {
    final _$result = _$v ??
        new _$MagneticField._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            time: time,
            x: x,
            y: y,
            z: z);
    replace(_$result);
    return _$result;
  }
}

/// Ground Velocity immutable class
///
class _$GroundVelocity extends GroundVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final GroundVelocityBitfieldValidity validity;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$GroundVelocity([void updates(GroundVelocityBuilder b)]) =>
      (new GroundVelocityBuilder()..update(updates)).build();

  _$GroundVelocity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.validity,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  GroundVelocity rebuild(void updates(GroundVelocityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GroundVelocityBuilder toBuilder() => new GroundVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GroundVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == this.validity &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        validity.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GroundVelocity')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('validity', validity)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Ground Velocity builder class
///
class GroundVelocityBuilder implements Builder<GroundVelocity, GroundVelocityBuilder> {
  _$GroundVelocity _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GroundVelocityBitfieldValidity _validity;
  GroundVelocityBitfieldValidity get validity => _$this._validity;
  set validity(GroundVelocityBitfieldValidity validity) => _$this._validity = validity;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  GroundVelocityBuilder();

  GroundVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GroundVelocity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GroundVelocity;
  }

  @override
  void update(void updates(GroundVelocityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GroundVelocity build() {
    final _$result = _$v ??
        new _$GroundVelocity._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            validity: validity,
            x: x,
            y: y,
            z: z);
    replace(_$result);
    return _$result;
  }
}

/// Water Velocity immutable class
///
class _$WaterVelocity extends WaterVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final WaterVelocityBitfieldValidity validity;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$WaterVelocity([void updates(WaterVelocityBuilder b)]) =>
      (new WaterVelocityBuilder()..update(updates)).build();

  _$WaterVelocity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.validity,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  WaterVelocity rebuild(void updates(WaterVelocityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  WaterVelocityBuilder toBuilder() => new WaterVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is WaterVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == this.validity &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        validity.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('WaterVelocity')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('validity', validity)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Water Velocity builder class
///
class WaterVelocityBuilder implements Builder<WaterVelocity, WaterVelocityBuilder> {
  _$WaterVelocity _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  WaterVelocityBitfieldValidity _validity;
  WaterVelocityBitfieldValidity get validity => _$this._validity;
  set validity(WaterVelocityBitfieldValidity validity) => _$this._validity = validity;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  WaterVelocityBuilder();

  WaterVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(WaterVelocity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$WaterVelocity;
  }

  @override
  void update(void updates(WaterVelocityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$WaterVelocity build() {
    final _$result = _$v ??
        new _$WaterVelocity._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            validity: validity,
            x: x,
            y: y,
            z: z);
    replace(_$result);
    return _$result;
  }
}

/// Velocity Delta immutable class
///
class _$VelocityDelta extends VelocityDelta {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$VelocityDelta([void updates(VelocityDeltaBuilder b)]) =>
      (new VelocityDeltaBuilder()..update(updates)).build();

  _$VelocityDelta._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  VelocityDelta rebuild(void updates(VelocityDeltaBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VelocityDeltaBuilder toBuilder() => new VelocityDeltaBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VelocityDelta &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        time == this.time &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        time.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VelocityDelta')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('time', time)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Velocity Delta builder class
///
class VelocityDeltaBuilder implements Builder<VelocityDelta, VelocityDeltaBuilder> {
  _$VelocityDelta _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  VelocityDeltaBuilder();

  VelocityDeltaBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VelocityDelta other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VelocityDelta;
  }

  @override
  void update(void updates(VelocityDeltaBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VelocityDelta build() {
    final _$result = _$v ??
        new _$VelocityDelta._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            time: time,
            x: x,
            y: y,
            z: z);
    replace(_$result);
    return _$result;
  }
}

/// Distance immutable class
///
class _$Distance extends Distance {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DistanceEnumValidity validity;
  @override
  final List<DeviceState> location;
  @override
  final List<BeamConfig> beam_config;
  @override
  final double value;

  factory _$Distance([void updates(DistanceBuilder b)]) =>
      (new DistanceBuilder()..update(updates)).build();

  _$Distance._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.validity,
      this.location,
      this.beam_config,
      this.value})
      : super._();

  @override
  Distance rebuild(void updates(DistanceBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DistanceBuilder toBuilder() => new DistanceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Distance &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == this.validity &&
        location == this.location &&
        beam_config == this.beam_config &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        validity.hashCode), 
        location.hashCode), 
        beam_config.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Distance')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('validity', validity)
          ..add('location', location)
          ..add('beam_config', beam_config)
          ..add('value', value))
        .toString();
  }
}

/// Distance builder class
///
class DistanceBuilder implements Builder<Distance, DistanceBuilder> {
  _$Distance _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DistanceEnumValidity _validity;
  DistanceEnumValidity get validity => _$this._validity;
  set validity(DistanceEnumValidity validity) => _$this._validity = validity;

  List<DeviceState> _location;
  List<DeviceState> get location => _$this._location;
  set location(List<DeviceState> location) => _$this._location = location;

  List<BeamConfig> _beam_config;
  List<BeamConfig> get beam_config => _$this._beam_config;
  set beam_config(List<BeamConfig> beam_config) => _$this._beam_config = beam_config;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DistanceBuilder();

  DistanceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _location = _$v.location;
      _beam_config = _$v.beam_config;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Distance other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Distance;
  }

  @override
  void update(void updates(DistanceBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Distance build() {
    final _$result = _$v ??
        new _$Distance._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            validity: validity,
            location: location,
            beam_config: beam_config,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Temperature immutable class
///
class _$Temperature extends Temperature {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Temperature([void updates(TemperatureBuilder b)]) =>
      (new TemperatureBuilder()..update(updates)).build();

  _$Temperature._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Temperature rebuild(void updates(TemperatureBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TemperatureBuilder toBuilder() => new TemperatureBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Temperature &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Temperature')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Temperature builder class
///
class TemperatureBuilder implements Builder<Temperature, TemperatureBuilder> {
  _$Temperature _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  TemperatureBuilder();

  TemperatureBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Temperature other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Temperature;
  }

  @override
  void update(void updates(TemperatureBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Temperature build() {
    final _$result = _$v ??
        new _$Temperature._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Pressure immutable class
///
class _$Pressure extends Pressure {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Pressure([void updates(PressureBuilder b)]) =>
      (new PressureBuilder()..update(updates)).build();

  _$Pressure._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Pressure rebuild(void updates(PressureBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PressureBuilder toBuilder() => new PressureBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Pressure &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Pressure')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Pressure builder class
///
class PressureBuilder implements Builder<Pressure, PressureBuilder> {
  _$Pressure _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  PressureBuilder();

  PressureBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Pressure other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Pressure;
  }

  @override
  void update(void updates(PressureBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Pressure build() {
    final _$result = _$v ??
        new _$Pressure._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Depth immutable class
///
class _$Depth extends Depth {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Depth([void updates(DepthBuilder b)]) =>
      (new DepthBuilder()..update(updates)).build();

  _$Depth._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Depth rebuild(void updates(DepthBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DepthBuilder toBuilder() => new DepthBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Depth &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Depth')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Depth builder class
///
class DepthBuilder implements Builder<Depth, DepthBuilder> {
  _$Depth _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DepthBuilder();

  DepthBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Depth other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Depth;
  }

  @override
  void update(void updates(DepthBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Depth build() {
    final _$result = _$v ??
        new _$Depth._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Depth Offset immutable class
///
class _$DepthOffset extends DepthOffset {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DepthOffset([void updates(DepthOffsetBuilder b)]) =>
      (new DepthOffsetBuilder()..update(updates)).build();

  _$DepthOffset._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DepthOffset rebuild(void updates(DepthOffsetBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DepthOffsetBuilder toBuilder() => new DepthOffsetBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DepthOffset &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DepthOffset')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Depth Offset builder class
///
class DepthOffsetBuilder implements Builder<DepthOffset, DepthOffsetBuilder> {
  _$DepthOffset _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DepthOffsetBuilder();

  DepthOffsetBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DepthOffset other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DepthOffset;
  }

  @override
  void update(void updates(DepthOffsetBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DepthOffset build() {
    final _$result = _$v ??
        new _$DepthOffset._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Sound Speed immutable class
///
class _$SoundSpeed extends SoundSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$SoundSpeed([void updates(SoundSpeedBuilder b)]) =>
      (new SoundSpeedBuilder()..update(updates)).build();

  _$SoundSpeed._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  SoundSpeed rebuild(void updates(SoundSpeedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SoundSpeedBuilder toBuilder() => new SoundSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoundSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoundSpeed')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Sound Speed builder class
///
class SoundSpeedBuilder implements Builder<SoundSpeed, SoundSpeedBuilder> {
  _$SoundSpeed _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SoundSpeedBuilder();

  SoundSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoundSpeed other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SoundSpeed;
  }

  @override
  void update(void updates(SoundSpeedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SoundSpeed build() {
    final _$result = _$v ??
        new _$SoundSpeed._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Water Density immutable class
///
class _$WaterDensity extends WaterDensity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$WaterDensity([void updates(WaterDensityBuilder b)]) =>
      (new WaterDensityBuilder()..update(updates)).build();

  _$WaterDensity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  WaterDensity rebuild(void updates(WaterDensityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  WaterDensityBuilder toBuilder() => new WaterDensityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is WaterDensity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('WaterDensity')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Water Density builder class
///
class WaterDensityBuilder implements Builder<WaterDensity, WaterDensityBuilder> {
  _$WaterDensity _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  WaterDensityBuilder();

  WaterDensityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(WaterDensity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$WaterDensity;
  }

  @override
  void update(void updates(WaterDensityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$WaterDensity build() {
    final _$result = _$v ??
        new _$WaterDensity._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Conductivity immutable class
///
class _$Conductivity extends Conductivity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Conductivity([void updates(ConductivityBuilder b)]) =>
      (new ConductivityBuilder()..update(updates)).build();

  _$Conductivity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Conductivity rebuild(void updates(ConductivityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ConductivityBuilder toBuilder() => new ConductivityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Conductivity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Conductivity')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Conductivity builder class
///
class ConductivityBuilder implements Builder<Conductivity, ConductivityBuilder> {
  _$Conductivity _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ConductivityBuilder();

  ConductivityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Conductivity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Conductivity;
  }

  @override
  void update(void updates(ConductivityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Conductivity build() {
    final _$result = _$v ??
        new _$Conductivity._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Salinity immutable class
///
class _$Salinity extends Salinity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Salinity([void updates(SalinityBuilder b)]) =>
      (new SalinityBuilder()..update(updates)).build();

  _$Salinity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Salinity rebuild(void updates(SalinityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SalinityBuilder toBuilder() => new SalinityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Salinity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Salinity')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Salinity builder class
///
class SalinityBuilder implements Builder<Salinity, SalinityBuilder> {
  _$Salinity _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SalinityBuilder();

  SalinityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Salinity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Salinity;
  }

  @override
  void update(void updates(SalinityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Salinity build() {
    final _$result = _$v ??
        new _$Salinity._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Wind Speed immutable class
///
class _$WindSpeed extends WindSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double direction;
  @override
  final double speed;
  @override
  final double turbulence;

  factory _$WindSpeed([void updates(WindSpeedBuilder b)]) =>
      (new WindSpeedBuilder()..update(updates)).build();

  _$WindSpeed._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.direction,
      this.speed,
      this.turbulence})
      : super._();

  @override
  WindSpeed rebuild(void updates(WindSpeedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  WindSpeedBuilder toBuilder() => new WindSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is WindSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        direction == this.direction &&
        speed == this.speed &&
        turbulence == this.turbulence;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        direction.hashCode), 
        speed.hashCode), 
        turbulence.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('WindSpeed')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('direction', direction)
          ..add('speed', speed)
          ..add('turbulence', turbulence))
        .toString();
  }
}

/// Wind Speed builder class
///
class WindSpeedBuilder implements Builder<WindSpeed, WindSpeedBuilder> {
  _$WindSpeed _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _direction;
  double get direction => _$this._direction;
  set direction(double direction) => _$this._direction = direction;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  double _turbulence;
  double get turbulence => _$this._turbulence;
  set turbulence(double turbulence) => _$this._turbulence = turbulence;

  WindSpeedBuilder();

  WindSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _direction = _$v.direction;
      _speed = _$v.speed;
      _turbulence = _$v.turbulence;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(WindSpeed other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$WindSpeed;
  }

  @override
  void update(void updates(WindSpeedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$WindSpeed build() {
    final _$result = _$v ??
        new _$WindSpeed._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            direction: direction,
            speed: speed,
            turbulence: turbulence);
    replace(_$result);
    return _$result;
  }
}

/// Relative Humidity immutable class
///
class _$RelativeHumidity extends RelativeHumidity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$RelativeHumidity([void updates(RelativeHumidityBuilder b)]) =>
      (new RelativeHumidityBuilder()..update(updates)).build();

  _$RelativeHumidity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  RelativeHumidity rebuild(void updates(RelativeHumidityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RelativeHumidityBuilder toBuilder() => new RelativeHumidityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RelativeHumidity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RelativeHumidity')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Relative Humidity builder class
///
class RelativeHumidityBuilder implements Builder<RelativeHumidity, RelativeHumidityBuilder> {
  _$RelativeHumidity _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RelativeHumidityBuilder();

  RelativeHumidityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RelativeHumidity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RelativeHumidity;
  }

  @override
  void update(void updates(RelativeHumidityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RelativeHumidity build() {
    final _$result = _$v ??
        new _$RelativeHumidity._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Device Data (Text) immutable class
///
class _$DevDataText extends DevDataText {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String value;

  factory _$DevDataText([void updates(DevDataTextBuilder b)]) =>
      (new DevDataTextBuilder()..update(updates)).build();

  _$DevDataText._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DevDataText rebuild(void updates(DevDataTextBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DevDataTextBuilder toBuilder() => new DevDataTextBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DevDataText &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DevDataText')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Device Data (Text) builder class
///
class DevDataTextBuilder implements Builder<DevDataText, DevDataTextBuilder> {
  _$DevDataText _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  DevDataTextBuilder();

  DevDataTextBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DevDataText other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DevDataText;
  }

  @override
  void update(void updates(DevDataTextBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DevDataText build() {
    final _$result = _$v ??
        new _$DevDataText._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Device Data (Binary) immutable class
///
class _$DevDataBinary extends DevDataBinary {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final List<int> value;

  factory _$DevDataBinary([void updates(DevDataBinaryBuilder b)]) =>
      (new DevDataBinaryBuilder()..update(updates)).build();

  _$DevDataBinary._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DevDataBinary rebuild(void updates(DevDataBinaryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DevDataBinaryBuilder toBuilder() => new DevDataBinaryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DevDataBinary &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DevDataBinary')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Device Data (Binary) builder class
///
class DevDataBinaryBuilder implements Builder<DevDataBinary, DevDataBinaryBuilder> {
  _$DevDataBinary _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  List<int> _value;
  List<int> get value => _$this._value;
  set value(List<int> value) => _$this._value = value;

  DevDataBinaryBuilder();

  DevDataBinaryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DevDataBinary other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DevDataBinary;
  }

  @override
  void update(void updates(DevDataBinaryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DevDataBinary build() {
    final _$result = _$v ??
        new _$DevDataBinary._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Force immutable class
///
class _$Force extends Force {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Force([void updates(ForceBuilder b)]) =>
      (new ForceBuilder()..update(updates)).build();

  _$Force._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Force rebuild(void updates(ForceBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ForceBuilder toBuilder() => new ForceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Force &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Force')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Force builder class
///
class ForceBuilder implements Builder<Force, ForceBuilder> {
  _$Force _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ForceBuilder();

  ForceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Force other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Force;
  }

  @override
  void update(void updates(ForceBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Force build() {
    final _$result = _$v ??
        new _$Force._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Sonar Data immutable class
///
class _$SonarData extends SonarData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final SonarDataEnumType type;
  @override
  final int frequency;
  @override
  final int min_range;
  @override
  final int max_range;
  @override
  final int bits_per_point;
  @override
  final double scale_factor;
  @override
  final List<BeamConfig> beam_config;
  @override
  final List<int> data;

  factory _$SonarData([void updates(SonarDataBuilder b)]) =>
      (new SonarDataBuilder()..update(updates)).build();

  _$SonarData._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.frequency,
      this.min_range,
      this.max_range,
      this.bits_per_point,
      this.scale_factor,
      this.beam_config,
      this.data})
      : super._();

  @override
  SonarData rebuild(void updates(SonarDataBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SonarDataBuilder toBuilder() => new SonarDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SonarData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        frequency == this.frequency &&
        min_range == this.min_range &&
        max_range == this.max_range &&
        bits_per_point == this.bits_per_point &&
        scale_factor == this.scale_factor &&
        beam_config == this.beam_config &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode), 
        frequency.hashCode), 
        min_range.hashCode), 
        max_range.hashCode), 
        bits_per_point.hashCode), 
        scale_factor.hashCode), 
        beam_config.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SonarData')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type)
          ..add('frequency', frequency)
          ..add('min_range', min_range)
          ..add('max_range', max_range)
          ..add('bits_per_point', bits_per_point)
          ..add('scale_factor', scale_factor)
          ..add('beam_config', beam_config)
          ..add('data', data))
        .toString();
  }
}

/// Sonar Data builder class
///
class SonarDataBuilder implements Builder<SonarData, SonarDataBuilder> {
  _$SonarData _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  SonarDataEnumType _type;
  SonarDataEnumType get type => _$this._type;
  set type(SonarDataEnumType type) => _$this._type = type;

  int _frequency;
  int get frequency => _$this._frequency;
  set frequency(int frequency) => _$this._frequency = frequency;

  int _min_range;
  int get min_range => _$this._min_range;
  set min_range(int min_range) => _$this._min_range = min_range;

  int _max_range;
  int get max_range => _$this._max_range;
  set max_range(int max_range) => _$this._max_range = max_range;

  int _bits_per_point;
  int get bits_per_point => _$this._bits_per_point;
  set bits_per_point(int bits_per_point) => _$this._bits_per_point = bits_per_point;

  double _scale_factor;
  double get scale_factor => _$this._scale_factor;
  set scale_factor(double scale_factor) => _$this._scale_factor = scale_factor;

  List<BeamConfig> _beam_config;
  List<BeamConfig> get beam_config => _$this._beam_config;
  set beam_config(List<BeamConfig> beam_config) => _$this._beam_config = beam_config;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  SonarDataBuilder();

  SonarDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _frequency = _$v.frequency;
      _min_range = _$v.min_range;
      _max_range = _$v.max_range;
      _bits_per_point = _$v.bits_per_point;
      _scale_factor = _$v.scale_factor;
      _beam_config = _$v.beam_config;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SonarData other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SonarData;
  }

  @override
  void update(void updates(SonarDataBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SonarData build() {
    final _$result = _$v ??
        new _$SonarData._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type,
            frequency: frequency,
            min_range: min_range,
            max_range: max_range,
            bits_per_point: bits_per_point,
            scale_factor: scale_factor,
            beam_config: beam_config,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// Pulse immutable class
///
class _$Pulse extends Pulse {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$Pulse([void updates(PulseBuilder b)]) =>
      (new PulseBuilder()..update(updates)).build();

  _$Pulse._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  Pulse rebuild(void updates(PulseBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PulseBuilder toBuilder() => new PulseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Pulse &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Pulse')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt))
        .toString();
  }
}

/// Pulse builder class
///
class PulseBuilder implements Builder<Pulse, PulseBuilder> {
  _$Pulse _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PulseBuilder();

  PulseBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Pulse other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Pulse;
  }

  @override
  void update(void updates(PulseBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Pulse build() {
    final _$result = _$v ??
        new _$Pulse._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt);
    replace(_$result);
    return _$result;
  }
}

/// Pulse Detection Control immutable class
///
class _$PulseDetectionControl extends PulseDetectionControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PulseDetectionControlEnumOp op;

  factory _$PulseDetectionControl([void updates(PulseDetectionControlBuilder b)]) =>
      (new PulseDetectionControlBuilder()..update(updates)).build();

  _$PulseDetectionControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op})
      : super._();

  @override
  PulseDetectionControl rebuild(void updates(PulseDetectionControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PulseDetectionControlBuilder toBuilder() => new PulseDetectionControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PulseDetectionControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PulseDetectionControl')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op))
        .toString();
  }
}

/// Pulse Detection Control builder class
///
class PulseDetectionControlBuilder implements Builder<PulseDetectionControl, PulseDetectionControlBuilder> {
  _$PulseDetectionControl _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PulseDetectionControlEnumOp _op;
  PulseDetectionControlEnumOp get op => _$this._op;
  set op(PulseDetectionControlEnumOp op) => _$this._op = op;

  PulseDetectionControlBuilder();

  PulseDetectionControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PulseDetectionControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PulseDetectionControl;
  }

  @override
  void update(void updates(PulseDetectionControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PulseDetectionControl build() {
    final _$result = _$v ??
        new _$PulseDetectionControl._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op);
    replace(_$result);
    return _$result;
  }
}

/// Fuel Level immutable class
///
class _$FuelLevel extends FuelLevel {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final double confidence;
  @override
  final String opmodes;

  factory _$FuelLevel([void updates(FuelLevelBuilder b)]) =>
      (new FuelLevelBuilder()..update(updates)).build();

  _$FuelLevel._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value,
      this.confidence,
      this.opmodes})
      : super._();

  @override
  FuelLevel rebuild(void updates(FuelLevelBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FuelLevelBuilder toBuilder() => new FuelLevelBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FuelLevel &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value &&
        confidence == this.confidence &&
        opmodes == this.opmodes;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode), 
        confidence.hashCode), 
        opmodes.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FuelLevel')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value)
          ..add('confidence', confidence)
          ..add('opmodes', opmodes))
        .toString();
  }
}

/// Fuel Level builder class
///
class FuelLevelBuilder implements Builder<FuelLevel, FuelLevelBuilder> {
  _$FuelLevel _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  double _confidence;
  double get confidence => _$this._confidence;
  set confidence(double confidence) => _$this._confidence = confidence;

  String _opmodes;
  String get opmodes => _$this._opmodes;
  set opmodes(String opmodes) => _$this._opmodes = opmodes;

  FuelLevelBuilder();

  FuelLevelBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _confidence = _$v.confidence;
      _opmodes = _$v.opmodes;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FuelLevel other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FuelLevel;
  }

  @override
  void update(void updates(FuelLevelBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FuelLevel build() {
    final _$result = _$v ??
        new _$FuelLevel._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value,
            confidence: confidence,
            opmodes: opmodes);
    replace(_$result);
    return _$result;
  }
}

/// GPS Navigation Data immutable class
///
class _$GpsNavData extends GpsNavData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int itow;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height_ell;
  @override
  final double height_sea;
  @override
  final double hacc;
  @override
  final double vacc;
  @override
  final double vel_n;
  @override
  final double vel_e;
  @override
  final double vel_d;
  @override
  final double speed;
  @override
  final double gspeed;
  @override
  final double heading;
  @override
  final double sacc;
  @override
  final double cacc;

  factory _$GpsNavData([void updates(GpsNavDataBuilder b)]) =>
      (new GpsNavDataBuilder()..update(updates)).build();

  _$GpsNavData._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.itow,
      this.lat,
      this.lon,
      this.height_ell,
      this.height_sea,
      this.hacc,
      this.vacc,
      this.vel_n,
      this.vel_e,
      this.vel_d,
      this.speed,
      this.gspeed,
      this.heading,
      this.sacc,
      this.cacc})
      : super._();

  @override
  GpsNavData rebuild(void updates(GpsNavDataBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GpsNavDataBuilder toBuilder() => new GpsNavDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GpsNavData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        itow == this.itow &&
        lat == this.lat &&
        lon == this.lon &&
        height_ell == this.height_ell &&
        height_sea == this.height_sea &&
        hacc == this.hacc &&
        vacc == this.vacc &&
        vel_n == this.vel_n &&
        vel_e == this.vel_e &&
        vel_d == this.vel_d &&
        speed == this.speed &&
        gspeed == this.gspeed &&
        heading == this.heading &&
        sacc == this.sacc &&
        cacc == this.cacc;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        itow.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        height_ell.hashCode), 
        height_sea.hashCode), 
        hacc.hashCode), 
        vacc.hashCode), 
        vel_n.hashCode), 
        vel_e.hashCode), 
        vel_d.hashCode), 
        speed.hashCode), 
        gspeed.hashCode), 
        heading.hashCode), 
        sacc.hashCode), 
        cacc.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GpsNavData')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('itow', itow)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('height_ell', height_ell)
          ..add('height_sea', height_sea)
          ..add('hacc', hacc)
          ..add('vacc', vacc)
          ..add('vel_n', vel_n)
          ..add('vel_e', vel_e)
          ..add('vel_d', vel_d)
          ..add('speed', speed)
          ..add('gspeed', gspeed)
          ..add('heading', heading)
          ..add('sacc', sacc)
          ..add('cacc', cacc))
        .toString();
  }
}

/// GPS Navigation Data builder class
///
class GpsNavDataBuilder implements Builder<GpsNavData, GpsNavDataBuilder> {
  _$GpsNavData _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _itow;
  int get itow => _$this._itow;
  set itow(int itow) => _$this._itow = itow;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height_ell;
  double get height_ell => _$this._height_ell;
  set height_ell(double height_ell) => _$this._height_ell = height_ell;

  double _height_sea;
  double get height_sea => _$this._height_sea;
  set height_sea(double height_sea) => _$this._height_sea = height_sea;

  double _hacc;
  double get hacc => _$this._hacc;
  set hacc(double hacc) => _$this._hacc = hacc;

  double _vacc;
  double get vacc => _$this._vacc;
  set vacc(double vacc) => _$this._vacc = vacc;

  double _vel_n;
  double get vel_n => _$this._vel_n;
  set vel_n(double vel_n) => _$this._vel_n = vel_n;

  double _vel_e;
  double get vel_e => _$this._vel_e;
  set vel_e(double vel_e) => _$this._vel_e = vel_e;

  double _vel_d;
  double get vel_d => _$this._vel_d;
  set vel_d(double vel_d) => _$this._vel_d = vel_d;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  double _gspeed;
  double get gspeed => _$this._gspeed;
  set gspeed(double gspeed) => _$this._gspeed = gspeed;

  double _heading;
  double get heading => _$this._heading;
  set heading(double heading) => _$this._heading = heading;

  double _sacc;
  double get sacc => _$this._sacc;
  set sacc(double sacc) => _$this._sacc = sacc;

  double _cacc;
  double get cacc => _$this._cacc;
  set cacc(double cacc) => _$this._cacc = cacc;

  GpsNavDataBuilder();

  GpsNavDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _itow = _$v.itow;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height_ell = _$v.height_ell;
      _height_sea = _$v.height_sea;
      _hacc = _$v.hacc;
      _vacc = _$v.vacc;
      _vel_n = _$v.vel_n;
      _vel_e = _$v.vel_e;
      _vel_d = _$v.vel_d;
      _speed = _$v.speed;
      _gspeed = _$v.gspeed;
      _heading = _$v.heading;
      _sacc = _$v.sacc;
      _cacc = _$v.cacc;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GpsNavData other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GpsNavData;
  }

  @override
  void update(void updates(GpsNavDataBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GpsNavData build() {
    final _$result = _$v ??
        new _$GpsNavData._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            itow: itow,
            lat: lat,
            lon: lon,
            height_ell: height_ell,
            height_sea: height_sea,
            hacc: hacc,
            vacc: vacc,
            vel_n: vel_n,
            vel_e: vel_e,
            vel_d: vel_d,
            speed: speed,
            gspeed: gspeed,
            heading: heading,
            sacc: sacc,
            cacc: cacc);
    replace(_$result);
    return _$result;
  }
}

/// Servo Position immutable class
///
class _$ServoPosition extends ServoPosition {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double value;

  factory _$ServoPosition([void updates(ServoPositionBuilder b)]) =>
      (new ServoPositionBuilder()..update(updates)).build();

  _$ServoPosition._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.value})
      : super._();

  @override
  ServoPosition rebuild(void updates(ServoPositionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ServoPositionBuilder toBuilder() => new ServoPositionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ServoPosition &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        id.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ServoPosition')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('id', id)
          ..add('value', value))
        .toString();
  }
}

/// Servo Position builder class
///
class ServoPositionBuilder implements Builder<ServoPosition, ServoPositionBuilder> {
  _$ServoPosition _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ServoPositionBuilder();

  ServoPositionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ServoPosition other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ServoPosition;
  }

  @override
  void update(void updates(ServoPositionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ServoPosition build() {
    final _$result = _$v ??
        new _$ServoPosition._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            id: id,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Device State immutable class
///
class _$DeviceState extends DeviceState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;

  factory _$DeviceState([void updates(DeviceStateBuilder b)]) =>
      (new DeviceStateBuilder()..update(updates)).build();

  _$DeviceState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi})
      : super._();

  @override
  DeviceState rebuild(void updates(DeviceStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DeviceStateBuilder toBuilder() => new DeviceStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DeviceState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode), 
        phi.hashCode), 
        theta.hashCode), 
        psi.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DeviceState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi))
        .toString();
  }
}

/// Device State builder class
///
class DeviceStateBuilder implements Builder<DeviceState, DeviceStateBuilder> {
  _$DeviceState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  DeviceStateBuilder();

  DeviceStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DeviceState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DeviceState;
  }

  @override
  void update(void updates(DeviceStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DeviceState build() {
    final _$result = _$v ??
        new _$DeviceState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            x: x,
            y: y,
            z: z,
            phi: phi,
            theta: theta,
            psi: psi);
    replace(_$result);
    return _$result;
  }
}

/// Beam Configuration immutable class
///
class _$BeamConfig extends BeamConfig {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double beam_width;
  @override
  final double beam_height;

  factory _$BeamConfig([void updates(BeamConfigBuilder b)]) =>
      (new BeamConfigBuilder()..update(updates)).build();

  _$BeamConfig._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.beam_width,
      this.beam_height})
      : super._();

  @override
  BeamConfig rebuild(void updates(BeamConfigBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  BeamConfigBuilder toBuilder() => new BeamConfigBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is BeamConfig &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        beam_width == this.beam_width &&
        beam_height == this.beam_height;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        beam_width.hashCode), 
        beam_height.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('BeamConfig')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('beam_width', beam_width)
          ..add('beam_height', beam_height))
        .toString();
  }
}

/// Beam Configuration builder class
///
class BeamConfigBuilder implements Builder<BeamConfig, BeamConfigBuilder> {
  _$BeamConfig _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _beam_width;
  double get beam_width => _$this._beam_width;
  set beam_width(double beam_width) => _$this._beam_width = beam_width;

  double _beam_height;
  double get beam_height => _$this._beam_height;
  set beam_height(double beam_height) => _$this._beam_height = beam_height;

  BeamConfigBuilder();

  BeamConfigBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _beam_width = _$v.beam_width;
      _beam_height = _$v.beam_height;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(BeamConfig other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$BeamConfig;
  }

  @override
  void update(void updates(BeamConfigBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$BeamConfig build() {
    final _$result = _$v ??
        new _$BeamConfig._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            beam_width: beam_width,
            beam_height: beam_height);
    replace(_$result);
    return _$result;
  }
}

/// Data Sanity immutable class
///
class _$DataSanity extends DataSanity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DataSanityEnumSane sane;

  factory _$DataSanity([void updates(DataSanityBuilder b)]) =>
      (new DataSanityBuilder()..update(updates)).build();

  _$DataSanity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sane})
      : super._();

  @override
  DataSanity rebuild(void updates(DataSanityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DataSanityBuilder toBuilder() => new DataSanityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DataSanity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sane == this.sane;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        sane.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DataSanity')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('sane', sane))
        .toString();
  }
}

/// Data Sanity builder class
///
class DataSanityBuilder implements Builder<DataSanity, DataSanityBuilder> {
  _$DataSanity _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DataSanityEnumSane _sane;
  DataSanityEnumSane get sane => _$this._sane;
  set sane(DataSanityEnumSane sane) => _$this._sane = sane;

  DataSanityBuilder();

  DataSanityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sane = _$v.sane;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DataSanity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DataSanity;
  }

  @override
  void update(void updates(DataSanityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DataSanity build() {
    final _$result = _$v ??
        new _$DataSanity._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            sane: sane);
    replace(_$result);
    return _$result;
  }
}

/// Rhodamine Dye immutable class
///
class _$RhodamineDye extends RhodamineDye {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$RhodamineDye([void updates(RhodamineDyeBuilder b)]) =>
      (new RhodamineDyeBuilder()..update(updates)).build();

  _$RhodamineDye._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  RhodamineDye rebuild(void updates(RhodamineDyeBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RhodamineDyeBuilder toBuilder() => new RhodamineDyeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RhodamineDye &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RhodamineDye')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Rhodamine Dye builder class
///
class RhodamineDyeBuilder implements Builder<RhodamineDye, RhodamineDyeBuilder> {
  _$RhodamineDye _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RhodamineDyeBuilder();

  RhodamineDyeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RhodamineDye other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RhodamineDye;
  }

  @override
  void update(void updates(RhodamineDyeBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RhodamineDye build() {
    final _$result = _$v ??
        new _$RhodamineDye._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Crude Oil immutable class
///
class _$CrudeOil extends CrudeOil {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$CrudeOil([void updates(CrudeOilBuilder b)]) =>
      (new CrudeOilBuilder()..update(updates)).build();

  _$CrudeOil._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  CrudeOil rebuild(void updates(CrudeOilBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CrudeOilBuilder toBuilder() => new CrudeOilBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CrudeOil &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CrudeOil')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Crude Oil builder class
///
class CrudeOilBuilder implements Builder<CrudeOil, CrudeOilBuilder> {
  _$CrudeOil _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  CrudeOilBuilder();

  CrudeOilBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CrudeOil other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CrudeOil;
  }

  @override
  void update(void updates(CrudeOilBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CrudeOil build() {
    final _$result = _$v ??
        new _$CrudeOil._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Fine Oil immutable class
///
class _$FineOil extends FineOil {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$FineOil([void updates(FineOilBuilder b)]) =>
      (new FineOilBuilder()..update(updates)).build();

  _$FineOil._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  FineOil rebuild(void updates(FineOilBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FineOilBuilder toBuilder() => new FineOilBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FineOil &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FineOil')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Fine Oil builder class
///
class FineOilBuilder implements Builder<FineOil, FineOilBuilder> {
  _$FineOil _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  FineOilBuilder();

  FineOilBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FineOil other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FineOil;
  }

  @override
  void update(void updates(FineOilBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FineOil build() {
    final _$result = _$v ??
        new _$FineOil._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Turbidity immutable class
///
class _$Turbidity extends Turbidity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Turbidity([void updates(TurbidityBuilder b)]) =>
      (new TurbidityBuilder()..update(updates)).build();

  _$Turbidity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Turbidity rebuild(void updates(TurbidityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TurbidityBuilder toBuilder() => new TurbidityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Turbidity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Turbidity')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Turbidity builder class
///
class TurbidityBuilder implements Builder<Turbidity, TurbidityBuilder> {
  _$Turbidity _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  TurbidityBuilder();

  TurbidityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Turbidity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Turbidity;
  }

  @override
  void update(void updates(TurbidityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Turbidity build() {
    final _$result = _$v ??
        new _$Turbidity._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Chlorophyll immutable class
///
class _$Chlorophyll extends Chlorophyll {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Chlorophyll([void updates(ChlorophyllBuilder b)]) =>
      (new ChlorophyllBuilder()..update(updates)).build();

  _$Chlorophyll._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Chlorophyll rebuild(void updates(ChlorophyllBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ChlorophyllBuilder toBuilder() => new ChlorophyllBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Chlorophyll &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Chlorophyll')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Chlorophyll builder class
///
class ChlorophyllBuilder implements Builder<Chlorophyll, ChlorophyllBuilder> {
  _$Chlorophyll _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ChlorophyllBuilder();

  ChlorophyllBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Chlorophyll other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Chlorophyll;
  }

  @override
  void update(void updates(ChlorophyllBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Chlorophyll build() {
    final _$result = _$v ??
        new _$Chlorophyll._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Fluorescein immutable class
///
class _$Fluorescein extends Fluorescein {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Fluorescein([void updates(FluoresceinBuilder b)]) =>
      (new FluoresceinBuilder()..update(updates)).build();

  _$Fluorescein._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Fluorescein rebuild(void updates(FluoresceinBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FluoresceinBuilder toBuilder() => new FluoresceinBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Fluorescein &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Fluorescein')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Fluorescein builder class
///
class FluoresceinBuilder implements Builder<Fluorescein, FluoresceinBuilder> {
  _$Fluorescein _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  FluoresceinBuilder();

  FluoresceinBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Fluorescein other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Fluorescein;
  }

  @override
  void update(void updates(FluoresceinBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Fluorescein build() {
    final _$result = _$v ??
        new _$Fluorescein._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Phycocyanin immutable class
///
class _$Phycocyanin extends Phycocyanin {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Phycocyanin([void updates(PhycocyaninBuilder b)]) =>
      (new PhycocyaninBuilder()..update(updates)).build();

  _$Phycocyanin._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Phycocyanin rebuild(void updates(PhycocyaninBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PhycocyaninBuilder toBuilder() => new PhycocyaninBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Phycocyanin &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Phycocyanin')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Phycocyanin builder class
///
class PhycocyaninBuilder implements Builder<Phycocyanin, PhycocyaninBuilder> {
  _$Phycocyanin _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  PhycocyaninBuilder();

  PhycocyaninBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Phycocyanin other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Phycocyanin;
  }

  @override
  void update(void updates(PhycocyaninBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Phycocyanin build() {
    final _$result = _$v ??
        new _$Phycocyanin._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Phycoerythrin immutable class
///
class _$Phycoerythrin extends Phycoerythrin {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Phycoerythrin([void updates(PhycoerythrinBuilder b)]) =>
      (new PhycoerythrinBuilder()..update(updates)).build();

  _$Phycoerythrin._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Phycoerythrin rebuild(void updates(PhycoerythrinBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PhycoerythrinBuilder toBuilder() => new PhycoerythrinBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Phycoerythrin &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Phycoerythrin')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Phycoerythrin builder class
///
class PhycoerythrinBuilder implements Builder<Phycoerythrin, PhycoerythrinBuilder> {
  _$Phycoerythrin _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  PhycoerythrinBuilder();

  PhycoerythrinBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Phycoerythrin other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Phycoerythrin;
  }

  @override
  void update(void updates(PhycoerythrinBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Phycoerythrin build() {
    final _$result = _$v ??
        new _$Phycoerythrin._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// GPS Fix RTK immutable class
///
class _$GpsFixRtk extends GpsFixRtk {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final GpsFixRtkBitfieldValidity validity;
  @override
  final GpsFixRtkEnumType type;
  @override
  final int tow;
  @override
  final double base_lat;
  @override
  final double base_lon;
  @override
  final double base_height;
  @override
  final double n;
  @override
  final double e;
  @override
  final double d;
  @override
  final double v_n;
  @override
  final double v_e;
  @override
  final double v_d;
  @override
  final int satellites;
  @override
  final int iar_hyp;
  @override
  final double iar_ratio;

  factory _$GpsFixRtk([void updates(GpsFixRtkBuilder b)]) =>
      (new GpsFixRtkBuilder()..update(updates)).build();

  _$GpsFixRtk._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.validity,
      this.type,
      this.tow,
      this.base_lat,
      this.base_lon,
      this.base_height,
      this.n,
      this.e,
      this.d,
      this.v_n,
      this.v_e,
      this.v_d,
      this.satellites,
      this.iar_hyp,
      this.iar_ratio})
      : super._();

  @override
  GpsFixRtk rebuild(void updates(GpsFixRtkBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GpsFixRtkBuilder toBuilder() => new GpsFixRtkBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GpsFixRtk &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == this.validity &&
        type == this.type &&
        tow == this.tow &&
        base_lat == this.base_lat &&
        base_lon == this.base_lon &&
        base_height == this.base_height &&
        n == this.n &&
        e == this.e &&
        d == this.d &&
        v_n == this.v_n &&
        v_e == this.v_e &&
        v_d == this.v_d &&
        satellites == this.satellites &&
        iar_hyp == this.iar_hyp &&
        iar_ratio == this.iar_ratio;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        validity.hashCode), 
        type.hashCode), 
        tow.hashCode), 
        base_lat.hashCode), 
        base_lon.hashCode), 
        base_height.hashCode), 
        n.hashCode), 
        e.hashCode), 
        d.hashCode), 
        v_n.hashCode), 
        v_e.hashCode), 
        v_d.hashCode), 
        satellites.hashCode), 
        iar_hyp.hashCode), 
        iar_ratio.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GpsFixRtk')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('validity', validity)
          ..add('type', type)
          ..add('tow', tow)
          ..add('base_lat', base_lat)
          ..add('base_lon', base_lon)
          ..add('base_height', base_height)
          ..add('n', n)
          ..add('e', e)
          ..add('d', d)
          ..add('v_n', v_n)
          ..add('v_e', v_e)
          ..add('v_d', v_d)
          ..add('satellites', satellites)
          ..add('iar_hyp', iar_hyp)
          ..add('iar_ratio', iar_ratio))
        .toString();
  }
}

/// GPS Fix RTK builder class
///
class GpsFixRtkBuilder implements Builder<GpsFixRtk, GpsFixRtkBuilder> {
  _$GpsFixRtk _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GpsFixRtkBitfieldValidity _validity;
  GpsFixRtkBitfieldValidity get validity => _$this._validity;
  set validity(GpsFixRtkBitfieldValidity validity) => _$this._validity = validity;

  GpsFixRtkEnumType _type;
  GpsFixRtkEnumType get type => _$this._type;
  set type(GpsFixRtkEnumType type) => _$this._type = type;

  int _tow;
  int get tow => _$this._tow;
  set tow(int tow) => _$this._tow = tow;

  double _base_lat;
  double get base_lat => _$this._base_lat;
  set base_lat(double base_lat) => _$this._base_lat = base_lat;

  double _base_lon;
  double get base_lon => _$this._base_lon;
  set base_lon(double base_lon) => _$this._base_lon = base_lon;

  double _base_height;
  double get base_height => _$this._base_height;
  set base_height(double base_height) => _$this._base_height = base_height;

  double _n;
  double get n => _$this._n;
  set n(double n) => _$this._n = n;

  double _e;
  double get e => _$this._e;
  set e(double e) => _$this._e = e;

  double _d;
  double get d => _$this._d;
  set d(double d) => _$this._d = d;

  double _v_n;
  double get v_n => _$this._v_n;
  set v_n(double v_n) => _$this._v_n = v_n;

  double _v_e;
  double get v_e => _$this._v_e;
  set v_e(double v_e) => _$this._v_e = v_e;

  double _v_d;
  double get v_d => _$this._v_d;
  set v_d(double v_d) => _$this._v_d = v_d;

  int _satellites;
  int get satellites => _$this._satellites;
  set satellites(int satellites) => _$this._satellites = satellites;

  int _iar_hyp;
  int get iar_hyp => _$this._iar_hyp;
  set iar_hyp(int iar_hyp) => _$this._iar_hyp = iar_hyp;

  double _iar_ratio;
  double get iar_ratio => _$this._iar_ratio;
  set iar_ratio(double iar_ratio) => _$this._iar_ratio = iar_ratio;

  GpsFixRtkBuilder();

  GpsFixRtkBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _type = _$v.type;
      _tow = _$v.tow;
      _base_lat = _$v.base_lat;
      _base_lon = _$v.base_lon;
      _base_height = _$v.base_height;
      _n = _$v.n;
      _e = _$v.e;
      _d = _$v.d;
      _v_n = _$v.v_n;
      _v_e = _$v.v_e;
      _v_d = _$v.v_d;
      _satellites = _$v.satellites;
      _iar_hyp = _$v.iar_hyp;
      _iar_ratio = _$v.iar_ratio;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GpsFixRtk other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GpsFixRtk;
  }

  @override
  void update(void updates(GpsFixRtkBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GpsFixRtk build() {
    final _$result = _$v ??
        new _$GpsFixRtk._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            validity: validity,
            type: type,
            tow: tow,
            base_lat: base_lat,
            base_lon: base_lon,
            base_height: base_height,
            n: n,
            e: e,
            d: d,
            v_n: v_n,
            v_e: v_e,
            v_d: v_d,
            satellites: satellites,
            iar_hyp: iar_hyp,
            iar_ratio: iar_ratio);
    replace(_$result);
    return _$result;
  }
}

/// External Navigation Data immutable class
///
class _$ExternalNavData extends ExternalNavData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EstimatedState state;
  @override
  final ExternalNavDataEnumType type;

  factory _$ExternalNavData([void updates(ExternalNavDataBuilder b)]) =>
      (new ExternalNavDataBuilder()..update(updates)).build();

  _$ExternalNavData._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state,
      this.type})
      : super._();

  @override
  ExternalNavData rebuild(void updates(ExternalNavDataBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ExternalNavDataBuilder toBuilder() => new ExternalNavDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ExternalNavData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state &&
        type == this.type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        state.hashCode), 
        type.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ExternalNavData')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('state', state)
          ..add('type', type))
        .toString();
  }
}

/// External Navigation Data builder class
///
class ExternalNavDataBuilder implements Builder<ExternalNavData, ExternalNavDataBuilder> {
  _$ExternalNavData _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EstimatedState _state;
  EstimatedState get state => _$this._state;
  set state(EstimatedState state) => _$this._state = state;

  ExternalNavDataEnumType _type;
  ExternalNavDataEnumType get type => _$this._type;
  set type(ExternalNavDataEnumType type) => _$this._type = type;

  ExternalNavDataBuilder();

  ExternalNavDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ExternalNavData other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ExternalNavData;
  }

  @override
  void update(void updates(ExternalNavDataBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ExternalNavData build() {
    final _$result = _$v ??
        new _$ExternalNavData._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            state: state,
            type: type);
    replace(_$result);
    return _$result;
  }
}

/// Dissolved Oxygen immutable class
///
class _$DissolvedOxygen extends DissolvedOxygen {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DissolvedOxygen([void updates(DissolvedOxygenBuilder b)]) =>
      (new DissolvedOxygenBuilder()..update(updates)).build();

  _$DissolvedOxygen._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DissolvedOxygen rebuild(void updates(DissolvedOxygenBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DissolvedOxygenBuilder toBuilder() => new DissolvedOxygenBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DissolvedOxygen &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DissolvedOxygen')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Dissolved Oxygen builder class
///
class DissolvedOxygenBuilder implements Builder<DissolvedOxygen, DissolvedOxygenBuilder> {
  _$DissolvedOxygen _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DissolvedOxygenBuilder();

  DissolvedOxygenBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DissolvedOxygen other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DissolvedOxygen;
  }

  @override
  void update(void updates(DissolvedOxygenBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DissolvedOxygen build() {
    final _$result = _$v ??
        new _$DissolvedOxygen._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Air Saturation immutable class
///
class _$AirSaturation extends AirSaturation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$AirSaturation([void updates(AirSaturationBuilder b)]) =>
      (new AirSaturationBuilder()..update(updates)).build();

  _$AirSaturation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  AirSaturation rebuild(void updates(AirSaturationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AirSaturationBuilder toBuilder() => new AirSaturationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AirSaturation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AirSaturation')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Air Saturation builder class
///
class AirSaturationBuilder implements Builder<AirSaturation, AirSaturationBuilder> {
  _$AirSaturation _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  AirSaturationBuilder();

  AirSaturationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AirSaturation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AirSaturation;
  }

  @override
  void update(void updates(AirSaturationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AirSaturation build() {
    final _$result = _$v ??
        new _$AirSaturation._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Throttle immutable class
///
class _$Throttle extends Throttle {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Throttle([void updates(ThrottleBuilder b)]) =>
      (new ThrottleBuilder()..update(updates)).build();

  _$Throttle._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Throttle rebuild(void updates(ThrottleBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ThrottleBuilder toBuilder() => new ThrottleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Throttle &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Throttle')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Throttle builder class
///
class ThrottleBuilder implements Builder<Throttle, ThrottleBuilder> {
  _$Throttle _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ThrottleBuilder();

  ThrottleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Throttle other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Throttle;
  }

  @override
  void update(void updates(ThrottleBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Throttle build() {
    final _$result = _$v ??
        new _$Throttle._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// pH immutable class
///
class _$PH extends PH {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$PH([void updates(PHBuilder b)]) =>
      (new PHBuilder()..update(updates)).build();

  _$PH._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  PH rebuild(void updates(PHBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PHBuilder toBuilder() => new PHBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PH &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PH')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// pH builder class
///
class PHBuilder implements Builder<PH, PHBuilder> {
  _$PH _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  PHBuilder();

  PHBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PH other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PH;
  }

  @override
  void update(void updates(PHBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PH build() {
    final _$result = _$v ??
        new _$PH._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Redox Potential immutable class
///
class _$Redox extends Redox {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Redox([void updates(RedoxBuilder b)]) =>
      (new RedoxBuilder()..update(updates)).build();

  _$Redox._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Redox rebuild(void updates(RedoxBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RedoxBuilder toBuilder() => new RedoxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Redox &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Redox')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Redox Potential builder class
///
class RedoxBuilder implements Builder<Redox, RedoxBuilder> {
  _$Redox _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RedoxBuilder();

  RedoxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Redox other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Redox;
  }

  @override
  void update(void updates(RedoxBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Redox build() {
    final _$result = _$v ??
        new _$Redox._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Camera Zoom immutable class
///
class _$CameraZoom extends CameraZoom {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final int zoom;
  @override
  final CameraZoomEnumAction action;

  factory _$CameraZoom([void updates(CameraZoomBuilder b)]) =>
      (new CameraZoomBuilder()..update(updates)).build();

  _$CameraZoom._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.zoom,
      this.action})
      : super._();

  @override
  CameraZoom rebuild(void updates(CameraZoomBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CameraZoomBuilder toBuilder() => new CameraZoomBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CameraZoom &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        zoom == this.zoom &&
        action == this.action;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        id.hashCode), 
        zoom.hashCode), 
        action.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CameraZoom')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('id', id)
          ..add('zoom', zoom)
          ..add('action', action))
        .toString();
  }
}

/// Camera Zoom builder class
///
class CameraZoomBuilder implements Builder<CameraZoom, CameraZoomBuilder> {
  _$CameraZoom _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  int _zoom;
  int get zoom => _$this._zoom;
  set zoom(int zoom) => _$this._zoom = zoom;

  CameraZoomEnumAction _action;
  CameraZoomEnumAction get action => _$this._action;
  set action(CameraZoomEnumAction action) => _$this._action = action;

  CameraZoomBuilder();

  CameraZoomBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _zoom = _$v.zoom;
      _action = _$v.action;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CameraZoom other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CameraZoom;
  }

  @override
  void update(void updates(CameraZoomBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CameraZoom build() {
    final _$result = _$v ??
        new _$CameraZoom._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            id: id,
            zoom: zoom,
            action: action);
    replace(_$result);
    return _$result;
  }
}

/// Set Thruster Actuation immutable class
///
class _$SetThrusterActuation extends SetThrusterActuation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double value;

  factory _$SetThrusterActuation([void updates(SetThrusterActuationBuilder b)]) =>
      (new SetThrusterActuationBuilder()..update(updates)).build();

  _$SetThrusterActuation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.value})
      : super._();

  @override
  SetThrusterActuation rebuild(void updates(SetThrusterActuationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SetThrusterActuationBuilder toBuilder() => new SetThrusterActuationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetThrusterActuation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        id.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetThrusterActuation')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('id', id)
          ..add('value', value))
        .toString();
  }
}

/// Set Thruster Actuation builder class
///
class SetThrusterActuationBuilder implements Builder<SetThrusterActuation, SetThrusterActuationBuilder> {
  _$SetThrusterActuation _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SetThrusterActuationBuilder();

  SetThrusterActuationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetThrusterActuation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SetThrusterActuation;
  }

  @override
  void update(void updates(SetThrusterActuationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SetThrusterActuation build() {
    final _$result = _$v ??
        new _$SetThrusterActuation._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            id: id,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Set Servo Position immutable class
///
class _$SetServoPosition extends SetServoPosition {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double value;

  factory _$SetServoPosition([void updates(SetServoPositionBuilder b)]) =>
      (new SetServoPositionBuilder()..update(updates)).build();

  _$SetServoPosition._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.value})
      : super._();

  @override
  SetServoPosition rebuild(void updates(SetServoPositionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SetServoPositionBuilder toBuilder() => new SetServoPositionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetServoPosition &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        id.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetServoPosition')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('id', id)
          ..add('value', value))
        .toString();
  }
}

/// Set Servo Position builder class
///
class SetServoPositionBuilder implements Builder<SetServoPosition, SetServoPositionBuilder> {
  _$SetServoPosition _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SetServoPositionBuilder();

  SetServoPositionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetServoPosition other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SetServoPosition;
  }

  @override
  void update(void updates(SetServoPositionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SetServoPosition build() {
    final _$result = _$v ??
        new _$SetServoPosition._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            id: id,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Set Control Surface Deflection immutable class
///
class _$SetControlSurfaceDeflection extends SetControlSurfaceDeflection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double angle;

  factory _$SetControlSurfaceDeflection([void updates(SetControlSurfaceDeflectionBuilder b)]) =>
      (new SetControlSurfaceDeflectionBuilder()..update(updates)).build();

  _$SetControlSurfaceDeflection._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.angle})
      : super._();

  @override
  SetControlSurfaceDeflection rebuild(void updates(SetControlSurfaceDeflectionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SetControlSurfaceDeflectionBuilder toBuilder() => new SetControlSurfaceDeflectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetControlSurfaceDeflection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        angle == this.angle;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        id.hashCode), 
        angle.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetControlSurfaceDeflection')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('id', id)
          ..add('angle', angle))
        .toString();
  }
}

/// Set Control Surface Deflection builder class
///
class SetControlSurfaceDeflectionBuilder implements Builder<SetControlSurfaceDeflection, SetControlSurfaceDeflectionBuilder> {
  _$SetControlSurfaceDeflection _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _angle;
  double get angle => _$this._angle;
  set angle(double angle) => _$this._angle = angle;

  SetControlSurfaceDeflectionBuilder();

  SetControlSurfaceDeflectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _angle = _$v.angle;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetControlSurfaceDeflection other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SetControlSurfaceDeflection;
  }

  @override
  void update(void updates(SetControlSurfaceDeflectionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SetControlSurfaceDeflection build() {
    final _$result = _$v ??
        new _$SetControlSurfaceDeflection._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            id: id,
            angle: angle);
    replace(_$result);
    return _$result;
  }
}

/// Remote Actions Request immutable class
///
class _$RemoteActionsRequest extends RemoteActionsRequest {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final RemoteActionsRequestEnumOp op;
  @override
  final String actions;

  factory _$RemoteActionsRequest([void updates(RemoteActionsRequestBuilder b)]) =>
      (new RemoteActionsRequestBuilder()..update(updates)).build();

  _$RemoteActionsRequest._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.actions})
      : super._();

  @override
  RemoteActionsRequest rebuild(void updates(RemoteActionsRequestBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteActionsRequestBuilder toBuilder() => new RemoteActionsRequestBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteActionsRequest &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        actions == this.actions;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        actions.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteActionsRequest')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('actions', actions))
        .toString();
  }
}

/// Remote Actions Request builder class
///
class RemoteActionsRequestBuilder implements Builder<RemoteActionsRequest, RemoteActionsRequestBuilder> {
  _$RemoteActionsRequest _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  RemoteActionsRequestEnumOp _op;
  RemoteActionsRequestEnumOp get op => _$this._op;
  set op(RemoteActionsRequestEnumOp op) => _$this._op = op;

  String _actions;
  String get actions => _$this._actions;
  set actions(String actions) => _$this._actions = actions;

  RemoteActionsRequestBuilder();

  RemoteActionsRequestBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _actions = _$v.actions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteActionsRequest other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteActionsRequest;
  }

  @override
  void update(void updates(RemoteActionsRequestBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteActionsRequest build() {
    final _$result = _$v ??
        new _$RemoteActionsRequest._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            actions: actions);
    replace(_$result);
    return _$result;
  }
}

/// Remote Actions immutable class
///
class _$RemoteActions extends RemoteActions {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String actions;

  factory _$RemoteActions([void updates(RemoteActionsBuilder b)]) =>
      (new RemoteActionsBuilder()..update(updates)).build();

  _$RemoteActions._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.actions})
      : super._();

  @override
  RemoteActions rebuild(void updates(RemoteActionsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteActionsBuilder toBuilder() => new RemoteActionsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteActions &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        actions == this.actions;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        actions.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteActions')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('actions', actions))
        .toString();
  }
}

/// Remote Actions builder class
///
class RemoteActionsBuilder implements Builder<RemoteActions, RemoteActionsBuilder> {
  _$RemoteActions _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _actions;
  String get actions => _$this._actions;
  set actions(String actions) => _$this._actions = actions;

  RemoteActionsBuilder();

  RemoteActionsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _actions = _$v.actions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteActions other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteActions;
  }

  @override
  void update(void updates(RemoteActionsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteActions build() {
    final _$result = _$v ??
        new _$RemoteActions._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            actions: actions);
    replace(_$result);
    return _$result;
  }
}

/// Button Event immutable class
///
class _$ButtonEvent extends ButtonEvent {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int button;
  @override
  final int value;

  factory _$ButtonEvent([void updates(ButtonEventBuilder b)]) =>
      (new ButtonEventBuilder()..update(updates)).build();

  _$ButtonEvent._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.button,
      this.value})
      : super._();

  @override
  ButtonEvent rebuild(void updates(ButtonEventBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ButtonEventBuilder toBuilder() => new ButtonEventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ButtonEvent &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        button == this.button &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        button.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ButtonEvent')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('button', button)
          ..add('value', value))
        .toString();
  }
}

/// Button Event builder class
///
class ButtonEventBuilder implements Builder<ButtonEvent, ButtonEventBuilder> {
  _$ButtonEvent _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _button;
  int get button => _$this._button;
  set button(int button) => _$this._button = button;

  int _value;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  ButtonEventBuilder();

  ButtonEventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _button = _$v.button;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ButtonEvent other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ButtonEvent;
  }

  @override
  void update(void updates(ButtonEventBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ButtonEvent build() {
    final _$result = _$v ??
        new _$ButtonEvent._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            button: button,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// LCD Control immutable class
///
class _$LcdControl extends LcdControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LcdControlEnumOp op;
  @override
  final String text;

  factory _$LcdControl([void updates(LcdControlBuilder b)]) =>
      (new LcdControlBuilder()..update(updates)).build();

  _$LcdControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.text})
      : super._();

  @override
  LcdControl rebuild(void updates(LcdControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LcdControlBuilder toBuilder() => new LcdControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LcdControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        text == this.text;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        text.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LcdControl')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('text', text))
        .toString();
  }
}

/// LCD Control builder class
///
class LcdControlBuilder implements Builder<LcdControl, LcdControlBuilder> {
  _$LcdControl _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LcdControlEnumOp _op;
  LcdControlEnumOp get op => _$this._op;
  set op(LcdControlEnumOp op) => _$this._op = op;

  String _text;
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  LcdControlBuilder();

  LcdControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LcdControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LcdControl;
  }

  @override
  void update(void updates(LcdControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LcdControl build() {
    final _$result = _$v ??
        new _$LcdControl._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            text: text);
    replace(_$result);
    return _$result;
  }
}

/// Power Operation immutable class
///
class _$PowerOperation extends PowerOperation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PowerOperationEnumOp op;
  @override
  final double time_remain;
  @override
  final double sched_time;

  factory _$PowerOperation([void updates(PowerOperationBuilder b)]) =>
      (new PowerOperationBuilder()..update(updates)).build();

  _$PowerOperation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.time_remain,
      this.sched_time})
      : super._();

  @override
  PowerOperation rebuild(void updates(PowerOperationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PowerOperationBuilder toBuilder() => new PowerOperationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PowerOperation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        time_remain == this.time_remain &&
        sched_time == this.sched_time;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        time_remain.hashCode), 
        sched_time.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PowerOperation')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('time_remain', time_remain)
          ..add('sched_time', sched_time))
        .toString();
  }
}

/// Power Operation builder class
///
class PowerOperationBuilder implements Builder<PowerOperation, PowerOperationBuilder> {
  _$PowerOperation _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PowerOperationEnumOp _op;
  PowerOperationEnumOp get op => _$this._op;
  set op(PowerOperationEnumOp op) => _$this._op = op;

  double _time_remain;
  double get time_remain => _$this._time_remain;
  set time_remain(double time_remain) => _$this._time_remain = time_remain;

  double _sched_time;
  double get sched_time => _$this._sched_time;
  set sched_time(double sched_time) => _$this._sched_time = sched_time;

  PowerOperationBuilder();

  PowerOperationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _time_remain = _$v.time_remain;
      _sched_time = _$v.sched_time;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PowerOperation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PowerOperation;
  }

  @override
  void update(void updates(PowerOperationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PowerOperation build() {
    final _$result = _$v ??
        new _$PowerOperation._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            time_remain: time_remain,
            sched_time: sched_time);
    replace(_$result);
    return _$result;
  }
}

/// Power Channel Control immutable class
///
class _$PowerChannelControl extends PowerChannelControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final PowerChannelControlEnumOp op;
  @override
  final double sched_time;

  factory _$PowerChannelControl([void updates(PowerChannelControlBuilder b)]) =>
      (new PowerChannelControlBuilder()..update(updates)).build();

  _$PowerChannelControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.op,
      this.sched_time})
      : super._();

  @override
  PowerChannelControl rebuild(void updates(PowerChannelControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PowerChannelControlBuilder toBuilder() => new PowerChannelControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PowerChannelControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        op == this.op &&
        sched_time == this.sched_time;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode), 
        op.hashCode), 
        sched_time.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PowerChannelControl')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name)
          ..add('op', op)
          ..add('sched_time', sched_time))
        .toString();
  }
}

/// Power Channel Control builder class
///
class PowerChannelControlBuilder implements Builder<PowerChannelControl, PowerChannelControlBuilder> {
  _$PowerChannelControl _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  PowerChannelControlEnumOp _op;
  PowerChannelControlEnumOp get op => _$this._op;
  set op(PowerChannelControlEnumOp op) => _$this._op = op;

  double _sched_time;
  double get sched_time => _$this._sched_time;
  set sched_time(double sched_time) => _$this._sched_time = sched_time;

  PowerChannelControlBuilder();

  PowerChannelControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _op = _$v.op;
      _sched_time = _$v.sched_time;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PowerChannelControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PowerChannelControl;
  }

  @override
  void update(void updates(PowerChannelControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PowerChannelControl build() {
    final _$result = _$v ??
        new _$PowerChannelControl._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name,
            op: op,
            sched_time: sched_time);
    replace(_$result);
    return _$result;
  }
}

/// Query Power Channel State immutable class
///
class _$QueryPowerChannelState extends QueryPowerChannelState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$QueryPowerChannelState([void updates(QueryPowerChannelStateBuilder b)]) =>
      (new QueryPowerChannelStateBuilder()..update(updates)).build();

  _$QueryPowerChannelState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  QueryPowerChannelState rebuild(void updates(QueryPowerChannelStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryPowerChannelStateBuilder toBuilder() => new QueryPowerChannelStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryPowerChannelState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryPowerChannelState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt))
        .toString();
  }
}

/// Query Power Channel State builder class
///
class QueryPowerChannelStateBuilder implements Builder<QueryPowerChannelState, QueryPowerChannelStateBuilder> {
  _$QueryPowerChannelState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  QueryPowerChannelStateBuilder();

  QueryPowerChannelStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryPowerChannelState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$QueryPowerChannelState;
  }

  @override
  void update(void updates(QueryPowerChannelStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryPowerChannelState build() {
    final _$result = _$v ??
        new _$QueryPowerChannelState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt);
    replace(_$result);
    return _$result;
  }
}

/// Power Channel State immutable class
///
class _$PowerChannelState extends PowerChannelState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final PowerChannelStateEnumState state;

  factory _$PowerChannelState([void updates(PowerChannelStateBuilder b)]) =>
      (new PowerChannelStateBuilder()..update(updates)).build();

  _$PowerChannelState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.state})
      : super._();

  @override
  PowerChannelState rebuild(void updates(PowerChannelStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PowerChannelStateBuilder toBuilder() => new PowerChannelStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PowerChannelState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        state == this.state;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode), 
        state.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PowerChannelState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name)
          ..add('state', state))
        .toString();
  }
}

/// Power Channel State builder class
///
class PowerChannelStateBuilder implements Builder<PowerChannelState, PowerChannelStateBuilder> {
  _$PowerChannelState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  PowerChannelStateEnumState _state;
  PowerChannelStateEnumState get state => _$this._state;
  set state(PowerChannelStateEnumState state) => _$this._state = state;

  PowerChannelStateBuilder();

  PowerChannelStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _state = _$v.state;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PowerChannelState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PowerChannelState;
  }

  @override
  void update(void updates(PowerChannelStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PowerChannelState build() {
    final _$result = _$v ??
        new _$PowerChannelState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name,
            state: state);
    replace(_$result);
    return _$result;
  }
}

/// LED Brightness immutable class
///
class _$LedBrightness extends LedBrightness {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final int value;

  factory _$LedBrightness([void updates(LedBrightnessBuilder b)]) =>
      (new LedBrightnessBuilder()..update(updates)).build();

  _$LedBrightness._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.value})
      : super._();

  @override
  LedBrightness rebuild(void updates(LedBrightnessBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LedBrightnessBuilder toBuilder() => new LedBrightnessBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LedBrightness &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LedBrightness')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name)
          ..add('value', value))
        .toString();
  }
}

/// LED Brightness builder class
///
class LedBrightnessBuilder implements Builder<LedBrightness, LedBrightnessBuilder> {
  _$LedBrightness _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  int _value;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  LedBrightnessBuilder();

  LedBrightnessBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LedBrightness other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LedBrightness;
  }

  @override
  void update(void updates(LedBrightnessBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LedBrightness build() {
    final _$result = _$v ??
        new _$LedBrightness._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Query LED Brightness immutable class
///
class _$QueryLedBrightness extends QueryLedBrightness {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;

  factory _$QueryLedBrightness([void updates(QueryLedBrightnessBuilder b)]) =>
      (new QueryLedBrightnessBuilder()..update(updates)).build();

  _$QueryLedBrightness._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name})
      : super._();

  @override
  QueryLedBrightness rebuild(void updates(QueryLedBrightnessBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryLedBrightnessBuilder toBuilder() => new QueryLedBrightnessBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryLedBrightness &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryLedBrightness')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name))
        .toString();
  }
}

/// Query LED Brightness builder class
///
class QueryLedBrightnessBuilder implements Builder<QueryLedBrightness, QueryLedBrightnessBuilder> {
  _$QueryLedBrightness _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  QueryLedBrightnessBuilder();

  QueryLedBrightnessBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryLedBrightness other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$QueryLedBrightness;
  }

  @override
  void update(void updates(QueryLedBrightnessBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryLedBrightness build() {
    final _$result = _$v ??
        new _$QueryLedBrightness._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name);
    replace(_$result);
    return _$result;
  }
}

/// Set LED Brightness immutable class
///
class _$SetLedBrightness extends SetLedBrightness {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final int value;

  factory _$SetLedBrightness([void updates(SetLedBrightnessBuilder b)]) =>
      (new SetLedBrightnessBuilder()..update(updates)).build();

  _$SetLedBrightness._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.value})
      : super._();

  @override
  SetLedBrightness rebuild(void updates(SetLedBrightnessBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SetLedBrightnessBuilder toBuilder() => new SetLedBrightnessBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetLedBrightness &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetLedBrightness')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name)
          ..add('value', value))
        .toString();
  }
}

/// Set LED Brightness builder class
///
class SetLedBrightnessBuilder implements Builder<SetLedBrightness, SetLedBrightnessBuilder> {
  _$SetLedBrightness _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  int _value;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  SetLedBrightnessBuilder();

  SetLedBrightnessBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetLedBrightness other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SetLedBrightness;
  }

  @override
  void update(void updates(SetLedBrightnessBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SetLedBrightness build() {
    final _$result = _$v ??
        new _$SetLedBrightness._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Set PWM immutable class
///
class _$SetPWM extends SetPWM {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final int period;
  @override
  final int duty_cycle;

  factory _$SetPWM([void updates(SetPWMBuilder b)]) =>
      (new SetPWMBuilder()..update(updates)).build();

  _$SetPWM._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.period,
      this.duty_cycle})
      : super._();

  @override
  SetPWM rebuild(void updates(SetPWMBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SetPWMBuilder toBuilder() => new SetPWMBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetPWM &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        period == this.period &&
        duty_cycle == this.duty_cycle;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        id.hashCode), 
        period.hashCode), 
        duty_cycle.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetPWM')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('id', id)
          ..add('period', period)
          ..add('duty_cycle', duty_cycle))
        .toString();
  }
}

/// Set PWM builder class
///
class SetPWMBuilder implements Builder<SetPWM, SetPWMBuilder> {
  _$SetPWM _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  int _period;
  int get period => _$this._period;
  set period(int period) => _$this._period = period;

  int _duty_cycle;
  int get duty_cycle => _$this._duty_cycle;
  set duty_cycle(int duty_cycle) => _$this._duty_cycle = duty_cycle;

  SetPWMBuilder();

  SetPWMBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _period = _$v.period;
      _duty_cycle = _$v.duty_cycle;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetPWM other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SetPWM;
  }

  @override
  void update(void updates(SetPWMBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SetPWM build() {
    final _$result = _$v ??
        new _$SetPWM._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            id: id,
            period: period,
            duty_cycle: duty_cycle);
    replace(_$result);
    return _$result;
  }
}

/// PWM immutable class
///
class _$PWM extends PWM {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final int period;
  @override
  final int duty_cycle;

  factory _$PWM([void updates(PWMBuilder b)]) =>
      (new PWMBuilder()..update(updates)).build();

  _$PWM._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.period,
      this.duty_cycle})
      : super._();

  @override
  PWM rebuild(void updates(PWMBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PWMBuilder toBuilder() => new PWMBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PWM &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        period == this.period &&
        duty_cycle == this.duty_cycle;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        id.hashCode), 
        period.hashCode), 
        duty_cycle.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PWM')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('id', id)
          ..add('period', period)
          ..add('duty_cycle', duty_cycle))
        .toString();
  }
}

/// PWM builder class
///
class PWMBuilder implements Builder<PWM, PWMBuilder> {
  _$PWM _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  int _period;
  int get period => _$this._period;
  set period(int period) => _$this._period = period;

  int _duty_cycle;
  int get duty_cycle => _$this._duty_cycle;
  set duty_cycle(int duty_cycle) => _$this._duty_cycle = duty_cycle;

  PWMBuilder();

  PWMBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _period = _$v.period;
      _duty_cycle = _$v.duty_cycle;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PWM other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PWM;
  }

  @override
  void update(void updates(PWMBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PWM build() {
    final _$result = _$v ??
        new _$PWM._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            id: id,
            period: period,
            duty_cycle: duty_cycle);
    replace(_$result);
    return _$result;
  }
}

/// Estimated State immutable class
///
class _$EstimatedState extends EstimatedState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double u;
  @override
  final double v;
  @override
  final double w;
  @override
  final double vx;
  @override
  final double vy;
  @override
  final double vz;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final double depth;
  @override
  final double alt;

  factory _$EstimatedState([void updates(EstimatedStateBuilder b)]) =>
      (new EstimatedStateBuilder()..update(updates)).build();

  _$EstimatedState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.height,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi,
      this.u,
      this.v,
      this.w,
      this.vx,
      this.vy,
      this.vz,
      this.p,
      this.q,
      this.r,
      this.depth,
      this.alt})
      : super._();

  @override
  EstimatedState rebuild(void updates(EstimatedStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EstimatedStateBuilder toBuilder() => new EstimatedStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EstimatedState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        height == this.height &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi &&
        u == this.u &&
        v == this.v &&
        w == this.w &&
        vx == this.vx &&
        vy == this.vy &&
        vz == this.vz &&
        p == this.p &&
        q == this.q &&
        r == this.r &&
        depth == this.depth &&
        alt == this.alt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        height.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode), 
        phi.hashCode), 
        theta.hashCode), 
        psi.hashCode), 
        u.hashCode), 
        v.hashCode), 
        w.hashCode), 
        vx.hashCode), 
        vy.hashCode), 
        vz.hashCode), 
        p.hashCode), 
        q.hashCode), 
        r.hashCode), 
        depth.hashCode), 
        alt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EstimatedState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('height', height)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi)
          ..add('u', u)
          ..add('v', v)
          ..add('w', w)
          ..add('vx', vx)
          ..add('vy', vy)
          ..add('vz', vz)
          ..add('p', p)
          ..add('q', q)
          ..add('r', r)
          ..add('depth', depth)
          ..add('alt', alt))
        .toString();
  }
}

/// Estimated State builder class
///
class EstimatedStateBuilder implements Builder<EstimatedState, EstimatedStateBuilder> {
  _$EstimatedState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _u;
  double get u => _$this._u;
  set u(double u) => _$this._u = u;

  double _v;
  double get v => _$this._v;
  set v(double v) => _$this._v = v;

  double _w;
  double get w => _$this._w;
  set w(double w) => _$this._w = w;

  double _vx;
  double get vx => _$this._vx;
  set vx(double vx) => _$this._vx = vx;

  double _vy;
  double get vy => _$this._vy;
  set vy(double vy) => _$this._vy = vy;

  double _vz;
  double get vz => _$this._vz;
  set vz(double vz) => _$this._vz = vz;

  double _p;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  double _depth;
  double get depth => _$this._depth;
  set depth(double depth) => _$this._depth = depth;

  double _alt;
  double get alt => _$this._alt;
  set alt(double alt) => _$this._alt = alt;

  EstimatedStateBuilder();

  EstimatedStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _u = _$v.u;
      _v = _$v.v;
      _w = _$v.w;
      _vx = _$v.vx;
      _vy = _$v.vy;
      _vz = _$v.vz;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _depth = _$v.depth;
      _alt = _$v.alt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EstimatedState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EstimatedState;
  }

  @override
  void update(void updates(EstimatedStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EstimatedState build() {
    final _$result = _$v ??
        new _$EstimatedState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            height: height,
            x: x,
            y: y,
            z: z,
            phi: phi,
            theta: theta,
            psi: psi,
            u: u,
            v: v,
            w: w,
            vx: vx,
            vy: vy,
            vz: vz,
            p: p,
            q: q,
            r: r,
            depth: depth,
            alt: alt);
    replace(_$result);
    return _$result;
  }
}

/// Estimated Stream Velocity immutable class
///
class _$EstimatedStreamVelocity extends EstimatedStreamVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$EstimatedStreamVelocity([void updates(EstimatedStreamVelocityBuilder b)]) =>
      (new EstimatedStreamVelocityBuilder()..update(updates)).build();

  _$EstimatedStreamVelocity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  EstimatedStreamVelocity rebuild(void updates(EstimatedStreamVelocityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EstimatedStreamVelocityBuilder toBuilder() => new EstimatedStreamVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EstimatedStreamVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EstimatedStreamVelocity')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Estimated Stream Velocity builder class
///
class EstimatedStreamVelocityBuilder implements Builder<EstimatedStreamVelocity, EstimatedStreamVelocityBuilder> {
  _$EstimatedStreamVelocity _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  EstimatedStreamVelocityBuilder();

  EstimatedStreamVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EstimatedStreamVelocity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EstimatedStreamVelocity;
  }

  @override
  void update(void updates(EstimatedStreamVelocityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EstimatedStreamVelocity build() {
    final _$result = _$v ??
        new _$EstimatedStreamVelocity._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            x: x,
            y: y,
            z: z);
    replace(_$result);
    return _$result;
  }
}

/// Indicated Speed immutable class
///
class _$IndicatedSpeed extends IndicatedSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$IndicatedSpeed([void updates(IndicatedSpeedBuilder b)]) =>
      (new IndicatedSpeedBuilder()..update(updates)).build();

  _$IndicatedSpeed._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  IndicatedSpeed rebuild(void updates(IndicatedSpeedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  IndicatedSpeedBuilder toBuilder() => new IndicatedSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IndicatedSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IndicatedSpeed')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Indicated Speed builder class
///
class IndicatedSpeedBuilder implements Builder<IndicatedSpeed, IndicatedSpeedBuilder> {
  _$IndicatedSpeed _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  IndicatedSpeedBuilder();

  IndicatedSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IndicatedSpeed other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$IndicatedSpeed;
  }

  @override
  void update(void updates(IndicatedSpeedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$IndicatedSpeed build() {
    final _$result = _$v ??
        new _$IndicatedSpeed._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// True Speed immutable class
///
class _$TrueSpeed extends TrueSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$TrueSpeed([void updates(TrueSpeedBuilder b)]) =>
      (new TrueSpeedBuilder()..update(updates)).build();

  _$TrueSpeed._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  TrueSpeed rebuild(void updates(TrueSpeedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrueSpeedBuilder toBuilder() => new TrueSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrueSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrueSpeed')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// True Speed builder class
///
class TrueSpeedBuilder implements Builder<TrueSpeed, TrueSpeedBuilder> {
  _$TrueSpeed _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  TrueSpeedBuilder();

  TrueSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrueSpeed other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrueSpeed;
  }

  @override
  void update(void updates(TrueSpeedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrueSpeed build() {
    final _$result = _$v ??
        new _$TrueSpeed._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Navigation Uncertainty immutable class
///
class _$NavigationUncertainty extends NavigationUncertainty {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final double u;
  @override
  final double v;
  @override
  final double w;
  @override
  final double bias_psi;
  @override
  final double bias_r;

  factory _$NavigationUncertainty([void updates(NavigationUncertaintyBuilder b)]) =>
      (new NavigationUncertaintyBuilder()..update(updates)).build();

  _$NavigationUncertainty._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi,
      this.p,
      this.q,
      this.r,
      this.u,
      this.v,
      this.w,
      this.bias_psi,
      this.bias_r})
      : super._();

  @override
  NavigationUncertainty rebuild(void updates(NavigationUncertaintyBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  NavigationUncertaintyBuilder toBuilder() => new NavigationUncertaintyBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is NavigationUncertainty &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi &&
        p == this.p &&
        q == this.q &&
        r == this.r &&
        u == this.u &&
        v == this.v &&
        w == this.w &&
        bias_psi == this.bias_psi &&
        bias_r == this.bias_r;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode), 
        phi.hashCode), 
        theta.hashCode), 
        psi.hashCode), 
        p.hashCode), 
        q.hashCode), 
        r.hashCode), 
        u.hashCode), 
        v.hashCode), 
        w.hashCode), 
        bias_psi.hashCode), 
        bias_r.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('NavigationUncertainty')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi)
          ..add('p', p)
          ..add('q', q)
          ..add('r', r)
          ..add('u', u)
          ..add('v', v)
          ..add('w', w)
          ..add('bias_psi', bias_psi)
          ..add('bias_r', bias_r))
        .toString();
  }
}

/// Navigation Uncertainty builder class
///
class NavigationUncertaintyBuilder implements Builder<NavigationUncertainty, NavigationUncertaintyBuilder> {
  _$NavigationUncertainty _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _p;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  double _u;
  double get u => _$this._u;
  set u(double u) => _$this._u = u;

  double _v;
  double get v => _$this._v;
  set v(double v) => _$this._v = v;

  double _w;
  double get w => _$this._w;
  set w(double w) => _$this._w = w;

  double _bias_psi;
  double get bias_psi => _$this._bias_psi;
  set bias_psi(double bias_psi) => _$this._bias_psi = bias_psi;

  double _bias_r;
  double get bias_r => _$this._bias_r;
  set bias_r(double bias_r) => _$this._bias_r = bias_r;

  NavigationUncertaintyBuilder();

  NavigationUncertaintyBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _u = _$v.u;
      _v = _$v.v;
      _w = _$v.w;
      _bias_psi = _$v.bias_psi;
      _bias_r = _$v.bias_r;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(NavigationUncertainty other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$NavigationUncertainty;
  }

  @override
  void update(void updates(NavigationUncertaintyBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$NavigationUncertainty build() {
    final _$result = _$v ??
        new _$NavigationUncertainty._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            x: x,
            y: y,
            z: z,
            phi: phi,
            theta: theta,
            psi: psi,
            p: p,
            q: q,
            r: r,
            u: u,
            v: v,
            w: w,
            bias_psi: bias_psi,
            bias_r: bias_r);
    replace(_$result);
    return _$result;
  }
}

/// Navigation Data immutable class
///
class _$NavigationData extends NavigationData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double bias_psi;
  @override
  final double bias_r;
  @override
  final double cog;
  @override
  final double cyaw;
  @override
  final double lbl_rej_level;
  @override
  final double gps_rej_level;
  @override
  final double custom_x;
  @override
  final double custom_y;
  @override
  final double custom_z;

  factory _$NavigationData([void updates(NavigationDataBuilder b)]) =>
      (new NavigationDataBuilder()..update(updates)).build();

  _$NavigationData._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.bias_psi,
      this.bias_r,
      this.cog,
      this.cyaw,
      this.lbl_rej_level,
      this.gps_rej_level,
      this.custom_x,
      this.custom_y,
      this.custom_z})
      : super._();

  @override
  NavigationData rebuild(void updates(NavigationDataBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  NavigationDataBuilder toBuilder() => new NavigationDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is NavigationData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        bias_psi == this.bias_psi &&
        bias_r == this.bias_r &&
        cog == this.cog &&
        cyaw == this.cyaw &&
        lbl_rej_level == this.lbl_rej_level &&
        gps_rej_level == this.gps_rej_level &&
        custom_x == this.custom_x &&
        custom_y == this.custom_y &&
        custom_z == this.custom_z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        bias_psi.hashCode), 
        bias_r.hashCode), 
        cog.hashCode), 
        cyaw.hashCode), 
        lbl_rej_level.hashCode), 
        gps_rej_level.hashCode), 
        custom_x.hashCode), 
        custom_y.hashCode), 
        custom_z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('NavigationData')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('bias_psi', bias_psi)
          ..add('bias_r', bias_r)
          ..add('cog', cog)
          ..add('cyaw', cyaw)
          ..add('lbl_rej_level', lbl_rej_level)
          ..add('gps_rej_level', gps_rej_level)
          ..add('custom_x', custom_x)
          ..add('custom_y', custom_y)
          ..add('custom_z', custom_z))
        .toString();
  }
}

/// Navigation Data builder class
///
class NavigationDataBuilder implements Builder<NavigationData, NavigationDataBuilder> {
  _$NavigationData _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _bias_psi;
  double get bias_psi => _$this._bias_psi;
  set bias_psi(double bias_psi) => _$this._bias_psi = bias_psi;

  double _bias_r;
  double get bias_r => _$this._bias_r;
  set bias_r(double bias_r) => _$this._bias_r = bias_r;

  double _cog;
  double get cog => _$this._cog;
  set cog(double cog) => _$this._cog = cog;

  double _cyaw;
  double get cyaw => _$this._cyaw;
  set cyaw(double cyaw) => _$this._cyaw = cyaw;

  double _lbl_rej_level;
  double get lbl_rej_level => _$this._lbl_rej_level;
  set lbl_rej_level(double lbl_rej_level) => _$this._lbl_rej_level = lbl_rej_level;

  double _gps_rej_level;
  double get gps_rej_level => _$this._gps_rej_level;
  set gps_rej_level(double gps_rej_level) => _$this._gps_rej_level = gps_rej_level;

  double _custom_x;
  double get custom_x => _$this._custom_x;
  set custom_x(double custom_x) => _$this._custom_x = custom_x;

  double _custom_y;
  double get custom_y => _$this._custom_y;
  set custom_y(double custom_y) => _$this._custom_y = custom_y;

  double _custom_z;
  double get custom_z => _$this._custom_z;
  set custom_z(double custom_z) => _$this._custom_z = custom_z;

  NavigationDataBuilder();

  NavigationDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _bias_psi = _$v.bias_psi;
      _bias_r = _$v.bias_r;
      _cog = _$v.cog;
      _cyaw = _$v.cyaw;
      _lbl_rej_level = _$v.lbl_rej_level;
      _gps_rej_level = _$v.gps_rej_level;
      _custom_x = _$v.custom_x;
      _custom_y = _$v.custom_y;
      _custom_z = _$v.custom_z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(NavigationData other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$NavigationData;
  }

  @override
  void update(void updates(NavigationDataBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$NavigationData build() {
    final _$result = _$v ??
        new _$NavigationData._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            bias_psi: bias_psi,
            bias_r: bias_r,
            cog: cog,
            cyaw: cyaw,
            lbl_rej_level: lbl_rej_level,
            gps_rej_level: gps_rej_level,
            custom_x: custom_x,
            custom_y: custom_y,
            custom_z: custom_z);
    replace(_$result);
    return _$result;
  }
}

/// GPS Fix Rejection immutable class
///
class _$GpsFixRejection extends GpsFixRejection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double utc_time;
  @override
  final GpsFixRejectionEnumReason reason;

  factory _$GpsFixRejection([void updates(GpsFixRejectionBuilder b)]) =>
      (new GpsFixRejectionBuilder()..update(updates)).build();

  _$GpsFixRejection._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.utc_time,
      this.reason})
      : super._();

  @override
  GpsFixRejection rebuild(void updates(GpsFixRejectionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GpsFixRejectionBuilder toBuilder() => new GpsFixRejectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GpsFixRejection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        utc_time == this.utc_time &&
        reason == this.reason;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        utc_time.hashCode), 
        reason.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GpsFixRejection')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('utc_time', utc_time)
          ..add('reason', reason))
        .toString();
  }
}

/// GPS Fix Rejection builder class
///
class GpsFixRejectionBuilder implements Builder<GpsFixRejection, GpsFixRejectionBuilder> {
  _$GpsFixRejection _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _utc_time;
  double get utc_time => _$this._utc_time;
  set utc_time(double utc_time) => _$this._utc_time = utc_time;

  GpsFixRejectionEnumReason _reason;
  GpsFixRejectionEnumReason get reason => _$this._reason;
  set reason(GpsFixRejectionEnumReason reason) => _$this._reason = reason;

  GpsFixRejectionBuilder();

  GpsFixRejectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _utc_time = _$v.utc_time;
      _reason = _$v.reason;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GpsFixRejection other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GpsFixRejection;
  }

  @override
  void update(void updates(GpsFixRejectionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GpsFixRejection build() {
    final _$result = _$v ??
        new _$GpsFixRejection._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            utc_time: utc_time,
            reason: reason);
    replace(_$result);
    return _$result;
  }
}

/// LBL Range Acceptance immutable class
///
class _$LblRangeAcceptance extends LblRangeAcceptance {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double range;
  @override
  final LblRangeAcceptanceEnumAcceptance acceptance;

  factory _$LblRangeAcceptance([void updates(LblRangeAcceptanceBuilder b)]) =>
      (new LblRangeAcceptanceBuilder()..update(updates)).build();

  _$LblRangeAcceptance._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.range,
      this.acceptance})
      : super._();

  @override
  LblRangeAcceptance rebuild(void updates(LblRangeAcceptanceBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LblRangeAcceptanceBuilder toBuilder() => new LblRangeAcceptanceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblRangeAcceptance &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        range == this.range &&
        acceptance == this.acceptance;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        id.hashCode), 
        range.hashCode), 
        acceptance.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblRangeAcceptance')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('id', id)
          ..add('range', range)
          ..add('acceptance', acceptance))
        .toString();
  }
}

/// LBL Range Acceptance builder class
///
class LblRangeAcceptanceBuilder implements Builder<LblRangeAcceptance, LblRangeAcceptanceBuilder> {
  _$LblRangeAcceptance _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _range;
  double get range => _$this._range;
  set range(double range) => _$this._range = range;

  LblRangeAcceptanceEnumAcceptance _acceptance;
  LblRangeAcceptanceEnumAcceptance get acceptance => _$this._acceptance;
  set acceptance(LblRangeAcceptanceEnumAcceptance acceptance) => _$this._acceptance = acceptance;

  LblRangeAcceptanceBuilder();

  LblRangeAcceptanceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _range = _$v.range;
      _acceptance = _$v.acceptance;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblRangeAcceptance other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LblRangeAcceptance;
  }

  @override
  void update(void updates(LblRangeAcceptanceBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LblRangeAcceptance build() {
    final _$result = _$v ??
        new _$LblRangeAcceptance._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            id: id,
            range: range,
            acceptance: acceptance);
    replace(_$result);
    return _$result;
  }
}

/// DVL Rejection immutable class
///
class _$DvlRejection extends DvlRejection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DvlRejectionBitfieldType type;
  @override
  final DvlRejectionEnumReason reason;
  @override
  final double value;
  @override
  final double timestep;

  factory _$DvlRejection([void updates(DvlRejectionBuilder b)]) =>
      (new DvlRejectionBuilder()..update(updates)).build();

  _$DvlRejection._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.reason,
      this.value,
      this.timestep})
      : super._();

  @override
  DvlRejection rebuild(void updates(DvlRejectionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DvlRejectionBuilder toBuilder() => new DvlRejectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DvlRejection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        reason == this.reason &&
        value == this.value &&
        timestep == this.timestep;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode), 
        reason.hashCode), 
        value.hashCode), 
        timestep.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DvlRejection')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type)
          ..add('reason', reason)
          ..add('value', value)
          ..add('timestep', timestep))
        .toString();
  }
}

/// DVL Rejection builder class
///
class DvlRejectionBuilder implements Builder<DvlRejection, DvlRejectionBuilder> {
  _$DvlRejection _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DvlRejectionBitfieldType _type;
  DvlRejectionBitfieldType get type => _$this._type;
  set type(DvlRejectionBitfieldType type) => _$this._type = type;

  DvlRejectionEnumReason _reason;
  DvlRejectionEnumReason get reason => _$this._reason;
  set reason(DvlRejectionEnumReason reason) => _$this._reason = reason;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  double _timestep;
  double get timestep => _$this._timestep;
  set timestep(double timestep) => _$this._timestep = timestep;

  DvlRejectionBuilder();

  DvlRejectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _reason = _$v.reason;
      _value = _$v.value;
      _timestep = _$v.timestep;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DvlRejection other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DvlRejection;
  }

  @override
  void update(void updates(DvlRejectionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DvlRejection build() {
    final _$result = _$v ??
        new _$DvlRejection._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type,
            reason: reason,
            value: value,
            timestep: timestep);
    replace(_$result);
    return _$result;
  }
}

/// LBL Beacon Position Estimate immutable class
///
class _$LblEstimate extends LblEstimate {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LblBeacon beacon;
  @override
  final double x;
  @override
  final double y;
  @override
  final double var_x;
  @override
  final double var_y;
  @override
  final double distance;

  factory _$LblEstimate([void updates(LblEstimateBuilder b)]) =>
      (new LblEstimateBuilder()..update(updates)).build();

  _$LblEstimate._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.beacon,
      this.x,
      this.y,
      this.var_x,
      this.var_y,
      this.distance})
      : super._();

  @override
  LblEstimate rebuild(void updates(LblEstimateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LblEstimateBuilder toBuilder() => new LblEstimateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblEstimate &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        beacon == this.beacon &&
        x == this.x &&
        y == this.y &&
        var_x == this.var_x &&
        var_y == this.var_y &&
        distance == this.distance;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        beacon.hashCode), 
        x.hashCode), 
        y.hashCode), 
        var_x.hashCode), 
        var_y.hashCode), 
        distance.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblEstimate')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('beacon', beacon)
          ..add('x', x)
          ..add('y', y)
          ..add('var_x', var_x)
          ..add('var_y', var_y)
          ..add('distance', distance))
        .toString();
  }
}

/// LBL Beacon Position Estimate builder class
///
class LblEstimateBuilder implements Builder<LblEstimate, LblEstimateBuilder> {
  _$LblEstimate _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LblBeacon _beacon;
  LblBeacon get beacon => _$this._beacon;
  set beacon(LblBeacon beacon) => _$this._beacon = beacon;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _var_x;
  double get var_x => _$this._var_x;
  set var_x(double var_x) => _$this._var_x = var_x;

  double _var_y;
  double get var_y => _$this._var_y;
  set var_y(double var_y) => _$this._var_y = var_y;

  double _distance;
  double get distance => _$this._distance;
  set distance(double distance) => _$this._distance = distance;

  LblEstimateBuilder();

  LblEstimateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _beacon = _$v.beacon;
      _x = _$v.x;
      _y = _$v.y;
      _var_x = _$v.var_x;
      _var_y = _$v.var_y;
      _distance = _$v.distance;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblEstimate other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LblEstimate;
  }

  @override
  void update(void updates(LblEstimateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LblEstimate build() {
    final _$result = _$v ??
        new _$LblEstimate._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            beacon: beacon,
            x: x,
            y: y,
            var_x: var_x,
            var_y: var_y,
            distance: distance);
    replace(_$result);
    return _$result;
  }
}

/// Alignment State immutable class
///
class _$AlignmentState extends AlignmentState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final AlignmentStateEnumState state;

  factory _$AlignmentState([void updates(AlignmentStateBuilder b)]) =>
      (new AlignmentStateBuilder()..update(updates)).build();

  _$AlignmentState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state})
      : super._();

  @override
  AlignmentState rebuild(void updates(AlignmentStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AlignmentStateBuilder toBuilder() => new AlignmentStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AlignmentState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        state.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AlignmentState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('state', state))
        .toString();
  }
}

/// Alignment State builder class
///
class AlignmentStateBuilder implements Builder<AlignmentState, AlignmentStateBuilder> {
  _$AlignmentState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AlignmentStateEnumState _state;
  AlignmentStateEnumState get state => _$this._state;
  set state(AlignmentStateEnumState state) => _$this._state = state;

  AlignmentStateBuilder();

  AlignmentStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AlignmentState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AlignmentState;
  }

  @override
  void update(void updates(AlignmentStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AlignmentState build() {
    final _$result = _$v ??
        new _$AlignmentState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            state: state);
    replace(_$result);
    return _$result;
  }
}

/// GroupStreamVelocity immutable class
///
class _$GroupStreamVelocity extends GroupStreamVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$GroupStreamVelocity([void updates(GroupStreamVelocityBuilder b)]) =>
      (new GroupStreamVelocityBuilder()..update(updates)).build();

  _$GroupStreamVelocity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  GroupStreamVelocity rebuild(void updates(GroupStreamVelocityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GroupStreamVelocityBuilder toBuilder() => new GroupStreamVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GroupStreamVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GroupStreamVelocity')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// GroupStreamVelocity builder class
///
class GroupStreamVelocityBuilder implements Builder<GroupStreamVelocity, GroupStreamVelocityBuilder> {
  _$GroupStreamVelocity _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  GroupStreamVelocityBuilder();

  GroupStreamVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GroupStreamVelocity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GroupStreamVelocity;
  }

  @override
  void update(void updates(GroupStreamVelocityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GroupStreamVelocity build() {
    final _$result = _$v ??
        new _$GroupStreamVelocity._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            x: x,
            y: y,
            z: z);
    replace(_$result);
    return _$result;
  }
}

/// Airflow immutable class
///
class _$Airflow extends Airflow {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double va;
  @override
  final double aoa;
  @override
  final double ssa;

  factory _$Airflow([void updates(AirflowBuilder b)]) =>
      (new AirflowBuilder()..update(updates)).build();

  _$Airflow._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.va,
      this.aoa,
      this.ssa})
      : super._();

  @override
  Airflow rebuild(void updates(AirflowBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AirflowBuilder toBuilder() => new AirflowBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Airflow &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        va == this.va &&
        aoa == this.aoa &&
        ssa == this.ssa;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        va.hashCode), 
        aoa.hashCode), 
        ssa.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Airflow')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('va', va)
          ..add('aoa', aoa)
          ..add('ssa', ssa))
        .toString();
  }
}

/// Airflow builder class
///
class AirflowBuilder implements Builder<Airflow, AirflowBuilder> {
  _$Airflow _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _va;
  double get va => _$this._va;
  set va(double va) => _$this._va = va;

  double _aoa;
  double get aoa => _$this._aoa;
  set aoa(double aoa) => _$this._aoa = aoa;

  double _ssa;
  double get ssa => _$this._ssa;
  set ssa(double ssa) => _$this._ssa = ssa;

  AirflowBuilder();

  AirflowBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _va = _$v.va;
      _aoa = _$v.aoa;
      _ssa = _$v.ssa;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Airflow other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Airflow;
  }

  @override
  void update(void updates(AirflowBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Airflow build() {
    final _$result = _$v ??
        new _$Airflow._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            va: va,
            aoa: aoa,
            ssa: ssa);
    replace(_$result);
    return _$result;
  }
}

/// Desired Heading immutable class
///
class _$DesiredHeading extends DesiredHeading {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredHeading([void updates(DesiredHeadingBuilder b)]) =>
      (new DesiredHeadingBuilder()..update(updates)).build();

  _$DesiredHeading._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredHeading rebuild(void updates(DesiredHeadingBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredHeadingBuilder toBuilder() => new DesiredHeadingBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredHeading &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredHeading')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Desired Heading builder class
///
class DesiredHeadingBuilder implements Builder<DesiredHeading, DesiredHeadingBuilder> {
  _$DesiredHeading _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredHeadingBuilder();

  DesiredHeadingBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredHeading other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredHeading;
  }

  @override
  void update(void updates(DesiredHeadingBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredHeading build() {
    final _$result = _$v ??
        new _$DesiredHeading._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Desired Z immutable class
///
class _$DesiredZ extends DesiredZ {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final ZUnitsEnum z_units;

  factory _$DesiredZ([void updates(DesiredZBuilder b)]) =>
      (new DesiredZBuilder()..update(updates)).build();

  _$DesiredZ._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value,
      this.z_units})
      : super._();

  @override
  DesiredZ rebuild(void updates(DesiredZBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredZBuilder toBuilder() => new DesiredZBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredZ &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value &&
        z_units == this.z_units;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode), 
        z_units.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredZ')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value)
          ..add('z_units', z_units))
        .toString();
  }
}

/// Desired Z builder class
///
class DesiredZBuilder implements Builder<DesiredZ, DesiredZBuilder> {
  _$DesiredZ _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  DesiredZBuilder();

  DesiredZBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _z_units = _$v.z_units;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredZ other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredZ;
  }

  @override
  void update(void updates(DesiredZBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredZ build() {
    final _$result = _$v ??
        new _$DesiredZ._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value,
            z_units: z_units);
    replace(_$result);
    return _$result;
  }
}

/// Desired Speed immutable class
///
class _$DesiredSpeed extends DesiredSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final SpeedUnitsEnum speed_units;

  factory _$DesiredSpeed([void updates(DesiredSpeedBuilder b)]) =>
      (new DesiredSpeedBuilder()..update(updates)).build();

  _$DesiredSpeed._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value,
      this.speed_units})
      : super._();

  @override
  DesiredSpeed rebuild(void updates(DesiredSpeedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredSpeedBuilder toBuilder() => new DesiredSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value &&
        speed_units == this.speed_units;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode), 
        speed_units.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredSpeed')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value)
          ..add('speed_units', speed_units))
        .toString();
  }
}

/// Desired Speed builder class
///
class DesiredSpeedBuilder implements Builder<DesiredSpeed, DesiredSpeedBuilder> {
  _$DesiredSpeed _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  DesiredSpeedBuilder();

  DesiredSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _speed_units = _$v.speed_units;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredSpeed other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredSpeed;
  }

  @override
  void update(void updates(DesiredSpeedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredSpeed build() {
    final _$result = _$v ??
        new _$DesiredSpeed._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value,
            speed_units: speed_units);
    replace(_$result);
    return _$result;
  }
}

/// Desired Roll immutable class
///
class _$DesiredRoll extends DesiredRoll {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredRoll([void updates(DesiredRollBuilder b)]) =>
      (new DesiredRollBuilder()..update(updates)).build();

  _$DesiredRoll._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredRoll rebuild(void updates(DesiredRollBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredRollBuilder toBuilder() => new DesiredRollBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredRoll &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredRoll')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Desired Roll builder class
///
class DesiredRollBuilder implements Builder<DesiredRoll, DesiredRollBuilder> {
  _$DesiredRoll _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredRollBuilder();

  DesiredRollBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredRoll other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredRoll;
  }

  @override
  void update(void updates(DesiredRollBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredRoll build() {
    final _$result = _$v ??
        new _$DesiredRoll._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Desired Pitch immutable class
///
class _$DesiredPitch extends DesiredPitch {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredPitch([void updates(DesiredPitchBuilder b)]) =>
      (new DesiredPitchBuilder()..update(updates)).build();

  _$DesiredPitch._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredPitch rebuild(void updates(DesiredPitchBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredPitchBuilder toBuilder() => new DesiredPitchBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredPitch &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredPitch')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Desired Pitch builder class
///
class DesiredPitchBuilder implements Builder<DesiredPitch, DesiredPitchBuilder> {
  _$DesiredPitch _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredPitchBuilder();

  DesiredPitchBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredPitch other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredPitch;
  }

  @override
  void update(void updates(DesiredPitchBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredPitch build() {
    final _$result = _$v ??
        new _$DesiredPitch._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Desired Vertical Rate immutable class
///
class _$DesiredVerticalRate extends DesiredVerticalRate {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredVerticalRate([void updates(DesiredVerticalRateBuilder b)]) =>
      (new DesiredVerticalRateBuilder()..update(updates)).build();

  _$DesiredVerticalRate._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredVerticalRate rebuild(void updates(DesiredVerticalRateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredVerticalRateBuilder toBuilder() => new DesiredVerticalRateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredVerticalRate &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredVerticalRate')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Desired Vertical Rate builder class
///
class DesiredVerticalRateBuilder implements Builder<DesiredVerticalRate, DesiredVerticalRateBuilder> {
  _$DesiredVerticalRate _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredVerticalRateBuilder();

  DesiredVerticalRateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredVerticalRate other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredVerticalRate;
  }

  @override
  void update(void updates(DesiredVerticalRateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredVerticalRate build() {
    final _$result = _$v ??
        new _$DesiredVerticalRate._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Desired Path immutable class
///
class _$DesiredPath extends DesiredPath {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int path_ref;
  @override
  final double start_lat;
  @override
  final double start_lon;
  @override
  final double start_z;
  @override
  final ZUnitsEnum start_z_units;
  @override
  final double end_lat;
  @override
  final double end_lon;
  @override
  final double end_z;
  @override
  final ZUnitsEnum end_z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final double lradius;
  @override
  final DesiredPathBitfieldFlags flags;

  factory _$DesiredPath([void updates(DesiredPathBuilder b)]) =>
      (new DesiredPathBuilder()..update(updates)).build();

  _$DesiredPath._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.path_ref,
      this.start_lat,
      this.start_lon,
      this.start_z,
      this.start_z_units,
      this.end_lat,
      this.end_lon,
      this.end_z,
      this.end_z_units,
      this.speed,
      this.speed_units,
      this.lradius,
      this.flags})
      : super._();

  @override
  DesiredPath rebuild(void updates(DesiredPathBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredPathBuilder toBuilder() => new DesiredPathBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredPath &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        path_ref == this.path_ref &&
        start_lat == this.start_lat &&
        start_lon == this.start_lon &&
        start_z == this.start_z &&
        start_z_units == this.start_z_units &&
        end_lat == this.end_lat &&
        end_lon == this.end_lon &&
        end_z == this.end_z &&
        end_z_units == this.end_z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        lradius == this.lradius &&
        flags == this.flags;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        path_ref.hashCode), 
        start_lat.hashCode), 
        start_lon.hashCode), 
        start_z.hashCode), 
        start_z_units.hashCode), 
        end_lat.hashCode), 
        end_lon.hashCode), 
        end_z.hashCode), 
        end_z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        lradius.hashCode), 
        flags.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredPath')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('path_ref', path_ref)
          ..add('start_lat', start_lat)
          ..add('start_lon', start_lon)
          ..add('start_z', start_z)
          ..add('start_z_units', start_z_units)
          ..add('end_lat', end_lat)
          ..add('end_lon', end_lon)
          ..add('end_z', end_z)
          ..add('end_z_units', end_z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('lradius', lradius)
          ..add('flags', flags))
        .toString();
  }
}

/// Desired Path builder class
///
class DesiredPathBuilder implements Builder<DesiredPath, DesiredPathBuilder> {
  _$DesiredPath _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _path_ref;
  int get path_ref => _$this._path_ref;
  set path_ref(int path_ref) => _$this._path_ref = path_ref;

  double _start_lat;
  double get start_lat => _$this._start_lat;
  set start_lat(double start_lat) => _$this._start_lat = start_lat;

  double _start_lon;
  double get start_lon => _$this._start_lon;
  set start_lon(double start_lon) => _$this._start_lon = start_lon;

  double _start_z;
  double get start_z => _$this._start_z;
  set start_z(double start_z) => _$this._start_z = start_z;

  ZUnitsEnum _start_z_units;
  ZUnitsEnum get start_z_units => _$this._start_z_units;
  set start_z_units(ZUnitsEnum start_z_units) => _$this._start_z_units = start_z_units;

  double _end_lat;
  double get end_lat => _$this._end_lat;
  set end_lat(double end_lat) => _$this._end_lat = end_lat;

  double _end_lon;
  double get end_lon => _$this._end_lon;
  set end_lon(double end_lon) => _$this._end_lon = end_lon;

  double _end_z;
  double get end_z => _$this._end_z;
  set end_z(double end_z) => _$this._end_z = end_z;

  ZUnitsEnum _end_z_units;
  ZUnitsEnum get end_z_units => _$this._end_z_units;
  set end_z_units(ZUnitsEnum end_z_units) => _$this._end_z_units = end_z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  double _lradius;
  double get lradius => _$this._lradius;
  set lradius(double lradius) => _$this._lradius = lradius;

  DesiredPathBitfieldFlags _flags;
  DesiredPathBitfieldFlags get flags => _$this._flags;
  set flags(DesiredPathBitfieldFlags flags) => _$this._flags = flags;

  DesiredPathBuilder();

  DesiredPathBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _path_ref = _$v.path_ref;
      _start_lat = _$v.start_lat;
      _start_lon = _$v.start_lon;
      _start_z = _$v.start_z;
      _start_z_units = _$v.start_z_units;
      _end_lat = _$v.end_lat;
      _end_lon = _$v.end_lon;
      _end_z = _$v.end_z;
      _end_z_units = _$v.end_z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _lradius = _$v.lradius;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredPath other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredPath;
  }

  @override
  void update(void updates(DesiredPathBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredPath build() {
    final _$result = _$v ??
        new _$DesiredPath._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            path_ref: path_ref,
            start_lat: start_lat,
            start_lon: start_lon,
            start_z: start_z,
            start_z_units: start_z_units,
            end_lat: end_lat,
            end_lon: end_lon,
            end_z: end_z,
            end_z_units: end_z_units,
            speed: speed,
            speed_units: speed_units,
            lradius: lradius,
            flags: flags);
    replace(_$result);
    return _$result;
  }
}

/// Desired Control immutable class
///
class _$DesiredControl extends DesiredControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double k;
  @override
  final double m;
  @override
  final double n;
  @override
  final DesiredControlBitfieldFlags flags;

  factory _$DesiredControl([void updates(DesiredControlBuilder b)]) =>
      (new DesiredControlBuilder()..update(updates)).build();

  _$DesiredControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.k,
      this.m,
      this.n,
      this.flags})
      : super._();

  @override
  DesiredControl rebuild(void updates(DesiredControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredControlBuilder toBuilder() => new DesiredControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        k == this.k &&
        m == this.m &&
        n == this.n &&
        flags == this.flags;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode), 
        k.hashCode), 
        m.hashCode), 
        n.hashCode), 
        flags.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredControl')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('k', k)
          ..add('m', m)
          ..add('n', n)
          ..add('flags', flags))
        .toString();
  }
}

/// Desired Control builder class
///
class DesiredControlBuilder implements Builder<DesiredControl, DesiredControlBuilder> {
  _$DesiredControl _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _k;
  double get k => _$this._k;
  set k(double k) => _$this._k = k;

  double _m;
  double get m => _$this._m;
  set m(double m) => _$this._m = m;

  double _n;
  double get n => _$this._n;
  set n(double n) => _$this._n = n;

  DesiredControlBitfieldFlags _flags;
  DesiredControlBitfieldFlags get flags => _$this._flags;
  set flags(DesiredControlBitfieldFlags flags) => _$this._flags = flags;

  DesiredControlBuilder();

  DesiredControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _k = _$v.k;
      _m = _$v.m;
      _n = _$v.n;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredControl;
  }

  @override
  void update(void updates(DesiredControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredControl build() {
    final _$result = _$v ??
        new _$DesiredControl._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            x: x,
            y: y,
            z: z,
            k: k,
            m: m,
            n: n,
            flags: flags);
    replace(_$result);
    return _$result;
  }
}

/// Desired Heading Rate immutable class
///
class _$DesiredHeadingRate extends DesiredHeadingRate {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredHeadingRate([void updates(DesiredHeadingRateBuilder b)]) =>
      (new DesiredHeadingRateBuilder()..update(updates)).build();

  _$DesiredHeadingRate._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredHeadingRate rebuild(void updates(DesiredHeadingRateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredHeadingRateBuilder toBuilder() => new DesiredHeadingRateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredHeadingRate &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredHeadingRate')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Desired Heading Rate builder class
///
class DesiredHeadingRateBuilder implements Builder<DesiredHeadingRate, DesiredHeadingRateBuilder> {
  _$DesiredHeadingRate _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredHeadingRateBuilder();

  DesiredHeadingRateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredHeadingRate other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredHeadingRate;
  }

  @override
  void update(void updates(DesiredHeadingRateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredHeadingRate build() {
    final _$result = _$v ??
        new _$DesiredHeadingRate._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Desired Velocity immutable class
///
class _$DesiredVelocity extends DesiredVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double u;
  @override
  final double v;
  @override
  final double w;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final DesiredVelocityBitfieldFlags flags;

  factory _$DesiredVelocity([void updates(DesiredVelocityBuilder b)]) =>
      (new DesiredVelocityBuilder()..update(updates)).build();

  _$DesiredVelocity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.u,
      this.v,
      this.w,
      this.p,
      this.q,
      this.r,
      this.flags})
      : super._();

  @override
  DesiredVelocity rebuild(void updates(DesiredVelocityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredVelocityBuilder toBuilder() => new DesiredVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        u == this.u &&
        v == this.v &&
        w == this.w &&
        p == this.p &&
        q == this.q &&
        r == this.r &&
        flags == this.flags;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        u.hashCode), 
        v.hashCode), 
        w.hashCode), 
        p.hashCode), 
        q.hashCode), 
        r.hashCode), 
        flags.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredVelocity')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('u', u)
          ..add('v', v)
          ..add('w', w)
          ..add('p', p)
          ..add('q', q)
          ..add('r', r)
          ..add('flags', flags))
        .toString();
  }
}

/// Desired Velocity builder class
///
class DesiredVelocityBuilder implements Builder<DesiredVelocity, DesiredVelocityBuilder> {
  _$DesiredVelocity _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _u;
  double get u => _$this._u;
  set u(double u) => _$this._u = u;

  double _v;
  double get v => _$this._v;
  set v(double v) => _$this._v = v;

  double _w;
  double get w => _$this._w;
  set w(double w) => _$this._w = w;

  double _p;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  DesiredVelocityBitfieldFlags _flags;
  DesiredVelocityBitfieldFlags get flags => _$this._flags;
  set flags(DesiredVelocityBitfieldFlags flags) => _$this._flags = flags;

  DesiredVelocityBuilder();

  DesiredVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _u = _$v.u;
      _v = _$v.v;
      _w = _$v.w;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredVelocity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredVelocity;
  }

  @override
  void update(void updates(DesiredVelocityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredVelocity build() {
    final _$result = _$v ??
        new _$DesiredVelocity._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            u: u,
            v: v,
            w: w,
            p: p,
            q: q,
            r: r,
            flags: flags);
    replace(_$result);
    return _$result;
  }
}

/// Path Control State immutable class
///
class _$PathControlState extends PathControlState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int path_ref;
  @override
  final double start_lat;
  @override
  final double start_lon;
  @override
  final double start_z;
  @override
  final ZUnitsEnum start_z_units;
  @override
  final double end_lat;
  @override
  final double end_lon;
  @override
  final double end_z;
  @override
  final ZUnitsEnum end_z_units;
  @override
  final double lradius;
  @override
  final PathControlStateBitfieldFlags flags;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double vx;
  @override
  final double vy;
  @override
  final double vz;
  @override
  final double course_error;
  @override
  final int eta;

  factory _$PathControlState([void updates(PathControlStateBuilder b)]) =>
      (new PathControlStateBuilder()..update(updates)).build();

  _$PathControlState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.path_ref,
      this.start_lat,
      this.start_lon,
      this.start_z,
      this.start_z_units,
      this.end_lat,
      this.end_lon,
      this.end_z,
      this.end_z_units,
      this.lradius,
      this.flags,
      this.x,
      this.y,
      this.z,
      this.vx,
      this.vy,
      this.vz,
      this.course_error,
      this.eta})
      : super._();

  @override
  PathControlState rebuild(void updates(PathControlStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PathControlStateBuilder toBuilder() => new PathControlStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PathControlState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        path_ref == this.path_ref &&
        start_lat == this.start_lat &&
        start_lon == this.start_lon &&
        start_z == this.start_z &&
        start_z_units == this.start_z_units &&
        end_lat == this.end_lat &&
        end_lon == this.end_lon &&
        end_z == this.end_z &&
        end_z_units == this.end_z_units &&
        lradius == this.lradius &&
        flags == this.flags &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        vx == this.vx &&
        vy == this.vy &&
        vz == this.vz &&
        course_error == this.course_error &&
        eta == this.eta;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        path_ref.hashCode), 
        start_lat.hashCode), 
        start_lon.hashCode), 
        start_z.hashCode), 
        start_z_units.hashCode), 
        end_lat.hashCode), 
        end_lon.hashCode), 
        end_z.hashCode), 
        end_z_units.hashCode), 
        lradius.hashCode), 
        flags.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode), 
        vx.hashCode), 
        vy.hashCode), 
        vz.hashCode), 
        course_error.hashCode), 
        eta.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PathControlState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('path_ref', path_ref)
          ..add('start_lat', start_lat)
          ..add('start_lon', start_lon)
          ..add('start_z', start_z)
          ..add('start_z_units', start_z_units)
          ..add('end_lat', end_lat)
          ..add('end_lon', end_lon)
          ..add('end_z', end_z)
          ..add('end_z_units', end_z_units)
          ..add('lradius', lradius)
          ..add('flags', flags)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('vx', vx)
          ..add('vy', vy)
          ..add('vz', vz)
          ..add('course_error', course_error)
          ..add('eta', eta))
        .toString();
  }
}

/// Path Control State builder class
///
class PathControlStateBuilder implements Builder<PathControlState, PathControlStateBuilder> {
  _$PathControlState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _path_ref;
  int get path_ref => _$this._path_ref;
  set path_ref(int path_ref) => _$this._path_ref = path_ref;

  double _start_lat;
  double get start_lat => _$this._start_lat;
  set start_lat(double start_lat) => _$this._start_lat = start_lat;

  double _start_lon;
  double get start_lon => _$this._start_lon;
  set start_lon(double start_lon) => _$this._start_lon = start_lon;

  double _start_z;
  double get start_z => _$this._start_z;
  set start_z(double start_z) => _$this._start_z = start_z;

  ZUnitsEnum _start_z_units;
  ZUnitsEnum get start_z_units => _$this._start_z_units;
  set start_z_units(ZUnitsEnum start_z_units) => _$this._start_z_units = start_z_units;

  double _end_lat;
  double get end_lat => _$this._end_lat;
  set end_lat(double end_lat) => _$this._end_lat = end_lat;

  double _end_lon;
  double get end_lon => _$this._end_lon;
  set end_lon(double end_lon) => _$this._end_lon = end_lon;

  double _end_z;
  double get end_z => _$this._end_z;
  set end_z(double end_z) => _$this._end_z = end_z;

  ZUnitsEnum _end_z_units;
  ZUnitsEnum get end_z_units => _$this._end_z_units;
  set end_z_units(ZUnitsEnum end_z_units) => _$this._end_z_units = end_z_units;

  double _lradius;
  double get lradius => _$this._lradius;
  set lradius(double lradius) => _$this._lradius = lradius;

  PathControlStateBitfieldFlags _flags;
  PathControlStateBitfieldFlags get flags => _$this._flags;
  set flags(PathControlStateBitfieldFlags flags) => _$this._flags = flags;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _vx;
  double get vx => _$this._vx;
  set vx(double vx) => _$this._vx = vx;

  double _vy;
  double get vy => _$this._vy;
  set vy(double vy) => _$this._vy = vy;

  double _vz;
  double get vz => _$this._vz;
  set vz(double vz) => _$this._vz = vz;

  double _course_error;
  double get course_error => _$this._course_error;
  set course_error(double course_error) => _$this._course_error = course_error;

  int _eta;
  int get eta => _$this._eta;
  set eta(int eta) => _$this._eta = eta;

  PathControlStateBuilder();

  PathControlStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _path_ref = _$v.path_ref;
      _start_lat = _$v.start_lat;
      _start_lon = _$v.start_lon;
      _start_z = _$v.start_z;
      _start_z_units = _$v.start_z_units;
      _end_lat = _$v.end_lat;
      _end_lon = _$v.end_lon;
      _end_z = _$v.end_z;
      _end_z_units = _$v.end_z_units;
      _lradius = _$v.lradius;
      _flags = _$v.flags;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _vx = _$v.vx;
      _vy = _$v.vy;
      _vz = _$v.vz;
      _course_error = _$v.course_error;
      _eta = _$v.eta;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PathControlState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PathControlState;
  }

  @override
  void update(void updates(PathControlStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PathControlState build() {
    final _$result = _$v ??
        new _$PathControlState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            path_ref: path_ref,
            start_lat: start_lat,
            start_lon: start_lon,
            start_z: start_z,
            start_z_units: start_z_units,
            end_lat: end_lat,
            end_lon: end_lon,
            end_z: end_z,
            end_z_units: end_z_units,
            lradius: lradius,
            flags: flags,
            x: x,
            y: y,
            z: z,
            vx: vx,
            vy: vy,
            vz: vz,
            course_error: course_error,
            eta: eta);
    replace(_$result);
    return _$result;
  }
}

/// Allocated Control Torques immutable class
///
class _$AllocatedControlTorques extends AllocatedControlTorques {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double k;
  @override
  final double m;
  @override
  final double n;

  factory _$AllocatedControlTorques([void updates(AllocatedControlTorquesBuilder b)]) =>
      (new AllocatedControlTorquesBuilder()..update(updates)).build();

  _$AllocatedControlTorques._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.k,
      this.m,
      this.n})
      : super._();

  @override
  AllocatedControlTorques rebuild(void updates(AllocatedControlTorquesBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AllocatedControlTorquesBuilder toBuilder() => new AllocatedControlTorquesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AllocatedControlTorques &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        k == this.k &&
        m == this.m &&
        n == this.n;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        k.hashCode), 
        m.hashCode), 
        n.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AllocatedControlTorques')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('k', k)
          ..add('m', m)
          ..add('n', n))
        .toString();
  }
}

/// Allocated Control Torques builder class
///
class AllocatedControlTorquesBuilder implements Builder<AllocatedControlTorques, AllocatedControlTorquesBuilder> {
  _$AllocatedControlTorques _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _k;
  double get k => _$this._k;
  set k(double k) => _$this._k = k;

  double _m;
  double get m => _$this._m;
  set m(double m) => _$this._m = m;

  double _n;
  double get n => _$this._n;
  set n(double n) => _$this._n = n;

  AllocatedControlTorquesBuilder();

  AllocatedControlTorquesBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _k = _$v.k;
      _m = _$v.m;
      _n = _$v.n;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AllocatedControlTorques other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AllocatedControlTorques;
  }

  @override
  void update(void updates(AllocatedControlTorquesBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AllocatedControlTorques build() {
    final _$result = _$v ??
        new _$AllocatedControlTorques._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            k: k,
            m: m,
            n: n);
    replace(_$result);
    return _$result;
  }
}

/// Control Parcel immutable class
///
class _$ControlParcel extends ControlParcel {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double p;
  @override
  final double i;
  @override
  final double d;
  @override
  final double a;

  factory _$ControlParcel([void updates(ControlParcelBuilder b)]) =>
      (new ControlParcelBuilder()..update(updates)).build();

  _$ControlParcel._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.p,
      this.i,
      this.d,
      this.a})
      : super._();

  @override
  ControlParcel rebuild(void updates(ControlParcelBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ControlParcelBuilder toBuilder() => new ControlParcelBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ControlParcel &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        p == this.p &&
        i == this.i &&
        d == this.d &&
        a == this.a;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        p.hashCode), 
        i.hashCode), 
        d.hashCode), 
        a.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ControlParcel')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('p', p)
          ..add('i', i)
          ..add('d', d)
          ..add('a', a))
        .toString();
  }
}

/// Control Parcel builder class
///
class ControlParcelBuilder implements Builder<ControlParcel, ControlParcelBuilder> {
  _$ControlParcel _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _p;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _i;
  double get i => _$this._i;
  set i(double i) => _$this._i = i;

  double _d;
  double get d => _$this._d;
  set d(double d) => _$this._d = d;

  double _a;
  double get a => _$this._a;
  set a(double a) => _$this._a = a;

  ControlParcelBuilder();

  ControlParcelBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _p = _$v.p;
      _i = _$v.i;
      _d = _$v.d;
      _a = _$v.a;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ControlParcel other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ControlParcel;
  }

  @override
  void update(void updates(ControlParcelBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ControlParcel build() {
    final _$result = _$v ??
        new _$ControlParcel._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            p: p,
            i: i,
            d: d,
            a: a);
    replace(_$result);
    return _$result;
  }
}

/// Brake immutable class
///
class _$Brake extends Brake {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final BrakeEnumOp op;

  factory _$Brake([void updates(BrakeBuilder b)]) =>
      (new BrakeBuilder()..update(updates)).build();

  _$Brake._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op})
      : super._();

  @override
  Brake rebuild(void updates(BrakeBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  BrakeBuilder toBuilder() => new BrakeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Brake &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Brake')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op))
        .toString();
  }
}

/// Brake builder class
///
class BrakeBuilder implements Builder<Brake, BrakeBuilder> {
  _$Brake _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  BrakeEnumOp _op;
  BrakeEnumOp get op => _$this._op;
  set op(BrakeEnumOp op) => _$this._op = op;

  BrakeBuilder();

  BrakeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Brake other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Brake;
  }

  @override
  void update(void updates(BrakeBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Brake build() {
    final _$result = _$v ??
        new _$Brake._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op);
    replace(_$result);
    return _$result;
  }
}

/// Desired Linear State immutable class
///
class _$DesiredLinearState extends DesiredLinearState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double vx;
  @override
  final double vy;
  @override
  final double vz;
  @override
  final double ax;
  @override
  final double ay;
  @override
  final double az;
  @override
  final DesiredLinearStateBitfieldFlags flags;

  factory _$DesiredLinearState([void updates(DesiredLinearStateBuilder b)]) =>
      (new DesiredLinearStateBuilder()..update(updates)).build();

  _$DesiredLinearState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.vx,
      this.vy,
      this.vz,
      this.ax,
      this.ay,
      this.az,
      this.flags})
      : super._();

  @override
  DesiredLinearState rebuild(void updates(DesiredLinearStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredLinearStateBuilder toBuilder() => new DesiredLinearStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredLinearState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        vx == this.vx &&
        vy == this.vy &&
        vz == this.vz &&
        ax == this.ax &&
        ay == this.ay &&
        az == this.az &&
        flags == this.flags;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode), 
        vx.hashCode), 
        vy.hashCode), 
        vz.hashCode), 
        ax.hashCode), 
        ay.hashCode), 
        az.hashCode), 
        flags.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredLinearState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('vx', vx)
          ..add('vy', vy)
          ..add('vz', vz)
          ..add('ax', ax)
          ..add('ay', ay)
          ..add('az', az)
          ..add('flags', flags))
        .toString();
  }
}

/// Desired Linear State builder class
///
class DesiredLinearStateBuilder implements Builder<DesiredLinearState, DesiredLinearStateBuilder> {
  _$DesiredLinearState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _vx;
  double get vx => _$this._vx;
  set vx(double vx) => _$this._vx = vx;

  double _vy;
  double get vy => _$this._vy;
  set vy(double vy) => _$this._vy = vy;

  double _vz;
  double get vz => _$this._vz;
  set vz(double vz) => _$this._vz = vz;

  double _ax;
  double get ax => _$this._ax;
  set ax(double ax) => _$this._ax = ax;

  double _ay;
  double get ay => _$this._ay;
  set ay(double ay) => _$this._ay = ay;

  double _az;
  double get az => _$this._az;
  set az(double az) => _$this._az = az;

  DesiredLinearStateBitfieldFlags _flags;
  DesiredLinearStateBitfieldFlags get flags => _$this._flags;
  set flags(DesiredLinearStateBitfieldFlags flags) => _$this._flags = flags;

  DesiredLinearStateBuilder();

  DesiredLinearStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _vx = _$v.vx;
      _vy = _$v.vy;
      _vz = _$v.vz;
      _ax = _$v.ax;
      _ay = _$v.ay;
      _az = _$v.az;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredLinearState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredLinearState;
  }

  @override
  void update(void updates(DesiredLinearStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredLinearState build() {
    final _$result = _$v ??
        new _$DesiredLinearState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            x: x,
            y: y,
            z: z,
            vx: vx,
            vy: vy,
            vz: vz,
            ax: ax,
            ay: ay,
            az: az,
            flags: flags);
    replace(_$result);
    return _$result;
  }
}

/// Desired Throttle immutable class
///
class _$DesiredThrottle extends DesiredThrottle {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredThrottle([void updates(DesiredThrottleBuilder b)]) =>
      (new DesiredThrottleBuilder()..update(updates)).build();

  _$DesiredThrottle._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredThrottle rebuild(void updates(DesiredThrottleBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredThrottleBuilder toBuilder() => new DesiredThrottleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredThrottle &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredThrottle')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Desired Throttle builder class
///
class DesiredThrottleBuilder implements Builder<DesiredThrottle, DesiredThrottleBuilder> {
  _$DesiredThrottle _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredThrottleBuilder();

  DesiredThrottleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredThrottle other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredThrottle;
  }

  @override
  void update(void updates(DesiredThrottleBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredThrottle build() {
    final _$result = _$v ??
        new _$DesiredThrottle._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Goto Maneuver immutable class
///
class _$Goto extends Goto {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final double roll;
  @override
  final double pitch;
  @override
  final double yaw;
  @override
  final String custom;

  factory _$Goto([void updates(GotoBuilder b)]) =>
      (new GotoBuilder()..update(updates)).build();

  _$Goto._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.speed,
      this.speed_units,
      this.roll,
      this.pitch,
      this.yaw,
      this.custom})
      : super._();

  @override
  Goto rebuild(void updates(GotoBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GotoBuilder toBuilder() => new GotoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Goto &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        roll == this.roll &&
        pitch == this.pitch &&
        yaw == this.yaw &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        roll.hashCode), 
        pitch.hashCode), 
        yaw.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Goto')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('roll', roll)
          ..add('pitch', pitch)
          ..add('yaw', yaw)
          ..add('custom', custom))
        .toString();
  }
}

/// Goto Maneuver builder class
///
class GotoBuilder implements Builder<Goto, GotoBuilder> {
  _$Goto _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  double _roll;
  double get roll => _$this._roll;
  set roll(double roll) => _$this._roll = roll;

  double _pitch;
  double get pitch => _$this._pitch;
  set pitch(double pitch) => _$this._pitch = pitch;

  double _yaw;
  double get yaw => _$this._yaw;
  set yaw(double yaw) => _$this._yaw = yaw;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  GotoBuilder();

  GotoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _roll = _$v.roll;
      _pitch = _$v.pitch;
      _yaw = _$v.yaw;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Goto other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Goto;
  }

  @override
  void update(void updates(GotoBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Goto build() {
    final _$result = _$v ??
        new _$Goto._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            speed: speed,
            speed_units: speed_units,
            roll: roll,
            pitch: pitch,
            yaw: yaw,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// PopUp Maneuver immutable class
///
class _$PopUp extends PopUp {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final int duration;
  @override
  final double radius;
  @override
  final PopUpBitfieldFlags flags;
  @override
  final String custom;

  factory _$PopUp([void updates(PopUpBuilder b)]) =>
      (new PopUpBuilder()..update(updates)).build();

  _$PopUp._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.speed,
      this.speed_units,
      this.duration,
      this.radius,
      this.flags,
      this.custom})
      : super._();

  @override
  PopUp rebuild(void updates(PopUpBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PopUpBuilder toBuilder() => new PopUpBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PopUp &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        duration == this.duration &&
        radius == this.radius &&
        flags == this.flags &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        duration.hashCode), 
        radius.hashCode), 
        flags.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PopUp')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('duration', duration)
          ..add('radius', radius)
          ..add('flags', flags)
          ..add('custom', custom))
        .toString();
  }
}

/// PopUp Maneuver builder class
///
class PopUpBuilder implements Builder<PopUp, PopUpBuilder> {
  _$PopUp _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _radius;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  PopUpBitfieldFlags _flags;
  PopUpBitfieldFlags get flags => _$this._flags;
  set flags(PopUpBitfieldFlags flags) => _$this._flags = flags;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  PopUpBuilder();

  PopUpBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _duration = _$v.duration;
      _radius = _$v.radius;
      _flags = _$v.flags;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PopUp other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PopUp;
  }

  @override
  void update(void updates(PopUpBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PopUp build() {
    final _$result = _$v ??
        new _$PopUp._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            speed: speed,
            speed_units: speed_units,
            duration: duration,
            radius: radius,
            flags: flags,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Teleoperation Maneuver immutable class
///
class _$Teleoperation extends Teleoperation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String custom;

  factory _$Teleoperation([void updates(TeleoperationBuilder b)]) =>
      (new TeleoperationBuilder()..update(updates)).build();

  _$Teleoperation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.custom})
      : super._();

  @override
  Teleoperation rebuild(void updates(TeleoperationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TeleoperationBuilder toBuilder() => new TeleoperationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Teleoperation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Teleoperation')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('custom', custom))
        .toString();
  }
}

/// Teleoperation Maneuver builder class
///
class TeleoperationBuilder implements Builder<Teleoperation, TeleoperationBuilder> {
  _$Teleoperation _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  TeleoperationBuilder();

  TeleoperationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Teleoperation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Teleoperation;
  }

  @override
  void update(void updates(TeleoperationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Teleoperation build() {
    final _$result = _$v ??
        new _$Teleoperation._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Loiter Maneuver immutable class
///
class _$Loiter extends Loiter {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final LoiterEnumType type;
  @override
  final double radius;
  @override
  final double length;
  @override
  final double bearing;
  @override
  final LoiterEnumDirection direction;
  @override
  final String custom;

  factory _$Loiter([void updates(LoiterBuilder b)]) =>
      (new LoiterBuilder()..update(updates)).build();

  _$Loiter._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.duration,
      this.speed,
      this.speed_units,
      this.type,
      this.radius,
      this.length,
      this.bearing,
      this.direction,
      this.custom})
      : super._();

  @override
  Loiter rebuild(void updates(LoiterBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LoiterBuilder toBuilder() => new LoiterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Loiter &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        duration == this.duration &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        type == this.type &&
        radius == this.radius &&
        length == this.length &&
        bearing == this.bearing &&
        direction == this.direction &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        duration.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        type.hashCode), 
        radius.hashCode), 
        length.hashCode), 
        bearing.hashCode), 
        direction.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Loiter')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('duration', duration)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('type', type)
          ..add('radius', radius)
          ..add('length', length)
          ..add('bearing', bearing)
          ..add('direction', direction)
          ..add('custom', custom))
        .toString();
  }
}

/// Loiter Maneuver builder class
///
class LoiterBuilder implements Builder<Loiter, LoiterBuilder> {
  _$Loiter _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  LoiterEnumType _type;
  LoiterEnumType get type => _$this._type;
  set type(LoiterEnumType type) => _$this._type = type;

  double _radius;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  double _length;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  LoiterEnumDirection _direction;
  LoiterEnumDirection get direction => _$this._direction;
  set direction(LoiterEnumDirection direction) => _$this._direction = direction;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  LoiterBuilder();

  LoiterBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _type = _$v.type;
      _radius = _$v.radius;
      _length = _$v.length;
      _bearing = _$v.bearing;
      _direction = _$v.direction;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Loiter other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Loiter;
  }

  @override
  void update(void updates(LoiterBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Loiter build() {
    final _$result = _$v ??
        new _$Loiter._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            duration: duration,
            speed: speed,
            speed_units: speed_units,
            type: type,
            radius: radius,
            length: length,
            bearing: bearing,
            direction: direction,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Idle Maneuver immutable class
///
class _$IdleManeuver extends IdleManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int duration;
  @override
  final String custom;

  factory _$IdleManeuver([void updates(IdleManeuverBuilder b)]) =>
      (new IdleManeuverBuilder()..update(updates)).build();

  _$IdleManeuver._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.duration,
      this.custom})
      : super._();

  @override
  IdleManeuver rebuild(void updates(IdleManeuverBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  IdleManeuverBuilder toBuilder() => new IdleManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IdleManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        duration == this.duration &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        duration.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IdleManeuver')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('duration', duration)
          ..add('custom', custom))
        .toString();
  }
}

/// Idle Maneuver builder class
///
class IdleManeuverBuilder implements Builder<IdleManeuver, IdleManeuverBuilder> {
  _$IdleManeuver _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  IdleManeuverBuilder();

  IdleManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _duration = _$v.duration;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IdleManeuver other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$IdleManeuver;
  }

  @override
  void update(void updates(IdleManeuverBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$IdleManeuver build() {
    final _$result = _$v ??
        new _$IdleManeuver._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            duration: duration,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Low Level Control Maneuver immutable class
///
class _$LowLevelControl extends LowLevelControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ControlCommand control;
  @override
  final int duration;
  @override
  final String custom;

  factory _$LowLevelControl([void updates(LowLevelControlBuilder b)]) =>
      (new LowLevelControlBuilder()..update(updates)).build();

  _$LowLevelControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.control,
      this.duration,
      this.custom})
      : super._();

  @override
  LowLevelControl rebuild(void updates(LowLevelControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LowLevelControlBuilder toBuilder() => new LowLevelControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LowLevelControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        control == this.control &&
        duration == this.duration &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        control.hashCode), 
        duration.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LowLevelControl')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('control', control)
          ..add('duration', duration)
          ..add('custom', custom))
        .toString();
  }
}

/// Low Level Control Maneuver builder class
///
class LowLevelControlBuilder implements Builder<LowLevelControl, LowLevelControlBuilder> {
  _$LowLevelControl _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ControlCommand _control;
  ControlCommand get control => _$this._control;
  set control(ControlCommand control) => _$this._control = control;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  LowLevelControlBuilder();

  LowLevelControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _control = _$v.control;
      _duration = _$v.duration;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LowLevelControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LowLevelControl;
  }

  @override
  void update(void updates(LowLevelControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LowLevelControl build() {
    final _$result = _$v ??
        new _$LowLevelControl._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            control: control,
            duration: duration,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Rows Maneuver immutable class
///
class _$Rows extends Rows {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final double bearing;
  @override
  final double cross_angle;
  @override
  final double width;
  @override
  final double length;
  @override
  final double hstep;
  @override
  final int coff;
  @override
  final int alternation;
  @override
  final RowsBitfieldFlags flags;
  @override
  final String custom;

  factory _$Rows([void updates(RowsBuilder b)]) =>
      (new RowsBuilder()..update(updates)).build();

  _$Rows._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.speed,
      this.speed_units,
      this.bearing,
      this.cross_angle,
      this.width,
      this.length,
      this.hstep,
      this.coff,
      this.alternation,
      this.flags,
      this.custom})
      : super._();

  @override
  Rows rebuild(void updates(RowsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RowsBuilder toBuilder() => new RowsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Rows &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        bearing == this.bearing &&
        cross_angle == this.cross_angle &&
        width == this.width &&
        length == this.length &&
        hstep == this.hstep &&
        coff == this.coff &&
        alternation == this.alternation &&
        flags == this.flags &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        bearing.hashCode), 
        cross_angle.hashCode), 
        width.hashCode), 
        length.hashCode), 
        hstep.hashCode), 
        coff.hashCode), 
        alternation.hashCode), 
        flags.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Rows')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('bearing', bearing)
          ..add('cross_angle', cross_angle)
          ..add('width', width)
          ..add('length', length)
          ..add('hstep', hstep)
          ..add('coff', coff)
          ..add('alternation', alternation)
          ..add('flags', flags)
          ..add('custom', custom))
        .toString();
  }
}

/// Rows Maneuver builder class
///
class RowsBuilder implements Builder<Rows, RowsBuilder> {
  _$Rows _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _cross_angle;
  double get cross_angle => _$this._cross_angle;
  set cross_angle(double cross_angle) => _$this._cross_angle = cross_angle;

  double _width;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  double _length;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  double _hstep;
  double get hstep => _$this._hstep;
  set hstep(double hstep) => _$this._hstep = hstep;

  int _coff;
  int get coff => _$this._coff;
  set coff(int coff) => _$this._coff = coff;

  int _alternation;
  int get alternation => _$this._alternation;
  set alternation(int alternation) => _$this._alternation = alternation;

  RowsBitfieldFlags _flags;
  RowsBitfieldFlags get flags => _$this._flags;
  set flags(RowsBitfieldFlags flags) => _$this._flags = flags;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  RowsBuilder();

  RowsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _bearing = _$v.bearing;
      _cross_angle = _$v.cross_angle;
      _width = _$v.width;
      _length = _$v.length;
      _hstep = _$v.hstep;
      _coff = _$v.coff;
      _alternation = _$v.alternation;
      _flags = _$v.flags;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Rows other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Rows;
  }

  @override
  void update(void updates(RowsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Rows build() {
    final _$result = _$v ??
        new _$Rows._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            speed: speed,
            speed_units: speed_units,
            bearing: bearing,
            cross_angle: cross_angle,
            width: width,
            length: length,
            hstep: hstep,
            coff: coff,
            alternation: alternation,
            flags: flags,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Follow Path Maneuver immutable class
///
class _$FollowPath extends FollowPath {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final List<PathPoint> points;
  @override
  final String custom;

  factory _$FollowPath([void updates(FollowPathBuilder b)]) =>
      (new FollowPathBuilder()..update(updates)).build();

  _$FollowPath._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.speed,
      this.speed_units,
      this.points,
      this.custom})
      : super._();

  @override
  FollowPath rebuild(void updates(FollowPathBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowPathBuilder toBuilder() => new FollowPathBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowPath &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        points == this.points &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        points.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowPath')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('points', points)
          ..add('custom', custom))
        .toString();
  }
}

/// Follow Path Maneuver builder class
///
class FollowPathBuilder implements Builder<FollowPath, FollowPathBuilder> {
  _$FollowPath _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  List<PathPoint> _points;
  List<PathPoint> get points => _$this._points;
  set points(List<PathPoint> points) => _$this._points = points;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FollowPathBuilder();

  FollowPathBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _points = _$v.points;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowPath other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FollowPath;
  }

  @override
  void update(void updates(FollowPathBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowPath build() {
    final _$result = _$v ??
        new _$FollowPath._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            speed: speed,
            speed_units: speed_units,
            points: points,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Path Point immutable class
///
class _$PathPoint extends PathPoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$PathPoint([void updates(PathPointBuilder b)]) =>
      (new PathPointBuilder()..update(updates)).build();

  _$PathPoint._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  PathPoint rebuild(void updates(PathPointBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PathPointBuilder toBuilder() => new PathPointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PathPoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PathPoint')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Path Point builder class
///
class PathPointBuilder implements Builder<PathPoint, PathPointBuilder> {
  _$PathPoint _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  PathPointBuilder();

  PathPointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PathPoint other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PathPoint;
  }

  @override
  void update(void updates(PathPointBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PathPoint build() {
    final _$result = _$v ??
        new _$PathPoint._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            x: x,
            y: y,
            z: z);
    replace(_$result);
    return _$result;
  }
}

/// Yo-Yo Maneuver immutable class
///
class _$YoYo extends YoYo {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double amplitude;
  @override
  final double pitch;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final String custom;

  factory _$YoYo([void updates(YoYoBuilder b)]) =>
      (new YoYoBuilder()..update(updates)).build();

  _$YoYo._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.amplitude,
      this.pitch,
      this.speed,
      this.speed_units,
      this.custom})
      : super._();

  @override
  YoYo rebuild(void updates(YoYoBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  YoYoBuilder toBuilder() => new YoYoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is YoYo &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        amplitude == this.amplitude &&
        pitch == this.pitch &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        amplitude.hashCode), 
        pitch.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('YoYo')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('amplitude', amplitude)
          ..add('pitch', pitch)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('custom', custom))
        .toString();
  }
}

/// Yo-Yo Maneuver builder class
///
class YoYoBuilder implements Builder<YoYo, YoYoBuilder> {
  _$YoYo _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _amplitude;
  double get amplitude => _$this._amplitude;
  set amplitude(double amplitude) => _$this._amplitude = amplitude;

  double _pitch;
  double get pitch => _$this._pitch;
  set pitch(double pitch) => _$this._pitch = pitch;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  YoYoBuilder();

  YoYoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _amplitude = _$v.amplitude;
      _pitch = _$v.pitch;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(YoYo other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$YoYo;
  }

  @override
  void update(void updates(YoYoBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$YoYo build() {
    final _$result = _$v ??
        new _$YoYo._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            amplitude: amplitude,
            pitch: pitch,
            speed: speed,
            speed_units: speed_units,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Teleoperation Done immutable class
///
class _$TeleoperationDone extends TeleoperationDone {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$TeleoperationDone([void updates(TeleoperationDoneBuilder b)]) =>
      (new TeleoperationDoneBuilder()..update(updates)).build();

  _$TeleoperationDone._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  TeleoperationDone rebuild(void updates(TeleoperationDoneBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TeleoperationDoneBuilder toBuilder() => new TeleoperationDoneBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TeleoperationDone &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TeleoperationDone')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt))
        .toString();
  }
}

/// Teleoperation Done builder class
///
class TeleoperationDoneBuilder implements Builder<TeleoperationDone, TeleoperationDoneBuilder> {
  _$TeleoperationDone _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  TeleoperationDoneBuilder();

  TeleoperationDoneBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TeleoperationDone other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TeleoperationDone;
  }

  @override
  void update(void updates(TeleoperationDoneBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TeleoperationDone build() {
    final _$result = _$v ??
        new _$TeleoperationDone._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt);
    replace(_$result);
    return _$result;
  }
}

/// Station Keeping immutable class
///
class _$StationKeeping extends StationKeeping {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double radius;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final String custom;

  factory _$StationKeeping([void updates(StationKeepingBuilder b)]) =>
      (new StationKeepingBuilder()..update(updates)).build();

  _$StationKeeping._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.radius,
      this.duration,
      this.speed,
      this.speed_units,
      this.custom})
      : super._();

  @override
  StationKeeping rebuild(void updates(StationKeepingBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  StationKeepingBuilder toBuilder() => new StationKeepingBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StationKeeping &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        radius == this.radius &&
        duration == this.duration &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        radius.hashCode), 
        duration.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StationKeeping')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('radius', radius)
          ..add('duration', duration)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('custom', custom))
        .toString();
  }
}

/// Station Keeping builder class
///
class StationKeepingBuilder implements Builder<StationKeeping, StationKeepingBuilder> {
  _$StationKeeping _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _radius;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  StationKeepingBuilder();

  StationKeepingBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _radius = _$v.radius;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StationKeeping other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$StationKeeping;
  }

  @override
  void update(void updates(StationKeepingBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$StationKeeping build() {
    final _$result = _$v ??
        new _$StationKeeping._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            radius: radius,
            duration: duration,
            speed: speed,
            speed_units: speed_units,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Elevator Maneuver immutable class
///
class _$Elevator extends Elevator {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final ElevatorBitfieldFlags flags;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double start_z;
  @override
  final ZUnitsEnum start_z_units;
  @override
  final double end_z;
  @override
  final ZUnitsEnum end_z_units;
  @override
  final double radius;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final String custom;

  factory _$Elevator([void updates(ElevatorBuilder b)]) =>
      (new ElevatorBuilder()..update(updates)).build();

  _$Elevator._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.flags,
      this.lat,
      this.lon,
      this.start_z,
      this.start_z_units,
      this.end_z,
      this.end_z_units,
      this.radius,
      this.speed,
      this.speed_units,
      this.custom})
      : super._();

  @override
  Elevator rebuild(void updates(ElevatorBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ElevatorBuilder toBuilder() => new ElevatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Elevator &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        flags == this.flags &&
        lat == this.lat &&
        lon == this.lon &&
        start_z == this.start_z &&
        start_z_units == this.start_z_units &&
        end_z == this.end_z &&
        end_z_units == this.end_z_units &&
        radius == this.radius &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        flags.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        start_z.hashCode), 
        start_z_units.hashCode), 
        end_z.hashCode), 
        end_z_units.hashCode), 
        radius.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Elevator')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('flags', flags)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('start_z', start_z)
          ..add('start_z_units', start_z_units)
          ..add('end_z', end_z)
          ..add('end_z_units', end_z_units)
          ..add('radius', radius)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('custom', custom))
        .toString();
  }
}

/// Elevator Maneuver builder class
///
class ElevatorBuilder implements Builder<Elevator, ElevatorBuilder> {
  _$Elevator _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  ElevatorBitfieldFlags _flags;
  ElevatorBitfieldFlags get flags => _$this._flags;
  set flags(ElevatorBitfieldFlags flags) => _$this._flags = flags;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _start_z;
  double get start_z => _$this._start_z;
  set start_z(double start_z) => _$this._start_z = start_z;

  ZUnitsEnum _start_z_units;
  ZUnitsEnum get start_z_units => _$this._start_z_units;
  set start_z_units(ZUnitsEnum start_z_units) => _$this._start_z_units = start_z_units;

  double _end_z;
  double get end_z => _$this._end_z;
  set end_z(double end_z) => _$this._end_z = end_z;

  ZUnitsEnum _end_z_units;
  ZUnitsEnum get end_z_units => _$this._end_z_units;
  set end_z_units(ZUnitsEnum end_z_units) => _$this._end_z_units = end_z_units;

  double _radius;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  ElevatorBuilder();

  ElevatorBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _flags = _$v.flags;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _start_z = _$v.start_z;
      _start_z_units = _$v.start_z_units;
      _end_z = _$v.end_z;
      _end_z_units = _$v.end_z_units;
      _radius = _$v.radius;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Elevator other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Elevator;
  }

  @override
  void update(void updates(ElevatorBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Elevator build() {
    final _$result = _$v ??
        new _$Elevator._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            flags: flags,
            lat: lat,
            lon: lon,
            start_z: start_z,
            start_z_units: start_z_units,
            end_z: end_z,
            end_z_units: end_z_units,
            radius: radius,
            speed: speed,
            speed_units: speed_units,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Follow Trajectory immutable class
///
class _$FollowTrajectory extends FollowTrajectory {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final List<TrajectoryPoint> points;
  @override
  final String custom;

  factory _$FollowTrajectory([void updates(FollowTrajectoryBuilder b)]) =>
      (new FollowTrajectoryBuilder()..update(updates)).build();

  _$FollowTrajectory._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.speed,
      this.speed_units,
      this.points,
      this.custom})
      : super._();

  @override
  FollowTrajectory rebuild(void updates(FollowTrajectoryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowTrajectoryBuilder toBuilder() => new FollowTrajectoryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowTrajectory &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        points == this.points &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        points.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowTrajectory')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('points', points)
          ..add('custom', custom))
        .toString();
  }
}

/// Follow Trajectory builder class
///
class FollowTrajectoryBuilder implements Builder<FollowTrajectory, FollowTrajectoryBuilder> {
  _$FollowTrajectory _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  List<TrajectoryPoint> _points;
  List<TrajectoryPoint> get points => _$this._points;
  set points(List<TrajectoryPoint> points) => _$this._points = points;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FollowTrajectoryBuilder();

  FollowTrajectoryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _points = _$v.points;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowTrajectory other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FollowTrajectory;
  }

  @override
  void update(void updates(FollowTrajectoryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowTrajectory build() {
    final _$result = _$v ??
        new _$FollowTrajectory._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            speed: speed,
            speed_units: speed_units,
            points: points,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Trajectory Point immutable class
///
class _$TrajectoryPoint extends TrajectoryPoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double t;

  factory _$TrajectoryPoint([void updates(TrajectoryPointBuilder b)]) =>
      (new TrajectoryPointBuilder()..update(updates)).build();

  _$TrajectoryPoint._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.t})
      : super._();

  @override
  TrajectoryPoint rebuild(void updates(TrajectoryPointBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrajectoryPointBuilder toBuilder() => new TrajectoryPointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrajectoryPoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        t == this.t;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode), 
        t.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrajectoryPoint')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('t', t))
        .toString();
  }
}

/// Trajectory Point builder class
///
class TrajectoryPointBuilder implements Builder<TrajectoryPoint, TrajectoryPointBuilder> {
  _$TrajectoryPoint _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _t;
  double get t => _$this._t;
  set t(double t) => _$this._t = t;

  TrajectoryPointBuilder();

  TrajectoryPointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _t = _$v.t;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrajectoryPoint other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrajectoryPoint;
  }

  @override
  void update(void updates(TrajectoryPointBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrajectoryPoint build() {
    final _$result = _$v ??
        new _$TrajectoryPoint._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            x: x,
            y: y,
            z: z,
            t: t);
    replace(_$result);
    return _$result;
  }
}

/// Custom Maneuver immutable class
///
class _$CustomManeuver extends CustomManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final String name;
  @override
  final String custom;

  factory _$CustomManeuver([void updates(CustomManeuverBuilder b)]) =>
      (new CustomManeuverBuilder()..update(updates)).build();

  _$CustomManeuver._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.name,
      this.custom})
      : super._();

  @override
  CustomManeuver rebuild(void updates(CustomManeuverBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CustomManeuverBuilder toBuilder() => new CustomManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CustomManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        name == this.name &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        name.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CustomManeuver')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('name', name)
          ..add('custom', custom))
        .toString();
  }
}

/// Custom Maneuver builder class
///
class CustomManeuverBuilder implements Builder<CustomManeuver, CustomManeuverBuilder> {
  _$CustomManeuver _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  CustomManeuverBuilder();

  CustomManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _name = _$v.name;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CustomManeuver other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CustomManeuver;
  }

  @override
  void update(void updates(CustomManeuverBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CustomManeuver build() {
    final _$result = _$v ??
        new _$CustomManeuver._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            name: name,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Formation immutable class
///
class _$VehicleFormation extends VehicleFormation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final List<TrajectoryPoint> points;
  @override
  final List<VehicleFormationParticipant> participants;
  @override
  final double start_time;
  @override
  final String custom;

  factory _$VehicleFormation([void updates(VehicleFormationBuilder b)]) =>
      (new VehicleFormationBuilder()..update(updates)).build();

  _$VehicleFormation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.speed,
      this.speed_units,
      this.points,
      this.participants,
      this.start_time,
      this.custom})
      : super._();

  @override
  VehicleFormation rebuild(void updates(VehicleFormationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleFormationBuilder toBuilder() => new VehicleFormationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleFormation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        points == this.points &&
        participants == this.participants &&
        start_time == this.start_time &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        points.hashCode), 
        participants.hashCode), 
        start_time.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleFormation')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('points', points)
          ..add('participants', participants)
          ..add('start_time', start_time)
          ..add('custom', custom))
        .toString();
  }
}

/// Vehicle Formation builder class
///
class VehicleFormationBuilder implements Builder<VehicleFormation, VehicleFormationBuilder> {
  _$VehicleFormation _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  List<TrajectoryPoint> _points;
  List<TrajectoryPoint> get points => _$this._points;
  set points(List<TrajectoryPoint> points) => _$this._points = points;

  List<VehicleFormationParticipant> _participants;
  List<VehicleFormationParticipant> get participants => _$this._participants;
  set participants(List<VehicleFormationParticipant> participants) => _$this._participants = participants;

  double _start_time;
  double get start_time => _$this._start_time;
  set start_time(double start_time) => _$this._start_time = start_time;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  VehicleFormationBuilder();

  VehicleFormationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _points = _$v.points;
      _participants = _$v.participants;
      _start_time = _$v.start_time;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleFormation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleFormation;
  }

  @override
  void update(void updates(VehicleFormationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleFormation build() {
    final _$result = _$v ??
        new _$VehicleFormation._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            speed: speed,
            speed_units: speed_units,
            points: points,
            participants: participants,
            start_time: start_time,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Formation Participant immutable class
///
class _$VehicleFormationParticipant extends VehicleFormationParticipant {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int vid;
  @override
  final double off_x;
  @override
  final double off_y;
  @override
  final double off_z;

  factory _$VehicleFormationParticipant([void updates(VehicleFormationParticipantBuilder b)]) =>
      (new VehicleFormationParticipantBuilder()..update(updates)).build();

  _$VehicleFormationParticipant._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.vid,
      this.off_x,
      this.off_y,
      this.off_z})
      : super._();

  @override
  VehicleFormationParticipant rebuild(void updates(VehicleFormationParticipantBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleFormationParticipantBuilder toBuilder() => new VehicleFormationParticipantBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleFormationParticipant &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        vid == this.vid &&
        off_x == this.off_x &&
        off_y == this.off_y &&
        off_z == this.off_z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        vid.hashCode), 
        off_x.hashCode), 
        off_y.hashCode), 
        off_z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleFormationParticipant')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('vid', vid)
          ..add('off_x', off_x)
          ..add('off_y', off_y)
          ..add('off_z', off_z))
        .toString();
  }
}

/// Vehicle Formation Participant builder class
///
class VehicleFormationParticipantBuilder implements Builder<VehicleFormationParticipant, VehicleFormationParticipantBuilder> {
  _$VehicleFormationParticipant _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _vid;
  int get vid => _$this._vid;
  set vid(int vid) => _$this._vid = vid;

  double _off_x;
  double get off_x => _$this._off_x;
  set off_x(double off_x) => _$this._off_x = off_x;

  double _off_y;
  double get off_y => _$this._off_y;
  set off_y(double off_y) => _$this._off_y = off_y;

  double _off_z;
  double get off_z => _$this._off_z;
  set off_z(double off_z) => _$this._off_z = off_z;

  VehicleFormationParticipantBuilder();

  VehicleFormationParticipantBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _vid = _$v.vid;
      _off_x = _$v.off_x;
      _off_y = _$v.off_y;
      _off_z = _$v.off_z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleFormationParticipant other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleFormationParticipant;
  }

  @override
  void update(void updates(VehicleFormationParticipantBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleFormationParticipant build() {
    final _$result = _$v ??
        new _$VehicleFormationParticipant._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            vid: vid,
            off_x: off_x,
            off_y: off_y,
            off_z: off_z);
    replace(_$result);
    return _$result;
  }
}

/// Stop Maneuver immutable class
///
class _$StopManeuver extends StopManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$StopManeuver([void updates(StopManeuverBuilder b)]) =>
      (new StopManeuverBuilder()..update(updates)).build();

  _$StopManeuver._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  StopManeuver rebuild(void updates(StopManeuverBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  StopManeuverBuilder toBuilder() => new StopManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StopManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StopManeuver')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt))
        .toString();
  }
}

/// Stop Maneuver builder class
///
class StopManeuverBuilder implements Builder<StopManeuver, StopManeuverBuilder> {
  _$StopManeuver _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  StopManeuverBuilder();

  StopManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StopManeuver other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$StopManeuver;
  }

  @override
  void update(void updates(StopManeuverBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$StopManeuver build() {
    final _$result = _$v ??
        new _$StopManeuver._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt);
    replace(_$result);
    return _$result;
  }
}

/// Register Maneuver immutable class
///
class _$RegisterManeuver extends RegisterManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int mid;

  factory _$RegisterManeuver([void updates(RegisterManeuverBuilder b)]) =>
      (new RegisterManeuverBuilder()..update(updates)).build();

  _$RegisterManeuver._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.mid})
      : super._();

  @override
  RegisterManeuver rebuild(void updates(RegisterManeuverBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RegisterManeuverBuilder toBuilder() => new RegisterManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RegisterManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        mid == this.mid;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        mid.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RegisterManeuver')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('mid', mid))
        .toString();
  }
}

/// Register Maneuver builder class
///
class RegisterManeuverBuilder implements Builder<RegisterManeuver, RegisterManeuverBuilder> {
  _$RegisterManeuver _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _mid;
  int get mid => _$this._mid;
  set mid(int mid) => _$this._mid = mid;

  RegisterManeuverBuilder();

  RegisterManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _mid = _$v.mid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RegisterManeuver other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RegisterManeuver;
  }

  @override
  void update(void updates(RegisterManeuverBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RegisterManeuver build() {
    final _$result = _$v ??
        new _$RegisterManeuver._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            mid: mid);
    replace(_$result);
    return _$result;
  }
}

/// Maneuver Control State immutable class
///
class _$ManeuverControlState extends ManeuverControlState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ManeuverControlStateEnumState state;
  @override
  final int eta;
  @override
  final String info;

  factory _$ManeuverControlState([void updates(ManeuverControlStateBuilder b)]) =>
      (new ManeuverControlStateBuilder()..update(updates)).build();

  _$ManeuverControlState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state,
      this.eta,
      this.info})
      : super._();

  @override
  ManeuverControlState rebuild(void updates(ManeuverControlStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ManeuverControlStateBuilder toBuilder() => new ManeuverControlStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ManeuverControlState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state &&
        eta == this.eta &&
        info == this.info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        state.hashCode), 
        eta.hashCode), 
        info.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ManeuverControlState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('state', state)
          ..add('eta', eta)
          ..add('info', info))
        .toString();
  }
}

/// Maneuver Control State builder class
///
class ManeuverControlStateBuilder implements Builder<ManeuverControlState, ManeuverControlStateBuilder> {
  _$ManeuverControlState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ManeuverControlStateEnumState _state;
  ManeuverControlStateEnumState get state => _$this._state;
  set state(ManeuverControlStateEnumState state) => _$this._state = state;

  int _eta;
  int get eta => _$this._eta;
  set eta(int eta) => _$this._eta = eta;

  String _info;
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  ManeuverControlStateBuilder();

  ManeuverControlStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _eta = _$v.eta;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ManeuverControlState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ManeuverControlState;
  }

  @override
  void update(void updates(ManeuverControlStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ManeuverControlState build() {
    final _$result = _$v ??
        new _$ManeuverControlState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            state: state,
            eta: eta,
            info: info);
    replace(_$result);
    return _$result;
  }
}

/// Follow System immutable class
///
class _$FollowSystem extends FollowSystem {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int system;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;

  factory _$FollowSystem([void updates(FollowSystemBuilder b)]) =>
      (new FollowSystemBuilder()..update(updates)).build();

  _$FollowSystem._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.system,
      this.duration,
      this.speed,
      this.speed_units,
      this.x,
      this.y,
      this.z,
      this.z_units})
      : super._();

  @override
  FollowSystem rebuild(void updates(FollowSystemBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowSystemBuilder toBuilder() => new FollowSystemBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowSystem &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        system == this.system &&
        duration == this.duration &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        z_units == this.z_units;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        system.hashCode), 
        duration.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode), 
        z_units.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowSystem')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('system', system)
          ..add('duration', duration)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('z_units', z_units))
        .toString();
  }
}

/// Follow System builder class
///
class FollowSystemBuilder implements Builder<FollowSystem, FollowSystemBuilder> {
  _$FollowSystem _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _system;
  int get system => _$this._system;
  set system(int system) => _$this._system = system;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  FollowSystemBuilder();

  FollowSystemBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _system = _$v.system;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowSystem other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FollowSystem;
  }

  @override
  void update(void updates(FollowSystemBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowSystem build() {
    final _$result = _$v ??
        new _$FollowSystem._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            system: system,
            duration: duration,
            speed: speed,
            speed_units: speed_units,
            x: x,
            y: y,
            z: z,
            z_units: z_units);
    replace(_$result);
    return _$result;
  }
}

/// Communications Relay immutable class
///
class _$CommsRelay extends CommsRelay {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final int duration;
  @override
  final int sys_a;
  @override
  final int sys_b;
  @override
  final double move_threshold;

  factory _$CommsRelay([void updates(CommsRelayBuilder b)]) =>
      (new CommsRelayBuilder()..update(updates)).build();

  _$CommsRelay._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.speed,
      this.speed_units,
      this.duration,
      this.sys_a,
      this.sys_b,
      this.move_threshold})
      : super._();

  @override
  CommsRelay rebuild(void updates(CommsRelayBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CommsRelayBuilder toBuilder() => new CommsRelayBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CommsRelay &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        duration == this.duration &&
        sys_a == this.sys_a &&
        sys_b == this.sys_b &&
        move_threshold == this.move_threshold;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        duration.hashCode), 
        sys_a.hashCode), 
        sys_b.hashCode), 
        move_threshold.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CommsRelay')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('duration', duration)
          ..add('sys_a', sys_a)
          ..add('sys_b', sys_b)
          ..add('move_threshold', move_threshold))
        .toString();
  }
}

/// Communications Relay builder class
///
class CommsRelayBuilder implements Builder<CommsRelay, CommsRelayBuilder> {
  _$CommsRelay _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  int _sys_a;
  int get sys_a => _$this._sys_a;
  set sys_a(int sys_a) => _$this._sys_a = sys_a;

  int _sys_b;
  int get sys_b => _$this._sys_b;
  set sys_b(int sys_b) => _$this._sys_b = sys_b;

  double _move_threshold;
  double get move_threshold => _$this._move_threshold;
  set move_threshold(double move_threshold) => _$this._move_threshold = move_threshold;

  CommsRelayBuilder();

  CommsRelayBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _duration = _$v.duration;
      _sys_a = _$v.sys_a;
      _sys_b = _$v.sys_b;
      _move_threshold = _$v.move_threshold;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CommsRelay other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CommsRelay;
  }

  @override
  void update(void updates(CommsRelayBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CommsRelay build() {
    final _$result = _$v ??
        new _$CommsRelay._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            speed: speed,
            speed_units: speed_units,
            duration: duration,
            sys_a: sys_a,
            sys_b: sys_b,
            move_threshold: move_threshold);
    replace(_$result);
    return _$result;
  }
}

/// Cover Area immutable class
///
class _$CoverArea extends CoverArea {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final List<PolygonVertex> polygon;
  @override
  final String custom;

  factory _$CoverArea([void updates(CoverAreaBuilder b)]) =>
      (new CoverAreaBuilder()..update(updates)).build();

  _$CoverArea._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.speed,
      this.speed_units,
      this.polygon,
      this.custom})
      : super._();

  @override
  CoverArea rebuild(void updates(CoverAreaBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CoverAreaBuilder toBuilder() => new CoverAreaBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CoverArea &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        polygon == this.polygon &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        polygon.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CoverArea')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('polygon', polygon)
          ..add('custom', custom))
        .toString();
  }
}

/// Cover Area builder class
///
class CoverAreaBuilder implements Builder<CoverArea, CoverAreaBuilder> {
  _$CoverArea _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  List<PolygonVertex> _polygon;
  List<PolygonVertex> get polygon => _$this._polygon;
  set polygon(List<PolygonVertex> polygon) => _$this._polygon = polygon;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  CoverAreaBuilder();

  CoverAreaBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _polygon = _$v.polygon;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CoverArea other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CoverArea;
  }

  @override
  void update(void updates(CoverAreaBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CoverArea build() {
    final _$result = _$v ??
        new _$CoverArea._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            speed: speed,
            speed_units: speed_units,
            polygon: polygon,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Polygon Vertex immutable class
///
class _$PolygonVertex extends PolygonVertex {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;

  factory _$PolygonVertex([void updates(PolygonVertexBuilder b)]) =>
      (new PolygonVertexBuilder()..update(updates)).build();

  _$PolygonVertex._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon})
      : super._();

  @override
  PolygonVertex rebuild(void updates(PolygonVertexBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PolygonVertexBuilder toBuilder() => new PolygonVertexBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PolygonVertex &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PolygonVertex')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon))
        .toString();
  }
}

/// Polygon Vertex builder class
///
class PolygonVertexBuilder implements Builder<PolygonVertex, PolygonVertexBuilder> {
  _$PolygonVertex _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  PolygonVertexBuilder();

  PolygonVertexBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PolygonVertex other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PolygonVertex;
  }

  @override
  void update(void updates(PolygonVertexBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PolygonVertex build() {
    final _$result = _$v ??
        new _$PolygonVertex._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon);
    replace(_$result);
    return _$result;
  }
}

/// Compass Calibration Maneuver immutable class
///
class _$CompassCalibration extends CompassCalibration {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double pitch;
  @override
  final double amplitude;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final double radius;
  @override
  final CompassCalibrationEnumDirection direction;
  @override
  final String custom;

  factory _$CompassCalibration([void updates(CompassCalibrationBuilder b)]) =>
      (new CompassCalibrationBuilder()..update(updates)).build();

  _$CompassCalibration._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.pitch,
      this.amplitude,
      this.duration,
      this.speed,
      this.speed_units,
      this.radius,
      this.direction,
      this.custom})
      : super._();

  @override
  CompassCalibration rebuild(void updates(CompassCalibrationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CompassCalibrationBuilder toBuilder() => new CompassCalibrationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CompassCalibration &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        pitch == this.pitch &&
        amplitude == this.amplitude &&
        duration == this.duration &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        radius == this.radius &&
        direction == this.direction &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        pitch.hashCode), 
        amplitude.hashCode), 
        duration.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        radius.hashCode), 
        direction.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CompassCalibration')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('pitch', pitch)
          ..add('amplitude', amplitude)
          ..add('duration', duration)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('radius', radius)
          ..add('direction', direction)
          ..add('custom', custom))
        .toString();
  }
}

/// Compass Calibration Maneuver builder class
///
class CompassCalibrationBuilder implements Builder<CompassCalibration, CompassCalibrationBuilder> {
  _$CompassCalibration _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _pitch;
  double get pitch => _$this._pitch;
  set pitch(double pitch) => _$this._pitch = pitch;

  double _amplitude;
  double get amplitude => _$this._amplitude;
  set amplitude(double amplitude) => _$this._amplitude = amplitude;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  double _radius;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  CompassCalibrationEnumDirection _direction;
  CompassCalibrationEnumDirection get direction => _$this._direction;
  set direction(CompassCalibrationEnumDirection direction) => _$this._direction = direction;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  CompassCalibrationBuilder();

  CompassCalibrationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _pitch = _$v.pitch;
      _amplitude = _$v.amplitude;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _radius = _$v.radius;
      _direction = _$v.direction;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CompassCalibration other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CompassCalibration;
  }

  @override
  void update(void updates(CompassCalibrationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CompassCalibration build() {
    final _$result = _$v ??
        new _$CompassCalibration._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            pitch: pitch,
            amplitude: amplitude,
            duration: duration,
            speed: speed,
            speed_units: speed_units,
            radius: radius,
            direction: direction,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Formation Parameters immutable class
///
class _$FormationParameters extends FormationParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String formation_name;
  @override
  final FormationParametersEnumReferenceFrame reference_frame;
  @override
  final List<VehicleFormationParticipant> participants;
  @override
  final String custom;

  factory _$FormationParameters([void updates(FormationParametersBuilder b)]) =>
      (new FormationParametersBuilder()..update(updates)).build();

  _$FormationParameters._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.formation_name,
      this.reference_frame,
      this.participants,
      this.custom})
      : super._();

  @override
  FormationParameters rebuild(void updates(FormationParametersBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationParametersBuilder toBuilder() => new FormationParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        formation_name == this.formation_name &&
        reference_frame == this.reference_frame &&
        participants == this.participants &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        formation_name.hashCode), 
        reference_frame.hashCode), 
        participants.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationParameters')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('formation_name', formation_name)
          ..add('reference_frame', reference_frame)
          ..add('participants', participants)
          ..add('custom', custom))
        .toString();
  }
}

/// Formation Parameters builder class
///
class FormationParametersBuilder implements Builder<FormationParameters, FormationParametersBuilder> {
  _$FormationParameters _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _formation_name;
  String get formation_name => _$this._formation_name;
  set formation_name(String formation_name) => _$this._formation_name = formation_name;

  FormationParametersEnumReferenceFrame _reference_frame;
  FormationParametersEnumReferenceFrame get reference_frame => _$this._reference_frame;
  set reference_frame(FormationParametersEnumReferenceFrame reference_frame) => _$this._reference_frame = reference_frame;

  List<VehicleFormationParticipant> _participants;
  List<VehicleFormationParticipant> get participants => _$this._participants;
  set participants(List<VehicleFormationParticipant> participants) => _$this._participants = participants;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FormationParametersBuilder();

  FormationParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _formation_name = _$v.formation_name;
      _reference_frame = _$v.reference_frame;
      _participants = _$v.participants;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationParameters other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormationParameters;
  }

  @override
  void update(void updates(FormationParametersBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationParameters build() {
    final _$result = _$v ??
        new _$FormationParameters._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            formation_name: formation_name,
            reference_frame: reference_frame,
            participants: participants,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Formation Plan Execution immutable class
///
class _$FormationPlanExecution extends FormationPlanExecution {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String group_name;
  @override
  final String formation_name;
  @override
  final String plan_id;
  @override
  final String description;
  @override
  final double leader_speed;
  @override
  final double leader_bank_lim;
  @override
  final double pos_sim_err_lim;
  @override
  final double pos_sim_err_wrn;
  @override
  final int pos_sim_err_timeout;
  @override
  final double converg_max;
  @override
  final int converg_timeout;
  @override
  final int comms_timeout;
  @override
  final double turb_lim;
  @override
  final String custom;

  factory _$FormationPlanExecution([void updates(FormationPlanExecutionBuilder b)]) =>
      (new FormationPlanExecutionBuilder()..update(updates)).build();

  _$FormationPlanExecution._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.group_name,
      this.formation_name,
      this.plan_id,
      this.description,
      this.leader_speed,
      this.leader_bank_lim,
      this.pos_sim_err_lim,
      this.pos_sim_err_wrn,
      this.pos_sim_err_timeout,
      this.converg_max,
      this.converg_timeout,
      this.comms_timeout,
      this.turb_lim,
      this.custom})
      : super._();

  @override
  FormationPlanExecution rebuild(void updates(FormationPlanExecutionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationPlanExecutionBuilder toBuilder() => new FormationPlanExecutionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationPlanExecution &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        group_name == this.group_name &&
        formation_name == this.formation_name &&
        plan_id == this.plan_id &&
        description == this.description &&
        leader_speed == this.leader_speed &&
        leader_bank_lim == this.leader_bank_lim &&
        pos_sim_err_lim == this.pos_sim_err_lim &&
        pos_sim_err_wrn == this.pos_sim_err_wrn &&
        pos_sim_err_timeout == this.pos_sim_err_timeout &&
        converg_max == this.converg_max &&
        converg_timeout == this.converg_timeout &&
        comms_timeout == this.comms_timeout &&
        turb_lim == this.turb_lim &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        group_name.hashCode), 
        formation_name.hashCode), 
        plan_id.hashCode), 
        description.hashCode), 
        leader_speed.hashCode), 
        leader_bank_lim.hashCode), 
        pos_sim_err_lim.hashCode), 
        pos_sim_err_wrn.hashCode), 
        pos_sim_err_timeout.hashCode), 
        converg_max.hashCode), 
        converg_timeout.hashCode), 
        comms_timeout.hashCode), 
        turb_lim.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationPlanExecution')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('group_name', group_name)
          ..add('formation_name', formation_name)
          ..add('plan_id', plan_id)
          ..add('description', description)
          ..add('leader_speed', leader_speed)
          ..add('leader_bank_lim', leader_bank_lim)
          ..add('pos_sim_err_lim', pos_sim_err_lim)
          ..add('pos_sim_err_wrn', pos_sim_err_wrn)
          ..add('pos_sim_err_timeout', pos_sim_err_timeout)
          ..add('converg_max', converg_max)
          ..add('converg_timeout', converg_timeout)
          ..add('comms_timeout', comms_timeout)
          ..add('turb_lim', turb_lim)
          ..add('custom', custom))
        .toString();
  }
}

/// Formation Plan Execution builder class
///
class FormationPlanExecutionBuilder implements Builder<FormationPlanExecution, FormationPlanExecutionBuilder> {
  _$FormationPlanExecution _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _group_name;
  String get group_name => _$this._group_name;
  set group_name(String group_name) => _$this._group_name = group_name;

  String _formation_name;
  String get formation_name => _$this._formation_name;
  set formation_name(String formation_name) => _$this._formation_name = formation_name;

  String _plan_id;
  String get plan_id => _$this._plan_id;
  set plan_id(String plan_id) => _$this._plan_id = plan_id;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  double _leader_speed;
  double get leader_speed => _$this._leader_speed;
  set leader_speed(double leader_speed) => _$this._leader_speed = leader_speed;

  double _leader_bank_lim;
  double get leader_bank_lim => _$this._leader_bank_lim;
  set leader_bank_lim(double leader_bank_lim) => _$this._leader_bank_lim = leader_bank_lim;

  double _pos_sim_err_lim;
  double get pos_sim_err_lim => _$this._pos_sim_err_lim;
  set pos_sim_err_lim(double pos_sim_err_lim) => _$this._pos_sim_err_lim = pos_sim_err_lim;

  double _pos_sim_err_wrn;
  double get pos_sim_err_wrn => _$this._pos_sim_err_wrn;
  set pos_sim_err_wrn(double pos_sim_err_wrn) => _$this._pos_sim_err_wrn = pos_sim_err_wrn;

  int _pos_sim_err_timeout;
  int get pos_sim_err_timeout => _$this._pos_sim_err_timeout;
  set pos_sim_err_timeout(int pos_sim_err_timeout) => _$this._pos_sim_err_timeout = pos_sim_err_timeout;

  double _converg_max;
  double get converg_max => _$this._converg_max;
  set converg_max(double converg_max) => _$this._converg_max = converg_max;

  int _converg_timeout;
  int get converg_timeout => _$this._converg_timeout;
  set converg_timeout(int converg_timeout) => _$this._converg_timeout = converg_timeout;

  int _comms_timeout;
  int get comms_timeout => _$this._comms_timeout;
  set comms_timeout(int comms_timeout) => _$this._comms_timeout = comms_timeout;

  double _turb_lim;
  double get turb_lim => _$this._turb_lim;
  set turb_lim(double turb_lim) => _$this._turb_lim = turb_lim;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FormationPlanExecutionBuilder();

  FormationPlanExecutionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _group_name = _$v.group_name;
      _formation_name = _$v.formation_name;
      _plan_id = _$v.plan_id;
      _description = _$v.description;
      _leader_speed = _$v.leader_speed;
      _leader_bank_lim = _$v.leader_bank_lim;
      _pos_sim_err_lim = _$v.pos_sim_err_lim;
      _pos_sim_err_wrn = _$v.pos_sim_err_wrn;
      _pos_sim_err_timeout = _$v.pos_sim_err_timeout;
      _converg_max = _$v.converg_max;
      _converg_timeout = _$v.converg_timeout;
      _comms_timeout = _$v.comms_timeout;
      _turb_lim = _$v.turb_lim;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationPlanExecution other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormationPlanExecution;
  }

  @override
  void update(void updates(FormationPlanExecutionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationPlanExecution build() {
    final _$result = _$v ??
        new _$FormationPlanExecution._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            group_name: group_name,
            formation_name: formation_name,
            plan_id: plan_id,
            description: description,
            leader_speed: leader_speed,
            leader_bank_lim: leader_bank_lim,
            pos_sim_err_lim: pos_sim_err_lim,
            pos_sim_err_wrn: pos_sim_err_wrn,
            pos_sim_err_timeout: pos_sim_err_timeout,
            converg_max: converg_max,
            converg_timeout: converg_timeout,
            comms_timeout: comms_timeout,
            turb_lim: turb_lim,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Follow Reference Maneuver immutable class
///
class _$FollowReference extends FollowReference {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int control_src;
  @override
  final int control_ent;
  @override
  final double timeout;
  @override
  final double loiter_radius;
  @override
  final double altitude_interval;

  factory _$FollowReference([void updates(FollowReferenceBuilder b)]) =>
      (new FollowReferenceBuilder()..update(updates)).build();

  _$FollowReference._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.control_src,
      this.control_ent,
      this.timeout,
      this.loiter_radius,
      this.altitude_interval})
      : super._();

  @override
  FollowReference rebuild(void updates(FollowReferenceBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowReferenceBuilder toBuilder() => new FollowReferenceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowReference &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        control_src == this.control_src &&
        control_ent == this.control_ent &&
        timeout == this.timeout &&
        loiter_radius == this.loiter_radius &&
        altitude_interval == this.altitude_interval;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        control_src.hashCode), 
        control_ent.hashCode), 
        timeout.hashCode), 
        loiter_radius.hashCode), 
        altitude_interval.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowReference')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('control_src', control_src)
          ..add('control_ent', control_ent)
          ..add('timeout', timeout)
          ..add('loiter_radius', loiter_radius)
          ..add('altitude_interval', altitude_interval))
        .toString();
  }
}

/// Follow Reference Maneuver builder class
///
class FollowReferenceBuilder implements Builder<FollowReference, FollowReferenceBuilder> {
  _$FollowReference _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _control_src;
  int get control_src => _$this._control_src;
  set control_src(int control_src) => _$this._control_src = control_src;

  int _control_ent;
  int get control_ent => _$this._control_ent;
  set control_ent(int control_ent) => _$this._control_ent = control_ent;

  double _timeout;
  double get timeout => _$this._timeout;
  set timeout(double timeout) => _$this._timeout = timeout;

  double _loiter_radius;
  double get loiter_radius => _$this._loiter_radius;
  set loiter_radius(double loiter_radius) => _$this._loiter_radius = loiter_radius;

  double _altitude_interval;
  double get altitude_interval => _$this._altitude_interval;
  set altitude_interval(double altitude_interval) => _$this._altitude_interval = altitude_interval;

  FollowReferenceBuilder();

  FollowReferenceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _control_src = _$v.control_src;
      _control_ent = _$v.control_ent;
      _timeout = _$v.timeout;
      _loiter_radius = _$v.loiter_radius;
      _altitude_interval = _$v.altitude_interval;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowReference other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FollowReference;
  }

  @override
  void update(void updates(FollowReferenceBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowReference build() {
    final _$result = _$v ??
        new _$FollowReference._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            control_src: control_src,
            control_ent: control_ent,
            timeout: timeout,
            loiter_radius: loiter_radius,
            altitude_interval: altitude_interval);
    replace(_$result);
    return _$result;
  }
}

/// Reference To Follow immutable class
///
class _$Reference extends Reference {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ReferenceBitfieldFlags flags;
  @override
  final DesiredSpeed speed;
  @override
  final DesiredZ z;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double radius;

  factory _$Reference([void updates(ReferenceBuilder b)]) =>
      (new ReferenceBuilder()..update(updates)).build();

  _$Reference._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.flags,
      this.speed,
      this.z,
      this.lat,
      this.lon,
      this.radius})
      : super._();

  @override
  Reference rebuild(void updates(ReferenceBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ReferenceBuilder toBuilder() => new ReferenceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Reference &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        flags == this.flags &&
        speed == this.speed &&
        z == this.z &&
        lat == this.lat &&
        lon == this.lon &&
        radius == this.radius;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        flags.hashCode), 
        speed.hashCode), 
        z.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        radius.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Reference')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('flags', flags)
          ..add('speed', speed)
          ..add('z', z)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('radius', radius))
        .toString();
  }
}

/// Reference To Follow builder class
///
class ReferenceBuilder implements Builder<Reference, ReferenceBuilder> {
  _$Reference _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ReferenceBitfieldFlags _flags;
  ReferenceBitfieldFlags get flags => _$this._flags;
  set flags(ReferenceBitfieldFlags flags) => _$this._flags = flags;

  DesiredSpeed _speed;
  DesiredSpeed get speed => _$this._speed;
  set speed(DesiredSpeed speed) => _$this._speed = speed;

  DesiredZ _z;
  DesiredZ get z => _$this._z;
  set z(DesiredZ z) => _$this._z = z;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _radius;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  ReferenceBuilder();

  ReferenceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _flags = _$v.flags;
      _speed = _$v.speed;
      _z = _$v.z;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _radius = _$v.radius;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Reference other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Reference;
  }

  @override
  void update(void updates(ReferenceBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Reference build() {
    final _$result = _$v ??
        new _$Reference._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            flags: flags,
            speed: speed,
            z: z,
            lat: lat,
            lon: lon,
            radius: radius);
    replace(_$result);
    return _$result;
  }
}

/// Follow Reference State immutable class
///
class _$FollowRefState extends FollowRefState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int control_src;
  @override
  final int control_ent;
  @override
  final Reference reference;
  @override
  final FollowRefStateEnumState state;
  @override
  final FollowRefStateBitfieldProximity proximity;

  factory _$FollowRefState([void updates(FollowRefStateBuilder b)]) =>
      (new FollowRefStateBuilder()..update(updates)).build();

  _$FollowRefState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.control_src,
      this.control_ent,
      this.reference,
      this.state,
      this.proximity})
      : super._();

  @override
  FollowRefState rebuild(void updates(FollowRefStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowRefStateBuilder toBuilder() => new FollowRefStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowRefState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        control_src == this.control_src &&
        control_ent == this.control_ent &&
        reference == this.reference &&
        state == this.state &&
        proximity == this.proximity;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        control_src.hashCode), 
        control_ent.hashCode), 
        reference.hashCode), 
        state.hashCode), 
        proximity.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowRefState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('control_src', control_src)
          ..add('control_ent', control_ent)
          ..add('reference', reference)
          ..add('state', state)
          ..add('proximity', proximity))
        .toString();
  }
}

/// Follow Reference State builder class
///
class FollowRefStateBuilder implements Builder<FollowRefState, FollowRefStateBuilder> {
  _$FollowRefState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _control_src;
  int get control_src => _$this._control_src;
  set control_src(int control_src) => _$this._control_src = control_src;

  int _control_ent;
  int get control_ent => _$this._control_ent;
  set control_ent(int control_ent) => _$this._control_ent = control_ent;

  Reference _reference;
  Reference get reference => _$this._reference;
  set reference(Reference reference) => _$this._reference = reference;

  FollowRefStateEnumState _state;
  FollowRefStateEnumState get state => _$this._state;
  set state(FollowRefStateEnumState state) => _$this._state = state;

  FollowRefStateBitfieldProximity _proximity;
  FollowRefStateBitfieldProximity get proximity => _$this._proximity;
  set proximity(FollowRefStateBitfieldProximity proximity) => _$this._proximity = proximity;

  FollowRefStateBuilder();

  FollowRefStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _control_src = _$v.control_src;
      _control_ent = _$v.control_ent;
      _reference = _$v.reference;
      _state = _$v.state;
      _proximity = _$v.proximity;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowRefState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FollowRefState;
  }

  @override
  void update(void updates(FollowRefStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowRefState build() {
    final _$result = _$v ??
        new _$FollowRefState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            control_src: control_src,
            control_ent: control_ent,
            reference: reference,
            state: state,
            proximity: proximity);
    replace(_$result);
    return _$result;
  }
}

/// Formation Monitoring Data immutable class
///
class _$FormationMonitor extends FormationMonitor {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double ax_cmd;
  @override
  final double ay_cmd;
  @override
  final double az_cmd;
  @override
  final double ax_des;
  @override
  final double ay_des;
  @override
  final double az_des;
  @override
  final double virt_err_x;
  @override
  final double virt_err_y;
  @override
  final double virt_err_z;
  @override
  final double surf_fdbk_x;
  @override
  final double surf_fdbk_y;
  @override
  final double surf_fdbk_z;
  @override
  final double surf_unkn_x;
  @override
  final double surf_unkn_y;
  @override
  final double surf_unkn_z;
  @override
  final double ss_x;
  @override
  final double ss_y;
  @override
  final double ss_z;
  @override
  final List<RelativeState> rel_state;

  factory _$FormationMonitor([void updates(FormationMonitorBuilder b)]) =>
      (new FormationMonitorBuilder()..update(updates)).build();

  _$FormationMonitor._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.ax_cmd,
      this.ay_cmd,
      this.az_cmd,
      this.ax_des,
      this.ay_des,
      this.az_des,
      this.virt_err_x,
      this.virt_err_y,
      this.virt_err_z,
      this.surf_fdbk_x,
      this.surf_fdbk_y,
      this.surf_fdbk_z,
      this.surf_unkn_x,
      this.surf_unkn_y,
      this.surf_unkn_z,
      this.ss_x,
      this.ss_y,
      this.ss_z,
      this.rel_state})
      : super._();

  @override
  FormationMonitor rebuild(void updates(FormationMonitorBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationMonitorBuilder toBuilder() => new FormationMonitorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationMonitor &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        ax_cmd == this.ax_cmd &&
        ay_cmd == this.ay_cmd &&
        az_cmd == this.az_cmd &&
        ax_des == this.ax_des &&
        ay_des == this.ay_des &&
        az_des == this.az_des &&
        virt_err_x == this.virt_err_x &&
        virt_err_y == this.virt_err_y &&
        virt_err_z == this.virt_err_z &&
        surf_fdbk_x == this.surf_fdbk_x &&
        surf_fdbk_y == this.surf_fdbk_y &&
        surf_fdbk_z == this.surf_fdbk_z &&
        surf_unkn_x == this.surf_unkn_x &&
        surf_unkn_y == this.surf_unkn_y &&
        surf_unkn_z == this.surf_unkn_z &&
        ss_x == this.ss_x &&
        ss_y == this.ss_y &&
        ss_z == this.ss_z &&
        rel_state == this.rel_state;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        ax_cmd.hashCode), 
        ay_cmd.hashCode), 
        az_cmd.hashCode), 
        ax_des.hashCode), 
        ay_des.hashCode), 
        az_des.hashCode), 
        virt_err_x.hashCode), 
        virt_err_y.hashCode), 
        virt_err_z.hashCode), 
        surf_fdbk_x.hashCode), 
        surf_fdbk_y.hashCode), 
        surf_fdbk_z.hashCode), 
        surf_unkn_x.hashCode), 
        surf_unkn_y.hashCode), 
        surf_unkn_z.hashCode), 
        ss_x.hashCode), 
        ss_y.hashCode), 
        ss_z.hashCode), 
        rel_state.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationMonitor')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('ax_cmd', ax_cmd)
          ..add('ay_cmd', ay_cmd)
          ..add('az_cmd', az_cmd)
          ..add('ax_des', ax_des)
          ..add('ay_des', ay_des)
          ..add('az_des', az_des)
          ..add('virt_err_x', virt_err_x)
          ..add('virt_err_y', virt_err_y)
          ..add('virt_err_z', virt_err_z)
          ..add('surf_fdbk_x', surf_fdbk_x)
          ..add('surf_fdbk_y', surf_fdbk_y)
          ..add('surf_fdbk_z', surf_fdbk_z)
          ..add('surf_unkn_x', surf_unkn_x)
          ..add('surf_unkn_y', surf_unkn_y)
          ..add('surf_unkn_z', surf_unkn_z)
          ..add('ss_x', ss_x)
          ..add('ss_y', ss_y)
          ..add('ss_z', ss_z)
          ..add('rel_state', rel_state))
        .toString();
  }
}

/// Formation Monitoring Data builder class
///
class FormationMonitorBuilder implements Builder<FormationMonitor, FormationMonitorBuilder> {
  _$FormationMonitor _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _ax_cmd;
  double get ax_cmd => _$this._ax_cmd;
  set ax_cmd(double ax_cmd) => _$this._ax_cmd = ax_cmd;

  double _ay_cmd;
  double get ay_cmd => _$this._ay_cmd;
  set ay_cmd(double ay_cmd) => _$this._ay_cmd = ay_cmd;

  double _az_cmd;
  double get az_cmd => _$this._az_cmd;
  set az_cmd(double az_cmd) => _$this._az_cmd = az_cmd;

  double _ax_des;
  double get ax_des => _$this._ax_des;
  set ax_des(double ax_des) => _$this._ax_des = ax_des;

  double _ay_des;
  double get ay_des => _$this._ay_des;
  set ay_des(double ay_des) => _$this._ay_des = ay_des;

  double _az_des;
  double get az_des => _$this._az_des;
  set az_des(double az_des) => _$this._az_des = az_des;

  double _virt_err_x;
  double get virt_err_x => _$this._virt_err_x;
  set virt_err_x(double virt_err_x) => _$this._virt_err_x = virt_err_x;

  double _virt_err_y;
  double get virt_err_y => _$this._virt_err_y;
  set virt_err_y(double virt_err_y) => _$this._virt_err_y = virt_err_y;

  double _virt_err_z;
  double get virt_err_z => _$this._virt_err_z;
  set virt_err_z(double virt_err_z) => _$this._virt_err_z = virt_err_z;

  double _surf_fdbk_x;
  double get surf_fdbk_x => _$this._surf_fdbk_x;
  set surf_fdbk_x(double surf_fdbk_x) => _$this._surf_fdbk_x = surf_fdbk_x;

  double _surf_fdbk_y;
  double get surf_fdbk_y => _$this._surf_fdbk_y;
  set surf_fdbk_y(double surf_fdbk_y) => _$this._surf_fdbk_y = surf_fdbk_y;

  double _surf_fdbk_z;
  double get surf_fdbk_z => _$this._surf_fdbk_z;
  set surf_fdbk_z(double surf_fdbk_z) => _$this._surf_fdbk_z = surf_fdbk_z;

  double _surf_unkn_x;
  double get surf_unkn_x => _$this._surf_unkn_x;
  set surf_unkn_x(double surf_unkn_x) => _$this._surf_unkn_x = surf_unkn_x;

  double _surf_unkn_y;
  double get surf_unkn_y => _$this._surf_unkn_y;
  set surf_unkn_y(double surf_unkn_y) => _$this._surf_unkn_y = surf_unkn_y;

  double _surf_unkn_z;
  double get surf_unkn_z => _$this._surf_unkn_z;
  set surf_unkn_z(double surf_unkn_z) => _$this._surf_unkn_z = surf_unkn_z;

  double _ss_x;
  double get ss_x => _$this._ss_x;
  set ss_x(double ss_x) => _$this._ss_x = ss_x;

  double _ss_y;
  double get ss_y => _$this._ss_y;
  set ss_y(double ss_y) => _$this._ss_y = ss_y;

  double _ss_z;
  double get ss_z => _$this._ss_z;
  set ss_z(double ss_z) => _$this._ss_z = ss_z;

  List<RelativeState> _rel_state;
  List<RelativeState> get rel_state => _$this._rel_state;
  set rel_state(List<RelativeState> rel_state) => _$this._rel_state = rel_state;

  FormationMonitorBuilder();

  FormationMonitorBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _ax_cmd = _$v.ax_cmd;
      _ay_cmd = _$v.ay_cmd;
      _az_cmd = _$v.az_cmd;
      _ax_des = _$v.ax_des;
      _ay_des = _$v.ay_des;
      _az_des = _$v.az_des;
      _virt_err_x = _$v.virt_err_x;
      _virt_err_y = _$v.virt_err_y;
      _virt_err_z = _$v.virt_err_z;
      _surf_fdbk_x = _$v.surf_fdbk_x;
      _surf_fdbk_y = _$v.surf_fdbk_y;
      _surf_fdbk_z = _$v.surf_fdbk_z;
      _surf_unkn_x = _$v.surf_unkn_x;
      _surf_unkn_y = _$v.surf_unkn_y;
      _surf_unkn_z = _$v.surf_unkn_z;
      _ss_x = _$v.ss_x;
      _ss_y = _$v.ss_y;
      _ss_z = _$v.ss_z;
      _rel_state = _$v.rel_state;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationMonitor other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormationMonitor;
  }

  @override
  void update(void updates(FormationMonitorBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationMonitor build() {
    final _$result = _$v ??
        new _$FormationMonitor._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            ax_cmd: ax_cmd,
            ay_cmd: ay_cmd,
            az_cmd: az_cmd,
            ax_des: ax_des,
            ay_des: ay_des,
            az_des: az_des,
            virt_err_x: virt_err_x,
            virt_err_y: virt_err_y,
            virt_err_z: virt_err_z,
            surf_fdbk_x: surf_fdbk_x,
            surf_fdbk_y: surf_fdbk_y,
            surf_fdbk_z: surf_fdbk_z,
            surf_unkn_x: surf_unkn_x,
            surf_unkn_y: surf_unkn_y,
            surf_unkn_z: surf_unkn_z,
            ss_x: ss_x,
            ss_y: ss_y,
            ss_z: ss_z,
            rel_state: rel_state);
    replace(_$result);
    return _$result;
  }
}

/// Relative State immutable class
///
class _$RelativeState extends RelativeState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String s_id;
  @override
  final double dist;
  @override
  final double err;
  @override
  final double ctrl_imp;
  @override
  final double rel_dir_x;
  @override
  final double rel_dir_y;
  @override
  final double rel_dir_z;
  @override
  final double err_x;
  @override
  final double err_y;
  @override
  final double err_z;
  @override
  final double rf_err_x;
  @override
  final double rf_err_y;
  @override
  final double rf_err_z;
  @override
  final double rf_err_vx;
  @override
  final double rf_err_vy;
  @override
  final double rf_err_vz;
  @override
  final double ss_x;
  @override
  final double ss_y;
  @override
  final double ss_z;
  @override
  final double virt_err_x;
  @override
  final double virt_err_y;
  @override
  final double virt_err_z;

  factory _$RelativeState([void updates(RelativeStateBuilder b)]) =>
      (new RelativeStateBuilder()..update(updates)).build();

  _$RelativeState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.s_id,
      this.dist,
      this.err,
      this.ctrl_imp,
      this.rel_dir_x,
      this.rel_dir_y,
      this.rel_dir_z,
      this.err_x,
      this.err_y,
      this.err_z,
      this.rf_err_x,
      this.rf_err_y,
      this.rf_err_z,
      this.rf_err_vx,
      this.rf_err_vy,
      this.rf_err_vz,
      this.ss_x,
      this.ss_y,
      this.ss_z,
      this.virt_err_x,
      this.virt_err_y,
      this.virt_err_z})
      : super._();

  @override
  RelativeState rebuild(void updates(RelativeStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RelativeStateBuilder toBuilder() => new RelativeStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RelativeState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        s_id == this.s_id &&
        dist == this.dist &&
        err == this.err &&
        ctrl_imp == this.ctrl_imp &&
        rel_dir_x == this.rel_dir_x &&
        rel_dir_y == this.rel_dir_y &&
        rel_dir_z == this.rel_dir_z &&
        err_x == this.err_x &&
        err_y == this.err_y &&
        err_z == this.err_z &&
        rf_err_x == this.rf_err_x &&
        rf_err_y == this.rf_err_y &&
        rf_err_z == this.rf_err_z &&
        rf_err_vx == this.rf_err_vx &&
        rf_err_vy == this.rf_err_vy &&
        rf_err_vz == this.rf_err_vz &&
        ss_x == this.ss_x &&
        ss_y == this.ss_y &&
        ss_z == this.ss_z &&
        virt_err_x == this.virt_err_x &&
        virt_err_y == this.virt_err_y &&
        virt_err_z == this.virt_err_z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        s_id.hashCode), 
        dist.hashCode), 
        err.hashCode), 
        ctrl_imp.hashCode), 
        rel_dir_x.hashCode), 
        rel_dir_y.hashCode), 
        rel_dir_z.hashCode), 
        err_x.hashCode), 
        err_y.hashCode), 
        err_z.hashCode), 
        rf_err_x.hashCode), 
        rf_err_y.hashCode), 
        rf_err_z.hashCode), 
        rf_err_vx.hashCode), 
        rf_err_vy.hashCode), 
        rf_err_vz.hashCode), 
        ss_x.hashCode), 
        ss_y.hashCode), 
        ss_z.hashCode), 
        virt_err_x.hashCode), 
        virt_err_y.hashCode), 
        virt_err_z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RelativeState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('s_id', s_id)
          ..add('dist', dist)
          ..add('err', err)
          ..add('ctrl_imp', ctrl_imp)
          ..add('rel_dir_x', rel_dir_x)
          ..add('rel_dir_y', rel_dir_y)
          ..add('rel_dir_z', rel_dir_z)
          ..add('err_x', err_x)
          ..add('err_y', err_y)
          ..add('err_z', err_z)
          ..add('rf_err_x', rf_err_x)
          ..add('rf_err_y', rf_err_y)
          ..add('rf_err_z', rf_err_z)
          ..add('rf_err_vx', rf_err_vx)
          ..add('rf_err_vy', rf_err_vy)
          ..add('rf_err_vz', rf_err_vz)
          ..add('ss_x', ss_x)
          ..add('ss_y', ss_y)
          ..add('ss_z', ss_z)
          ..add('virt_err_x', virt_err_x)
          ..add('virt_err_y', virt_err_y)
          ..add('virt_err_z', virt_err_z))
        .toString();
  }
}

/// Relative State builder class
///
class RelativeStateBuilder implements Builder<RelativeState, RelativeStateBuilder> {
  _$RelativeState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _s_id;
  String get s_id => _$this._s_id;
  set s_id(String s_id) => _$this._s_id = s_id;

  double _dist;
  double get dist => _$this._dist;
  set dist(double dist) => _$this._dist = dist;

  double _err;
  double get err => _$this._err;
  set err(double err) => _$this._err = err;

  double _ctrl_imp;
  double get ctrl_imp => _$this._ctrl_imp;
  set ctrl_imp(double ctrl_imp) => _$this._ctrl_imp = ctrl_imp;

  double _rel_dir_x;
  double get rel_dir_x => _$this._rel_dir_x;
  set rel_dir_x(double rel_dir_x) => _$this._rel_dir_x = rel_dir_x;

  double _rel_dir_y;
  double get rel_dir_y => _$this._rel_dir_y;
  set rel_dir_y(double rel_dir_y) => _$this._rel_dir_y = rel_dir_y;

  double _rel_dir_z;
  double get rel_dir_z => _$this._rel_dir_z;
  set rel_dir_z(double rel_dir_z) => _$this._rel_dir_z = rel_dir_z;

  double _err_x;
  double get err_x => _$this._err_x;
  set err_x(double err_x) => _$this._err_x = err_x;

  double _err_y;
  double get err_y => _$this._err_y;
  set err_y(double err_y) => _$this._err_y = err_y;

  double _err_z;
  double get err_z => _$this._err_z;
  set err_z(double err_z) => _$this._err_z = err_z;

  double _rf_err_x;
  double get rf_err_x => _$this._rf_err_x;
  set rf_err_x(double rf_err_x) => _$this._rf_err_x = rf_err_x;

  double _rf_err_y;
  double get rf_err_y => _$this._rf_err_y;
  set rf_err_y(double rf_err_y) => _$this._rf_err_y = rf_err_y;

  double _rf_err_z;
  double get rf_err_z => _$this._rf_err_z;
  set rf_err_z(double rf_err_z) => _$this._rf_err_z = rf_err_z;

  double _rf_err_vx;
  double get rf_err_vx => _$this._rf_err_vx;
  set rf_err_vx(double rf_err_vx) => _$this._rf_err_vx = rf_err_vx;

  double _rf_err_vy;
  double get rf_err_vy => _$this._rf_err_vy;
  set rf_err_vy(double rf_err_vy) => _$this._rf_err_vy = rf_err_vy;

  double _rf_err_vz;
  double get rf_err_vz => _$this._rf_err_vz;
  set rf_err_vz(double rf_err_vz) => _$this._rf_err_vz = rf_err_vz;

  double _ss_x;
  double get ss_x => _$this._ss_x;
  set ss_x(double ss_x) => _$this._ss_x = ss_x;

  double _ss_y;
  double get ss_y => _$this._ss_y;
  set ss_y(double ss_y) => _$this._ss_y = ss_y;

  double _ss_z;
  double get ss_z => _$this._ss_z;
  set ss_z(double ss_z) => _$this._ss_z = ss_z;

  double _virt_err_x;
  double get virt_err_x => _$this._virt_err_x;
  set virt_err_x(double virt_err_x) => _$this._virt_err_x = virt_err_x;

  double _virt_err_y;
  double get virt_err_y => _$this._virt_err_y;
  set virt_err_y(double virt_err_y) => _$this._virt_err_y = virt_err_y;

  double _virt_err_z;
  double get virt_err_z => _$this._virt_err_z;
  set virt_err_z(double virt_err_z) => _$this._virt_err_z = virt_err_z;

  RelativeStateBuilder();

  RelativeStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _s_id = _$v.s_id;
      _dist = _$v.dist;
      _err = _$v.err;
      _ctrl_imp = _$v.ctrl_imp;
      _rel_dir_x = _$v.rel_dir_x;
      _rel_dir_y = _$v.rel_dir_y;
      _rel_dir_z = _$v.rel_dir_z;
      _err_x = _$v.err_x;
      _err_y = _$v.err_y;
      _err_z = _$v.err_z;
      _rf_err_x = _$v.rf_err_x;
      _rf_err_y = _$v.rf_err_y;
      _rf_err_z = _$v.rf_err_z;
      _rf_err_vx = _$v.rf_err_vx;
      _rf_err_vy = _$v.rf_err_vy;
      _rf_err_vz = _$v.rf_err_vz;
      _ss_x = _$v.ss_x;
      _ss_y = _$v.ss_y;
      _ss_z = _$v.ss_z;
      _virt_err_x = _$v.virt_err_x;
      _virt_err_y = _$v.virt_err_y;
      _virt_err_z = _$v.virt_err_z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RelativeState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RelativeState;
  }

  @override
  void update(void updates(RelativeStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RelativeState build() {
    final _$result = _$v ??
        new _$RelativeState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            s_id: s_id,
            dist: dist,
            err: err,
            ctrl_imp: ctrl_imp,
            rel_dir_x: rel_dir_x,
            rel_dir_y: rel_dir_y,
            rel_dir_z: rel_dir_z,
            err_x: err_x,
            err_y: err_y,
            err_z: err_z,
            rf_err_x: rf_err_x,
            rf_err_y: rf_err_y,
            rf_err_z: rf_err_z,
            rf_err_vx: rf_err_vx,
            rf_err_vy: rf_err_vy,
            rf_err_vz: rf_err_vz,
            ss_x: ss_x,
            ss_y: ss_y,
            ss_z: ss_z,
            virt_err_x: virt_err_x,
            virt_err_y: virt_err_y,
            virt_err_z: virt_err_z);
    replace(_$result);
    return _$result;
  }
}

/// Dislodge Maneuver immutable class
///
class _$Dislodge extends Dislodge {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double rpm;
  @override
  final DislodgeEnumDirection direction;
  @override
  final String custom;

  factory _$Dislodge([void updates(DislodgeBuilder b)]) =>
      (new DislodgeBuilder()..update(updates)).build();

  _$Dislodge._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.rpm,
      this.direction,
      this.custom})
      : super._();

  @override
  Dislodge rebuild(void updates(DislodgeBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DislodgeBuilder toBuilder() => new DislodgeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Dislodge &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        rpm == this.rpm &&
        direction == this.direction &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        rpm.hashCode), 
        direction.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Dislodge')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('rpm', rpm)
          ..add('direction', direction)
          ..add('custom', custom))
        .toString();
  }
}

/// Dislodge Maneuver builder class
///
class DislodgeBuilder implements Builder<Dislodge, DislodgeBuilder> {
  _$Dislodge _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _rpm;
  double get rpm => _$this._rpm;
  set rpm(double rpm) => _$this._rpm = rpm;

  DislodgeEnumDirection _direction;
  DislodgeEnumDirection get direction => _$this._direction;
  set direction(DislodgeEnumDirection direction) => _$this._direction = direction;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  DislodgeBuilder();

  DislodgeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _rpm = _$v.rpm;
      _direction = _$v.direction;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Dislodge other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Dislodge;
  }

  @override
  void update(void updates(DislodgeBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Dislodge build() {
    final _$result = _$v ??
        new _$Dislodge._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            rpm: rpm,
            direction: direction,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Formation immutable class
///
class _$Formation extends Formation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String formation_name;
  @override
  final FormationEnumType type;
  @override
  final FormationEnumOp op;
  @override
  final String group_name;
  @override
  final String plan_id;
  @override
  final String description;
  @override
  final FormationEnumReferenceFrame reference_frame;
  @override
  final List<VehicleFormationParticipant> participants;
  @override
  final double leader_bank_lim;
  @override
  final double leader_speed_min;
  @override
  final double leader_speed_max;
  @override
  final double leader_alt_min;
  @override
  final double leader_alt_max;
  @override
  final double pos_sim_err_lim;
  @override
  final double pos_sim_err_wrn;
  @override
  final int pos_sim_err_timeout;
  @override
  final double converg_max;
  @override
  final int converg_timeout;
  @override
  final int comms_timeout;
  @override
  final double turb_lim;
  @override
  final String custom;

  factory _$Formation([void updates(FormationBuilder b)]) =>
      (new FormationBuilder()..update(updates)).build();

  _$Formation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.formation_name,
      this.type,
      this.op,
      this.group_name,
      this.plan_id,
      this.description,
      this.reference_frame,
      this.participants,
      this.leader_bank_lim,
      this.leader_speed_min,
      this.leader_speed_max,
      this.leader_alt_min,
      this.leader_alt_max,
      this.pos_sim_err_lim,
      this.pos_sim_err_wrn,
      this.pos_sim_err_timeout,
      this.converg_max,
      this.converg_timeout,
      this.comms_timeout,
      this.turb_lim,
      this.custom})
      : super._();

  @override
  Formation rebuild(void updates(FormationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationBuilder toBuilder() => new FormationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Formation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        formation_name == this.formation_name &&
        type == this.type &&
        op == this.op &&
        group_name == this.group_name &&
        plan_id == this.plan_id &&
        description == this.description &&
        reference_frame == this.reference_frame &&
        participants == this.participants &&
        leader_bank_lim == this.leader_bank_lim &&
        leader_speed_min == this.leader_speed_min &&
        leader_speed_max == this.leader_speed_max &&
        leader_alt_min == this.leader_alt_min &&
        leader_alt_max == this.leader_alt_max &&
        pos_sim_err_lim == this.pos_sim_err_lim &&
        pos_sim_err_wrn == this.pos_sim_err_wrn &&
        pos_sim_err_timeout == this.pos_sim_err_timeout &&
        converg_max == this.converg_max &&
        converg_timeout == this.converg_timeout &&
        comms_timeout == this.comms_timeout &&
        turb_lim == this.turb_lim &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        formation_name.hashCode), 
        type.hashCode), 
        op.hashCode), 
        group_name.hashCode), 
        plan_id.hashCode), 
        description.hashCode), 
        reference_frame.hashCode), 
        participants.hashCode), 
        leader_bank_lim.hashCode), 
        leader_speed_min.hashCode), 
        leader_speed_max.hashCode), 
        leader_alt_min.hashCode), 
        leader_alt_max.hashCode), 
        pos_sim_err_lim.hashCode), 
        pos_sim_err_wrn.hashCode), 
        pos_sim_err_timeout.hashCode), 
        converg_max.hashCode), 
        converg_timeout.hashCode), 
        comms_timeout.hashCode), 
        turb_lim.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Formation')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('formation_name', formation_name)
          ..add('type', type)
          ..add('op', op)
          ..add('group_name', group_name)
          ..add('plan_id', plan_id)
          ..add('description', description)
          ..add('reference_frame', reference_frame)
          ..add('participants', participants)
          ..add('leader_bank_lim', leader_bank_lim)
          ..add('leader_speed_min', leader_speed_min)
          ..add('leader_speed_max', leader_speed_max)
          ..add('leader_alt_min', leader_alt_min)
          ..add('leader_alt_max', leader_alt_max)
          ..add('pos_sim_err_lim', pos_sim_err_lim)
          ..add('pos_sim_err_wrn', pos_sim_err_wrn)
          ..add('pos_sim_err_timeout', pos_sim_err_timeout)
          ..add('converg_max', converg_max)
          ..add('converg_timeout', converg_timeout)
          ..add('comms_timeout', comms_timeout)
          ..add('turb_lim', turb_lim)
          ..add('custom', custom))
        .toString();
  }
}

/// Formation builder class
///
class FormationBuilder implements Builder<Formation, FormationBuilder> {
  _$Formation _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _formation_name;
  String get formation_name => _$this._formation_name;
  set formation_name(String formation_name) => _$this._formation_name = formation_name;

  FormationEnumType _type;
  FormationEnumType get type => _$this._type;
  set type(FormationEnumType type) => _$this._type = type;

  FormationEnumOp _op;
  FormationEnumOp get op => _$this._op;
  set op(FormationEnumOp op) => _$this._op = op;

  String _group_name;
  String get group_name => _$this._group_name;
  set group_name(String group_name) => _$this._group_name = group_name;

  String _plan_id;
  String get plan_id => _$this._plan_id;
  set plan_id(String plan_id) => _$this._plan_id = plan_id;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  FormationEnumReferenceFrame _reference_frame;
  FormationEnumReferenceFrame get reference_frame => _$this._reference_frame;
  set reference_frame(FormationEnumReferenceFrame reference_frame) => _$this._reference_frame = reference_frame;

  List<VehicleFormationParticipant> _participants;
  List<VehicleFormationParticipant> get participants => _$this._participants;
  set participants(List<VehicleFormationParticipant> participants) => _$this._participants = participants;

  double _leader_bank_lim;
  double get leader_bank_lim => _$this._leader_bank_lim;
  set leader_bank_lim(double leader_bank_lim) => _$this._leader_bank_lim = leader_bank_lim;

  double _leader_speed_min;
  double get leader_speed_min => _$this._leader_speed_min;
  set leader_speed_min(double leader_speed_min) => _$this._leader_speed_min = leader_speed_min;

  double _leader_speed_max;
  double get leader_speed_max => _$this._leader_speed_max;
  set leader_speed_max(double leader_speed_max) => _$this._leader_speed_max = leader_speed_max;

  double _leader_alt_min;
  double get leader_alt_min => _$this._leader_alt_min;
  set leader_alt_min(double leader_alt_min) => _$this._leader_alt_min = leader_alt_min;

  double _leader_alt_max;
  double get leader_alt_max => _$this._leader_alt_max;
  set leader_alt_max(double leader_alt_max) => _$this._leader_alt_max = leader_alt_max;

  double _pos_sim_err_lim;
  double get pos_sim_err_lim => _$this._pos_sim_err_lim;
  set pos_sim_err_lim(double pos_sim_err_lim) => _$this._pos_sim_err_lim = pos_sim_err_lim;

  double _pos_sim_err_wrn;
  double get pos_sim_err_wrn => _$this._pos_sim_err_wrn;
  set pos_sim_err_wrn(double pos_sim_err_wrn) => _$this._pos_sim_err_wrn = pos_sim_err_wrn;

  int _pos_sim_err_timeout;
  int get pos_sim_err_timeout => _$this._pos_sim_err_timeout;
  set pos_sim_err_timeout(int pos_sim_err_timeout) => _$this._pos_sim_err_timeout = pos_sim_err_timeout;

  double _converg_max;
  double get converg_max => _$this._converg_max;
  set converg_max(double converg_max) => _$this._converg_max = converg_max;

  int _converg_timeout;
  int get converg_timeout => _$this._converg_timeout;
  set converg_timeout(int converg_timeout) => _$this._converg_timeout = converg_timeout;

  int _comms_timeout;
  int get comms_timeout => _$this._comms_timeout;
  set comms_timeout(int comms_timeout) => _$this._comms_timeout = comms_timeout;

  double _turb_lim;
  double get turb_lim => _$this._turb_lim;
  set turb_lim(double turb_lim) => _$this._turb_lim = turb_lim;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FormationBuilder();

  FormationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _formation_name = _$v.formation_name;
      _type = _$v.type;
      _op = _$v.op;
      _group_name = _$v.group_name;
      _plan_id = _$v.plan_id;
      _description = _$v.description;
      _reference_frame = _$v.reference_frame;
      _participants = _$v.participants;
      _leader_bank_lim = _$v.leader_bank_lim;
      _leader_speed_min = _$v.leader_speed_min;
      _leader_speed_max = _$v.leader_speed_max;
      _leader_alt_min = _$v.leader_alt_min;
      _leader_alt_max = _$v.leader_alt_max;
      _pos_sim_err_lim = _$v.pos_sim_err_lim;
      _pos_sim_err_wrn = _$v.pos_sim_err_wrn;
      _pos_sim_err_timeout = _$v.pos_sim_err_timeout;
      _converg_max = _$v.converg_max;
      _converg_timeout = _$v.converg_timeout;
      _comms_timeout = _$v.comms_timeout;
      _turb_lim = _$v.turb_lim;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Formation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Formation;
  }

  @override
  void update(void updates(FormationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Formation build() {
    final _$result = _$v ??
        new _$Formation._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            formation_name: formation_name,
            type: type,
            op: op,
            group_name: group_name,
            plan_id: plan_id,
            description: description,
            reference_frame: reference_frame,
            participants: participants,
            leader_bank_lim: leader_bank_lim,
            leader_speed_min: leader_speed_min,
            leader_speed_max: leader_speed_max,
            leader_alt_min: leader_alt_min,
            leader_alt_max: leader_alt_max,
            pos_sim_err_lim: pos_sim_err_lim,
            pos_sim_err_wrn: pos_sim_err_wrn,
            pos_sim_err_timeout: pos_sim_err_timeout,
            converg_max: converg_max,
            converg_timeout: converg_timeout,
            comms_timeout: comms_timeout,
            turb_lim: turb_lim,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Launch Maneuver immutable class
///
class _$Launch extends Launch {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final String custom;

  factory _$Launch([void updates(LaunchBuilder b)]) =>
      (new LaunchBuilder()..update(updates)).build();

  _$Launch._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.speed,
      this.speed_units,
      this.custom})
      : super._();

  @override
  Launch rebuild(void updates(LaunchBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LaunchBuilder toBuilder() => new LaunchBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Launch &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Launch')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('custom', custom))
        .toString();
  }
}

/// Launch Maneuver builder class
///
class LaunchBuilder implements Builder<Launch, LaunchBuilder> {
  _$Launch _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  LaunchBuilder();

  LaunchBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Launch other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Launch;
  }

  @override
  void update(void updates(LaunchBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Launch build() {
    final _$result = _$v ??
        new _$Launch._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            speed: speed,
            speed_units: speed_units,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Drop Maneuver immutable class
///
class _$Drop extends Drop {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final String custom;

  factory _$Drop([void updates(DropBuilder b)]) =>
      (new DropBuilder()..update(updates)).build();

  _$Drop._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.speed,
      this.speed_units,
      this.custom})
      : super._();

  @override
  Drop rebuild(void updates(DropBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DropBuilder toBuilder() => new DropBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Drop &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Drop')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('custom', custom))
        .toString();
  }
}

/// Drop Maneuver builder class
///
class DropBuilder implements Builder<Drop, DropBuilder> {
  _$Drop _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  DropBuilder();

  DropBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Drop other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Drop;
  }

  @override
  void update(void updates(DropBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Drop build() {
    final _$result = _$v ??
        new _$Drop._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            speed: speed,
            speed_units: speed_units,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Scheduled Goto immutable class
///
class _$ScheduledGoto extends ScheduledGoto {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double arrival_time;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double travel_z;
  @override
  final ZUnitsEnum travel_z_units;
  @override
  final ScheduledGotoEnumDelayed delayed;

  factory _$ScheduledGoto([void updates(ScheduledGotoBuilder b)]) =>
      (new ScheduledGotoBuilder()..update(updates)).build();

  _$ScheduledGoto._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.arrival_time,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.travel_z,
      this.travel_z_units,
      this.delayed})
      : super._();

  @override
  ScheduledGoto rebuild(void updates(ScheduledGotoBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ScheduledGotoBuilder toBuilder() => new ScheduledGotoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ScheduledGoto &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        arrival_time == this.arrival_time &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        travel_z == this.travel_z &&
        travel_z_units == this.travel_z_units &&
        delayed == this.delayed;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        arrival_time.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        travel_z.hashCode), 
        travel_z_units.hashCode), 
        delayed.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ScheduledGoto')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('arrival_time', arrival_time)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('travel_z', travel_z)
          ..add('travel_z_units', travel_z_units)
          ..add('delayed', delayed))
        .toString();
  }
}

/// Scheduled Goto builder class
///
class ScheduledGotoBuilder implements Builder<ScheduledGoto, ScheduledGotoBuilder> {
  _$ScheduledGoto _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _arrival_time;
  double get arrival_time => _$this._arrival_time;
  set arrival_time(double arrival_time) => _$this._arrival_time = arrival_time;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _travel_z;
  double get travel_z => _$this._travel_z;
  set travel_z(double travel_z) => _$this._travel_z = travel_z;

  ZUnitsEnum _travel_z_units;
  ZUnitsEnum get travel_z_units => _$this._travel_z_units;
  set travel_z_units(ZUnitsEnum travel_z_units) => _$this._travel_z_units = travel_z_units;

  ScheduledGotoEnumDelayed _delayed;
  ScheduledGotoEnumDelayed get delayed => _$this._delayed;
  set delayed(ScheduledGotoEnumDelayed delayed) => _$this._delayed = delayed;

  ScheduledGotoBuilder();

  ScheduledGotoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _arrival_time = _$v.arrival_time;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _travel_z = _$v.travel_z;
      _travel_z_units = _$v.travel_z_units;
      _delayed = _$v.delayed;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ScheduledGoto other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ScheduledGoto;
  }

  @override
  void update(void updates(ScheduledGotoBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ScheduledGoto build() {
    final _$result = _$v ??
        new _$ScheduledGoto._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            arrival_time: arrival_time,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            travel_z: travel_z,
            travel_z_units: travel_z_units,
            delayed: delayed);
    replace(_$result);
    return _$result;
  }
}

/// Rows Coverage immutable class
///
class _$RowsCoverage extends RowsCoverage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final double bearing;
  @override
  final double cross_angle;
  @override
  final double width;
  @override
  final double length;
  @override
  final int coff;
  @override
  final double angAperture;
  @override
  final int range;
  @override
  final int overlap;
  @override
  final RowsCoverageBitfieldFlags flags;
  @override
  final String custom;

  factory _$RowsCoverage([void updates(RowsCoverageBuilder b)]) =>
      (new RowsCoverageBuilder()..update(updates)).build();

  _$RowsCoverage._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.speed,
      this.speed_units,
      this.bearing,
      this.cross_angle,
      this.width,
      this.length,
      this.coff,
      this.angAperture,
      this.range,
      this.overlap,
      this.flags,
      this.custom})
      : super._();

  @override
  RowsCoverage rebuild(void updates(RowsCoverageBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RowsCoverageBuilder toBuilder() => new RowsCoverageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RowsCoverage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        bearing == this.bearing &&
        cross_angle == this.cross_angle &&
        width == this.width &&
        length == this.length &&
        coff == this.coff &&
        angAperture == this.angAperture &&
        range == this.range &&
        overlap == this.overlap &&
        flags == this.flags &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        bearing.hashCode), 
        cross_angle.hashCode), 
        width.hashCode), 
        length.hashCode), 
        coff.hashCode), 
        angAperture.hashCode), 
        range.hashCode), 
        overlap.hashCode), 
        flags.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RowsCoverage')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('bearing', bearing)
          ..add('cross_angle', cross_angle)
          ..add('width', width)
          ..add('length', length)
          ..add('coff', coff)
          ..add('angAperture', angAperture)
          ..add('range', range)
          ..add('overlap', overlap)
          ..add('flags', flags)
          ..add('custom', custom))
        .toString();
  }
}

/// Rows Coverage builder class
///
class RowsCoverageBuilder implements Builder<RowsCoverage, RowsCoverageBuilder> {
  _$RowsCoverage _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _cross_angle;
  double get cross_angle => _$this._cross_angle;
  set cross_angle(double cross_angle) => _$this._cross_angle = cross_angle;

  double _width;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  double _length;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  int _coff;
  int get coff => _$this._coff;
  set coff(int coff) => _$this._coff = coff;

  double _angAperture;
  double get angAperture => _$this._angAperture;
  set angAperture(double angAperture) => _$this._angAperture = angAperture;

  int _range;
  int get range => _$this._range;
  set range(int range) => _$this._range = range;

  int _overlap;
  int get overlap => _$this._overlap;
  set overlap(int overlap) => _$this._overlap = overlap;

  RowsCoverageBitfieldFlags _flags;
  RowsCoverageBitfieldFlags get flags => _$this._flags;
  set flags(RowsCoverageBitfieldFlags flags) => _$this._flags = flags;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  RowsCoverageBuilder();

  RowsCoverageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _bearing = _$v.bearing;
      _cross_angle = _$v.cross_angle;
      _width = _$v.width;
      _length = _$v.length;
      _coff = _$v.coff;
      _angAperture = _$v.angAperture;
      _range = _$v.range;
      _overlap = _$v.overlap;
      _flags = _$v.flags;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RowsCoverage other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RowsCoverage;
  }

  @override
  void update(void updates(RowsCoverageBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RowsCoverage build() {
    final _$result = _$v ??
        new _$RowsCoverage._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            speed: speed,
            speed_units: speed_units,
            bearing: bearing,
            cross_angle: cross_angle,
            width: width,
            length: length,
            coff: coff,
            angAperture: angAperture,
            range: range,
            overlap: overlap,
            flags: flags,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Sample Maneuver immutable class
///
class _$Sample extends Sample {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final BooleanEnum syringe0;
  @override
  final BooleanEnum syringe1;
  @override
  final BooleanEnum syringe2;
  @override
  final String custom;

  factory _$Sample([void updates(SampleBuilder b)]) =>
      (new SampleBuilder()..update(updates)).build();

  _$Sample._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.speed,
      this.speed_units,
      this.syringe0,
      this.syringe1,
      this.syringe2,
      this.custom})
      : super._();

  @override
  Sample rebuild(void updates(SampleBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SampleBuilder toBuilder() => new SampleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Sample &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        syringe0 == this.syringe0 &&
        syringe1 == this.syringe1 &&
        syringe2 == this.syringe2 &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        syringe0.hashCode), 
        syringe1.hashCode), 
        syringe2.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Sample')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('syringe0', syringe0)
          ..add('syringe1', syringe1)
          ..add('syringe2', syringe2)
          ..add('custom', custom))
        .toString();
  }
}

/// Sample Maneuver builder class
///
class SampleBuilder implements Builder<Sample, SampleBuilder> {
  _$Sample _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  BooleanEnum _syringe0;
  BooleanEnum get syringe0 => _$this._syringe0;
  set syringe0(BooleanEnum syringe0) => _$this._syringe0 = syringe0;

  BooleanEnum _syringe1;
  BooleanEnum get syringe1 => _$this._syringe1;
  set syringe1(BooleanEnum syringe1) => _$this._syringe1 = syringe1;

  BooleanEnum _syringe2;
  BooleanEnum get syringe2 => _$this._syringe2;
  set syringe2(BooleanEnum syringe2) => _$this._syringe2 = syringe2;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  SampleBuilder();

  SampleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _syringe0 = _$v.syringe0;
      _syringe1 = _$v.syringe1;
      _syringe2 = _$v.syringe2;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Sample other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Sample;
  }

  @override
  void update(void updates(SampleBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Sample build() {
    final _$result = _$v ??
        new _$Sample._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            speed: speed,
            speed_units: speed_units,
            syringe0: syringe0,
            syringe1: syringe1,
            syringe2: syringe2,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Image Tracking immutable class
///
class _$ImageTracking extends ImageTracking {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$ImageTracking([void updates(ImageTrackingBuilder b)]) =>
      (new ImageTrackingBuilder()..update(updates)).build();

  _$ImageTracking._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  ImageTracking rebuild(void updates(ImageTrackingBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ImageTrackingBuilder toBuilder() => new ImageTrackingBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ImageTracking &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ImageTracking')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt))
        .toString();
  }
}

/// Image Tracking builder class
///
class ImageTrackingBuilder implements Builder<ImageTracking, ImageTrackingBuilder> {
  _$ImageTracking _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ImageTrackingBuilder();

  ImageTrackingBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ImageTracking other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ImageTracking;
  }

  @override
  void update(void updates(ImageTrackingBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ImageTracking build() {
    final _$result = _$v ??
        new _$ImageTracking._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt);
    replace(_$result);
    return _$result;
  }
}

/// Takeoff Maneuver immutable class
///
class _$Takeoff extends Takeoff {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final double takeoff_pitch;
  @override
  final String custom;

  factory _$Takeoff([void updates(TakeoffBuilder b)]) =>
      (new TakeoffBuilder()..update(updates)).build();

  _$Takeoff._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.speed,
      this.speed_units,
      this.takeoff_pitch,
      this.custom})
      : super._();

  @override
  Takeoff rebuild(void updates(TakeoffBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TakeoffBuilder toBuilder() => new TakeoffBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Takeoff &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        takeoff_pitch == this.takeoff_pitch &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        takeoff_pitch.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Takeoff')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('takeoff_pitch', takeoff_pitch)
          ..add('custom', custom))
        .toString();
  }
}

/// Takeoff Maneuver builder class
///
class TakeoffBuilder implements Builder<Takeoff, TakeoffBuilder> {
  _$Takeoff _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  double _takeoff_pitch;
  double get takeoff_pitch => _$this._takeoff_pitch;
  set takeoff_pitch(double takeoff_pitch) => _$this._takeoff_pitch = takeoff_pitch;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  TakeoffBuilder();

  TakeoffBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _takeoff_pitch = _$v.takeoff_pitch;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Takeoff other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Takeoff;
  }

  @override
  void update(void updates(TakeoffBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Takeoff build() {
    final _$result = _$v ??
        new _$Takeoff._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            speed: speed,
            speed_units: speed_units,
            takeoff_pitch: takeoff_pitch,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Land Maneuver immutable class
///
class _$Land extends Land {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final double abort_z;
  @override
  final double bearing;
  @override
  final int glide_slope;
  @override
  final double glide_slope_alt;
  @override
  final String custom;

  factory _$Land([void updates(LandBuilder b)]) =>
      (new LandBuilder()..update(updates)).build();

  _$Land._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.speed,
      this.speed_units,
      this.abort_z,
      this.bearing,
      this.glide_slope,
      this.glide_slope_alt,
      this.custom})
      : super._();

  @override
  Land rebuild(void updates(LandBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LandBuilder toBuilder() => new LandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Land &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        abort_z == this.abort_z &&
        bearing == this.bearing &&
        glide_slope == this.glide_slope &&
        glide_slope_alt == this.glide_slope_alt &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        abort_z.hashCode), 
        bearing.hashCode), 
        glide_slope.hashCode), 
        glide_slope_alt.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Land')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('abort_z', abort_z)
          ..add('bearing', bearing)
          ..add('glide_slope', glide_slope)
          ..add('glide_slope_alt', glide_slope_alt)
          ..add('custom', custom))
        .toString();
  }
}

/// Land Maneuver builder class
///
class LandBuilder implements Builder<Land, LandBuilder> {
  _$Land _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  double _abort_z;
  double get abort_z => _$this._abort_z;
  set abort_z(double abort_z) => _$this._abort_z = abort_z;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  int _glide_slope;
  int get glide_slope => _$this._glide_slope;
  set glide_slope(int glide_slope) => _$this._glide_slope = glide_slope;

  double _glide_slope_alt;
  double get glide_slope_alt => _$this._glide_slope_alt;
  set glide_slope_alt(double glide_slope_alt) => _$this._glide_slope_alt = glide_slope_alt;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  LandBuilder();

  LandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _abort_z = _$v.abort_z;
      _bearing = _$v.bearing;
      _glide_slope = _$v.glide_slope;
      _glide_slope_alt = _$v.glide_slope_alt;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Land other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Land;
  }

  @override
  void update(void updates(LandBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Land build() {
    final _$result = _$v ??
        new _$Land._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            speed: speed,
            speed_units: speed_units,
            abort_z: abort_z,
            bearing: bearing,
            glide_slope: glide_slope,
            glide_slope_alt: glide_slope_alt,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Autonomous Section immutable class
///
class _$AutonomousSection extends AutonomousSection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final AutonomousSectionBitfieldLimits limits;
  @override
  final double max_depth;
  @override
  final double min_alt;
  @override
  final double time_limit;
  @override
  final List<PolygonVertex> area_limits;
  @override
  final String controller;
  @override
  final String custom;

  factory _$AutonomousSection([void updates(AutonomousSectionBuilder b)]) =>
      (new AutonomousSectionBuilder()..update(updates)).build();

  _$AutonomousSection._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.speed,
      this.speed_units,
      this.limits,
      this.max_depth,
      this.min_alt,
      this.time_limit,
      this.area_limits,
      this.controller,
      this.custom})
      : super._();

  @override
  AutonomousSection rebuild(void updates(AutonomousSectionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AutonomousSectionBuilder toBuilder() => new AutonomousSectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AutonomousSection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        limits == this.limits &&
        max_depth == this.max_depth &&
        min_alt == this.min_alt &&
        time_limit == this.time_limit &&
        area_limits == this.area_limits &&
        controller == this.controller &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        limits.hashCode), 
        max_depth.hashCode), 
        min_alt.hashCode), 
        time_limit.hashCode), 
        area_limits.hashCode), 
        controller.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AutonomousSection')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('limits', limits)
          ..add('max_depth', max_depth)
          ..add('min_alt', min_alt)
          ..add('time_limit', time_limit)
          ..add('area_limits', area_limits)
          ..add('controller', controller)
          ..add('custom', custom))
        .toString();
  }
}

/// Autonomous Section builder class
///
class AutonomousSectionBuilder implements Builder<AutonomousSection, AutonomousSectionBuilder> {
  _$AutonomousSection _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  AutonomousSectionBitfieldLimits _limits;
  AutonomousSectionBitfieldLimits get limits => _$this._limits;
  set limits(AutonomousSectionBitfieldLimits limits) => _$this._limits = limits;

  double _max_depth;
  double get max_depth => _$this._max_depth;
  set max_depth(double max_depth) => _$this._max_depth = max_depth;

  double _min_alt;
  double get min_alt => _$this._min_alt;
  set min_alt(double min_alt) => _$this._min_alt = min_alt;

  double _time_limit;
  double get time_limit => _$this._time_limit;
  set time_limit(double time_limit) => _$this._time_limit = time_limit;

  List<PolygonVertex> _area_limits;
  List<PolygonVertex> get area_limits => _$this._area_limits;
  set area_limits(List<PolygonVertex> area_limits) => _$this._area_limits = area_limits;

  String _controller;
  String get controller => _$this._controller;
  set controller(String controller) => _$this._controller = controller;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  AutonomousSectionBuilder();

  AutonomousSectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _limits = _$v.limits;
      _max_depth = _$v.max_depth;
      _min_alt = _$v.min_alt;
      _time_limit = _$v.time_limit;
      _area_limits = _$v.area_limits;
      _controller = _$v.controller;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AutonomousSection other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AutonomousSection;
  }

  @override
  void update(void updates(AutonomousSectionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AutonomousSection build() {
    final _$result = _$v ??
        new _$AutonomousSection._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            speed: speed,
            speed_units: speed_units,
            limits: limits,
            max_depth: max_depth,
            min_alt: min_alt,
            time_limit: time_limit,
            area_limits: area_limits,
            controller: controller,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Follow Point Maneuver immutable class
///
class _$FollowPoint extends FollowPoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String target;
  @override
  final double max_speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final String custom;

  factory _$FollowPoint([void updates(FollowPointBuilder b)]) =>
      (new FollowPointBuilder()..update(updates)).build();

  _$FollowPoint._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.target,
      this.max_speed,
      this.speed_units,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.custom})
      : super._();

  @override
  FollowPoint rebuild(void updates(FollowPointBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowPointBuilder toBuilder() => new FollowPointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowPoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == this.target &&
        max_speed == this.max_speed &&
        speed_units == this.speed_units &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        target.hashCode), 
        max_speed.hashCode), 
        speed_units.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowPoint')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('target', target)
          ..add('max_speed', max_speed)
          ..add('speed_units', speed_units)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('custom', custom))
        .toString();
  }
}

/// Follow Point Maneuver builder class
///
class FollowPointBuilder implements Builder<FollowPoint, FollowPointBuilder> {
  _$FollowPoint _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _target;
  String get target => _$this._target;
  set target(String target) => _$this._target = target;

  double _max_speed;
  double get max_speed => _$this._max_speed;
  set max_speed(double max_speed) => _$this._max_speed = max_speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FollowPointBuilder();

  FollowPointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _max_speed = _$v.max_speed;
      _speed_units = _$v.speed_units;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowPoint other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FollowPoint;
  }

  @override
  void update(void updates(FollowPointBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowPoint build() {
    final _$result = _$v ??
        new _$FollowPoint._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            target: target,
            max_speed: max_speed,
            speed_units: speed_units,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Alignment Maneuver immutable class
///
class _$Alignment extends Alignment {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final String custom;

  factory _$Alignment([void updates(AlignmentBuilder b)]) =>
      (new AlignmentBuilder()..update(updates)).build();

  _$Alignment._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.speed,
      this.speed_units,
      this.custom})
      : super._();

  @override
  Alignment rebuild(void updates(AlignmentBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AlignmentBuilder toBuilder() => new AlignmentBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Alignment &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Alignment')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('custom', custom))
        .toString();
  }
}

/// Alignment Maneuver builder class
///
class AlignmentBuilder implements Builder<Alignment, AlignmentBuilder> {
  _$Alignment _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  AlignmentBuilder();

  AlignmentBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Alignment other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Alignment;
  }

  @override
  void update(void updates(AlignmentBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Alignment build() {
    final _$result = _$v ??
        new _$Alignment._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            lat: lat,
            lon: lon,
            speed: speed,
            speed_units: speed_units,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Station Keeping Extended immutable class
///
class _$StationKeepingExtended extends StationKeepingExtended {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double radius;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final int popup_period;
  @override
  final int popup_duration;
  @override
  final StationKeepingExtendedBitfieldFlags flags;
  @override
  final String custom;

  factory _$StationKeepingExtended([void updates(StationKeepingExtendedBuilder b)]) =>
      (new StationKeepingExtendedBuilder()..update(updates)).build();

  _$StationKeepingExtended._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.radius,
      this.duration,
      this.speed,
      this.speed_units,
      this.popup_period,
      this.popup_duration,
      this.flags,
      this.custom})
      : super._();

  @override
  StationKeepingExtended rebuild(void updates(StationKeepingExtendedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  StationKeepingExtendedBuilder toBuilder() => new StationKeepingExtendedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StationKeepingExtended &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        radius == this.radius &&
        duration == this.duration &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        popup_period == this.popup_period &&
        popup_duration == this.popup_duration &&
        flags == this.flags &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        radius.hashCode), 
        duration.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        popup_period.hashCode), 
        popup_duration.hashCode), 
        flags.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StationKeepingExtended')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('radius', radius)
          ..add('duration', duration)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('popup_period', popup_period)
          ..add('popup_duration', popup_duration)
          ..add('flags', flags)
          ..add('custom', custom))
        .toString();
  }
}

/// Station Keeping Extended builder class
///
class StationKeepingExtendedBuilder implements Builder<StationKeepingExtended, StationKeepingExtendedBuilder> {
  _$StationKeepingExtended _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _radius;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  int _popup_period;
  int get popup_period => _$this._popup_period;
  set popup_period(int popup_period) => _$this._popup_period = popup_period;

  int _popup_duration;
  int get popup_duration => _$this._popup_duration;
  set popup_duration(int popup_duration) => _$this._popup_duration = popup_duration;

  StationKeepingExtendedBitfieldFlags _flags;
  StationKeepingExtendedBitfieldFlags get flags => _$this._flags;
  set flags(StationKeepingExtendedBitfieldFlags flags) => _$this._flags = flags;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  StationKeepingExtendedBuilder();

  StationKeepingExtendedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _radius = _$v.radius;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _popup_period = _$v.popup_period;
      _popup_duration = _$v.popup_duration;
      _flags = _$v.flags;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StationKeepingExtended other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$StationKeepingExtended;
  }

  @override
  void update(void updates(StationKeepingExtendedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$StationKeepingExtended build() {
    final _$result = _$v ??
        new _$StationKeepingExtended._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            radius: radius,
            duration: duration,
            speed: speed,
            speed_units: speed_units,
            popup_period: popup_period,
            popup_duration: popup_duration,
            flags: flags,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Magnetometer Maneuver immutable class
///
class _$Magnetometer extends Magnetometer {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speed_units;
  @override
  final double bearing;
  @override
  final double width;
  @override
  final MagnetometerEnumDirection direction;
  @override
  final String custom;

  factory _$Magnetometer([void updates(MagnetometerBuilder b)]) =>
      (new MagnetometerBuilder()..update(updates)).build();

  _$Magnetometer._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.speed,
      this.speed_units,
      this.bearing,
      this.width,
      this.direction,
      this.custom})
      : super._();

  @override
  Magnetometer rebuild(void updates(MagnetometerBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MagnetometerBuilder toBuilder() => new MagnetometerBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Magnetometer &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        speed == this.speed &&
        speed_units == this.speed_units &&
        bearing == this.bearing &&
        width == this.width &&
        direction == this.direction &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        speed.hashCode), 
        speed_units.hashCode), 
        bearing.hashCode), 
        width.hashCode), 
        direction.hashCode), 
        custom.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Magnetometer')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('speed', speed)
          ..add('speed_units', speed_units)
          ..add('bearing', bearing)
          ..add('width', width)
          ..add('direction', direction)
          ..add('custom', custom))
        .toString();
  }
}

/// Magnetometer Maneuver builder class
///
class MagnetometerBuilder implements Builder<Magnetometer, MagnetometerBuilder> {
  _$Magnetometer _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speed_units;
  SpeedUnitsEnum get speed_units => _$this._speed_units;
  set speed_units(SpeedUnitsEnum speed_units) => _$this._speed_units = speed_units;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _width;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  MagnetometerEnumDirection _direction;
  MagnetometerEnumDirection get direction => _$this._direction;
  set direction(MagnetometerEnumDirection direction) => _$this._direction = direction;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  MagnetometerBuilder();

  MagnetometerBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _speed = _$v.speed;
      _speed_units = _$v.speed_units;
      _bearing = _$v.bearing;
      _width = _$v.width;
      _direction = _$v.direction;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Magnetometer other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Magnetometer;
  }

  @override
  void update(void updates(MagnetometerBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Magnetometer build() {
    final _$result = _$v ??
        new _$Magnetometer._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            speed: speed,
            speed_units: speed_units,
            bearing: bearing,
            width: width,
            direction: direction,
            custom: custom);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle State immutable class
///
class _$VehicleState extends VehicleState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VehicleStateEnumOpMode op_mode;
  @override
  final int error_count;
  @override
  final String error_ents;
  @override
  final int maneuver_type;
  @override
  final double maneuver_stime;
  @override
  final int maneuver_eta;
  @override
  final CLoopsMaskBitfield control_loops;
  @override
  final VehicleStateBitfieldFlags flags;
  @override
  final String last_error;
  @override
  final double last_error_time;

  factory _$VehicleState([void updates(VehicleStateBuilder b)]) =>
      (new VehicleStateBuilder()..update(updates)).build();

  _$VehicleState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op_mode,
      this.error_count,
      this.error_ents,
      this.maneuver_type,
      this.maneuver_stime,
      this.maneuver_eta,
      this.control_loops,
      this.flags,
      this.last_error,
      this.last_error_time})
      : super._();

  @override
  VehicleState rebuild(void updates(VehicleStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleStateBuilder toBuilder() => new VehicleStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op_mode == this.op_mode &&
        error_count == this.error_count &&
        error_ents == this.error_ents &&
        maneuver_type == this.maneuver_type &&
        maneuver_stime == this.maneuver_stime &&
        maneuver_eta == this.maneuver_eta &&
        control_loops == this.control_loops &&
        flags == this.flags &&
        last_error == this.last_error &&
        last_error_time == this.last_error_time;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op_mode.hashCode), 
        error_count.hashCode), 
        error_ents.hashCode), 
        maneuver_type.hashCode), 
        maneuver_stime.hashCode), 
        maneuver_eta.hashCode), 
        control_loops.hashCode), 
        flags.hashCode), 
        last_error.hashCode), 
        last_error_time.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op_mode', op_mode)
          ..add('error_count', error_count)
          ..add('error_ents', error_ents)
          ..add('maneuver_type', maneuver_type)
          ..add('maneuver_stime', maneuver_stime)
          ..add('maneuver_eta', maneuver_eta)
          ..add('control_loops', control_loops)
          ..add('flags', flags)
          ..add('last_error', last_error)
          ..add('last_error_time', last_error_time))
        .toString();
  }
}

/// Vehicle State builder class
///
class VehicleStateBuilder implements Builder<VehicleState, VehicleStateBuilder> {
  _$VehicleState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VehicleStateEnumOpMode _op_mode;
  VehicleStateEnumOpMode get op_mode => _$this._op_mode;
  set op_mode(VehicleStateEnumOpMode op_mode) => _$this._op_mode = op_mode;

  int _error_count;
  int get error_count => _$this._error_count;
  set error_count(int error_count) => _$this._error_count = error_count;

  String _error_ents;
  String get error_ents => _$this._error_ents;
  set error_ents(String error_ents) => _$this._error_ents = error_ents;

  int _maneuver_type;
  int get maneuver_type => _$this._maneuver_type;
  set maneuver_type(int maneuver_type) => _$this._maneuver_type = maneuver_type;

  double _maneuver_stime;
  double get maneuver_stime => _$this._maneuver_stime;
  set maneuver_stime(double maneuver_stime) => _$this._maneuver_stime = maneuver_stime;

  int _maneuver_eta;
  int get maneuver_eta => _$this._maneuver_eta;
  set maneuver_eta(int maneuver_eta) => _$this._maneuver_eta = maneuver_eta;

  CLoopsMaskBitfield _control_loops;
  CLoopsMaskBitfield get control_loops => _$this._control_loops;
  set control_loops(CLoopsMaskBitfield control_loops) => _$this._control_loops = control_loops;

  VehicleStateBitfieldFlags _flags;
  VehicleStateBitfieldFlags get flags => _$this._flags;
  set flags(VehicleStateBitfieldFlags flags) => _$this._flags = flags;

  String _last_error;
  String get last_error => _$this._last_error;
  set last_error(String last_error) => _$this._last_error = last_error;

  double _last_error_time;
  double get last_error_time => _$this._last_error_time;
  set last_error_time(double last_error_time) => _$this._last_error_time = last_error_time;

  VehicleStateBuilder();

  VehicleStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op_mode = _$v.op_mode;
      _error_count = _$v.error_count;
      _error_ents = _$v.error_ents;
      _maneuver_type = _$v.maneuver_type;
      _maneuver_stime = _$v.maneuver_stime;
      _maneuver_eta = _$v.maneuver_eta;
      _control_loops = _$v.control_loops;
      _flags = _$v.flags;
      _last_error = _$v.last_error;
      _last_error_time = _$v.last_error_time;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleState;
  }

  @override
  void update(void updates(VehicleStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleState build() {
    final _$result = _$v ??
        new _$VehicleState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op_mode: op_mode,
            error_count: error_count,
            error_ents: error_ents,
            maneuver_type: maneuver_type,
            maneuver_stime: maneuver_stime,
            maneuver_eta: maneuver_eta,
            control_loops: control_loops,
            flags: flags,
            last_error: last_error,
            last_error_time: last_error_time);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Command immutable class
///
class _$VehicleCommand extends VehicleCommand {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VehicleCommandEnumType type;
  @override
  final int request_id;
  @override
  final VehicleCommandEnumCommand command;
  @override
  final Maneuver maneuver;
  @override
  final int calib_time;
  @override
  final String info;

  factory _$VehicleCommand([void updates(VehicleCommandBuilder b)]) =>
      (new VehicleCommandBuilder()..update(updates)).build();

  _$VehicleCommand._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.request_id,
      this.command,
      this.maneuver,
      this.calib_time,
      this.info})
      : super._();

  @override
  VehicleCommand rebuild(void updates(VehicleCommandBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleCommandBuilder toBuilder() => new VehicleCommandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleCommand &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        request_id == this.request_id &&
        command == this.command &&
        maneuver == this.maneuver &&
        calib_time == this.calib_time &&
        info == this.info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode), 
        request_id.hashCode), 
        command.hashCode), 
        maneuver.hashCode), 
        calib_time.hashCode), 
        info.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleCommand')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type)
          ..add('request_id', request_id)
          ..add('command', command)
          ..add('maneuver', maneuver)
          ..add('calib_time', calib_time)
          ..add('info', info))
        .toString();
  }
}

/// Vehicle Command builder class
///
class VehicleCommandBuilder implements Builder<VehicleCommand, VehicleCommandBuilder> {
  _$VehicleCommand _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VehicleCommandEnumType _type;
  VehicleCommandEnumType get type => _$this._type;
  set type(VehicleCommandEnumType type) => _$this._type = type;

  int _request_id;
  int get request_id => _$this._request_id;
  set request_id(int request_id) => _$this._request_id = request_id;

  VehicleCommandEnumCommand _command;
  VehicleCommandEnumCommand get command => _$this._command;
  set command(VehicleCommandEnumCommand command) => _$this._command = command;

  Maneuver _maneuver;
  Maneuver get maneuver => _$this._maneuver;
  set maneuver(Maneuver maneuver) => _$this._maneuver = maneuver;

  int _calib_time;
  int get calib_time => _$this._calib_time;
  set calib_time(int calib_time) => _$this._calib_time = calib_time;

  String _info;
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  VehicleCommandBuilder();

  VehicleCommandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _request_id = _$v.request_id;
      _command = _$v.command;
      _maneuver = _$v.maneuver;
      _calib_time = _$v.calib_time;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleCommand other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleCommand;
  }

  @override
  void update(void updates(VehicleCommandBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleCommand build() {
    final _$result = _$v ??
        new _$VehicleCommand._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type,
            request_id: request_id,
            command: command,
            maneuver: maneuver,
            calib_time: calib_time,
            info: info);
    replace(_$result);
    return _$result;
  }
}

/// Monitor Entity State immutable class
///
class _$MonitorEntityState extends MonitorEntityState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final MonitorEntityStateEnumCommand command;
  @override
  final String entities;

  factory _$MonitorEntityState([void updates(MonitorEntityStateBuilder b)]) =>
      (new MonitorEntityStateBuilder()..update(updates)).build();

  _$MonitorEntityState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.command,
      this.entities})
      : super._();

  @override
  MonitorEntityState rebuild(void updates(MonitorEntityStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MonitorEntityStateBuilder toBuilder() => new MonitorEntityStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MonitorEntityState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        command == this.command &&
        entities == this.entities;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        command.hashCode), 
        entities.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MonitorEntityState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('command', command)
          ..add('entities', entities))
        .toString();
  }
}

/// Monitor Entity State builder class
///
class MonitorEntityStateBuilder implements Builder<MonitorEntityState, MonitorEntityStateBuilder> {
  _$MonitorEntityState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  MonitorEntityStateEnumCommand _command;
  MonitorEntityStateEnumCommand get command => _$this._command;
  set command(MonitorEntityStateEnumCommand command) => _$this._command = command;

  String _entities;
  String get entities => _$this._entities;
  set entities(String entities) => _$this._entities = entities;

  MonitorEntityStateBuilder();

  MonitorEntityStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _command = _$v.command;
      _entities = _$v.entities;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MonitorEntityState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$MonitorEntityState;
  }

  @override
  void update(void updates(MonitorEntityStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$MonitorEntityState build() {
    final _$result = _$v ??
        new _$MonitorEntityState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            command: command,
            entities: entities);
    replace(_$result);
    return _$result;
  }
}

/// Entity Monitoring State immutable class
///
class _$EntityMonitoringState extends EntityMonitoringState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int mcount;
  @override
  final String mnames;
  @override
  final int ecount;
  @override
  final String enames;
  @override
  final int ccount;
  @override
  final String cnames;
  @override
  final String last_error;
  @override
  final double last_error_time;

  factory _$EntityMonitoringState([void updates(EntityMonitoringStateBuilder b)]) =>
      (new EntityMonitoringStateBuilder()..update(updates)).build();

  _$EntityMonitoringState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.mcount,
      this.mnames,
      this.ecount,
      this.enames,
      this.ccount,
      this.cnames,
      this.last_error,
      this.last_error_time})
      : super._();

  @override
  EntityMonitoringState rebuild(void updates(EntityMonitoringStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityMonitoringStateBuilder toBuilder() => new EntityMonitoringStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityMonitoringState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        mcount == this.mcount &&
        mnames == this.mnames &&
        ecount == this.ecount &&
        enames == this.enames &&
        ccount == this.ccount &&
        cnames == this.cnames &&
        last_error == this.last_error &&
        last_error_time == this.last_error_time;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        mcount.hashCode), 
        mnames.hashCode), 
        ecount.hashCode), 
        enames.hashCode), 
        ccount.hashCode), 
        cnames.hashCode), 
        last_error.hashCode), 
        last_error_time.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityMonitoringState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('mcount', mcount)
          ..add('mnames', mnames)
          ..add('ecount', ecount)
          ..add('enames', enames)
          ..add('ccount', ccount)
          ..add('cnames', cnames)
          ..add('last_error', last_error)
          ..add('last_error_time', last_error_time))
        .toString();
  }
}

/// Entity Monitoring State builder class
///
class EntityMonitoringStateBuilder implements Builder<EntityMonitoringState, EntityMonitoringStateBuilder> {
  _$EntityMonitoringState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _mcount;
  int get mcount => _$this._mcount;
  set mcount(int mcount) => _$this._mcount = mcount;

  String _mnames;
  String get mnames => _$this._mnames;
  set mnames(String mnames) => _$this._mnames = mnames;

  int _ecount;
  int get ecount => _$this._ecount;
  set ecount(int ecount) => _$this._ecount = ecount;

  String _enames;
  String get enames => _$this._enames;
  set enames(String enames) => _$this._enames = enames;

  int _ccount;
  int get ccount => _$this._ccount;
  set ccount(int ccount) => _$this._ccount = ccount;

  String _cnames;
  String get cnames => _$this._cnames;
  set cnames(String cnames) => _$this._cnames = cnames;

  String _last_error;
  String get last_error => _$this._last_error;
  set last_error(String last_error) => _$this._last_error = last_error;

  double _last_error_time;
  double get last_error_time => _$this._last_error_time;
  set last_error_time(double last_error_time) => _$this._last_error_time = last_error_time;

  EntityMonitoringStateBuilder();

  EntityMonitoringStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _mcount = _$v.mcount;
      _mnames = _$v.mnames;
      _ecount = _$v.ecount;
      _enames = _$v.enames;
      _ccount = _$v.ccount;
      _cnames = _$v.cnames;
      _last_error = _$v.last_error;
      _last_error_time = _$v.last_error_time;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityMonitoringState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EntityMonitoringState;
  }

  @override
  void update(void updates(EntityMonitoringStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityMonitoringState build() {
    final _$result = _$v ??
        new _$EntityMonitoringState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            mcount: mcount,
            mnames: mnames,
            ecount: ecount,
            enames: enames,
            ccount: ccount,
            cnames: cnames,
            last_error: last_error,
            last_error_time: last_error_time);
    replace(_$result);
    return _$result;
  }
}

/// Operational Limits immutable class
///
class _$OperationalLimits extends OperationalLimits {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final OpLimitsMaskBitfield mask;
  @override
  final double max_depth;
  @override
  final double min_altitude;
  @override
  final double max_altitude;
  @override
  final double min_speed;
  @override
  final double max_speed;
  @override
  final double max_vrate;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double orientation;
  @override
  final double width;
  @override
  final double length;

  factory _$OperationalLimits([void updates(OperationalLimitsBuilder b)]) =>
      (new OperationalLimitsBuilder()..update(updates)).build();

  _$OperationalLimits._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.mask,
      this.max_depth,
      this.min_altitude,
      this.max_altitude,
      this.min_speed,
      this.max_speed,
      this.max_vrate,
      this.lat,
      this.lon,
      this.orientation,
      this.width,
      this.length})
      : super._();

  @override
  OperationalLimits rebuild(void updates(OperationalLimitsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  OperationalLimitsBuilder toBuilder() => new OperationalLimitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is OperationalLimits &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        mask == this.mask &&
        max_depth == this.max_depth &&
        min_altitude == this.min_altitude &&
        max_altitude == this.max_altitude &&
        min_speed == this.min_speed &&
        max_speed == this.max_speed &&
        max_vrate == this.max_vrate &&
        lat == this.lat &&
        lon == this.lon &&
        orientation == this.orientation &&
        width == this.width &&
        length == this.length;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        mask.hashCode), 
        max_depth.hashCode), 
        min_altitude.hashCode), 
        max_altitude.hashCode), 
        min_speed.hashCode), 
        max_speed.hashCode), 
        max_vrate.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        orientation.hashCode), 
        width.hashCode), 
        length.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('OperationalLimits')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('mask', mask)
          ..add('max_depth', max_depth)
          ..add('min_altitude', min_altitude)
          ..add('max_altitude', max_altitude)
          ..add('min_speed', min_speed)
          ..add('max_speed', max_speed)
          ..add('max_vrate', max_vrate)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('orientation', orientation)
          ..add('width', width)
          ..add('length', length))
        .toString();
  }
}

/// Operational Limits builder class
///
class OperationalLimitsBuilder implements Builder<OperationalLimits, OperationalLimitsBuilder> {
  _$OperationalLimits _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  OpLimitsMaskBitfield _mask;
  OpLimitsMaskBitfield get mask => _$this._mask;
  set mask(OpLimitsMaskBitfield mask) => _$this._mask = mask;

  double _max_depth;
  double get max_depth => _$this._max_depth;
  set max_depth(double max_depth) => _$this._max_depth = max_depth;

  double _min_altitude;
  double get min_altitude => _$this._min_altitude;
  set min_altitude(double min_altitude) => _$this._min_altitude = min_altitude;

  double _max_altitude;
  double get max_altitude => _$this._max_altitude;
  set max_altitude(double max_altitude) => _$this._max_altitude = max_altitude;

  double _min_speed;
  double get min_speed => _$this._min_speed;
  set min_speed(double min_speed) => _$this._min_speed = min_speed;

  double _max_speed;
  double get max_speed => _$this._max_speed;
  set max_speed(double max_speed) => _$this._max_speed = max_speed;

  double _max_vrate;
  double get max_vrate => _$this._max_vrate;
  set max_vrate(double max_vrate) => _$this._max_vrate = max_vrate;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _orientation;
  double get orientation => _$this._orientation;
  set orientation(double orientation) => _$this._orientation = orientation;

  double _width;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  double _length;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  OperationalLimitsBuilder();

  OperationalLimitsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _mask = _$v.mask;
      _max_depth = _$v.max_depth;
      _min_altitude = _$v.min_altitude;
      _max_altitude = _$v.max_altitude;
      _min_speed = _$v.min_speed;
      _max_speed = _$v.max_speed;
      _max_vrate = _$v.max_vrate;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _orientation = _$v.orientation;
      _width = _$v.width;
      _length = _$v.length;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(OperationalLimits other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$OperationalLimits;
  }

  @override
  void update(void updates(OperationalLimitsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$OperationalLimits build() {
    final _$result = _$v ??
        new _$OperationalLimits._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            mask: mask,
            max_depth: max_depth,
            min_altitude: min_altitude,
            max_altitude: max_altitude,
            min_speed: min_speed,
            max_speed: max_speed,
            max_vrate: max_vrate,
            lat: lat,
            lon: lon,
            orientation: orientation,
            width: width,
            length: length);
    replace(_$result);
    return _$result;
  }
}

/// Get Operational Limits immutable class
///
class _$GetOperationalLimits extends GetOperationalLimits {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$GetOperationalLimits([void updates(GetOperationalLimitsBuilder b)]) =>
      (new GetOperationalLimitsBuilder()..update(updates)).build();

  _$GetOperationalLimits._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  GetOperationalLimits rebuild(void updates(GetOperationalLimitsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GetOperationalLimitsBuilder toBuilder() => new GetOperationalLimitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GetOperationalLimits &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GetOperationalLimits')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt))
        .toString();
  }
}

/// Get Operational Limits builder class
///
class GetOperationalLimitsBuilder implements Builder<GetOperationalLimits, GetOperationalLimitsBuilder> {
  _$GetOperationalLimits _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GetOperationalLimitsBuilder();

  GetOperationalLimitsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GetOperationalLimits other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GetOperationalLimits;
  }

  @override
  void update(void updates(GetOperationalLimitsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GetOperationalLimits build() {
    final _$result = _$v ??
        new _$GetOperationalLimits._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt);
    replace(_$result);
    return _$result;
  }
}

/// Calibration immutable class
///
class _$Calibration extends Calibration {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int duration;

  factory _$Calibration([void updates(CalibrationBuilder b)]) =>
      (new CalibrationBuilder()..update(updates)).build();

  _$Calibration._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.duration})
      : super._();

  @override
  Calibration rebuild(void updates(CalibrationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CalibrationBuilder toBuilder() => new CalibrationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Calibration &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        duration == this.duration;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        duration.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Calibration')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('duration', duration))
        .toString();
  }
}

/// Calibration builder class
///
class CalibrationBuilder implements Builder<Calibration, CalibrationBuilder> {
  _$Calibration _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  CalibrationBuilder();

  CalibrationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _duration = _$v.duration;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Calibration other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Calibration;
  }

  @override
  void update(void updates(CalibrationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Calibration build() {
    final _$result = _$v ??
        new _$Calibration._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            duration: duration);
    replace(_$result);
    return _$result;
  }
}

/// Control Loops immutable class
///
class _$ControlLoops extends ControlLoops {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ControlLoopsEnumEnable enable;
  @override
  final CLoopsMaskBitfield mask;
  @override
  final int scope_ref;

  factory _$ControlLoops([void updates(ControlLoopsBuilder b)]) =>
      (new ControlLoopsBuilder()..update(updates)).build();

  _$ControlLoops._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.enable,
      this.mask,
      this.scope_ref})
      : super._();

  @override
  ControlLoops rebuild(void updates(ControlLoopsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ControlLoopsBuilder toBuilder() => new ControlLoopsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ControlLoops &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        enable == this.enable &&
        mask == this.mask &&
        scope_ref == this.scope_ref;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        enable.hashCode), 
        mask.hashCode), 
        scope_ref.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ControlLoops')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('enable', enable)
          ..add('mask', mask)
          ..add('scope_ref', scope_ref))
        .toString();
  }
}

/// Control Loops builder class
///
class ControlLoopsBuilder implements Builder<ControlLoops, ControlLoopsBuilder> {
  _$ControlLoops _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ControlLoopsEnumEnable _enable;
  ControlLoopsEnumEnable get enable => _$this._enable;
  set enable(ControlLoopsEnumEnable enable) => _$this._enable = enable;

  CLoopsMaskBitfield _mask;
  CLoopsMaskBitfield get mask => _$this._mask;
  set mask(CLoopsMaskBitfield mask) => _$this._mask = mask;

  int _scope_ref;
  int get scope_ref => _$this._scope_ref;
  set scope_ref(int scope_ref) => _$this._scope_ref = scope_ref;

  ControlLoopsBuilder();

  ControlLoopsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _enable = _$v.enable;
      _mask = _$v.mask;
      _scope_ref = _$v.scope_ref;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ControlLoops other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ControlLoops;
  }

  @override
  void update(void updates(ControlLoopsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ControlLoops build() {
    final _$result = _$v ??
        new _$ControlLoops._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            enable: enable,
            mask: mask,
            scope_ref: scope_ref);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Medium immutable class
///
class _$VehicleMedium extends VehicleMedium {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VehicleMediumEnumMedium medium;

  factory _$VehicleMedium([void updates(VehicleMediumBuilder b)]) =>
      (new VehicleMediumBuilder()..update(updates)).build();

  _$VehicleMedium._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.medium})
      : super._();

  @override
  VehicleMedium rebuild(void updates(VehicleMediumBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleMediumBuilder toBuilder() => new VehicleMediumBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleMedium &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        medium == this.medium;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        medium.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleMedium')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('medium', medium))
        .toString();
  }
}

/// Vehicle Medium builder class
///
class VehicleMediumBuilder implements Builder<VehicleMedium, VehicleMediumBuilder> {
  _$VehicleMedium _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VehicleMediumEnumMedium _medium;
  VehicleMediumEnumMedium get medium => _$this._medium;
  set medium(VehicleMediumEnumMedium medium) => _$this._medium = medium;

  VehicleMediumBuilder();

  VehicleMediumBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _medium = _$v.medium;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleMedium other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleMedium;
  }

  @override
  void update(void updates(VehicleMediumBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleMedium build() {
    final _$result = _$v ??
        new _$VehicleMedium._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            medium: medium);
    replace(_$result);
    return _$result;
  }
}

/// Collision immutable class
///
class _$Collision extends Collision {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final CollisionBitfieldType type;

  factory _$Collision([void updates(CollisionBuilder b)]) =>
      (new CollisionBuilder()..update(updates)).build();

  _$Collision._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value,
      this.type})
      : super._();

  @override
  Collision rebuild(void updates(CollisionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CollisionBuilder toBuilder() => new CollisionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Collision &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value &&
        type == this.type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode), 
        type.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Collision')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value)
          ..add('type', type))
        .toString();
  }
}

/// Collision builder class
///
class CollisionBuilder implements Builder<Collision, CollisionBuilder> {
  _$Collision _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  CollisionBitfieldType _type;
  CollisionBitfieldType get type => _$this._type;
  set type(CollisionBitfieldType type) => _$this._type = type;

  CollisionBuilder();

  CollisionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Collision other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Collision;
  }

  @override
  void update(void updates(CollisionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Collision build() {
    final _$result = _$v ??
        new _$Collision._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value,
            type: type);
    replace(_$result);
    return _$result;
  }
}

/// Formation Tracking State immutable class
///
class _$FormState extends FormState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double PosSimErr;
  @override
  final double Converg;
  @override
  final double Turbulence;
  @override
  final FormStateEnumPosSimMon PosSimMon;
  @override
  final FormStateEnumCommMon CommMon;
  @override
  final FormStateEnumConvergMon ConvergMon;

  factory _$FormState([void updates(FormStateBuilder b)]) =>
      (new FormStateBuilder()..update(updates)).build();

  _$FormState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.PosSimErr,
      this.Converg,
      this.Turbulence,
      this.PosSimMon,
      this.CommMon,
      this.ConvergMon})
      : super._();

  @override
  FormState rebuild(void updates(FormStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormStateBuilder toBuilder() => new FormStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        PosSimErr == this.PosSimErr &&
        Converg == this.Converg &&
        Turbulence == this.Turbulence &&
        PosSimMon == this.PosSimMon &&
        CommMon == this.CommMon &&
        ConvergMon == this.ConvergMon;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        PosSimErr.hashCode), 
        Converg.hashCode), 
        Turbulence.hashCode), 
        PosSimMon.hashCode), 
        CommMon.hashCode), 
        ConvergMon.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('PosSimErr', PosSimErr)
          ..add('Converg', Converg)
          ..add('Turbulence', Turbulence)
          ..add('PosSimMon', PosSimMon)
          ..add('CommMon', CommMon)
          ..add('ConvergMon', ConvergMon))
        .toString();
  }
}

/// Formation Tracking State builder class
///
class FormStateBuilder implements Builder<FormState, FormStateBuilder> {
  _$FormState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _PosSimErr;
  double get PosSimErr => _$this._PosSimErr;
  set PosSimErr(double PosSimErr) => _$this._PosSimErr = PosSimErr;

  double _Converg;
  double get Converg => _$this._Converg;
  set Converg(double Converg) => _$this._Converg = Converg;

  double _Turbulence;
  double get Turbulence => _$this._Turbulence;
  set Turbulence(double Turbulence) => _$this._Turbulence = Turbulence;

  FormStateEnumPosSimMon _PosSimMon;
  FormStateEnumPosSimMon get PosSimMon => _$this._PosSimMon;
  set PosSimMon(FormStateEnumPosSimMon PosSimMon) => _$this._PosSimMon = PosSimMon;

  FormStateEnumCommMon _CommMon;
  FormStateEnumCommMon get CommMon => _$this._CommMon;
  set CommMon(FormStateEnumCommMon CommMon) => _$this._CommMon = CommMon;

  FormStateEnumConvergMon _ConvergMon;
  FormStateEnumConvergMon get ConvergMon => _$this._ConvergMon;
  set ConvergMon(FormStateEnumConvergMon ConvergMon) => _$this._ConvergMon = ConvergMon;

  FormStateBuilder();

  FormStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _PosSimErr = _$v.PosSimErr;
      _Converg = _$v.Converg;
      _Turbulence = _$v.Turbulence;
      _PosSimMon = _$v.PosSimMon;
      _CommMon = _$v.CommMon;
      _ConvergMon = _$v.ConvergMon;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormState;
  }

  @override
  void update(void updates(FormStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormState build() {
    final _$result = _$v ??
        new _$FormState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            PosSimErr: PosSimErr,
            Converg: Converg,
            Turbulence: Turbulence,
            PosSimMon: PosSimMon,
            CommMon: CommMon,
            ConvergMon: ConvergMon);
    replace(_$result);
    return _$result;
  }
}

/// Autopilot Mode immutable class
///
class _$AutopilotMode extends AutopilotMode {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final AutopilotModeEnumAutonomy autonomy;
  @override
  final String mode;

  factory _$AutopilotMode([void updates(AutopilotModeBuilder b)]) =>
      (new AutopilotModeBuilder()..update(updates)).build();

  _$AutopilotMode._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.autonomy,
      this.mode})
      : super._();

  @override
  AutopilotMode rebuild(void updates(AutopilotModeBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AutopilotModeBuilder toBuilder() => new AutopilotModeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AutopilotMode &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        autonomy == this.autonomy &&
        mode == this.mode;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        autonomy.hashCode), 
        mode.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AutopilotMode')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('autonomy', autonomy)
          ..add('mode', mode))
        .toString();
  }
}

/// Autopilot Mode builder class
///
class AutopilotModeBuilder implements Builder<AutopilotMode, AutopilotModeBuilder> {
  _$AutopilotMode _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AutopilotModeEnumAutonomy _autonomy;
  AutopilotModeEnumAutonomy get autonomy => _$this._autonomy;
  set autonomy(AutopilotModeEnumAutonomy autonomy) => _$this._autonomy = autonomy;

  String _mode;
  String get mode => _$this._mode;
  set mode(String mode) => _$this._mode = mode;

  AutopilotModeBuilder();

  AutopilotModeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _autonomy = _$v.autonomy;
      _mode = _$v.mode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AutopilotMode other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AutopilotMode;
  }

  @override
  void update(void updates(AutopilotModeBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AutopilotMode build() {
    final _$result = _$v ??
        new _$AutopilotMode._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            autonomy: autonomy,
            mode: mode);
    replace(_$result);
    return _$result;
  }
}

/// Formation Tracking State immutable class
///
class _$FormationState extends FormationState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final FormationStateEnumType type;
  @override
  final FormationStateEnumOp op;
  @override
  final double PosSimErr;
  @override
  final double Converg;
  @override
  final double Turbulence;
  @override
  final FormationStateEnumPosSimMon PosSimMon;
  @override
  final FormationStateEnumCommMon CommMon;
  @override
  final FormationStateEnumConvergMon ConvergMon;

  factory _$FormationState([void updates(FormationStateBuilder b)]) =>
      (new FormationStateBuilder()..update(updates)).build();

  _$FormationState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.op,
      this.PosSimErr,
      this.Converg,
      this.Turbulence,
      this.PosSimMon,
      this.CommMon,
      this.ConvergMon})
      : super._();

  @override
  FormationState rebuild(void updates(FormationStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationStateBuilder toBuilder() => new FormationStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        op == this.op &&
        PosSimErr == this.PosSimErr &&
        Converg == this.Converg &&
        Turbulence == this.Turbulence &&
        PosSimMon == this.PosSimMon &&
        CommMon == this.CommMon &&
        ConvergMon == this.ConvergMon;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode), 
        op.hashCode), 
        PosSimErr.hashCode), 
        Converg.hashCode), 
        Turbulence.hashCode), 
        PosSimMon.hashCode), 
        CommMon.hashCode), 
        ConvergMon.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type)
          ..add('op', op)
          ..add('PosSimErr', PosSimErr)
          ..add('Converg', Converg)
          ..add('Turbulence', Turbulence)
          ..add('PosSimMon', PosSimMon)
          ..add('CommMon', CommMon)
          ..add('ConvergMon', ConvergMon))
        .toString();
  }
}

/// Formation Tracking State builder class
///
class FormationStateBuilder implements Builder<FormationState, FormationStateBuilder> {
  _$FormationState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  FormationStateEnumType _type;
  FormationStateEnumType get type => _$this._type;
  set type(FormationStateEnumType type) => _$this._type = type;

  FormationStateEnumOp _op;
  FormationStateEnumOp get op => _$this._op;
  set op(FormationStateEnumOp op) => _$this._op = op;

  double _PosSimErr;
  double get PosSimErr => _$this._PosSimErr;
  set PosSimErr(double PosSimErr) => _$this._PosSimErr = PosSimErr;

  double _Converg;
  double get Converg => _$this._Converg;
  set Converg(double Converg) => _$this._Converg = Converg;

  double _Turbulence;
  double get Turbulence => _$this._Turbulence;
  set Turbulence(double Turbulence) => _$this._Turbulence = Turbulence;

  FormationStateEnumPosSimMon _PosSimMon;
  FormationStateEnumPosSimMon get PosSimMon => _$this._PosSimMon;
  set PosSimMon(FormationStateEnumPosSimMon PosSimMon) => _$this._PosSimMon = PosSimMon;

  FormationStateEnumCommMon _CommMon;
  FormationStateEnumCommMon get CommMon => _$this._CommMon;
  set CommMon(FormationStateEnumCommMon CommMon) => _$this._CommMon = CommMon;

  FormationStateEnumConvergMon _ConvergMon;
  FormationStateEnumConvergMon get ConvergMon => _$this._ConvergMon;
  set ConvergMon(FormationStateEnumConvergMon ConvergMon) => _$this._ConvergMon = ConvergMon;

  FormationStateBuilder();

  FormationStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _op = _$v.op;
      _PosSimErr = _$v.PosSimErr;
      _Converg = _$v.Converg;
      _Turbulence = _$v.Turbulence;
      _PosSimMon = _$v.PosSimMon;
      _CommMon = _$v.CommMon;
      _ConvergMon = _$v.ConvergMon;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormationState;
  }

  @override
  void update(void updates(FormationStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationState build() {
    final _$result = _$v ??
        new _$FormationState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type,
            op: op,
            PosSimErr: PosSimErr,
            Converg: Converg,
            Turbulence: Turbulence,
            PosSimMon: PosSimMon,
            CommMon: CommMon,
            ConvergMon: ConvergMon);
    replace(_$result);
    return _$result;
  }
}

/// Report Control immutable class
///
class _$ReportControl extends ReportControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ReportControlEnumOp op;
  @override
  final ReportControlBitfieldCommInterface comm_interface;
  @override
  final int period;
  @override
  final String sys_dst;

  factory _$ReportControl([void updates(ReportControlBuilder b)]) =>
      (new ReportControlBuilder()..update(updates)).build();

  _$ReportControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.comm_interface,
      this.period,
      this.sys_dst})
      : super._();

  @override
  ReportControl rebuild(void updates(ReportControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ReportControlBuilder toBuilder() => new ReportControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ReportControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        comm_interface == this.comm_interface &&
        period == this.period &&
        sys_dst == this.sys_dst;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        comm_interface.hashCode), 
        period.hashCode), 
        sys_dst.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ReportControl')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('comm_interface', comm_interface)
          ..add('period', period)
          ..add('sys_dst', sys_dst))
        .toString();
  }
}

/// Report Control builder class
///
class ReportControlBuilder implements Builder<ReportControl, ReportControlBuilder> {
  _$ReportControl _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ReportControlEnumOp _op;
  ReportControlEnumOp get op => _$this._op;
  set op(ReportControlEnumOp op) => _$this._op = op;

  ReportControlBitfieldCommInterface _comm_interface;
  ReportControlBitfieldCommInterface get comm_interface => _$this._comm_interface;
  set comm_interface(ReportControlBitfieldCommInterface comm_interface) => _$this._comm_interface = comm_interface;

  int _period;
  int get period => _$this._period;
  set period(int period) => _$this._period = period;

  String _sys_dst;
  String get sys_dst => _$this._sys_dst;
  set sys_dst(String sys_dst) => _$this._sys_dst = sys_dst;

  ReportControlBuilder();

  ReportControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _comm_interface = _$v.comm_interface;
      _period = _$v.period;
      _sys_dst = _$v.sys_dst;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ReportControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ReportControl;
  }

  @override
  void update(void updates(ReportControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ReportControl build() {
    final _$result = _$v ??
        new _$ReportControl._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            comm_interface: comm_interface,
            period: period,
            sys_dst: sys_dst);
    replace(_$result);
    return _$result;
  }
}

/// State Report immutable class
///
class _$StateReport extends StateReport {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int stime;
  @override
  final double latitude;
  @override
  final double longitude;
  @override
  final int altitude;
  @override
  final int depth;
  @override
  final int heading;
  @override
  final int speed;
  @override
  final int fuel;
  @override
  final int exec_state;
  @override
  final int plan_checksum;

  factory _$StateReport([void updates(StateReportBuilder b)]) =>
      (new StateReportBuilder()..update(updates)).build();

  _$StateReport._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.stime,
      this.latitude,
      this.longitude,
      this.altitude,
      this.depth,
      this.heading,
      this.speed,
      this.fuel,
      this.exec_state,
      this.plan_checksum})
      : super._();

  @override
  StateReport rebuild(void updates(StateReportBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  StateReportBuilder toBuilder() => new StateReportBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StateReport &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        stime == this.stime &&
        latitude == this.latitude &&
        longitude == this.longitude &&
        altitude == this.altitude &&
        depth == this.depth &&
        heading == this.heading &&
        speed == this.speed &&
        fuel == this.fuel &&
        exec_state == this.exec_state &&
        plan_checksum == this.plan_checksum;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        stime.hashCode), 
        latitude.hashCode), 
        longitude.hashCode), 
        altitude.hashCode), 
        depth.hashCode), 
        heading.hashCode), 
        speed.hashCode), 
        fuel.hashCode), 
        exec_state.hashCode), 
        plan_checksum.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StateReport')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('stime', stime)
          ..add('latitude', latitude)
          ..add('longitude', longitude)
          ..add('altitude', altitude)
          ..add('depth', depth)
          ..add('heading', heading)
          ..add('speed', speed)
          ..add('fuel', fuel)
          ..add('exec_state', exec_state)
          ..add('plan_checksum', plan_checksum))
        .toString();
  }
}

/// State Report builder class
///
class StateReportBuilder implements Builder<StateReport, StateReportBuilder> {
  _$StateReport _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _stime;
  int get stime => _$this._stime;
  set stime(int stime) => _$this._stime = stime;

  double _latitude;
  double get latitude => _$this._latitude;
  set latitude(double latitude) => _$this._latitude = latitude;

  double _longitude;
  double get longitude => _$this._longitude;
  set longitude(double longitude) => _$this._longitude = longitude;

  int _altitude;
  int get altitude => _$this._altitude;
  set altitude(int altitude) => _$this._altitude = altitude;

  int _depth;
  int get depth => _$this._depth;
  set depth(int depth) => _$this._depth = depth;

  int _heading;
  int get heading => _$this._heading;
  set heading(int heading) => _$this._heading = heading;

  int _speed;
  int get speed => _$this._speed;
  set speed(int speed) => _$this._speed = speed;

  int _fuel;
  int get fuel => _$this._fuel;
  set fuel(int fuel) => _$this._fuel = fuel;

  int _exec_state;
  int get exec_state => _$this._exec_state;
  set exec_state(int exec_state) => _$this._exec_state = exec_state;

  int _plan_checksum;
  int get plan_checksum => _$this._plan_checksum;
  set plan_checksum(int plan_checksum) => _$this._plan_checksum = plan_checksum;

  StateReportBuilder();

  StateReportBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _stime = _$v.stime;
      _latitude = _$v.latitude;
      _longitude = _$v.longitude;
      _altitude = _$v.altitude;
      _depth = _$v.depth;
      _heading = _$v.heading;
      _speed = _$v.speed;
      _fuel = _$v.fuel;
      _exec_state = _$v.exec_state;
      _plan_checksum = _$v.plan_checksum;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StateReport other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$StateReport;
  }

  @override
  void update(void updates(StateReportBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$StateReport build() {
    final _$result = _$v ??
        new _$StateReport._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            stime: stime,
            latitude: latitude,
            longitude: longitude,
            altitude: altitude,
            depth: depth,
            heading: heading,
            speed: speed,
            fuel: fuel,
            exec_state: exec_state,
            plan_checksum: plan_checksum);
    replace(_$result);
    return _$result;
  }
}

/// Transmission Request immutable class
///
class _$TransmissionRequest extends TransmissionRequest {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int req_id;
  @override
  final TransmissionRequestEnumCommMean comm_mean;
  @override
  final String destination;
  @override
  final double deadline;
  @override
  final TransmissionRequestEnumDataMode data_mode;
  @override
  final ImcMessage msg_data;
  @override
  final String txt_data;
  @override
  final List<int> raw_data;

  factory _$TransmissionRequest([void updates(TransmissionRequestBuilder b)]) =>
      (new TransmissionRequestBuilder()..update(updates)).build();

  _$TransmissionRequest._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.req_id,
      this.comm_mean,
      this.destination,
      this.deadline,
      this.data_mode,
      this.msg_data,
      this.txt_data,
      this.raw_data})
      : super._();

  @override
  TransmissionRequest rebuild(void updates(TransmissionRequestBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TransmissionRequestBuilder toBuilder() => new TransmissionRequestBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TransmissionRequest &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        req_id == this.req_id &&
        comm_mean == this.comm_mean &&
        destination == this.destination &&
        deadline == this.deadline &&
        data_mode == this.data_mode &&
        msg_data == this.msg_data &&
        txt_data == this.txt_data &&
        raw_data == this.raw_data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        req_id.hashCode), 
        comm_mean.hashCode), 
        destination.hashCode), 
        deadline.hashCode), 
        data_mode.hashCode), 
        msg_data.hashCode), 
        txt_data.hashCode), 
        raw_data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TransmissionRequest')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('req_id', req_id)
          ..add('comm_mean', comm_mean)
          ..add('destination', destination)
          ..add('deadline', deadline)
          ..add('data_mode', data_mode)
          ..add('msg_data', msg_data)
          ..add('txt_data', txt_data)
          ..add('raw_data', raw_data))
        .toString();
  }
}

/// Transmission Request builder class
///
class TransmissionRequestBuilder implements Builder<TransmissionRequest, TransmissionRequestBuilder> {
  _$TransmissionRequest _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _req_id;
  int get req_id => _$this._req_id;
  set req_id(int req_id) => _$this._req_id = req_id;

  TransmissionRequestEnumCommMean _comm_mean;
  TransmissionRequestEnumCommMean get comm_mean => _$this._comm_mean;
  set comm_mean(TransmissionRequestEnumCommMean comm_mean) => _$this._comm_mean = comm_mean;

  String _destination;
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  double _deadline;
  double get deadline => _$this._deadline;
  set deadline(double deadline) => _$this._deadline = deadline;

  TransmissionRequestEnumDataMode _data_mode;
  TransmissionRequestEnumDataMode get data_mode => _$this._data_mode;
  set data_mode(TransmissionRequestEnumDataMode data_mode) => _$this._data_mode = data_mode;

  ImcMessage _msg_data;
  ImcMessage get msg_data => _$this._msg_data;
  set msg_data(ImcMessage msg_data) => _$this._msg_data = msg_data;

  String _txt_data;
  String get txt_data => _$this._txt_data;
  set txt_data(String txt_data) => _$this._txt_data = txt_data;

  List<int> _raw_data;
  List<int> get raw_data => _$this._raw_data;
  set raw_data(List<int> raw_data) => _$this._raw_data = raw_data;

  TransmissionRequestBuilder();

  TransmissionRequestBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _req_id = _$v.req_id;
      _comm_mean = _$v.comm_mean;
      _destination = _$v.destination;
      _deadline = _$v.deadline;
      _data_mode = _$v.data_mode;
      _msg_data = _$v.msg_data;
      _txt_data = _$v.txt_data;
      _raw_data = _$v.raw_data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TransmissionRequest other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TransmissionRequest;
  }

  @override
  void update(void updates(TransmissionRequestBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TransmissionRequest build() {
    final _$result = _$v ??
        new _$TransmissionRequest._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            req_id: req_id,
            comm_mean: comm_mean,
            destination: destination,
            deadline: deadline,
            data_mode: data_mode,
            msg_data: msg_data,
            txt_data: txt_data,
            raw_data: raw_data);
    replace(_$result);
    return _$result;
  }
}

/// Transmission Status immutable class
///
class _$TransmissionStatus extends TransmissionStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int req_id;
  @override
  final TransmissionStatusEnumStatus status;
  @override
  final String info;

  factory _$TransmissionStatus([void updates(TransmissionStatusBuilder b)]) =>
      (new TransmissionStatusBuilder()..update(updates)).build();

  _$TransmissionStatus._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.req_id,
      this.status,
      this.info})
      : super._();

  @override
  TransmissionStatus rebuild(void updates(TransmissionStatusBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TransmissionStatusBuilder toBuilder() => new TransmissionStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TransmissionStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        req_id == this.req_id &&
        status == this.status &&
        info == this.info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        req_id.hashCode), 
        status.hashCode), 
        info.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TransmissionStatus')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('req_id', req_id)
          ..add('status', status)
          ..add('info', info))
        .toString();
  }
}

/// Transmission Status builder class
///
class TransmissionStatusBuilder implements Builder<TransmissionStatus, TransmissionStatusBuilder> {
  _$TransmissionStatus _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _req_id;
  int get req_id => _$this._req_id;
  set req_id(int req_id) => _$this._req_id = req_id;

  TransmissionStatusEnumStatus _status;
  TransmissionStatusEnumStatus get status => _$this._status;
  set status(TransmissionStatusEnumStatus status) => _$this._status = status;

  String _info;
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  TransmissionStatusBuilder();

  TransmissionStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _req_id = _$v.req_id;
      _status = _$v.status;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TransmissionStatus other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TransmissionStatus;
  }

  @override
  void update(void updates(TransmissionStatusBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TransmissionStatus build() {
    final _$result = _$v ??
        new _$TransmissionStatus._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            req_id: req_id,
            status: status,
            info: info);
    replace(_$result);
    return _$result;
  }
}

/// SMS Transmission Request immutable class
///
class _$SmsRequest extends SmsRequest {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int req_id;
  @override
  final String destination;
  @override
  final double timeout;
  @override
  final String sms_text;

  factory _$SmsRequest([void updates(SmsRequestBuilder b)]) =>
      (new SmsRequestBuilder()..update(updates)).build();

  _$SmsRequest._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.req_id,
      this.destination,
      this.timeout,
      this.sms_text})
      : super._();

  @override
  SmsRequest rebuild(void updates(SmsRequestBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsRequestBuilder toBuilder() => new SmsRequestBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsRequest &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        req_id == this.req_id &&
        destination == this.destination &&
        timeout == this.timeout &&
        sms_text == this.sms_text;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        req_id.hashCode), 
        destination.hashCode), 
        timeout.hashCode), 
        sms_text.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsRequest')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('req_id', req_id)
          ..add('destination', destination)
          ..add('timeout', timeout)
          ..add('sms_text', sms_text))
        .toString();
  }
}

/// SMS Transmission Request builder class
///
class SmsRequestBuilder implements Builder<SmsRequest, SmsRequestBuilder> {
  _$SmsRequest _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _req_id;
  int get req_id => _$this._req_id;
  set req_id(int req_id) => _$this._req_id = req_id;

  String _destination;
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  double _timeout;
  double get timeout => _$this._timeout;
  set timeout(double timeout) => _$this._timeout = timeout;

  String _sms_text;
  String get sms_text => _$this._sms_text;
  set sms_text(String sms_text) => _$this._sms_text = sms_text;

  SmsRequestBuilder();

  SmsRequestBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _req_id = _$v.req_id;
      _destination = _$v.destination;
      _timeout = _$v.timeout;
      _sms_text = _$v.sms_text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsRequest other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SmsRequest;
  }

  @override
  void update(void updates(SmsRequestBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsRequest build() {
    final _$result = _$v ??
        new _$SmsRequest._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            req_id: req_id,
            destination: destination,
            timeout: timeout,
            sms_text: sms_text);
    replace(_$result);
    return _$result;
  }
}

/// SMS Transmission Status immutable class
///
class _$SmsStatus extends SmsStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int req_id;
  @override
  final SmsStatusEnumStatus status;
  @override
  final String info;

  factory _$SmsStatus([void updates(SmsStatusBuilder b)]) =>
      (new SmsStatusBuilder()..update(updates)).build();

  _$SmsStatus._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.req_id,
      this.status,
      this.info})
      : super._();

  @override
  SmsStatus rebuild(void updates(SmsStatusBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsStatusBuilder toBuilder() => new SmsStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        req_id == this.req_id &&
        status == this.status &&
        info == this.info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        req_id.hashCode), 
        status.hashCode), 
        info.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsStatus')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('req_id', req_id)
          ..add('status', status)
          ..add('info', info))
        .toString();
  }
}

/// SMS Transmission Status builder class
///
class SmsStatusBuilder implements Builder<SmsStatus, SmsStatusBuilder> {
  _$SmsStatus _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _req_id;
  int get req_id => _$this._req_id;
  set req_id(int req_id) => _$this._req_id = req_id;

  SmsStatusEnumStatus _status;
  SmsStatusEnumStatus get status => _$this._status;
  set status(SmsStatusEnumStatus status) => _$this._status = status;

  String _info;
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  SmsStatusBuilder();

  SmsStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _req_id = _$v.req_id;
      _status = _$v.status;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsStatus other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SmsStatus;
  }

  @override
  void update(void updates(SmsStatusBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsStatus build() {
    final _$result = _$v ??
        new _$SmsStatus._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            req_id: req_id,
            status: status,
            info: info);
    replace(_$result);
    return _$result;
  }
}

/// VTOL State immutable class
///
class _$VtolState extends VtolState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VtolStateEnumState state;

  factory _$VtolState([void updates(VtolStateBuilder b)]) =>
      (new VtolStateBuilder()..update(updates)).build();

  _$VtolState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state})
      : super._();

  @override
  VtolState rebuild(void updates(VtolStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VtolStateBuilder toBuilder() => new VtolStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VtolState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        state.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VtolState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('state', state))
        .toString();
  }
}

/// VTOL State builder class
///
class VtolStateBuilder implements Builder<VtolState, VtolStateBuilder> {
  _$VtolState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VtolStateEnumState _state;
  VtolStateEnumState get state => _$this._state;
  set state(VtolStateEnumState state) => _$this._state = state;

  VtolStateBuilder();

  VtolStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VtolState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VtolState;
  }

  @override
  void update(void updates(VtolStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VtolState build() {
    final _$result = _$v ??
        new _$VtolState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            state: state);
    replace(_$result);
    return _$result;
  }
}

/// Arming State immutable class
///
class _$ArmingState extends ArmingState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ArmingStateEnumState state;

  factory _$ArmingState([void updates(ArmingStateBuilder b)]) =>
      (new ArmingStateBuilder()..update(updates)).build();

  _$ArmingState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state})
      : super._();

  @override
  ArmingState rebuild(void updates(ArmingStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ArmingStateBuilder toBuilder() => new ArmingStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ArmingState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        state.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ArmingState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('state', state))
        .toString();
  }
}

/// Arming State builder class
///
class ArmingStateBuilder implements Builder<ArmingState, ArmingStateBuilder> {
  _$ArmingState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ArmingStateEnumState _state;
  ArmingStateEnumState get state => _$this._state;
  set state(ArmingStateEnumState state) => _$this._state = state;

  ArmingStateBuilder();

  ArmingStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ArmingState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ArmingState;
  }

  @override
  void update(void updates(ArmingStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ArmingState build() {
    final _$result = _$v ??
        new _$ArmingState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            state: state);
    replace(_$result);
    return _$result;
  }
}

/// Abort immutable class
///
class _$Abort extends Abort {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$Abort([void updates(AbortBuilder b)]) =>
      (new AbortBuilder()..update(updates)).build();

  _$Abort._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  Abort rebuild(void updates(AbortBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AbortBuilder toBuilder() => new AbortBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Abort &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Abort')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt))
        .toString();
  }
}

/// Abort builder class
///
class AbortBuilder implements Builder<Abort, AbortBuilder> {
  _$Abort _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AbortBuilder();

  AbortBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Abort other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Abort;
  }

  @override
  void update(void updates(AbortBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Abort build() {
    final _$result = _$v ??
        new _$Abort._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt);
    replace(_$result);
    return _$result;
  }
}

/// Plan Specification immutable class
///
class _$PlanSpecification extends PlanSpecification {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String plan_id;
  @override
  final String description;
  @override
  final String vnamespace;
  @override
  final List<PlanVariable> variables;
  @override
  final String start_man_id;
  @override
  final List<PlanManeuver> maneuvers;
  @override
  final List<PlanTransition> transitions;
  @override
  final List<ImcMessage> start_actions;
  @override
  final List<ImcMessage> end_actions;

  factory _$PlanSpecification([void updates(PlanSpecificationBuilder b)]) =>
      (new PlanSpecificationBuilder()..update(updates)).build();

  _$PlanSpecification._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.plan_id,
      this.description,
      this.vnamespace,
      this.variables,
      this.start_man_id,
      this.maneuvers,
      this.transitions,
      this.start_actions,
      this.end_actions})
      : super._();

  @override
  PlanSpecification rebuild(void updates(PlanSpecificationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanSpecificationBuilder toBuilder() => new PlanSpecificationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanSpecification &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        plan_id == this.plan_id &&
        description == this.description &&
        vnamespace == this.vnamespace &&
        variables == this.variables &&
        start_man_id == this.start_man_id &&
        maneuvers == this.maneuvers &&
        transitions == this.transitions &&
        start_actions == this.start_actions &&
        end_actions == this.end_actions;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        plan_id.hashCode), 
        description.hashCode), 
        vnamespace.hashCode), 
        variables.hashCode), 
        start_man_id.hashCode), 
        maneuvers.hashCode), 
        transitions.hashCode), 
        start_actions.hashCode), 
        end_actions.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanSpecification')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('plan_id', plan_id)
          ..add('description', description)
          ..add('vnamespace', vnamespace)
          ..add('variables', variables)
          ..add('start_man_id', start_man_id)
          ..add('maneuvers', maneuvers)
          ..add('transitions', transitions)
          ..add('start_actions', start_actions)
          ..add('end_actions', end_actions))
        .toString();
  }
}

/// Plan Specification builder class
///
class PlanSpecificationBuilder implements Builder<PlanSpecification, PlanSpecificationBuilder> {
  _$PlanSpecification _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _plan_id;
  String get plan_id => _$this._plan_id;
  set plan_id(String plan_id) => _$this._plan_id = plan_id;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  String _vnamespace;
  String get vnamespace => _$this._vnamespace;
  set vnamespace(String vnamespace) => _$this._vnamespace = vnamespace;

  List<PlanVariable> _variables;
  List<PlanVariable> get variables => _$this._variables;
  set variables(List<PlanVariable> variables) => _$this._variables = variables;

  String _start_man_id;
  String get start_man_id => _$this._start_man_id;
  set start_man_id(String start_man_id) => _$this._start_man_id = start_man_id;

  List<PlanManeuver> _maneuvers;
  List<PlanManeuver> get maneuvers => _$this._maneuvers;
  set maneuvers(List<PlanManeuver> maneuvers) => _$this._maneuvers = maneuvers;

  List<PlanTransition> _transitions;
  List<PlanTransition> get transitions => _$this._transitions;
  set transitions(List<PlanTransition> transitions) => _$this._transitions = transitions;

  List<ImcMessage> _start_actions;
  List<ImcMessage> get start_actions => _$this._start_actions;
  set start_actions(List<ImcMessage> start_actions) => _$this._start_actions = start_actions;

  List<ImcMessage> _end_actions;
  List<ImcMessage> get end_actions => _$this._end_actions;
  set end_actions(List<ImcMessage> end_actions) => _$this._end_actions = end_actions;

  PlanSpecificationBuilder();

  PlanSpecificationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _plan_id = _$v.plan_id;
      _description = _$v.description;
      _vnamespace = _$v.vnamespace;
      _variables = _$v.variables;
      _start_man_id = _$v.start_man_id;
      _maneuvers = _$v.maneuvers;
      _transitions = _$v.transitions;
      _start_actions = _$v.start_actions;
      _end_actions = _$v.end_actions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanSpecification other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanSpecification;
  }

  @override
  void update(void updates(PlanSpecificationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanSpecification build() {
    final _$result = _$v ??
        new _$PlanSpecification._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            plan_id: plan_id,
            description: description,
            vnamespace: vnamespace,
            variables: variables,
            start_man_id: start_man_id,
            maneuvers: maneuvers,
            transitions: transitions,
            start_actions: start_actions,
            end_actions: end_actions);
    replace(_$result);
    return _$result;
  }
}

/// Plan Maneuver immutable class
///
class _$PlanManeuver extends PlanManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String maneuver_id;
  @override
  final Maneuver data;
  @override
  final List<ImcMessage> start_actions;
  @override
  final List<ImcMessage> end_actions;

  factory _$PlanManeuver([void updates(PlanManeuverBuilder b)]) =>
      (new PlanManeuverBuilder()..update(updates)).build();

  _$PlanManeuver._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.maneuver_id,
      this.data,
      this.start_actions,
      this.end_actions})
      : super._();

  @override
  PlanManeuver rebuild(void updates(PlanManeuverBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanManeuverBuilder toBuilder() => new PlanManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        maneuver_id == this.maneuver_id &&
        data == this.data &&
        start_actions == this.start_actions &&
        end_actions == this.end_actions;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        maneuver_id.hashCode), 
        data.hashCode), 
        start_actions.hashCode), 
        end_actions.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanManeuver')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('maneuver_id', maneuver_id)
          ..add('data', data)
          ..add('start_actions', start_actions)
          ..add('end_actions', end_actions))
        .toString();
  }
}

/// Plan Maneuver builder class
///
class PlanManeuverBuilder implements Builder<PlanManeuver, PlanManeuverBuilder> {
  _$PlanManeuver _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _maneuver_id;
  String get maneuver_id => _$this._maneuver_id;
  set maneuver_id(String maneuver_id) => _$this._maneuver_id = maneuver_id;

  Maneuver _data;
  Maneuver get data => _$this._data;
  set data(Maneuver data) => _$this._data = data;

  List<ImcMessage> _start_actions;
  List<ImcMessage> get start_actions => _$this._start_actions;
  set start_actions(List<ImcMessage> start_actions) => _$this._start_actions = start_actions;

  List<ImcMessage> _end_actions;
  List<ImcMessage> get end_actions => _$this._end_actions;
  set end_actions(List<ImcMessage> end_actions) => _$this._end_actions = end_actions;

  PlanManeuverBuilder();

  PlanManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _maneuver_id = _$v.maneuver_id;
      _data = _$v.data;
      _start_actions = _$v.start_actions;
      _end_actions = _$v.end_actions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanManeuver other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanManeuver;
  }

  @override
  void update(void updates(PlanManeuverBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanManeuver build() {
    final _$result = _$v ??
        new _$PlanManeuver._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            maneuver_id: maneuver_id,
            data: data,
            start_actions: start_actions,
            end_actions: end_actions);
    replace(_$result);
    return _$result;
  }
}

/// Plan Transition immutable class
///
class _$PlanTransition extends PlanTransition {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String source_man;
  @override
  final String dest_man;
  @override
  final String conditions;
  @override
  final List<ImcMessage> actions;

  factory _$PlanTransition([void updates(PlanTransitionBuilder b)]) =>
      (new PlanTransitionBuilder()..update(updates)).build();

  _$PlanTransition._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.source_man,
      this.dest_man,
      this.conditions,
      this.actions})
      : super._();

  @override
  PlanTransition rebuild(void updates(PlanTransitionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanTransitionBuilder toBuilder() => new PlanTransitionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanTransition &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        source_man == this.source_man &&
        dest_man == this.dest_man &&
        conditions == this.conditions &&
        actions == this.actions;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        source_man.hashCode), 
        dest_man.hashCode), 
        conditions.hashCode), 
        actions.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanTransition')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('source_man', source_man)
          ..add('dest_man', dest_man)
          ..add('conditions', conditions)
          ..add('actions', actions))
        .toString();
  }
}

/// Plan Transition builder class
///
class PlanTransitionBuilder implements Builder<PlanTransition, PlanTransitionBuilder> {
  _$PlanTransition _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _source_man;
  String get source_man => _$this._source_man;
  set source_man(String source_man) => _$this._source_man = source_man;

  String _dest_man;
  String get dest_man => _$this._dest_man;
  set dest_man(String dest_man) => _$this._dest_man = dest_man;

  String _conditions;
  String get conditions => _$this._conditions;
  set conditions(String conditions) => _$this._conditions = conditions;

  List<ImcMessage> _actions;
  List<ImcMessage> get actions => _$this._actions;
  set actions(List<ImcMessage> actions) => _$this._actions = actions;

  PlanTransitionBuilder();

  PlanTransitionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _source_man = _$v.source_man;
      _dest_man = _$v.dest_man;
      _conditions = _$v.conditions;
      _actions = _$v.actions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanTransition other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanTransition;
  }

  @override
  void update(void updates(PlanTransitionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanTransition build() {
    final _$result = _$v ??
        new _$PlanTransition._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            source_man: source_man,
            dest_man: dest_man,
            conditions: conditions,
            actions: actions);
    replace(_$result);
    return _$result;
  }
}

/// Emergency Control immutable class
///
class _$EmergencyControl extends EmergencyControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EmergencyControlEnumCommand command;
  @override
  final PlanSpecification plan;

  factory _$EmergencyControl([void updates(EmergencyControlBuilder b)]) =>
      (new EmergencyControlBuilder()..update(updates)).build();

  _$EmergencyControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.command,
      this.plan})
      : super._();

  @override
  EmergencyControl rebuild(void updates(EmergencyControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EmergencyControlBuilder toBuilder() => new EmergencyControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EmergencyControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        command == this.command &&
        plan == this.plan;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        command.hashCode), 
        plan.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EmergencyControl')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('command', command)
          ..add('plan', plan))
        .toString();
  }
}

/// Emergency Control builder class
///
class EmergencyControlBuilder implements Builder<EmergencyControl, EmergencyControlBuilder> {
  _$EmergencyControl _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EmergencyControlEnumCommand _command;
  EmergencyControlEnumCommand get command => _$this._command;
  set command(EmergencyControlEnumCommand command) => _$this._command = command;

  PlanSpecification _plan;
  PlanSpecification get plan => _$this._plan;
  set plan(PlanSpecification plan) => _$this._plan = plan;

  EmergencyControlBuilder();

  EmergencyControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _command = _$v.command;
      _plan = _$v.plan;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EmergencyControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EmergencyControl;
  }

  @override
  void update(void updates(EmergencyControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EmergencyControl build() {
    final _$result = _$v ??
        new _$EmergencyControl._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            command: command,
            plan: plan);
    replace(_$result);
    return _$result;
  }
}

/// Emergency Control State immutable class
///
class _$EmergencyControlState extends EmergencyControlState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EmergencyControlStateEnumState state;
  @override
  final String plan_id;
  @override
  final int comm_level;

  factory _$EmergencyControlState([void updates(EmergencyControlStateBuilder b)]) =>
      (new EmergencyControlStateBuilder()..update(updates)).build();

  _$EmergencyControlState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state,
      this.plan_id,
      this.comm_level})
      : super._();

  @override
  EmergencyControlState rebuild(void updates(EmergencyControlStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EmergencyControlStateBuilder toBuilder() => new EmergencyControlStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EmergencyControlState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state &&
        plan_id == this.plan_id &&
        comm_level == this.comm_level;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        state.hashCode), 
        plan_id.hashCode), 
        comm_level.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EmergencyControlState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('state', state)
          ..add('plan_id', plan_id)
          ..add('comm_level', comm_level))
        .toString();
  }
}

/// Emergency Control State builder class
///
class EmergencyControlStateBuilder implements Builder<EmergencyControlState, EmergencyControlStateBuilder> {
  _$EmergencyControlState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EmergencyControlStateEnumState _state;
  EmergencyControlStateEnumState get state => _$this._state;
  set state(EmergencyControlStateEnumState state) => _$this._state = state;

  String _plan_id;
  String get plan_id => _$this._plan_id;
  set plan_id(String plan_id) => _$this._plan_id = plan_id;

  int _comm_level;
  int get comm_level => _$this._comm_level;
  set comm_level(int comm_level) => _$this._comm_level = comm_level;

  EmergencyControlStateBuilder();

  EmergencyControlStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _plan_id = _$v.plan_id;
      _comm_level = _$v.comm_level;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EmergencyControlState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EmergencyControlState;
  }

  @override
  void update(void updates(EmergencyControlStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EmergencyControlState build() {
    final _$result = _$v ??
        new _$EmergencyControlState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            state: state,
            plan_id: plan_id,
            comm_level: comm_level);
    replace(_$result);
    return _$result;
  }
}

/// Plan DB immutable class
///
class _$PlanDB extends PlanDB {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PlanDBEnumType type;
  @override
  final PlanDBEnumOp op;
  @override
  final int request_id;
  @override
  final String plan_id;
  @override
  final ImcMessage arg;
  @override
  final String info;

  factory _$PlanDB([void updates(PlanDBBuilder b)]) =>
      (new PlanDBBuilder()..update(updates)).build();

  _$PlanDB._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.op,
      this.request_id,
      this.plan_id,
      this.arg,
      this.info})
      : super._();

  @override
  PlanDB rebuild(void updates(PlanDBBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanDBBuilder toBuilder() => new PlanDBBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanDB &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        op == this.op &&
        request_id == this.request_id &&
        plan_id == this.plan_id &&
        arg == this.arg &&
        info == this.info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode), 
        op.hashCode), 
        request_id.hashCode), 
        plan_id.hashCode), 
        arg.hashCode), 
        info.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanDB')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type)
          ..add('op', op)
          ..add('request_id', request_id)
          ..add('plan_id', plan_id)
          ..add('arg', arg)
          ..add('info', info))
        .toString();
  }
}

/// Plan DB builder class
///
class PlanDBBuilder implements Builder<PlanDB, PlanDBBuilder> {
  _$PlanDB _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PlanDBEnumType _type;
  PlanDBEnumType get type => _$this._type;
  set type(PlanDBEnumType type) => _$this._type = type;

  PlanDBEnumOp _op;
  PlanDBEnumOp get op => _$this._op;
  set op(PlanDBEnumOp op) => _$this._op = op;

  int _request_id;
  int get request_id => _$this._request_id;
  set request_id(int request_id) => _$this._request_id = request_id;

  String _plan_id;
  String get plan_id => _$this._plan_id;
  set plan_id(String plan_id) => _$this._plan_id = plan_id;

  ImcMessage _arg;
  ImcMessage get arg => _$this._arg;
  set arg(ImcMessage arg) => _$this._arg = arg;

  String _info;
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  PlanDBBuilder();

  PlanDBBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _op = _$v.op;
      _request_id = _$v.request_id;
      _plan_id = _$v.plan_id;
      _arg = _$v.arg;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanDB other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanDB;
  }

  @override
  void update(void updates(PlanDBBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanDB build() {
    final _$result = _$v ??
        new _$PlanDB._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type,
            op: op,
            request_id: request_id,
            plan_id: plan_id,
            arg: arg,
            info: info);
    replace(_$result);
    return _$result;
  }
}

/// Plan DB State immutable class
///
class _$PlanDBState extends PlanDBState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int plan_count;
  @override
  final int plan_size;
  @override
  final double change_time;
  @override
  final int change_sid;
  @override
  final String change_sname;
  @override
  final List<int> md5;
  @override
  final List<PlanDBInformation> plans_info;

  factory _$PlanDBState([void updates(PlanDBStateBuilder b)]) =>
      (new PlanDBStateBuilder()..update(updates)).build();

  _$PlanDBState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.plan_count,
      this.plan_size,
      this.change_time,
      this.change_sid,
      this.change_sname,
      this.md5,
      this.plans_info})
      : super._();

  @override
  PlanDBState rebuild(void updates(PlanDBStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanDBStateBuilder toBuilder() => new PlanDBStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanDBState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        plan_count == this.plan_count &&
        plan_size == this.plan_size &&
        change_time == this.change_time &&
        change_sid == this.change_sid &&
        change_sname == this.change_sname &&
        md5 == this.md5 &&
        plans_info == this.plans_info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        plan_count.hashCode), 
        plan_size.hashCode), 
        change_time.hashCode), 
        change_sid.hashCode), 
        change_sname.hashCode), 
        md5.hashCode), 
        plans_info.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanDBState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('plan_count', plan_count)
          ..add('plan_size', plan_size)
          ..add('change_time', change_time)
          ..add('change_sid', change_sid)
          ..add('change_sname', change_sname)
          ..add('md5', md5)
          ..add('plans_info', plans_info))
        .toString();
  }
}

/// Plan DB State builder class
///
class PlanDBStateBuilder implements Builder<PlanDBState, PlanDBStateBuilder> {
  _$PlanDBState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _plan_count;
  int get plan_count => _$this._plan_count;
  set plan_count(int plan_count) => _$this._plan_count = plan_count;

  int _plan_size;
  int get plan_size => _$this._plan_size;
  set plan_size(int plan_size) => _$this._plan_size = plan_size;

  double _change_time;
  double get change_time => _$this._change_time;
  set change_time(double change_time) => _$this._change_time = change_time;

  int _change_sid;
  int get change_sid => _$this._change_sid;
  set change_sid(int change_sid) => _$this._change_sid = change_sid;

  String _change_sname;
  String get change_sname => _$this._change_sname;
  set change_sname(String change_sname) => _$this._change_sname = change_sname;

  List<int> _md5;
  List<int> get md5 => _$this._md5;
  set md5(List<int> md5) => _$this._md5 = md5;

  List<PlanDBInformation> _plans_info;
  List<PlanDBInformation> get plans_info => _$this._plans_info;
  set plans_info(List<PlanDBInformation> plans_info) => _$this._plans_info = plans_info;

  PlanDBStateBuilder();

  PlanDBStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _plan_count = _$v.plan_count;
      _plan_size = _$v.plan_size;
      _change_time = _$v.change_time;
      _change_sid = _$v.change_sid;
      _change_sname = _$v.change_sname;
      _md5 = _$v.md5;
      _plans_info = _$v.plans_info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanDBState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanDBState;
  }

  @override
  void update(void updates(PlanDBStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanDBState build() {
    final _$result = _$v ??
        new _$PlanDBState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            plan_count: plan_count,
            plan_size: plan_size,
            change_time: change_time,
            change_sid: change_sid,
            change_sname: change_sname,
            md5: md5,
            plans_info: plans_info);
    replace(_$result);
    return _$result;
  }
}

/// Plan DB Information immutable class
///
class _$PlanDBInformation extends PlanDBInformation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String plan_id;
  @override
  final int plan_size;
  @override
  final double change_time;
  @override
  final int change_sid;
  @override
  final String change_sname;
  @override
  final List<int> md5;

  factory _$PlanDBInformation([void updates(PlanDBInformationBuilder b)]) =>
      (new PlanDBInformationBuilder()..update(updates)).build();

  _$PlanDBInformation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.plan_id,
      this.plan_size,
      this.change_time,
      this.change_sid,
      this.change_sname,
      this.md5})
      : super._();

  @override
  PlanDBInformation rebuild(void updates(PlanDBInformationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanDBInformationBuilder toBuilder() => new PlanDBInformationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanDBInformation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        plan_id == this.plan_id &&
        plan_size == this.plan_size &&
        change_time == this.change_time &&
        change_sid == this.change_sid &&
        change_sname == this.change_sname &&
        md5 == this.md5;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        plan_id.hashCode), 
        plan_size.hashCode), 
        change_time.hashCode), 
        change_sid.hashCode), 
        change_sname.hashCode), 
        md5.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanDBInformation')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('plan_id', plan_id)
          ..add('plan_size', plan_size)
          ..add('change_time', change_time)
          ..add('change_sid', change_sid)
          ..add('change_sname', change_sname)
          ..add('md5', md5))
        .toString();
  }
}

/// Plan DB Information builder class
///
class PlanDBInformationBuilder implements Builder<PlanDBInformation, PlanDBInformationBuilder> {
  _$PlanDBInformation _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _plan_id;
  String get plan_id => _$this._plan_id;
  set plan_id(String plan_id) => _$this._plan_id = plan_id;

  int _plan_size;
  int get plan_size => _$this._plan_size;
  set plan_size(int plan_size) => _$this._plan_size = plan_size;

  double _change_time;
  double get change_time => _$this._change_time;
  set change_time(double change_time) => _$this._change_time = change_time;

  int _change_sid;
  int get change_sid => _$this._change_sid;
  set change_sid(int change_sid) => _$this._change_sid = change_sid;

  String _change_sname;
  String get change_sname => _$this._change_sname;
  set change_sname(String change_sname) => _$this._change_sname = change_sname;

  List<int> _md5;
  List<int> get md5 => _$this._md5;
  set md5(List<int> md5) => _$this._md5 = md5;

  PlanDBInformationBuilder();

  PlanDBInformationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _plan_id = _$v.plan_id;
      _plan_size = _$v.plan_size;
      _change_time = _$v.change_time;
      _change_sid = _$v.change_sid;
      _change_sname = _$v.change_sname;
      _md5 = _$v.md5;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanDBInformation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanDBInformation;
  }

  @override
  void update(void updates(PlanDBInformationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanDBInformation build() {
    final _$result = _$v ??
        new _$PlanDBInformation._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            plan_id: plan_id,
            plan_size: plan_size,
            change_time: change_time,
            change_sid: change_sid,
            change_sname: change_sname,
            md5: md5);
    replace(_$result);
    return _$result;
  }
}

/// Plan Control immutable class
///
class _$PlanControl extends PlanControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PlanControlEnumType type;
  @override
  final PlanControlEnumOp op;
  @override
  final int request_id;
  @override
  final String plan_id;
  @override
  final PlanControlBitfieldFlags flags;
  @override
  final ImcMessage arg;
  @override
  final String info;

  factory _$PlanControl([void updates(PlanControlBuilder b)]) =>
      (new PlanControlBuilder()..update(updates)).build();

  _$PlanControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.op,
      this.request_id,
      this.plan_id,
      this.flags,
      this.arg,
      this.info})
      : super._();

  @override
  PlanControl rebuild(void updates(PlanControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanControlBuilder toBuilder() => new PlanControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        op == this.op &&
        request_id == this.request_id &&
        plan_id == this.plan_id &&
        flags == this.flags &&
        arg == this.arg &&
        info == this.info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode), 
        op.hashCode), 
        request_id.hashCode), 
        plan_id.hashCode), 
        flags.hashCode), 
        arg.hashCode), 
        info.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanControl')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type)
          ..add('op', op)
          ..add('request_id', request_id)
          ..add('plan_id', plan_id)
          ..add('flags', flags)
          ..add('arg', arg)
          ..add('info', info))
        .toString();
  }
}

/// Plan Control builder class
///
class PlanControlBuilder implements Builder<PlanControl, PlanControlBuilder> {
  _$PlanControl _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PlanControlEnumType _type;
  PlanControlEnumType get type => _$this._type;
  set type(PlanControlEnumType type) => _$this._type = type;

  PlanControlEnumOp _op;
  PlanControlEnumOp get op => _$this._op;
  set op(PlanControlEnumOp op) => _$this._op = op;

  int _request_id;
  int get request_id => _$this._request_id;
  set request_id(int request_id) => _$this._request_id = request_id;

  String _plan_id;
  String get plan_id => _$this._plan_id;
  set plan_id(String plan_id) => _$this._plan_id = plan_id;

  PlanControlBitfieldFlags _flags;
  PlanControlBitfieldFlags get flags => _$this._flags;
  set flags(PlanControlBitfieldFlags flags) => _$this._flags = flags;

  ImcMessage _arg;
  ImcMessage get arg => _$this._arg;
  set arg(ImcMessage arg) => _$this._arg = arg;

  String _info;
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  PlanControlBuilder();

  PlanControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _op = _$v.op;
      _request_id = _$v.request_id;
      _plan_id = _$v.plan_id;
      _flags = _$v.flags;
      _arg = _$v.arg;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanControl;
  }

  @override
  void update(void updates(PlanControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanControl build() {
    final _$result = _$v ??
        new _$PlanControl._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type,
            op: op,
            request_id: request_id,
            plan_id: plan_id,
            flags: flags,
            arg: arg,
            info: info);
    replace(_$result);
    return _$result;
  }
}

/// Plan Control State immutable class
///
class _$PlanControlState extends PlanControlState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PlanControlStateEnumState state;
  @override
  final String plan_id;
  @override
  final int plan_eta;
  @override
  final double plan_progress;
  @override
  final String man_id;
  @override
  final int man_type;
  @override
  final int man_eta;
  @override
  final PlanControlStateEnumLastOutcome last_outcome;

  factory _$PlanControlState([void updates(PlanControlStateBuilder b)]) =>
      (new PlanControlStateBuilder()..update(updates)).build();

  _$PlanControlState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state,
      this.plan_id,
      this.plan_eta,
      this.plan_progress,
      this.man_id,
      this.man_type,
      this.man_eta,
      this.last_outcome})
      : super._();

  @override
  PlanControlState rebuild(void updates(PlanControlStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanControlStateBuilder toBuilder() => new PlanControlStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanControlState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state &&
        plan_id == this.plan_id &&
        plan_eta == this.plan_eta &&
        plan_progress == this.plan_progress &&
        man_id == this.man_id &&
        man_type == this.man_type &&
        man_eta == this.man_eta &&
        last_outcome == this.last_outcome;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        state.hashCode), 
        plan_id.hashCode), 
        plan_eta.hashCode), 
        plan_progress.hashCode), 
        man_id.hashCode), 
        man_type.hashCode), 
        man_eta.hashCode), 
        last_outcome.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanControlState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('state', state)
          ..add('plan_id', plan_id)
          ..add('plan_eta', plan_eta)
          ..add('plan_progress', plan_progress)
          ..add('man_id', man_id)
          ..add('man_type', man_type)
          ..add('man_eta', man_eta)
          ..add('last_outcome', last_outcome))
        .toString();
  }
}

/// Plan Control State builder class
///
class PlanControlStateBuilder implements Builder<PlanControlState, PlanControlStateBuilder> {
  _$PlanControlState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PlanControlStateEnumState _state;
  PlanControlStateEnumState get state => _$this._state;
  set state(PlanControlStateEnumState state) => _$this._state = state;

  String _plan_id;
  String get plan_id => _$this._plan_id;
  set plan_id(String plan_id) => _$this._plan_id = plan_id;

  int _plan_eta;
  int get plan_eta => _$this._plan_eta;
  set plan_eta(int plan_eta) => _$this._plan_eta = plan_eta;

  double _plan_progress;
  double get plan_progress => _$this._plan_progress;
  set plan_progress(double plan_progress) => _$this._plan_progress = plan_progress;

  String _man_id;
  String get man_id => _$this._man_id;
  set man_id(String man_id) => _$this._man_id = man_id;

  int _man_type;
  int get man_type => _$this._man_type;
  set man_type(int man_type) => _$this._man_type = man_type;

  int _man_eta;
  int get man_eta => _$this._man_eta;
  set man_eta(int man_eta) => _$this._man_eta = man_eta;

  PlanControlStateEnumLastOutcome _last_outcome;
  PlanControlStateEnumLastOutcome get last_outcome => _$this._last_outcome;
  set last_outcome(PlanControlStateEnumLastOutcome last_outcome) => _$this._last_outcome = last_outcome;

  PlanControlStateBuilder();

  PlanControlStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _plan_id = _$v.plan_id;
      _plan_eta = _$v.plan_eta;
      _plan_progress = _$v.plan_progress;
      _man_id = _$v.man_id;
      _man_type = _$v.man_type;
      _man_eta = _$v.man_eta;
      _last_outcome = _$v.last_outcome;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanControlState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanControlState;
  }

  @override
  void update(void updates(PlanControlStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanControlState build() {
    final _$result = _$v ??
        new _$PlanControlState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            state: state,
            plan_id: plan_id,
            plan_eta: plan_eta,
            plan_progress: plan_progress,
            man_id: man_id,
            man_type: man_type,
            man_eta: man_eta,
            last_outcome: last_outcome);
    replace(_$result);
    return _$result;
  }
}

/// Plan Variable immutable class
///
class _$PlanVariable extends PlanVariable {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final String value;
  @override
  final PlanVariableEnumType type;
  @override
  final PlanVariableEnumAccess access;

  factory _$PlanVariable([void updates(PlanVariableBuilder b)]) =>
      (new PlanVariableBuilder()..update(updates)).build();

  _$PlanVariable._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.value,
      this.type,
      this.access})
      : super._();

  @override
  PlanVariable rebuild(void updates(PlanVariableBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanVariableBuilder toBuilder() => new PlanVariableBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanVariable &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        value == this.value &&
        type == this.type &&
        access == this.access;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode), 
        value.hashCode), 
        type.hashCode), 
        access.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanVariable')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name)
          ..add('value', value)
          ..add('type', type)
          ..add('access', access))
        .toString();
  }
}

/// Plan Variable builder class
///
class PlanVariableBuilder implements Builder<PlanVariable, PlanVariableBuilder> {
  _$PlanVariable _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  PlanVariableEnumType _type;
  PlanVariableEnumType get type => _$this._type;
  set type(PlanVariableEnumType type) => _$this._type = type;

  PlanVariableEnumAccess _access;
  PlanVariableEnumAccess get access => _$this._access;
  set access(PlanVariableEnumAccess access) => _$this._access = access;

  PlanVariableBuilder();

  PlanVariableBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _value = _$v.value;
      _type = _$v.type;
      _access = _$v.access;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanVariable other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanVariable;
  }

  @override
  void update(void updates(PlanVariableBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanVariable build() {
    final _$result = _$v ??
        new _$PlanVariable._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name,
            value: value,
            type: type,
            access: access);
    replace(_$result);
    return _$result;
  }
}

/// Plan Generation immutable class
///
class _$PlanGeneration extends PlanGeneration {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PlanGenerationEnumCmd cmd;
  @override
  final PlanGenerationEnumOp op;
  @override
  final String plan_id;
  @override
  final String params;

  factory _$PlanGeneration([void updates(PlanGenerationBuilder b)]) =>
      (new PlanGenerationBuilder()..update(updates)).build();

  _$PlanGeneration._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.cmd,
      this.op,
      this.plan_id,
      this.params})
      : super._();

  @override
  PlanGeneration rebuild(void updates(PlanGenerationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanGenerationBuilder toBuilder() => new PlanGenerationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanGeneration &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        cmd == this.cmd &&
        op == this.op &&
        plan_id == this.plan_id &&
        params == this.params;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        cmd.hashCode), 
        op.hashCode), 
        plan_id.hashCode), 
        params.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanGeneration')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('cmd', cmd)
          ..add('op', op)
          ..add('plan_id', plan_id)
          ..add('params', params))
        .toString();
  }
}

/// Plan Generation builder class
///
class PlanGenerationBuilder implements Builder<PlanGeneration, PlanGenerationBuilder> {
  _$PlanGeneration _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PlanGenerationEnumCmd _cmd;
  PlanGenerationEnumCmd get cmd => _$this._cmd;
  set cmd(PlanGenerationEnumCmd cmd) => _$this._cmd = cmd;

  PlanGenerationEnumOp _op;
  PlanGenerationEnumOp get op => _$this._op;
  set op(PlanGenerationEnumOp op) => _$this._op = op;

  String _plan_id;
  String get plan_id => _$this._plan_id;
  set plan_id(String plan_id) => _$this._plan_id = plan_id;

  String _params;
  String get params => _$this._params;
  set params(String params) => _$this._params = params;

  PlanGenerationBuilder();

  PlanGenerationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _cmd = _$v.cmd;
      _op = _$v.op;
      _plan_id = _$v.plan_id;
      _params = _$v.params;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanGeneration other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanGeneration;
  }

  @override
  void update(void updates(PlanGenerationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanGeneration build() {
    final _$result = _$v ??
        new _$PlanGeneration._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            cmd: cmd,
            op: op,
            plan_id: plan_id,
            params: params);
    replace(_$result);
    return _$result;
  }
}

/// Leader State immutable class
///
class _$LeaderState extends LeaderState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String group_name;
  @override
  final LeaderStateEnumOp op;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double vx;
  @override
  final double vy;
  @override
  final double vz;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final double svx;
  @override
  final double svy;
  @override
  final double svz;

  factory _$LeaderState([void updates(LeaderStateBuilder b)]) =>
      (new LeaderStateBuilder()..update(updates)).build();

  _$LeaderState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.group_name,
      this.op,
      this.lat,
      this.lon,
      this.height,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi,
      this.vx,
      this.vy,
      this.vz,
      this.p,
      this.q,
      this.r,
      this.svx,
      this.svy,
      this.svz})
      : super._();

  @override
  LeaderState rebuild(void updates(LeaderStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LeaderStateBuilder toBuilder() => new LeaderStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LeaderState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        group_name == this.group_name &&
        op == this.op &&
        lat == this.lat &&
        lon == this.lon &&
        height == this.height &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi &&
        vx == this.vx &&
        vy == this.vy &&
        vz == this.vz &&
        p == this.p &&
        q == this.q &&
        r == this.r &&
        svx == this.svx &&
        svy == this.svy &&
        svz == this.svz;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        group_name.hashCode), 
        op.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        height.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode), 
        phi.hashCode), 
        theta.hashCode), 
        psi.hashCode), 
        vx.hashCode), 
        vy.hashCode), 
        vz.hashCode), 
        p.hashCode), 
        q.hashCode), 
        r.hashCode), 
        svx.hashCode), 
        svy.hashCode), 
        svz.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LeaderState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('group_name', group_name)
          ..add('op', op)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('height', height)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi)
          ..add('vx', vx)
          ..add('vy', vy)
          ..add('vz', vz)
          ..add('p', p)
          ..add('q', q)
          ..add('r', r)
          ..add('svx', svx)
          ..add('svy', svy)
          ..add('svz', svz))
        .toString();
  }
}

/// Leader State builder class
///
class LeaderStateBuilder implements Builder<LeaderState, LeaderStateBuilder> {
  _$LeaderState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _group_name;
  String get group_name => _$this._group_name;
  set group_name(String group_name) => _$this._group_name = group_name;

  LeaderStateEnumOp _op;
  LeaderStateEnumOp get op => _$this._op;
  set op(LeaderStateEnumOp op) => _$this._op = op;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _vx;
  double get vx => _$this._vx;
  set vx(double vx) => _$this._vx = vx;

  double _vy;
  double get vy => _$this._vy;
  set vy(double vy) => _$this._vy = vy;

  double _vz;
  double get vz => _$this._vz;
  set vz(double vz) => _$this._vz = vz;

  double _p;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  double _svx;
  double get svx => _$this._svx;
  set svx(double svx) => _$this._svx = svx;

  double _svy;
  double get svy => _$this._svy;
  set svy(double svy) => _$this._svy = svy;

  double _svz;
  double get svz => _$this._svz;
  set svz(double svz) => _$this._svz = svz;

  LeaderStateBuilder();

  LeaderStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _group_name = _$v.group_name;
      _op = _$v.op;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _vx = _$v.vx;
      _vy = _$v.vy;
      _vz = _$v.vz;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _svx = _$v.svx;
      _svy = _$v.svy;
      _svz = _$v.svz;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LeaderState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LeaderState;
  }

  @override
  void update(void updates(LeaderStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LeaderState build() {
    final _$result = _$v ??
        new _$LeaderState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            group_name: group_name,
            op: op,
            lat: lat,
            lon: lon,
            height: height,
            x: x,
            y: y,
            z: z,
            phi: phi,
            theta: theta,
            psi: psi,
            vx: vx,
            vy: vy,
            vz: vz,
            p: p,
            q: q,
            r: r,
            svx: svx,
            svy: svy,
            svz: svz);
    replace(_$result);
    return _$result;
  }
}

/// Plan Statistics immutable class
///
class _$PlanStatistics extends PlanStatistics {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String plan_id;
  @override
  final PlanStatisticsEnumType type;
  @override
  final PlanStatisticsBitfieldProperties properties;
  @override
  final String durations;
  @override
  final String distances;
  @override
  final String actions;
  @override
  final String fuel;

  factory _$PlanStatistics([void updates(PlanStatisticsBuilder b)]) =>
      (new PlanStatisticsBuilder()..update(updates)).build();

  _$PlanStatistics._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.plan_id,
      this.type,
      this.properties,
      this.durations,
      this.distances,
      this.actions,
      this.fuel})
      : super._();

  @override
  PlanStatistics rebuild(void updates(PlanStatisticsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanStatisticsBuilder toBuilder() => new PlanStatisticsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanStatistics &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        plan_id == this.plan_id &&
        type == this.type &&
        properties == this.properties &&
        durations == this.durations &&
        distances == this.distances &&
        actions == this.actions &&
        fuel == this.fuel;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        plan_id.hashCode), 
        type.hashCode), 
        properties.hashCode), 
        durations.hashCode), 
        distances.hashCode), 
        actions.hashCode), 
        fuel.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanStatistics')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('plan_id', plan_id)
          ..add('type', type)
          ..add('properties', properties)
          ..add('durations', durations)
          ..add('distances', distances)
          ..add('actions', actions)
          ..add('fuel', fuel))
        .toString();
  }
}

/// Plan Statistics builder class
///
class PlanStatisticsBuilder implements Builder<PlanStatistics, PlanStatisticsBuilder> {
  _$PlanStatistics _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _plan_id;
  String get plan_id => _$this._plan_id;
  set plan_id(String plan_id) => _$this._plan_id = plan_id;

  PlanStatisticsEnumType _type;
  PlanStatisticsEnumType get type => _$this._type;
  set type(PlanStatisticsEnumType type) => _$this._type = type;

  PlanStatisticsBitfieldProperties _properties;
  PlanStatisticsBitfieldProperties get properties => _$this._properties;
  set properties(PlanStatisticsBitfieldProperties properties) => _$this._properties = properties;

  String _durations;
  String get durations => _$this._durations;
  set durations(String durations) => _$this._durations = durations;

  String _distances;
  String get distances => _$this._distances;
  set distances(String distances) => _$this._distances = distances;

  String _actions;
  String get actions => _$this._actions;
  set actions(String actions) => _$this._actions = actions;

  String _fuel;
  String get fuel => _$this._fuel;
  set fuel(String fuel) => _$this._fuel = fuel;

  PlanStatisticsBuilder();

  PlanStatisticsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _plan_id = _$v.plan_id;
      _type = _$v.type;
      _properties = _$v.properties;
      _durations = _$v.durations;
      _distances = _$v.distances;
      _actions = _$v.actions;
      _fuel = _$v.fuel;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanStatistics other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanStatistics;
  }

  @override
  void update(void updates(PlanStatisticsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanStatistics build() {
    final _$result = _$v ??
        new _$PlanStatistics._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            plan_id: plan_id,
            type: type,
            properties: properties,
            durations: durations,
            distances: distances,
            actions: actions,
            fuel: fuel);
    replace(_$result);
    return _$result;
  }
}

/// Reported State immutable class
///
class _$ReportedState extends ReportedState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double depth;
  @override
  final double roll;
  @override
  final double pitch;
  @override
  final double yaw;
  @override
  final double rcp_time;
  @override
  final String sid;
  @override
  final ReportedStateEnumSType s_type;

  factory _$ReportedState([void updates(ReportedStateBuilder b)]) =>
      (new ReportedStateBuilder()..update(updates)).build();

  _$ReportedState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.depth,
      this.roll,
      this.pitch,
      this.yaw,
      this.rcp_time,
      this.sid,
      this.s_type})
      : super._();

  @override
  ReportedState rebuild(void updates(ReportedStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ReportedStateBuilder toBuilder() => new ReportedStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ReportedState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        depth == this.depth &&
        roll == this.roll &&
        pitch == this.pitch &&
        yaw == this.yaw &&
        rcp_time == this.rcp_time &&
        sid == this.sid &&
        s_type == this.s_type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        depth.hashCode), 
        roll.hashCode), 
        pitch.hashCode), 
        yaw.hashCode), 
        rcp_time.hashCode), 
        sid.hashCode), 
        s_type.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ReportedState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('depth', depth)
          ..add('roll', roll)
          ..add('pitch', pitch)
          ..add('yaw', yaw)
          ..add('rcp_time', rcp_time)
          ..add('sid', sid)
          ..add('s_type', s_type))
        .toString();
  }
}

/// Reported State builder class
///
class ReportedStateBuilder implements Builder<ReportedState, ReportedStateBuilder> {
  _$ReportedState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _depth;
  double get depth => _$this._depth;
  set depth(double depth) => _$this._depth = depth;

  double _roll;
  double get roll => _$this._roll;
  set roll(double roll) => _$this._roll = roll;

  double _pitch;
  double get pitch => _$this._pitch;
  set pitch(double pitch) => _$this._pitch = pitch;

  double _yaw;
  double get yaw => _$this._yaw;
  set yaw(double yaw) => _$this._yaw = yaw;

  double _rcp_time;
  double get rcp_time => _$this._rcp_time;
  set rcp_time(double rcp_time) => _$this._rcp_time = rcp_time;

  String _sid;
  String get sid => _$this._sid;
  set sid(String sid) => _$this._sid = sid;

  ReportedStateEnumSType _s_type;
  ReportedStateEnumSType get s_type => _$this._s_type;
  set s_type(ReportedStateEnumSType s_type) => _$this._s_type = s_type;

  ReportedStateBuilder();

  ReportedStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _depth = _$v.depth;
      _roll = _$v.roll;
      _pitch = _$v.pitch;
      _yaw = _$v.yaw;
      _rcp_time = _$v.rcp_time;
      _sid = _$v.sid;
      _s_type = _$v.s_type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ReportedState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ReportedState;
  }

  @override
  void update(void updates(ReportedStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ReportedState build() {
    final _$result = _$v ??
        new _$ReportedState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            depth: depth,
            roll: roll,
            pitch: pitch,
            yaw: yaw,
            rcp_time: rcp_time,
            sid: sid,
            s_type: s_type);
    replace(_$result);
    return _$result;
  }
}

/// Remote Sensor Info immutable class
///
class _$RemoteSensorInfo extends RemoteSensorInfo {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String id;
  @override
  final String sensor_class;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double alt;
  @override
  final double heading;
  @override
  final String data;

  factory _$RemoteSensorInfo([void updates(RemoteSensorInfoBuilder b)]) =>
      (new RemoteSensorInfoBuilder()..update(updates)).build();

  _$RemoteSensorInfo._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.sensor_class,
      this.lat,
      this.lon,
      this.alt,
      this.heading,
      this.data})
      : super._();

  @override
  RemoteSensorInfo rebuild(void updates(RemoteSensorInfoBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteSensorInfoBuilder toBuilder() => new RemoteSensorInfoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteSensorInfo &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        sensor_class == this.sensor_class &&
        lat == this.lat &&
        lon == this.lon &&
        alt == this.alt &&
        heading == this.heading &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        id.hashCode), 
        sensor_class.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        alt.hashCode), 
        heading.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteSensorInfo')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('id', id)
          ..add('sensor_class', sensor_class)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('alt', alt)
          ..add('heading', heading)
          ..add('data', data))
        .toString();
  }
}

/// Remote Sensor Info builder class
///
class RemoteSensorInfoBuilder implements Builder<RemoteSensorInfo, RemoteSensorInfoBuilder> {
  _$RemoteSensorInfo _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _id;
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  String _sensor_class;
  String get sensor_class => _$this._sensor_class;
  set sensor_class(String sensor_class) => _$this._sensor_class = sensor_class;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _alt;
  double get alt => _$this._alt;
  set alt(double alt) => _$this._alt = alt;

  double _heading;
  double get heading => _$this._heading;
  set heading(double heading) => _$this._heading = heading;

  String _data;
  String get data => _$this._data;
  set data(String data) => _$this._data = data;

  RemoteSensorInfoBuilder();

  RemoteSensorInfoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _sensor_class = _$v.sensor_class;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _alt = _$v.alt;
      _heading = _$v.heading;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteSensorInfo other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteSensorInfo;
  }

  @override
  void update(void updates(RemoteSensorInfoBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteSensorInfo build() {
    final _$result = _$v ??
        new _$RemoteSensorInfo._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            id: id,
            sensor_class: sensor_class,
            lat: lat,
            lon: lon,
            alt: alt,
            heading: heading,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// Map immutable class
///
class _$Map extends Map {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String id;
  @override
  final List<MapFeature> features;

  factory _$Map([void updates(MapBuilder b)]) =>
      (new MapBuilder()..update(updates)).build();

  _$Map._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.features})
      : super._();

  @override
  Map rebuild(void updates(MapBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MapBuilder toBuilder() => new MapBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Map &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        features == this.features;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        id.hashCode), 
        features.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Map')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('id', id)
          ..add('features', features))
        .toString();
  }
}

/// Map builder class
///
class MapBuilder implements Builder<Map, MapBuilder> {
  _$Map _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _id;
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  List<MapFeature> _features;
  List<MapFeature> get features => _$this._features;
  set features(List<MapFeature> features) => _$this._features = features;

  MapBuilder();

  MapBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _features = _$v.features;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Map other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Map;
  }

  @override
  void update(void updates(MapBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Map build() {
    final _$result = _$v ??
        new _$Map._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            id: id,
            features: features);
    replace(_$result);
    return _$result;
  }
}

/// Map Feature immutable class
///
class _$MapFeature extends MapFeature {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String id;
  @override
  final MapFeatureEnumFeatureType feature_type;
  @override
  final int rgb_red;
  @override
  final int rgb_green;
  @override
  final int rgb_blue;
  @override
  final List<MapPoint> feature;

  factory _$MapFeature([void updates(MapFeatureBuilder b)]) =>
      (new MapFeatureBuilder()..update(updates)).build();

  _$MapFeature._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.feature_type,
      this.rgb_red,
      this.rgb_green,
      this.rgb_blue,
      this.feature})
      : super._();

  @override
  MapFeature rebuild(void updates(MapFeatureBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MapFeatureBuilder toBuilder() => new MapFeatureBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MapFeature &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        feature_type == this.feature_type &&
        rgb_red == this.rgb_red &&
        rgb_green == this.rgb_green &&
        rgb_blue == this.rgb_blue &&
        feature == this.feature;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        id.hashCode), 
        feature_type.hashCode), 
        rgb_red.hashCode), 
        rgb_green.hashCode), 
        rgb_blue.hashCode), 
        feature.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MapFeature')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('id', id)
          ..add('feature_type', feature_type)
          ..add('rgb_red', rgb_red)
          ..add('rgb_green', rgb_green)
          ..add('rgb_blue', rgb_blue)
          ..add('feature', feature))
        .toString();
  }
}

/// Map Feature builder class
///
class MapFeatureBuilder implements Builder<MapFeature, MapFeatureBuilder> {
  _$MapFeature _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _id;
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  MapFeatureEnumFeatureType _feature_type;
  MapFeatureEnumFeatureType get feature_type => _$this._feature_type;
  set feature_type(MapFeatureEnumFeatureType feature_type) => _$this._feature_type = feature_type;

  int _rgb_red;
  int get rgb_red => _$this._rgb_red;
  set rgb_red(int rgb_red) => _$this._rgb_red = rgb_red;

  int _rgb_green;
  int get rgb_green => _$this._rgb_green;
  set rgb_green(int rgb_green) => _$this._rgb_green = rgb_green;

  int _rgb_blue;
  int get rgb_blue => _$this._rgb_blue;
  set rgb_blue(int rgb_blue) => _$this._rgb_blue = rgb_blue;

  List<MapPoint> _feature;
  List<MapPoint> get feature => _$this._feature;
  set feature(List<MapPoint> feature) => _$this._feature = feature;

  MapFeatureBuilder();

  MapFeatureBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _feature_type = _$v.feature_type;
      _rgb_red = _$v.rgb_red;
      _rgb_green = _$v.rgb_green;
      _rgb_blue = _$v.rgb_blue;
      _feature = _$v.feature;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MapFeature other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$MapFeature;
  }

  @override
  void update(void updates(MapFeatureBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$MapFeature build() {
    final _$result = _$v ??
        new _$MapFeature._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            id: id,
            feature_type: feature_type,
            rgb_red: rgb_red,
            rgb_green: rgb_green,
            rgb_blue: rgb_blue,
            feature: feature);
    replace(_$result);
    return _$result;
  }
}

/// MapPoint immutable class
///
class _$MapPoint extends MapPoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double alt;

  factory _$MapPoint([void updates(MapPointBuilder b)]) =>
      (new MapPointBuilder()..update(updates)).build();

  _$MapPoint._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.alt})
      : super._();

  @override
  MapPoint rebuild(void updates(MapPointBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MapPointBuilder toBuilder() => new MapPointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MapPoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        alt == this.alt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        alt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MapPoint')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('alt', alt))
        .toString();
  }
}

/// MapPoint builder class
///
class MapPointBuilder implements Builder<MapPoint, MapPointBuilder> {
  _$MapPoint _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _alt;
  double get alt => _$this._alt;
  set alt(double alt) => _$this._alt = alt;

  MapPointBuilder();

  MapPointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _alt = _$v.alt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MapPoint other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$MapPoint;
  }

  @override
  void update(void updates(MapPointBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$MapPoint build() {
    final _$result = _$v ??
        new _$MapPoint._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            alt: alt);
    replace(_$result);
    return _$result;
  }
}

/// CCU Event immutable class
///
class _$CcuEvent extends CcuEvent {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final CcuEventEnumType type;
  @override
  final String id;
  @override
  final ImcMessage arg;

  factory _$CcuEvent([void updates(CcuEventBuilder b)]) =>
      (new CcuEventBuilder()..update(updates)).build();

  _$CcuEvent._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.id,
      this.arg})
      : super._();

  @override
  CcuEvent rebuild(void updates(CcuEventBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CcuEventBuilder toBuilder() => new CcuEventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CcuEvent &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        id == this.id &&
        arg == this.arg;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode), 
        id.hashCode), 
        arg.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CcuEvent')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type)
          ..add('id', id)
          ..add('arg', arg))
        .toString();
  }
}

/// CCU Event builder class
///
class CcuEventBuilder implements Builder<CcuEvent, CcuEventBuilder> {
  _$CcuEvent _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  CcuEventEnumType _type;
  CcuEventEnumType get type => _$this._type;
  set type(CcuEventEnumType type) => _$this._type = type;

  String _id;
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  ImcMessage _arg;
  ImcMessage get arg => _$this._arg;
  set arg(ImcMessage arg) => _$this._arg = arg;

  CcuEventBuilder();

  CcuEventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _id = _$v.id;
      _arg = _$v.arg;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CcuEvent other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CcuEvent;
  }

  @override
  void update(void updates(CcuEventBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CcuEvent build() {
    final _$result = _$v ??
        new _$CcuEvent._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type,
            id: id,
            arg: arg);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Links immutable class
///
class _$VehicleLinks extends VehicleLinks {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String localname;
  @override
  final List<Announce> links;

  factory _$VehicleLinks([void updates(VehicleLinksBuilder b)]) =>
      (new VehicleLinksBuilder()..update(updates)).build();

  _$VehicleLinks._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.localname,
      this.links})
      : super._();

  @override
  VehicleLinks rebuild(void updates(VehicleLinksBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleLinksBuilder toBuilder() => new VehicleLinksBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleLinks &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        localname == this.localname &&
        links == this.links;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        localname.hashCode), 
        links.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleLinks')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('localname', localname)
          ..add('links', links))
        .toString();
  }
}

/// Vehicle Links builder class
///
class VehicleLinksBuilder implements Builder<VehicleLinks, VehicleLinksBuilder> {
  _$VehicleLinks _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _localname;
  String get localname => _$this._localname;
  set localname(String localname) => _$this._localname = localname;

  List<Announce> _links;
  List<Announce> get links => _$this._links;
  set links(List<Announce> links) => _$this._links = links;

  VehicleLinksBuilder();

  VehicleLinksBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _localname = _$v.localname;
      _links = _$v.links;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleLinks other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleLinks;
  }

  @override
  void update(void updates(VehicleLinksBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleLinks build() {
    final _$result = _$v ??
        new _$VehicleLinks._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            localname: localname,
            links: links);
    replace(_$result);
    return _$result;
  }
}

/// TREX Observation immutable class
///
class _$TrexObservation extends TrexObservation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String timeline;
  @override
  final String predicate;
  @override
  final String attributes;

  factory _$TrexObservation([void updates(TrexObservationBuilder b)]) =>
      (new TrexObservationBuilder()..update(updates)).build();

  _$TrexObservation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeline,
      this.predicate,
      this.attributes})
      : super._();

  @override
  TrexObservation rebuild(void updates(TrexObservationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexObservationBuilder toBuilder() => new TrexObservationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexObservation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeline == this.timeline &&
        predicate == this.predicate &&
        attributes == this.attributes;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeline.hashCode), 
        predicate.hashCode), 
        attributes.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexObservation')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeline', timeline)
          ..add('predicate', predicate)
          ..add('attributes', attributes))
        .toString();
  }
}

/// TREX Observation builder class
///
class TrexObservationBuilder implements Builder<TrexObservation, TrexObservationBuilder> {
  _$TrexObservation _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _timeline;
  String get timeline => _$this._timeline;
  set timeline(String timeline) => _$this._timeline = timeline;

  String _predicate;
  String get predicate => _$this._predicate;
  set predicate(String predicate) => _$this._predicate = predicate;

  String _attributes;
  String get attributes => _$this._attributes;
  set attributes(String attributes) => _$this._attributes = attributes;

  TrexObservationBuilder();

  TrexObservationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeline = _$v.timeline;
      _predicate = _$v.predicate;
      _attributes = _$v.attributes;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexObservation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrexObservation;
  }

  @override
  void update(void updates(TrexObservationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexObservation build() {
    final _$result = _$v ??
        new _$TrexObservation._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeline: timeline,
            predicate: predicate,
            attributes: attributes);
    replace(_$result);
    return _$result;
  }
}

/// TREX Command immutable class
///
class _$TrexCommand extends TrexCommand {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final TrexCommandEnumCommand command;
  @override
  final String goal_id;
  @override
  final String goal_xml;

  factory _$TrexCommand([void updates(TrexCommandBuilder b)]) =>
      (new TrexCommandBuilder()..update(updates)).build();

  _$TrexCommand._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.command,
      this.goal_id,
      this.goal_xml})
      : super._();

  @override
  TrexCommand rebuild(void updates(TrexCommandBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexCommandBuilder toBuilder() => new TrexCommandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexCommand &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        command == this.command &&
        goal_id == this.goal_id &&
        goal_xml == this.goal_xml;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        command.hashCode), 
        goal_id.hashCode), 
        goal_xml.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexCommand')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('command', command)
          ..add('goal_id', goal_id)
          ..add('goal_xml', goal_xml))
        .toString();
  }
}

/// TREX Command builder class
///
class TrexCommandBuilder implements Builder<TrexCommand, TrexCommandBuilder> {
  _$TrexCommand _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  TrexCommandEnumCommand _command;
  TrexCommandEnumCommand get command => _$this._command;
  set command(TrexCommandEnumCommand command) => _$this._command = command;

  String _goal_id;
  String get goal_id => _$this._goal_id;
  set goal_id(String goal_id) => _$this._goal_id = goal_id;

  String _goal_xml;
  String get goal_xml => _$this._goal_xml;
  set goal_xml(String goal_xml) => _$this._goal_xml = goal_xml;

  TrexCommandBuilder();

  TrexCommandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _command = _$v.command;
      _goal_id = _$v.goal_id;
      _goal_xml = _$v.goal_xml;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexCommand other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrexCommand;
  }

  @override
  void update(void updates(TrexCommandBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexCommand build() {
    final _$result = _$v ??
        new _$TrexCommand._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            command: command,
            goal_id: goal_id,
            goal_xml: goal_xml);
    replace(_$result);
    return _$result;
  }
}

/// TREX Operation immutable class
///
class _$TrexOperation extends TrexOperation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final TrexOperationEnumOp op;
  @override
  final String goal_id;
  @override
  final TrexToken token;

  factory _$TrexOperation([void updates(TrexOperationBuilder b)]) =>
      (new TrexOperationBuilder()..update(updates)).build();

  _$TrexOperation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.goal_id,
      this.token})
      : super._();

  @override
  TrexOperation rebuild(void updates(TrexOperationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexOperationBuilder toBuilder() => new TrexOperationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexOperation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        goal_id == this.goal_id &&
        token == this.token;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        goal_id.hashCode), 
        token.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexOperation')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('goal_id', goal_id)
          ..add('token', token))
        .toString();
  }
}

/// TREX Operation builder class
///
class TrexOperationBuilder implements Builder<TrexOperation, TrexOperationBuilder> {
  _$TrexOperation _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  TrexOperationEnumOp _op;
  TrexOperationEnumOp get op => _$this._op;
  set op(TrexOperationEnumOp op) => _$this._op = op;

  String _goal_id;
  String get goal_id => _$this._goal_id;
  set goal_id(String goal_id) => _$this._goal_id = goal_id;

  TrexToken _token;
  TrexToken get token => _$this._token;
  set token(TrexToken token) => _$this._token = token;

  TrexOperationBuilder();

  TrexOperationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _goal_id = _$v.goal_id;
      _token = _$v.token;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexOperation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrexOperation;
  }

  @override
  void update(void updates(TrexOperationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexOperation build() {
    final _$result = _$v ??
        new _$TrexOperation._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            goal_id: goal_id,
            token: token);
    replace(_$result);
    return _$result;
  }
}

/// TREX Attribute immutable class
///
class _$TrexAttribute extends TrexAttribute {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final TrexAttributeEnumAttrType attr_type;
  @override
  final String min;
  @override
  final String max;

  factory _$TrexAttribute([void updates(TrexAttributeBuilder b)]) =>
      (new TrexAttributeBuilder()..update(updates)).build();

  _$TrexAttribute._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.attr_type,
      this.min,
      this.max})
      : super._();

  @override
  TrexAttribute rebuild(void updates(TrexAttributeBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexAttributeBuilder toBuilder() => new TrexAttributeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexAttribute &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        attr_type == this.attr_type &&
        min == this.min &&
        max == this.max;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode), 
        attr_type.hashCode), 
        min.hashCode), 
        max.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexAttribute')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name)
          ..add('attr_type', attr_type)
          ..add('min', min)
          ..add('max', max))
        .toString();
  }
}

/// TREX Attribute builder class
///
class TrexAttributeBuilder implements Builder<TrexAttribute, TrexAttributeBuilder> {
  _$TrexAttribute _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  TrexAttributeEnumAttrType _attr_type;
  TrexAttributeEnumAttrType get attr_type => _$this._attr_type;
  set attr_type(TrexAttributeEnumAttrType attr_type) => _$this._attr_type = attr_type;

  String _min;
  String get min => _$this._min;
  set min(String min) => _$this._min = min;

  String _max;
  String get max => _$this._max;
  set max(String max) => _$this._max = max;

  TrexAttributeBuilder();

  TrexAttributeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _attr_type = _$v.attr_type;
      _min = _$v.min;
      _max = _$v.max;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexAttribute other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrexAttribute;
  }

  @override
  void update(void updates(TrexAttributeBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexAttribute build() {
    final _$result = _$v ??
        new _$TrexAttribute._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name,
            attr_type: attr_type,
            min: min,
            max: max);
    replace(_$result);
    return _$result;
  }
}

/// TREX Token immutable class
///
class _$TrexToken extends TrexToken {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String timeline;
  @override
  final String predicate;
  @override
  final List<TrexAttribute> attributes;

  factory _$TrexToken([void updates(TrexTokenBuilder b)]) =>
      (new TrexTokenBuilder()..update(updates)).build();

  _$TrexToken._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeline,
      this.predicate,
      this.attributes})
      : super._();

  @override
  TrexToken rebuild(void updates(TrexTokenBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexTokenBuilder toBuilder() => new TrexTokenBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexToken &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeline == this.timeline &&
        predicate == this.predicate &&
        attributes == this.attributes;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeline.hashCode), 
        predicate.hashCode), 
        attributes.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexToken')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeline', timeline)
          ..add('predicate', predicate)
          ..add('attributes', attributes))
        .toString();
  }
}

/// TREX Token builder class
///
class TrexTokenBuilder implements Builder<TrexToken, TrexTokenBuilder> {
  _$TrexToken _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _timeline;
  String get timeline => _$this._timeline;
  set timeline(String timeline) => _$this._timeline = timeline;

  String _predicate;
  String get predicate => _$this._predicate;
  set predicate(String predicate) => _$this._predicate = predicate;

  List<TrexAttribute> _attributes;
  List<TrexAttribute> get attributes => _$this._attributes;
  set attributes(List<TrexAttribute> attributes) => _$this._attributes = attributes;

  TrexTokenBuilder();

  TrexTokenBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeline = _$v.timeline;
      _predicate = _$v.predicate;
      _attributes = _$v.attributes;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexToken other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrexToken;
  }

  @override
  void update(void updates(TrexTokenBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexToken build() {
    final _$result = _$v ??
        new _$TrexToken._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeline: timeline,
            predicate: predicate,
            attributes: attributes);
    replace(_$result);
    return _$result;
  }
}

/// TREX Plan immutable class
///
class _$TrexPlan extends TrexPlan {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String reactor;
  @override
  final List<TrexToken> tokens;

  factory _$TrexPlan([void updates(TrexPlanBuilder b)]) =>
      (new TrexPlanBuilder()..update(updates)).build();

  _$TrexPlan._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.reactor,
      this.tokens})
      : super._();

  @override
  TrexPlan rebuild(void updates(TrexPlanBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexPlanBuilder toBuilder() => new TrexPlanBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexPlan &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reactor == this.reactor &&
        tokens == this.tokens;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        reactor.hashCode), 
        tokens.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexPlan')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('reactor', reactor)
          ..add('tokens', tokens))
        .toString();
  }
}

/// TREX Plan builder class
///
class TrexPlanBuilder implements Builder<TrexPlan, TrexPlanBuilder> {
  _$TrexPlan _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _reactor;
  String get reactor => _$this._reactor;
  set reactor(String reactor) => _$this._reactor = reactor;

  List<TrexToken> _tokens;
  List<TrexToken> get tokens => _$this._tokens;
  set tokens(List<TrexToken> tokens) => _$this._tokens = tokens;

  TrexPlanBuilder();

  TrexPlanBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reactor = _$v.reactor;
      _tokens = _$v.tokens;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexPlan other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrexPlan;
  }

  @override
  void update(void updates(TrexPlanBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexPlan build() {
    final _$result = _$v ??
        new _$TrexPlan._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            reactor: reactor,
            tokens: tokens);
    replace(_$result);
    return _$result;
  }
}

/// Event immutable class
///
class _$Event extends Event {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String topic;
  @override
  final String data;

  factory _$Event([void updates(EventBuilder b)]) =>
      (new EventBuilder()..update(updates)).build();

  _$Event._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.topic,
      this.data})
      : super._();

  @override
  Event rebuild(void updates(EventBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EventBuilder toBuilder() => new EventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Event &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        topic == this.topic &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        topic.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Event')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('topic', topic)
          ..add('data', data))
        .toString();
  }
}

/// Event builder class
///
class EventBuilder implements Builder<Event, EventBuilder> {
  _$Event _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _topic;
  String get topic => _$this._topic;
  set topic(String topic) => _$this._topic = topic;

  String _data;
  String get data => _$this._data;
  set data(String data) => _$this._data = data;

  EventBuilder();

  EventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _topic = _$v.topic;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Event other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Event;
  }

  @override
  void update(void updates(EventBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Event build() {
    final _$result = _$v ??
        new _$Event._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            topic: topic,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// Compressed Image immutable class
///
class _$CompressedImage extends CompressedImage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int frameid;
  @override
  final List<int> data;

  factory _$CompressedImage([void updates(CompressedImageBuilder b)]) =>
      (new CompressedImageBuilder()..update(updates)).build();

  _$CompressedImage._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.frameid,
      this.data})
      : super._();

  @override
  CompressedImage rebuild(void updates(CompressedImageBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CompressedImageBuilder toBuilder() => new CompressedImageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CompressedImage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        frameid == this.frameid &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        frameid.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CompressedImage')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('frameid', frameid)
          ..add('data', data))
        .toString();
  }
}

/// Compressed Image builder class
///
class CompressedImageBuilder implements Builder<CompressedImage, CompressedImageBuilder> {
  _$CompressedImage _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _frameid;
  int get frameid => _$this._frameid;
  set frameid(int frameid) => _$this._frameid = frameid;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  CompressedImageBuilder();

  CompressedImageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _frameid = _$v.frameid;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CompressedImage other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CompressedImage;
  }

  @override
  void update(void updates(CompressedImageBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CompressedImage build() {
    final _$result = _$v ??
        new _$CompressedImage._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            frameid: frameid,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// Image Transmission Settings immutable class
///
class _$ImageTxSettings extends ImageTxSettings {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int fps;
  @override
  final int quality;
  @override
  final int reps;
  @override
  final int tsize;

  factory _$ImageTxSettings([void updates(ImageTxSettingsBuilder b)]) =>
      (new ImageTxSettingsBuilder()..update(updates)).build();

  _$ImageTxSettings._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.fps,
      this.quality,
      this.reps,
      this.tsize})
      : super._();

  @override
  ImageTxSettings rebuild(void updates(ImageTxSettingsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ImageTxSettingsBuilder toBuilder() => new ImageTxSettingsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ImageTxSettings &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        fps == this.fps &&
        quality == this.quality &&
        reps == this.reps &&
        tsize == this.tsize;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        fps.hashCode), 
        quality.hashCode), 
        reps.hashCode), 
        tsize.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ImageTxSettings')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('fps', fps)
          ..add('quality', quality)
          ..add('reps', reps)
          ..add('tsize', tsize))
        .toString();
  }
}

/// Image Transmission Settings builder class
///
class ImageTxSettingsBuilder implements Builder<ImageTxSettings, ImageTxSettingsBuilder> {
  _$ImageTxSettings _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _fps;
  int get fps => _$this._fps;
  set fps(int fps) => _$this._fps = fps;

  int _quality;
  int get quality => _$this._quality;
  set quality(int quality) => _$this._quality = quality;

  int _reps;
  int get reps => _$this._reps;
  set reps(int reps) => _$this._reps = reps;

  int _tsize;
  int get tsize => _$this._tsize;
  set tsize(int tsize) => _$this._tsize = tsize;

  ImageTxSettingsBuilder();

  ImageTxSettingsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _fps = _$v.fps;
      _quality = _$v.quality;
      _reps = _$v.reps;
      _tsize = _$v.tsize;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ImageTxSettings other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ImageTxSettings;
  }

  @override
  void update(void updates(ImageTxSettingsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ImageTxSettings build() {
    final _$result = _$v ??
        new _$ImageTxSettings._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            fps: fps,
            quality: quality,
            reps: reps,
            tsize: tsize);
    replace(_$result);
    return _$result;
  }
}

/// Remote State immutable class
///
class _$RemoteState extends RemoteState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final int depth;
  @override
  final double speed;
  @override
  final double psi;

  factory _$RemoteState([void updates(RemoteStateBuilder b)]) =>
      (new RemoteStateBuilder()..update(updates)).build();

  _$RemoteState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.depth,
      this.speed,
      this.psi})
      : super._();

  @override
  RemoteState rebuild(void updates(RemoteStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteStateBuilder toBuilder() => new RemoteStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        depth == this.depth &&
        speed == this.speed &&
        psi == this.psi;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        depth.hashCode), 
        speed.hashCode), 
        psi.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('depth', depth)
          ..add('speed', speed)
          ..add('psi', psi))
        .toString();
  }
}

/// Remote State builder class
///
class RemoteStateBuilder implements Builder<RemoteState, RemoteStateBuilder> {
  _$RemoteState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  int _depth;
  int get depth => _$this._depth;
  set depth(int depth) => _$this._depth = depth;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  RemoteStateBuilder();

  RemoteStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _depth = _$v.depth;
      _speed = _$v.speed;
      _psi = _$v.psi;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteState;
  }

  @override
  void update(void updates(RemoteStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteState build() {
    final _$result = _$v ??
        new _$RemoteState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            depth: depth,
            speed: speed,
            psi: psi);
    replace(_$result);
    return _$result;
  }
}

/// Target immutable class
///
class _$Target extends Target {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String label;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;
  @override
  final double cog;
  @override
  final double sog;

  factory _$Target([void updates(TargetBuilder b)]) =>
      (new TargetBuilder()..update(updates)).build();

  _$Target._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.label,
      this.lat,
      this.lon,
      this.z,
      this.z_units,
      this.cog,
      this.sog})
      : super._();

  @override
  Target rebuild(void updates(TargetBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TargetBuilder toBuilder() => new TargetBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Target &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        label == this.label &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units &&
        cog == this.cog &&
        sog == this.sog;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        label.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode), 
        cog.hashCode), 
        sog.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Target')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('label', label)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units)
          ..add('cog', cog)
          ..add('sog', sog))
        .toString();
  }
}

/// Target builder class
///
class TargetBuilder implements Builder<Target, TargetBuilder> {
  _$Target _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _label;
  String get label => _$this._label;
  set label(String label) => _$this._label = label;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _cog;
  double get cog => _$this._cog;
  set cog(double cog) => _$this._cog = cog;

  double _sog;
  double get sog => _$this._sog;
  set sog(double sog) => _$this._sog = sog;

  TargetBuilder();

  TargetBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _label = _$v.label;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _cog = _$v.cog;
      _sog = _$v.sog;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Target other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Target;
  }

  @override
  void update(void updates(TargetBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Target build() {
    final _$result = _$v ??
        new _$Target._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            label: label,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units,
            cog: cog,
            sog: sog);
    replace(_$result);
    return _$result;
  }
}

/// EntityParameter immutable class
///
class _$EntityParameter extends EntityParameter {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final String value;

  factory _$EntityParameter([void updates(EntityParameterBuilder b)]) =>
      (new EntityParameterBuilder()..update(updates)).build();

  _$EntityParameter._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.value})
      : super._();

  @override
  EntityParameter rebuild(void updates(EntityParameterBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityParameterBuilder toBuilder() => new EntityParameterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityParameter &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityParameter')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name)
          ..add('value', value))
        .toString();
  }
}

/// EntityParameter builder class
///
class EntityParameterBuilder implements Builder<EntityParameter, EntityParameterBuilder> {
  _$EntityParameter _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  EntityParameterBuilder();

  EntityParameterBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityParameter other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EntityParameter;
  }

  @override
  void update(void updates(EntityParameterBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityParameter build() {
    final _$result = _$v ??
        new _$EntityParameter._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// EntityParameters immutable class
///
class _$EntityParameters extends EntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final List<EntityParameter> params;

  factory _$EntityParameters([void updates(EntityParametersBuilder b)]) =>
      (new EntityParametersBuilder()..update(updates)).build();

  _$EntityParameters._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.params})
      : super._();

  @override
  EntityParameters rebuild(void updates(EntityParametersBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityParametersBuilder toBuilder() => new EntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        params == this.params;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode), 
        params.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name)
          ..add('params', params))
        .toString();
  }
}

/// EntityParameters builder class
///
class EntityParametersBuilder implements Builder<EntityParameters, EntityParametersBuilder> {
  _$EntityParameters _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  List<EntityParameter> _params;
  List<EntityParameter> get params => _$this._params;
  set params(List<EntityParameter> params) => _$this._params = params;

  EntityParametersBuilder();

  EntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _params = _$v.params;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityParameters other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EntityParameters;
  }

  @override
  void update(void updates(EntityParametersBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityParameters build() {
    final _$result = _$v ??
        new _$EntityParameters._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name,
            params: params);
    replace(_$result);
    return _$result;
  }
}

/// QueryEntityParameters immutable class
///
class _$QueryEntityParameters extends QueryEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final String visibility;
  @override
  final String scope;

  factory _$QueryEntityParameters([void updates(QueryEntityParametersBuilder b)]) =>
      (new QueryEntityParametersBuilder()..update(updates)).build();

  _$QueryEntityParameters._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.visibility,
      this.scope})
      : super._();

  @override
  QueryEntityParameters rebuild(void updates(QueryEntityParametersBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryEntityParametersBuilder toBuilder() => new QueryEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        visibility == this.visibility &&
        scope == this.scope;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode), 
        visibility.hashCode), 
        scope.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name)
          ..add('visibility', visibility)
          ..add('scope', scope))
        .toString();
  }
}

/// QueryEntityParameters builder class
///
class QueryEntityParametersBuilder implements Builder<QueryEntityParameters, QueryEntityParametersBuilder> {
  _$QueryEntityParameters _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _visibility;
  String get visibility => _$this._visibility;
  set visibility(String visibility) => _$this._visibility = visibility;

  String _scope;
  String get scope => _$this._scope;
  set scope(String scope) => _$this._scope = scope;

  QueryEntityParametersBuilder();

  QueryEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _visibility = _$v.visibility;
      _scope = _$v.scope;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryEntityParameters other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$QueryEntityParameters;
  }

  @override
  void update(void updates(QueryEntityParametersBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryEntityParameters build() {
    final _$result = _$v ??
        new _$QueryEntityParameters._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name,
            visibility: visibility,
            scope: scope);
    replace(_$result);
    return _$result;
  }
}

/// SetEntityParameters immutable class
///
class _$SetEntityParameters extends SetEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final List<EntityParameter> params;

  factory _$SetEntityParameters([void updates(SetEntityParametersBuilder b)]) =>
      (new SetEntityParametersBuilder()..update(updates)).build();

  _$SetEntityParameters._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.params})
      : super._();

  @override
  SetEntityParameters rebuild(void updates(SetEntityParametersBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SetEntityParametersBuilder toBuilder() => new SetEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        params == this.params;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode), 
        params.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name)
          ..add('params', params))
        .toString();
  }
}

/// SetEntityParameters builder class
///
class SetEntityParametersBuilder implements Builder<SetEntityParameters, SetEntityParametersBuilder> {
  _$SetEntityParameters _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  List<EntityParameter> _params;
  List<EntityParameter> get params => _$this._params;
  set params(List<EntityParameter> params) => _$this._params = params;

  SetEntityParametersBuilder();

  SetEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _params = _$v.params;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetEntityParameters other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SetEntityParameters;
  }

  @override
  void update(void updates(SetEntityParametersBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SetEntityParameters build() {
    final _$result = _$v ??
        new _$SetEntityParameters._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name,
            params: params);
    replace(_$result);
    return _$result;
  }
}

/// SaveEntityParameters immutable class
///
class _$SaveEntityParameters extends SaveEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;

  factory _$SaveEntityParameters([void updates(SaveEntityParametersBuilder b)]) =>
      (new SaveEntityParametersBuilder()..update(updates)).build();

  _$SaveEntityParameters._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name})
      : super._();

  @override
  SaveEntityParameters rebuild(void updates(SaveEntityParametersBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SaveEntityParametersBuilder toBuilder() => new SaveEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SaveEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SaveEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name))
        .toString();
  }
}

/// SaveEntityParameters builder class
///
class SaveEntityParametersBuilder implements Builder<SaveEntityParameters, SaveEntityParametersBuilder> {
  _$SaveEntityParameters _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  SaveEntityParametersBuilder();

  SaveEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SaveEntityParameters other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SaveEntityParameters;
  }

  @override
  void update(void updates(SaveEntityParametersBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SaveEntityParameters build() {
    final _$result = _$v ??
        new _$SaveEntityParameters._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name);
    replace(_$result);
    return _$result;
  }
}

/// Create Session immutable class
///
class _$CreateSession extends CreateSession {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;

  factory _$CreateSession([void updates(CreateSessionBuilder b)]) =>
      (new CreateSessionBuilder()..update(updates)).build();

  _$CreateSession._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout})
      : super._();

  @override
  CreateSession rebuild(void updates(CreateSessionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CreateSessionBuilder toBuilder() => new CreateSessionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CreateSession &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timeout.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CreateSession')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timeout', timeout))
        .toString();
  }
}

/// Create Session builder class
///
class CreateSessionBuilder implements Builder<CreateSession, CreateSessionBuilder> {
  _$CreateSession _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  CreateSessionBuilder();

  CreateSessionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CreateSession other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CreateSession;
  }

  @override
  void update(void updates(CreateSessionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CreateSession build() {
    final _$result = _$v ??
        new _$CreateSession._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timeout: timeout);
    replace(_$result);
    return _$result;
  }
}

/// Close Session immutable class
///
class _$CloseSession extends CloseSession {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sessid;

  factory _$CloseSession([void updates(CloseSessionBuilder b)]) =>
      (new CloseSessionBuilder()..update(updates)).build();

  _$CloseSession._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sessid})
      : super._();

  @override
  CloseSession rebuild(void updates(CloseSessionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CloseSessionBuilder toBuilder() => new CloseSessionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CloseSession &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sessid == this.sessid;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        sessid.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CloseSession')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('sessid', sessid))
        .toString();
  }
}

/// Close Session builder class
///
class CloseSessionBuilder implements Builder<CloseSession, CloseSessionBuilder> {
  _$CloseSession _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sessid;
  int get sessid => _$this._sessid;
  set sessid(int sessid) => _$this._sessid = sessid;

  CloseSessionBuilder();

  CloseSessionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sessid = _$v.sessid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CloseSession other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CloseSession;
  }

  @override
  void update(void updates(CloseSessionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CloseSession build() {
    final _$result = _$v ??
        new _$CloseSession._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            sessid: sessid);
    replace(_$result);
    return _$result;
  }
}

/// Session Subscription immutable class
///
class _$SessionSubscription extends SessionSubscription {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sessid;
  @override
  final String messages;

  factory _$SessionSubscription([void updates(SessionSubscriptionBuilder b)]) =>
      (new SessionSubscriptionBuilder()..update(updates)).build();

  _$SessionSubscription._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sessid,
      this.messages})
      : super._();

  @override
  SessionSubscription rebuild(void updates(SessionSubscriptionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SessionSubscriptionBuilder toBuilder() => new SessionSubscriptionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SessionSubscription &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sessid == this.sessid &&
        messages == this.messages;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        sessid.hashCode), 
        messages.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SessionSubscription')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('sessid', sessid)
          ..add('messages', messages))
        .toString();
  }
}

/// Session Subscription builder class
///
class SessionSubscriptionBuilder implements Builder<SessionSubscription, SessionSubscriptionBuilder> {
  _$SessionSubscription _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sessid;
  int get sessid => _$this._sessid;
  set sessid(int sessid) => _$this._sessid = sessid;

  String _messages;
  String get messages => _$this._messages;
  set messages(String messages) => _$this._messages = messages;

  SessionSubscriptionBuilder();

  SessionSubscriptionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sessid = _$v.sessid;
      _messages = _$v.messages;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SessionSubscription other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SessionSubscription;
  }

  @override
  void update(void updates(SessionSubscriptionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SessionSubscription build() {
    final _$result = _$v ??
        new _$SessionSubscription._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            sessid: sessid,
            messages: messages);
    replace(_$result);
    return _$result;
  }
}

/// Session Keep-Alive immutable class
///
class _$SessionKeepAlive extends SessionKeepAlive {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sessid;

  factory _$SessionKeepAlive([void updates(SessionKeepAliveBuilder b)]) =>
      (new SessionKeepAliveBuilder()..update(updates)).build();

  _$SessionKeepAlive._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sessid})
      : super._();

  @override
  SessionKeepAlive rebuild(void updates(SessionKeepAliveBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SessionKeepAliveBuilder toBuilder() => new SessionKeepAliveBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SessionKeepAlive &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sessid == this.sessid;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        sessid.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SessionKeepAlive')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('sessid', sessid))
        .toString();
  }
}

/// Session Keep-Alive builder class
///
class SessionKeepAliveBuilder implements Builder<SessionKeepAlive, SessionKeepAliveBuilder> {
  _$SessionKeepAlive _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sessid;
  int get sessid => _$this._sessid;
  set sessid(int sessid) => _$this._sessid = sessid;

  SessionKeepAliveBuilder();

  SessionKeepAliveBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sessid = _$v.sessid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SessionKeepAlive other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SessionKeepAlive;
  }

  @override
  void update(void updates(SessionKeepAliveBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SessionKeepAlive build() {
    final _$result = _$v ??
        new _$SessionKeepAlive._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            sessid: sessid);
    replace(_$result);
    return _$result;
  }
}

/// Session Status immutable class
///
class _$SessionStatus extends SessionStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sessid;
  @override
  final SessionStatusEnumStatus status;

  factory _$SessionStatus([void updates(SessionStatusBuilder b)]) =>
      (new SessionStatusBuilder()..update(updates)).build();

  _$SessionStatus._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sessid,
      this.status})
      : super._();

  @override
  SessionStatus rebuild(void updates(SessionStatusBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SessionStatusBuilder toBuilder() => new SessionStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SessionStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sessid == this.sessid &&
        status == this.status;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        sessid.hashCode), 
        status.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SessionStatus')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('sessid', sessid)
          ..add('status', status))
        .toString();
  }
}

/// Session Status builder class
///
class SessionStatusBuilder implements Builder<SessionStatus, SessionStatusBuilder> {
  _$SessionStatus _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sessid;
  int get sessid => _$this._sessid;
  set sessid(int sessid) => _$this._sessid = sessid;

  SessionStatusEnumStatus _status;
  SessionStatusEnumStatus get status => _$this._status;
  set status(SessionStatusEnumStatus status) => _$this._status = status;

  SessionStatusBuilder();

  SessionStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sessid = _$v.sessid;
      _status = _$v.status;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SessionStatus other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SessionStatus;
  }

  @override
  void update(void updates(SessionStatusBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SessionStatus build() {
    final _$result = _$v ??
        new _$SessionStatus._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            sessid: sessid,
            status: status);
    replace(_$result);
    return _$result;
  }
}

/// Push Entity Parameters immutable class
///
class _$PushEntityParameters extends PushEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;

  factory _$PushEntityParameters([void updates(PushEntityParametersBuilder b)]) =>
      (new PushEntityParametersBuilder()..update(updates)).build();

  _$PushEntityParameters._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name})
      : super._();

  @override
  PushEntityParameters rebuild(void updates(PushEntityParametersBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PushEntityParametersBuilder toBuilder() => new PushEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PushEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PushEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name))
        .toString();
  }
}

/// Push Entity Parameters builder class
///
class PushEntityParametersBuilder implements Builder<PushEntityParameters, PushEntityParametersBuilder> {
  _$PushEntityParameters _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  PushEntityParametersBuilder();

  PushEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PushEntityParameters other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PushEntityParameters;
  }

  @override
  void update(void updates(PushEntityParametersBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PushEntityParameters build() {
    final _$result = _$v ??
        new _$PushEntityParameters._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name);
    replace(_$result);
    return _$result;
  }
}

/// Pop Entity Parameters immutable class
///
class _$PopEntityParameters extends PopEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;

  factory _$PopEntityParameters([void updates(PopEntityParametersBuilder b)]) =>
      (new PopEntityParametersBuilder()..update(updates)).build();

  _$PopEntityParameters._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name})
      : super._();

  @override
  PopEntityParameters rebuild(void updates(PopEntityParametersBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PopEntityParametersBuilder toBuilder() => new PopEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PopEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PopEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name))
        .toString();
  }
}

/// Pop Entity Parameters builder class
///
class PopEntityParametersBuilder implements Builder<PopEntityParameters, PopEntityParametersBuilder> {
  _$PopEntityParameters _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  PopEntityParametersBuilder();

  PopEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PopEntityParameters other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PopEntityParameters;
  }

  @override
  void update(void updates(PopEntityParametersBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PopEntityParameters build() {
    final _$result = _$v ??
        new _$PopEntityParameters._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name);
    replace(_$result);
    return _$result;
  }
}

/// I/O Event immutable class
///
class _$IoEvent extends IoEvent {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final IoEventEnumType type;
  @override
  final String error;

  factory _$IoEvent([void updates(IoEventBuilder b)]) =>
      (new IoEventBuilder()..update(updates)).build();

  _$IoEvent._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.error})
      : super._();

  @override
  IoEvent rebuild(void updates(IoEventBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  IoEventBuilder toBuilder() => new IoEventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IoEvent &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        error == this.error;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode), 
        error.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IoEvent')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type)
          ..add('error', error))
        .toString();
  }
}

/// I/O Event builder class
///
class IoEventBuilder implements Builder<IoEvent, IoEventBuilder> {
  _$IoEvent _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  IoEventEnumType _type;
  IoEventEnumType get type => _$this._type;
  set type(IoEventEnumType type) => _$this._type = type;

  String _error;
  String get error => _$this._error;
  set error(String error) => _$this._error = error;

  IoEventBuilder();

  IoEventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _error = _$v.error;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IoEvent other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$IoEvent;
  }

  @override
  void update(void updates(IoEventBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$IoEvent build() {
    final _$result = _$v ??
        new _$IoEvent._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type,
            error: error);
    replace(_$result);
    return _$result;
  }
}

/// UamTxFrame immutable class
///
class _$UamTxFrame extends UamTxFrame {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final String sys_dst;
  @override
  final UamTxFrameBitfieldFlags flags;
  @override
  final List<int> data;

  factory _$UamTxFrame([void updates(UamTxFrameBuilder b)]) =>
      (new UamTxFrameBuilder()..update(updates)).build();

  _$UamTxFrame._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.seq,
      this.sys_dst,
      this.flags,
      this.data})
      : super._();

  @override
  UamTxFrame rebuild(void updates(UamTxFrameBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UamTxFrameBuilder toBuilder() => new UamTxFrameBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UamTxFrame &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == this.seq &&
        sys_dst == this.sys_dst &&
        flags == this.flags &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        seq.hashCode), 
        sys_dst.hashCode), 
        flags.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UamTxFrame')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('seq', seq)
          ..add('sys_dst', sys_dst)
          ..add('flags', flags)
          ..add('data', data))
        .toString();
  }
}

/// UamTxFrame builder class
///
class UamTxFrameBuilder implements Builder<UamTxFrame, UamTxFrameBuilder> {
  _$UamTxFrame _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  String _sys_dst;
  String get sys_dst => _$this._sys_dst;
  set sys_dst(String sys_dst) => _$this._sys_dst = sys_dst;

  UamTxFrameBitfieldFlags _flags;
  UamTxFrameBitfieldFlags get flags => _$this._flags;
  set flags(UamTxFrameBitfieldFlags flags) => _$this._flags = flags;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  UamTxFrameBuilder();

  UamTxFrameBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _sys_dst = _$v.sys_dst;
      _flags = _$v.flags;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UamTxFrame other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UamTxFrame;
  }

  @override
  void update(void updates(UamTxFrameBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UamTxFrame build() {
    final _$result = _$v ??
        new _$UamTxFrame._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            seq: seq,
            sys_dst: sys_dst,
            flags: flags,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// UamRxFrame immutable class
///
class _$UamRxFrame extends UamRxFrame {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String sys_src;
  @override
  final String sys_dst;
  @override
  final UamRxFrameBitfieldFlags flags;
  @override
  final List<int> data;

  factory _$UamRxFrame([void updates(UamRxFrameBuilder b)]) =>
      (new UamRxFrameBuilder()..update(updates)).build();

  _$UamRxFrame._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sys_src,
      this.sys_dst,
      this.flags,
      this.data})
      : super._();

  @override
  UamRxFrame rebuild(void updates(UamRxFrameBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UamRxFrameBuilder toBuilder() => new UamRxFrameBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UamRxFrame &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sys_src == this.sys_src &&
        sys_dst == this.sys_dst &&
        flags == this.flags &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        sys_src.hashCode), 
        sys_dst.hashCode), 
        flags.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UamRxFrame')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('sys_src', sys_src)
          ..add('sys_dst', sys_dst)
          ..add('flags', flags)
          ..add('data', data))
        .toString();
  }
}

/// UamRxFrame builder class
///
class UamRxFrameBuilder implements Builder<UamRxFrame, UamRxFrameBuilder> {
  _$UamRxFrame _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _sys_src;
  String get sys_src => _$this._sys_src;
  set sys_src(String sys_src) => _$this._sys_src = sys_src;

  String _sys_dst;
  String get sys_dst => _$this._sys_dst;
  set sys_dst(String sys_dst) => _$this._sys_dst = sys_dst;

  UamRxFrameBitfieldFlags _flags;
  UamRxFrameBitfieldFlags get flags => _$this._flags;
  set flags(UamRxFrameBitfieldFlags flags) => _$this._flags = flags;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  UamRxFrameBuilder();

  UamRxFrameBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sys_src = _$v.sys_src;
      _sys_dst = _$v.sys_dst;
      _flags = _$v.flags;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UamRxFrame other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UamRxFrame;
  }

  @override
  void update(void updates(UamRxFrameBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UamRxFrame build() {
    final _$result = _$v ??
        new _$UamRxFrame._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            sys_src: sys_src,
            sys_dst: sys_dst,
            flags: flags,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// UamTxStatus immutable class
///
class _$UamTxStatus extends UamTxStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final UamTxStatusEnumValue value;
  @override
  final String error;

  factory _$UamTxStatus([void updates(UamTxStatusBuilder b)]) =>
      (new UamTxStatusBuilder()..update(updates)).build();

  _$UamTxStatus._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.seq,
      this.value,
      this.error})
      : super._();

  @override
  UamTxStatus rebuild(void updates(UamTxStatusBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UamTxStatusBuilder toBuilder() => new UamTxStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UamTxStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == this.seq &&
        value == this.value &&
        error == this.error;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        seq.hashCode), 
        value.hashCode), 
        error.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UamTxStatus')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('seq', seq)
          ..add('value', value)
          ..add('error', error))
        .toString();
  }
}

/// UamTxStatus builder class
///
class UamTxStatusBuilder implements Builder<UamTxStatus, UamTxStatusBuilder> {
  _$UamTxStatus _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  UamTxStatusEnumValue _value;
  UamTxStatusEnumValue get value => _$this._value;
  set value(UamTxStatusEnumValue value) => _$this._value = value;

  String _error;
  String get error => _$this._error;
  set error(String error) => _$this._error = error;

  UamTxStatusBuilder();

  UamTxStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _value = _$v.value;
      _error = _$v.error;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UamTxStatus other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UamTxStatus;
  }

  @override
  void update(void updates(UamTxStatusBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UamTxStatus build() {
    final _$result = _$v ??
        new _$UamTxStatus._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            seq: seq,
            value: value,
            error: error);
    replace(_$result);
    return _$result;
  }
}

/// UamRxRange immutable class
///
class _$UamRxRange extends UamRxRange {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final String sys;
  @override
  final double value;

  factory _$UamRxRange([void updates(UamRxRangeBuilder b)]) =>
      (new UamRxRangeBuilder()..update(updates)).build();

  _$UamRxRange._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.seq,
      this.sys,
      this.value})
      : super._();

  @override
  UamRxRange rebuild(void updates(UamRxRangeBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UamRxRangeBuilder toBuilder() => new UamRxRangeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UamRxRange &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == this.seq &&
        sys == this.sys &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        seq.hashCode), 
        sys.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UamRxRange')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('seq', seq)
          ..add('sys', sys)
          ..add('value', value))
        .toString();
  }
}

/// UamRxRange builder class
///
class UamRxRangeBuilder implements Builder<UamRxRange, UamRxRangeBuilder> {
  _$UamRxRange _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  String _sys;
  String get sys => _$this._sys;
  set sys(String sys) => _$this._sys = sys;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  UamRxRangeBuilder();

  UamRxRangeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _sys = _$v.sys;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UamRxRange other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UamRxRange;
  }

  @override
  void update(void updates(UamRxRangeBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UamRxRange build() {
    final _$result = _$v ??
        new _$UamRxRange._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            seq: seq,
            sys: sys,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Formation Control Parameters immutable class
///
class _$FormCtrlParam extends FormCtrlParam {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final FormCtrlParamEnumAction Action;
  @override
  final double LonGain;
  @override
  final double LatGain;
  @override
  final int BondThick;
  @override
  final double LeadGain;
  @override
  final double DeconflGain;

  factory _$FormCtrlParam([void updates(FormCtrlParamBuilder b)]) =>
      (new FormCtrlParamBuilder()..update(updates)).build();

  _$FormCtrlParam._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.Action,
      this.LonGain,
      this.LatGain,
      this.BondThick,
      this.LeadGain,
      this.DeconflGain})
      : super._();

  @override
  FormCtrlParam rebuild(void updates(FormCtrlParamBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormCtrlParamBuilder toBuilder() => new FormCtrlParamBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormCtrlParam &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        Action == this.Action &&
        LonGain == this.LonGain &&
        LatGain == this.LatGain &&
        BondThick == this.BondThick &&
        LeadGain == this.LeadGain &&
        DeconflGain == this.DeconflGain;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        Action.hashCode), 
        LonGain.hashCode), 
        LatGain.hashCode), 
        BondThick.hashCode), 
        LeadGain.hashCode), 
        DeconflGain.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormCtrlParam')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('Action', Action)
          ..add('LonGain', LonGain)
          ..add('LatGain', LatGain)
          ..add('BondThick', BondThick)
          ..add('LeadGain', LeadGain)
          ..add('DeconflGain', DeconflGain))
        .toString();
  }
}

/// Formation Control Parameters builder class
///
class FormCtrlParamBuilder implements Builder<FormCtrlParam, FormCtrlParamBuilder> {
  _$FormCtrlParam _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  FormCtrlParamEnumAction _Action;
  FormCtrlParamEnumAction get Action => _$this._Action;
  set Action(FormCtrlParamEnumAction Action) => _$this._Action = Action;

  double _LonGain;
  double get LonGain => _$this._LonGain;
  set LonGain(double LonGain) => _$this._LonGain = LonGain;

  double _LatGain;
  double get LatGain => _$this._LatGain;
  set LatGain(double LatGain) => _$this._LatGain = LatGain;

  int _BondThick;
  int get BondThick => _$this._BondThick;
  set BondThick(int BondThick) => _$this._BondThick = BondThick;

  double _LeadGain;
  double get LeadGain => _$this._LeadGain;
  set LeadGain(double LeadGain) => _$this._LeadGain = LeadGain;

  double _DeconflGain;
  double get DeconflGain => _$this._DeconflGain;
  set DeconflGain(double DeconflGain) => _$this._DeconflGain = DeconflGain;

  FormCtrlParamBuilder();

  FormCtrlParamBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _Action = _$v.Action;
      _LonGain = _$v.LonGain;
      _LatGain = _$v.LatGain;
      _BondThick = _$v.BondThick;
      _LeadGain = _$v.LeadGain;
      _DeconflGain = _$v.DeconflGain;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormCtrlParam other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormCtrlParam;
  }

  @override
  void update(void updates(FormCtrlParamBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormCtrlParam build() {
    final _$result = _$v ??
        new _$FormCtrlParam._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            Action: Action,
            LonGain: LonGain,
            LatGain: LatGain,
            BondThick: BondThick,
            LeadGain: LeadGain,
            DeconflGain: DeconflGain);
    replace(_$result);
    return _$result;
  }
}

/// Formation Evaluation Data immutable class
///
class _$FormationEval extends FormationEval {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double err_mean;
  @override
  final double dist_min_abs;
  @override
  final double dist_min_mean;

  factory _$FormationEval([void updates(FormationEvalBuilder b)]) =>
      (new FormationEvalBuilder()..update(updates)).build();

  _$FormationEval._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.err_mean,
      this.dist_min_abs,
      this.dist_min_mean})
      : super._();

  @override
  FormationEval rebuild(void updates(FormationEvalBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationEvalBuilder toBuilder() => new FormationEvalBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationEval &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        err_mean == this.err_mean &&
        dist_min_abs == this.dist_min_abs &&
        dist_min_mean == this.dist_min_mean;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        err_mean.hashCode), 
        dist_min_abs.hashCode), 
        dist_min_mean.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationEval')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('err_mean', err_mean)
          ..add('dist_min_abs', dist_min_abs)
          ..add('dist_min_mean', dist_min_mean))
        .toString();
  }
}

/// Formation Evaluation Data builder class
///
class FormationEvalBuilder implements Builder<FormationEval, FormationEvalBuilder> {
  _$FormationEval _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _err_mean;
  double get err_mean => _$this._err_mean;
  set err_mean(double err_mean) => _$this._err_mean = err_mean;

  double _dist_min_abs;
  double get dist_min_abs => _$this._dist_min_abs;
  set dist_min_abs(double dist_min_abs) => _$this._dist_min_abs = dist_min_abs;

  double _dist_min_mean;
  double get dist_min_mean => _$this._dist_min_mean;
  set dist_min_mean(double dist_min_mean) => _$this._dist_min_mean = dist_min_mean;

  FormationEvalBuilder();

  FormationEvalBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _err_mean = _$v.err_mean;
      _dist_min_abs = _$v.dist_min_abs;
      _dist_min_mean = _$v.dist_min_mean;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationEval other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormationEval;
  }

  @override
  void update(void updates(FormationEvalBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationEval build() {
    final _$result = _$v ??
        new _$FormationEval._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            err_mean: err_mean,
            dist_min_abs: dist_min_abs,
            dist_min_mean: dist_min_mean);
    replace(_$result);
    return _$result;
  }
}

/// Formation Control Parameters immutable class
///
class _$FormationControlParams extends FormationControlParams {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final FormationControlParamsEnumAction Action;
  @override
  final double lon_gain;
  @override
  final double lat_gain;
  @override
  final double bond_thick;
  @override
  final double lead_gain;
  @override
  final double deconfl_gain;
  @override
  final double accel_switch_gain;
  @override
  final double safe_dist;
  @override
  final double deconflict_offset;
  @override
  final double accel_safe_margin;
  @override
  final double accel_lim_x;

  factory _$FormationControlParams([void updates(FormationControlParamsBuilder b)]) =>
      (new FormationControlParamsBuilder()..update(updates)).build();

  _$FormationControlParams._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.Action,
      this.lon_gain,
      this.lat_gain,
      this.bond_thick,
      this.lead_gain,
      this.deconfl_gain,
      this.accel_switch_gain,
      this.safe_dist,
      this.deconflict_offset,
      this.accel_safe_margin,
      this.accel_lim_x})
      : super._();

  @override
  FormationControlParams rebuild(void updates(FormationControlParamsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationControlParamsBuilder toBuilder() => new FormationControlParamsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationControlParams &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        Action == this.Action &&
        lon_gain == this.lon_gain &&
        lat_gain == this.lat_gain &&
        bond_thick == this.bond_thick &&
        lead_gain == this.lead_gain &&
        deconfl_gain == this.deconfl_gain &&
        accel_switch_gain == this.accel_switch_gain &&
        safe_dist == this.safe_dist &&
        deconflict_offset == this.deconflict_offset &&
        accel_safe_margin == this.accel_safe_margin &&
        accel_lim_x == this.accel_lim_x;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        Action.hashCode), 
        lon_gain.hashCode), 
        lat_gain.hashCode), 
        bond_thick.hashCode), 
        lead_gain.hashCode), 
        deconfl_gain.hashCode), 
        accel_switch_gain.hashCode), 
        safe_dist.hashCode), 
        deconflict_offset.hashCode), 
        accel_safe_margin.hashCode), 
        accel_lim_x.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationControlParams')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('Action', Action)
          ..add('lon_gain', lon_gain)
          ..add('lat_gain', lat_gain)
          ..add('bond_thick', bond_thick)
          ..add('lead_gain', lead_gain)
          ..add('deconfl_gain', deconfl_gain)
          ..add('accel_switch_gain', accel_switch_gain)
          ..add('safe_dist', safe_dist)
          ..add('deconflict_offset', deconflict_offset)
          ..add('accel_safe_margin', accel_safe_margin)
          ..add('accel_lim_x', accel_lim_x))
        .toString();
  }
}

/// Formation Control Parameters builder class
///
class FormationControlParamsBuilder implements Builder<FormationControlParams, FormationControlParamsBuilder> {
  _$FormationControlParams _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  FormationControlParamsEnumAction _Action;
  FormationControlParamsEnumAction get Action => _$this._Action;
  set Action(FormationControlParamsEnumAction Action) => _$this._Action = Action;

  double _lon_gain;
  double get lon_gain => _$this._lon_gain;
  set lon_gain(double lon_gain) => _$this._lon_gain = lon_gain;

  double _lat_gain;
  double get lat_gain => _$this._lat_gain;
  set lat_gain(double lat_gain) => _$this._lat_gain = lat_gain;

  double _bond_thick;
  double get bond_thick => _$this._bond_thick;
  set bond_thick(double bond_thick) => _$this._bond_thick = bond_thick;

  double _lead_gain;
  double get lead_gain => _$this._lead_gain;
  set lead_gain(double lead_gain) => _$this._lead_gain = lead_gain;

  double _deconfl_gain;
  double get deconfl_gain => _$this._deconfl_gain;
  set deconfl_gain(double deconfl_gain) => _$this._deconfl_gain = deconfl_gain;

  double _accel_switch_gain;
  double get accel_switch_gain => _$this._accel_switch_gain;
  set accel_switch_gain(double accel_switch_gain) => _$this._accel_switch_gain = accel_switch_gain;

  double _safe_dist;
  double get safe_dist => _$this._safe_dist;
  set safe_dist(double safe_dist) => _$this._safe_dist = safe_dist;

  double _deconflict_offset;
  double get deconflict_offset => _$this._deconflict_offset;
  set deconflict_offset(double deconflict_offset) => _$this._deconflict_offset = deconflict_offset;

  double _accel_safe_margin;
  double get accel_safe_margin => _$this._accel_safe_margin;
  set accel_safe_margin(double accel_safe_margin) => _$this._accel_safe_margin = accel_safe_margin;

  double _accel_lim_x;
  double get accel_lim_x => _$this._accel_lim_x;
  set accel_lim_x(double accel_lim_x) => _$this._accel_lim_x = accel_lim_x;

  FormationControlParamsBuilder();

  FormationControlParamsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _Action = _$v.Action;
      _lon_gain = _$v.lon_gain;
      _lat_gain = _$v.lat_gain;
      _bond_thick = _$v.bond_thick;
      _lead_gain = _$v.lead_gain;
      _deconfl_gain = _$v.deconfl_gain;
      _accel_switch_gain = _$v.accel_switch_gain;
      _safe_dist = _$v.safe_dist;
      _deconflict_offset = _$v.deconflict_offset;
      _accel_safe_margin = _$v.accel_safe_margin;
      _accel_lim_x = _$v.accel_lim_x;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationControlParams other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormationControlParams;
  }

  @override
  void update(void updates(FormationControlParamsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationControlParams build() {
    final _$result = _$v ??
        new _$FormationControlParams._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            Action: Action,
            lon_gain: lon_gain,
            lat_gain: lat_gain,
            bond_thick: bond_thick,
            lead_gain: lead_gain,
            deconfl_gain: deconfl_gain,
            accel_switch_gain: accel_switch_gain,
            safe_dist: safe_dist,
            deconflict_offset: deconflict_offset,
            accel_safe_margin: accel_safe_margin,
            accel_lim_x: accel_lim_x);
    replace(_$result);
    return _$result;
  }
}

/// Formation Evaluation Data immutable class
///
class _$FormationEvaluation extends FormationEvaluation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final FormationEvaluationEnumType type;
  @override
  final FormationEvaluationEnumOp op;
  @override
  final double err_mean;
  @override
  final double dist_min_abs;
  @override
  final double dist_min_mean;
  @override
  final double roll_rate_mean;
  @override
  final double time;
  @override
  final FormationControlParams ControlParams;

  factory _$FormationEvaluation([void updates(FormationEvaluationBuilder b)]) =>
      (new FormationEvaluationBuilder()..update(updates)).build();

  _$FormationEvaluation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.op,
      this.err_mean,
      this.dist_min_abs,
      this.dist_min_mean,
      this.roll_rate_mean,
      this.time,
      this.ControlParams})
      : super._();

  @override
  FormationEvaluation rebuild(void updates(FormationEvaluationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationEvaluationBuilder toBuilder() => new FormationEvaluationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationEvaluation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        op == this.op &&
        err_mean == this.err_mean &&
        dist_min_abs == this.dist_min_abs &&
        dist_min_mean == this.dist_min_mean &&
        roll_rate_mean == this.roll_rate_mean &&
        time == this.time &&
        ControlParams == this.ControlParams;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode), 
        op.hashCode), 
        err_mean.hashCode), 
        dist_min_abs.hashCode), 
        dist_min_mean.hashCode), 
        roll_rate_mean.hashCode), 
        time.hashCode), 
        ControlParams.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationEvaluation')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type)
          ..add('op', op)
          ..add('err_mean', err_mean)
          ..add('dist_min_abs', dist_min_abs)
          ..add('dist_min_mean', dist_min_mean)
          ..add('roll_rate_mean', roll_rate_mean)
          ..add('time', time)
          ..add('ControlParams', ControlParams))
        .toString();
  }
}

/// Formation Evaluation Data builder class
///
class FormationEvaluationBuilder implements Builder<FormationEvaluation, FormationEvaluationBuilder> {
  _$FormationEvaluation _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  FormationEvaluationEnumType _type;
  FormationEvaluationEnumType get type => _$this._type;
  set type(FormationEvaluationEnumType type) => _$this._type = type;

  FormationEvaluationEnumOp _op;
  FormationEvaluationEnumOp get op => _$this._op;
  set op(FormationEvaluationEnumOp op) => _$this._op = op;

  double _err_mean;
  double get err_mean => _$this._err_mean;
  set err_mean(double err_mean) => _$this._err_mean = err_mean;

  double _dist_min_abs;
  double get dist_min_abs => _$this._dist_min_abs;
  set dist_min_abs(double dist_min_abs) => _$this._dist_min_abs = dist_min_abs;

  double _dist_min_mean;
  double get dist_min_mean => _$this._dist_min_mean;
  set dist_min_mean(double dist_min_mean) => _$this._dist_min_mean = dist_min_mean;

  double _roll_rate_mean;
  double get roll_rate_mean => _$this._roll_rate_mean;
  set roll_rate_mean(double roll_rate_mean) => _$this._roll_rate_mean = roll_rate_mean;

  double _time;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  FormationControlParams _ControlParams;
  FormationControlParams get ControlParams => _$this._ControlParams;
  set ControlParams(FormationControlParams ControlParams) => _$this._ControlParams = ControlParams;

  FormationEvaluationBuilder();

  FormationEvaluationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _op = _$v.op;
      _err_mean = _$v.err_mean;
      _dist_min_abs = _$v.dist_min_abs;
      _dist_min_mean = _$v.dist_min_mean;
      _roll_rate_mean = _$v.roll_rate_mean;
      _time = _$v.time;
      _ControlParams = _$v.ControlParams;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationEvaluation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormationEvaluation;
  }

  @override
  void update(void updates(FormationEvaluationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationEvaluation build() {
    final _$result = _$v ??
        new _$FormationEvaluation._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type,
            op: op,
            err_mean: err_mean,
            dist_min_abs: dist_min_abs,
            dist_min_mean: dist_min_mean,
            roll_rate_mean: roll_rate_mean,
            time: time,
            ControlParams: ControlParams);
    replace(_$result);
    return _$result;
  }
}

/// SOI Waypoint immutable class
///
class _$SoiWaypoint extends SoiWaypoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final int eta;
  @override
  final int duration;

  factory _$SoiWaypoint([void updates(SoiWaypointBuilder b)]) =>
      (new SoiWaypointBuilder()..update(updates)).build();

  _$SoiWaypoint._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.eta,
      this.duration})
      : super._();

  @override
  SoiWaypoint rebuild(void updates(SoiWaypointBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SoiWaypointBuilder toBuilder() => new SoiWaypointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoiWaypoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        eta == this.eta &&
        duration == this.duration;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        eta.hashCode), 
        duration.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoiWaypoint')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('eta', eta)
          ..add('duration', duration))
        .toString();
  }
}

/// SOI Waypoint builder class
///
class SoiWaypointBuilder implements Builder<SoiWaypoint, SoiWaypointBuilder> {
  _$SoiWaypoint _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  int _eta;
  int get eta => _$this._eta;
  set eta(int eta) => _$this._eta = eta;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  SoiWaypointBuilder();

  SoiWaypointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _eta = _$v.eta;
      _duration = _$v.duration;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoiWaypoint other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SoiWaypoint;
  }

  @override
  void update(void updates(SoiWaypointBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SoiWaypoint build() {
    final _$result = _$v ??
        new _$SoiWaypoint._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            lat: lat,
            lon: lon,
            eta: eta,
            duration: duration);
    replace(_$result);
    return _$result;
  }
}

/// SOI Plan immutable class
///
class _$SoiPlan extends SoiPlan {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int plan_id;
  @override
  final List<SoiWaypoint> waypoints;

  factory _$SoiPlan([void updates(SoiPlanBuilder b)]) =>
      (new SoiPlanBuilder()..update(updates)).build();

  _$SoiPlan._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.plan_id,
      this.waypoints})
      : super._();

  @override
  SoiPlan rebuild(void updates(SoiPlanBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SoiPlanBuilder toBuilder() => new SoiPlanBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoiPlan &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        plan_id == this.plan_id &&
        waypoints == this.waypoints;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        plan_id.hashCode), 
        waypoints.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoiPlan')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('plan_id', plan_id)
          ..add('waypoints', waypoints))
        .toString();
  }
}

/// SOI Plan builder class
///
class SoiPlanBuilder implements Builder<SoiPlan, SoiPlanBuilder> {
  _$SoiPlan _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _plan_id;
  int get plan_id => _$this._plan_id;
  set plan_id(int plan_id) => _$this._plan_id = plan_id;

  List<SoiWaypoint> _waypoints;
  List<SoiWaypoint> get waypoints => _$this._waypoints;
  set waypoints(List<SoiWaypoint> waypoints) => _$this._waypoints = waypoints;

  SoiPlanBuilder();

  SoiPlanBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _plan_id = _$v.plan_id;
      _waypoints = _$v.waypoints;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoiPlan other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SoiPlan;
  }

  @override
  void update(void updates(SoiPlanBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SoiPlan build() {
    final _$result = _$v ??
        new _$SoiPlan._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            plan_id: plan_id,
            waypoints: waypoints);
    replace(_$result);
    return _$result;
  }
}

/// SOI Command immutable class
///
class _$SoiCommand extends SoiCommand {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final SoiCommandEnumType type;
  @override
  final SoiCommandEnumCommand command;
  @override
  final String settings;
  @override
  final SoiPlan plan;
  @override
  final String info;

  factory _$SoiCommand([void updates(SoiCommandBuilder b)]) =>
      (new SoiCommandBuilder()..update(updates)).build();

  _$SoiCommand._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.command,
      this.settings,
      this.plan,
      this.info})
      : super._();

  @override
  SoiCommand rebuild(void updates(SoiCommandBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SoiCommandBuilder toBuilder() => new SoiCommandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoiCommand &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        command == this.command &&
        settings == this.settings &&
        plan == this.plan &&
        info == this.info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        type.hashCode), 
        command.hashCode), 
        settings.hashCode), 
        plan.hashCode), 
        info.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoiCommand')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('type', type)
          ..add('command', command)
          ..add('settings', settings)
          ..add('plan', plan)
          ..add('info', info))
        .toString();
  }
}

/// SOI Command builder class
///
class SoiCommandBuilder implements Builder<SoiCommand, SoiCommandBuilder> {
  _$SoiCommand _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  SoiCommandEnumType _type;
  SoiCommandEnumType get type => _$this._type;
  set type(SoiCommandEnumType type) => _$this._type = type;

  SoiCommandEnumCommand _command;
  SoiCommandEnumCommand get command => _$this._command;
  set command(SoiCommandEnumCommand command) => _$this._command = command;

  String _settings;
  String get settings => _$this._settings;
  set settings(String settings) => _$this._settings = settings;

  SoiPlan _plan;
  SoiPlan get plan => _$this._plan;
  set plan(SoiPlan plan) => _$this._plan = plan;

  String _info;
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  SoiCommandBuilder();

  SoiCommandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _command = _$v.command;
      _settings = _$v.settings;
      _plan = _$v.plan;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoiCommand other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SoiCommand;
  }

  @override
  void update(void updates(SoiCommandBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SoiCommand build() {
    final _$result = _$v ??
        new _$SoiCommand._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            type: type,
            command: command,
            settings: settings,
            plan: plan,
            info: info);
    replace(_$result);
    return _$result;
  }
}

/// SOI State immutable class
///
class _$SoiState extends SoiState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final SoiStateEnumState state;
  @override
  final int plan_id;
  @override
  final int wpt_id;
  @override
  final int settings_chk;

  factory _$SoiState([void updates(SoiStateBuilder b)]) =>
      (new SoiStateBuilder()..update(updates)).build();

  _$SoiState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state,
      this.plan_id,
      this.wpt_id,
      this.settings_chk})
      : super._();

  @override
  SoiState rebuild(void updates(SoiStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SoiStateBuilder toBuilder() => new SoiStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoiState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state &&
        plan_id == this.plan_id &&
        wpt_id == this.wpt_id &&
        settings_chk == this.settings_chk;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        state.hashCode), 
        plan_id.hashCode), 
        wpt_id.hashCode), 
        settings_chk.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoiState')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('state', state)
          ..add('plan_id', plan_id)
          ..add('wpt_id', wpt_id)
          ..add('settings_chk', settings_chk))
        .toString();
  }
}

/// SOI State builder class
///
class SoiStateBuilder implements Builder<SoiState, SoiStateBuilder> {
  _$SoiState _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  SoiStateEnumState _state;
  SoiStateEnumState get state => _$this._state;
  set state(SoiStateEnumState state) => _$this._state = state;

  int _plan_id;
  int get plan_id => _$this._plan_id;
  set plan_id(int plan_id) => _$this._plan_id = plan_id;

  int _wpt_id;
  int get wpt_id => _$this._wpt_id;
  set wpt_id(int wpt_id) => _$this._wpt_id = wpt_id;

  int _settings_chk;
  int get settings_chk => _$this._settings_chk;
  set settings_chk(int settings_chk) => _$this._settings_chk = settings_chk;

  SoiStateBuilder();

  SoiStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _plan_id = _$v.plan_id;
      _wpt_id = _$v.wpt_id;
      _settings_chk = _$v.settings_chk;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoiState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SoiState;
  }

  @override
  void update(void updates(SoiStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SoiState build() {
    final _$result = _$v ??
        new _$SoiState._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            state: state,
            plan_id: plan_id,
            wpt_id: wpt_id,
            settings_chk: settings_chk);
    replace(_$result);
    return _$result;
  }
}

/// Message Fragment immutable class
///
class _$MessagePart extends MessagePart {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int uid;
  @override
  final int frag_number;
  @override
  final int num_frags;
  @override
  final List<int> data;

  factory _$MessagePart([void updates(MessagePartBuilder b)]) =>
      (new MessagePartBuilder()..update(updates)).build();

  _$MessagePart._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.uid,
      this.frag_number,
      this.num_frags,
      this.data})
      : super._();

  @override
  MessagePart rebuild(void updates(MessagePartBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MessagePartBuilder toBuilder() => new MessagePartBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MessagePart &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        uid == this.uid &&
        frag_number == this.frag_number &&
        num_frags == this.num_frags &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        uid.hashCode), 
        frag_number.hashCode), 
        num_frags.hashCode), 
        data.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MessagePart')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('uid', uid)
          ..add('frag_number', frag_number)
          ..add('num_frags', num_frags)
          ..add('data', data))
        .toString();
  }
}

/// Message Fragment builder class
///
class MessagePartBuilder implements Builder<MessagePart, MessagePartBuilder> {
  _$MessagePart _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _uid;
  int get uid => _$this._uid;
  set uid(int uid) => _$this._uid = uid;

  int _frag_number;
  int get frag_number => _$this._frag_number;
  set frag_number(int frag_number) => _$this._frag_number = frag_number;

  int _num_frags;
  int get num_frags => _$this._num_frags;
  set num_frags(int num_frags) => _$this._num_frags = num_frags;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  MessagePartBuilder();

  MessagePartBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _uid = _$v.uid;
      _frag_number = _$v.frag_number;
      _num_frags = _$v.num_frags;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MessagePart other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$MessagePart;
  }

  @override
  void update(void updates(MessagePartBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$MessagePart build() {
    final _$result = _$v ??
        new _$MessagePart._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            uid: uid,
            frag_number: frag_number,
            num_frags: num_frags,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// Neptus Blob immutable class
///
class _$NeptusBlob extends NeptusBlob {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String content_type;
  @override
  final List<int> content;

  factory _$NeptusBlob([void updates(NeptusBlobBuilder b)]) =>
      (new NeptusBlobBuilder()..update(updates)).build();

  _$NeptusBlob._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.content_type,
      this.content})
      : super._();

  @override
  NeptusBlob rebuild(void updates(NeptusBlobBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  NeptusBlobBuilder toBuilder() => new NeptusBlobBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is NeptusBlob &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        content_type == this.content_type &&
        content == this.content;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        content_type.hashCode), 
        content.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('NeptusBlob')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('content_type', content_type)
          ..add('content', content))
        .toString();
  }
}

/// Neptus Blob builder class
///
class NeptusBlobBuilder implements Builder<NeptusBlob, NeptusBlobBuilder> {
  _$NeptusBlob _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _content_type;
  String get content_type => _$this._content_type;
  set content_type(String content_type) => _$this._content_type = content_type;

  List<int> _content;
  List<int> get content => _$this._content;
  set content(List<int> content) => _$this._content = content;

  NeptusBlobBuilder();

  NeptusBlobBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _content_type = _$v.content_type;
      _content = _$v.content;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(NeptusBlob other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$NeptusBlob;
  }

  @override
  void update(void updates(NeptusBlobBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$NeptusBlob build() {
    final _$result = _$v ??
        new _$NeptusBlob._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            content_type: content_type,
            content: content);
    replace(_$result);
    return _$result;
  }
}

/// Aborted immutable class
///
class _$Aborted extends Aborted {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$Aborted([void updates(AbortedBuilder b)]) =>
      (new AbortedBuilder()..update(updates)).build();

  _$Aborted._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  Aborted rebuild(void updates(AbortedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AbortedBuilder toBuilder() => new AbortedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Aborted &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Aborted')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt))
        .toString();
  }
}

/// Aborted builder class
///
class AbortedBuilder implements Builder<Aborted, AbortedBuilder> {
  _$Aborted _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AbortedBuilder();

  AbortedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Aborted other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Aborted;
  }

  @override
  void update(void updates(AbortedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Aborted build() {
    final _$result = _$v ??
        new _$Aborted._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt);
    replace(_$result);
    return _$result;
  }
}

/// USBL Angles immutable class
///
class _$UsblAngles extends UsblAngles {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int target;
  @override
  final double bearing;
  @override
  final double elevation;

  factory _$UsblAngles([void updates(UsblAnglesBuilder b)]) =>
      (new UsblAnglesBuilder()..update(updates)).build();

  _$UsblAngles._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.target,
      this.bearing,
      this.elevation})
      : super._();

  @override
  UsblAngles rebuild(void updates(UsblAnglesBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblAnglesBuilder toBuilder() => new UsblAnglesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblAngles &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == this.target &&
        bearing == this.bearing &&
        elevation == this.elevation;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        target.hashCode), 
        bearing.hashCode), 
        elevation.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblAngles')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('target', target)
          ..add('bearing', bearing)
          ..add('elevation', elevation))
        .toString();
  }
}

/// USBL Angles builder class
///
class UsblAnglesBuilder implements Builder<UsblAngles, UsblAnglesBuilder> {
  _$UsblAngles _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _target;
  int get target => _$this._target;
  set target(int target) => _$this._target = target;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _elevation;
  double get elevation => _$this._elevation;
  set elevation(double elevation) => _$this._elevation = elevation;

  UsblAnglesBuilder();

  UsblAnglesBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _bearing = _$v.bearing;
      _elevation = _$v.elevation;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblAngles other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblAngles;
  }

  @override
  void update(void updates(UsblAnglesBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblAngles build() {
    final _$result = _$v ??
        new _$UsblAngles._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            target: target,
            bearing: bearing,
            elevation: elevation);
    replace(_$result);
    return _$result;
  }
}

/// USBL Position immutable class
///
class _$UsblPosition extends UsblPosition {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int target;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$UsblPosition([void updates(UsblPositionBuilder b)]) =>
      (new UsblPositionBuilder()..update(updates)).build();

  _$UsblPosition._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.target,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  UsblPosition rebuild(void updates(UsblPositionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblPositionBuilder toBuilder() => new UsblPositionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblPosition &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == this.target &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        target.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblPosition')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('target', target)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// USBL Position builder class
///
class UsblPositionBuilder implements Builder<UsblPosition, UsblPositionBuilder> {
  _$UsblPosition _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _target;
  int get target => _$this._target;
  set target(int target) => _$this._target = target;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  UsblPositionBuilder();

  UsblPositionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblPosition other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblPosition;
  }

  @override
  void update(void updates(UsblPositionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblPosition build() {
    final _$result = _$v ??
        new _$UsblPosition._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            target: target,
            x: x,
            y: y,
            z: z);
    replace(_$result);
    return _$result;
  }
}

/// USBL Fix immutable class
///
class _$UsblFix extends UsblFix {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int target;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final ZUnitsEnum z_units;
  @override
  final double z;

  factory _$UsblFix([void updates(UsblFixBuilder b)]) =>
      (new UsblFixBuilder()..update(updates)).build();

  _$UsblFix._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.target,
      this.lat,
      this.lon,
      this.z_units,
      this.z})
      : super._();

  @override
  UsblFix rebuild(void updates(UsblFixBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblFixBuilder toBuilder() => new UsblFixBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblFix &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == this.target &&
        lat == this.lat &&
        lon == this.lon &&
        z_units == this.z_units &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        target.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z_units.hashCode), 
        z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblFix')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('target', target)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z_units', z_units)
          ..add('z', z))
        .toString();
  }
}

/// USBL Fix builder class
///
class UsblFixBuilder implements Builder<UsblFix, UsblFixBuilder> {
  _$UsblFix _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _target;
  int get target => _$this._target;
  set target(int target) => _$this._target = target;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  UsblFixBuilder();

  UsblFixBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z_units = _$v.z_units;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblFix other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblFix;
  }

  @override
  void update(void updates(UsblFixBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblFix build() {
    final _$result = _$v ??
        new _$UsblFix._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            target: target,
            lat: lat,
            lon: lon,
            z_units: z_units,
            z: z);
    replace(_$result);
    return _$result;
  }
}

/// Parameters XML immutable class
///
class _$ParametersXml extends ParametersXml {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String locale;
  @override
  final List<int> config;

  factory _$ParametersXml([void updates(ParametersXmlBuilder b)]) =>
      (new ParametersXmlBuilder()..update(updates)).build();

  _$ParametersXml._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.locale,
      this.config})
      : super._();

  @override
  ParametersXml rebuild(void updates(ParametersXmlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ParametersXmlBuilder toBuilder() => new ParametersXmlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ParametersXml &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        locale == this.locale &&
        config == this.config;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        locale.hashCode), 
        config.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ParametersXml')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('locale', locale)
          ..add('config', config))
        .toString();
  }
}

/// Parameters XML builder class
///
class ParametersXmlBuilder implements Builder<ParametersXml, ParametersXmlBuilder> {
  _$ParametersXml _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _locale;
  String get locale => _$this._locale;
  set locale(String locale) => _$this._locale = locale;

  List<int> _config;
  List<int> get config => _$this._config;
  set config(List<int> config) => _$this._config = config;

  ParametersXmlBuilder();

  ParametersXmlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _locale = _$v.locale;
      _config = _$v.config;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ParametersXml other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ParametersXml;
  }

  @override
  void update(void updates(ParametersXmlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ParametersXml build() {
    final _$result = _$v ??
        new _$ParametersXml._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            locale: locale,
            config: config);
    replace(_$result);
    return _$result;
  }
}

/// Get Parameters XML immutable class
///
class _$GetParametersXml extends GetParametersXml {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$GetParametersXml([void updates(GetParametersXmlBuilder b)]) =>
      (new GetParametersXmlBuilder()..update(updates)).build();

  _$GetParametersXml._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  GetParametersXml rebuild(void updates(GetParametersXmlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GetParametersXmlBuilder toBuilder() => new GetParametersXmlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GetParametersXml &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GetParametersXml')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt))
        .toString();
  }
}

/// Get Parameters XML builder class
///
class GetParametersXmlBuilder implements Builder<GetParametersXml, GetParametersXmlBuilder> {
  _$GetParametersXml _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GetParametersXmlBuilder();

  GetParametersXmlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GetParametersXml other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GetParametersXml;
  }

  @override
  void update(void updates(GetParametersXmlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GetParametersXml build() {
    final _$result = _$v ??
        new _$GetParametersXml._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt);
    replace(_$result);
    return _$result;
  }
}

/// Set Image Coordinates immutable class
///
class _$SetImageCoords extends SetImageCoords {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int camId;
  @override
  final int x;
  @override
  final int y;

  factory _$SetImageCoords([void updates(SetImageCoordsBuilder b)]) =>
      (new SetImageCoordsBuilder()..update(updates)).build();

  _$SetImageCoords._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.camId,
      this.x,
      this.y})
      : super._();

  @override
  SetImageCoords rebuild(void updates(SetImageCoordsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SetImageCoordsBuilder toBuilder() => new SetImageCoordsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetImageCoords &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        camId == this.camId &&
        x == this.x &&
        y == this.y;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        camId.hashCode), 
        x.hashCode), 
        y.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetImageCoords')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('camId', camId)
          ..add('x', x)
          ..add('y', y))
        .toString();
  }
}

/// Set Image Coordinates builder class
///
class SetImageCoordsBuilder implements Builder<SetImageCoords, SetImageCoordsBuilder> {
  _$SetImageCoords _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _camId;
  int get camId => _$this._camId;
  set camId(int camId) => _$this._camId = camId;

  int _x;
  int get x => _$this._x;
  set x(int x) => _$this._x = x;

  int _y;
  int get y => _$this._y;
  set y(int y) => _$this._y = y;

  SetImageCoordsBuilder();

  SetImageCoordsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _camId = _$v.camId;
      _x = _$v.x;
      _y = _$v.y;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetImageCoords other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SetImageCoords;
  }

  @override
  void update(void updates(SetImageCoordsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SetImageCoords build() {
    final _$result = _$v ??
        new _$SetImageCoords._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            camId: camId,
            x: x,
            y: y);
    replace(_$result);
    return _$result;
  }
}

/// Get Image Coordinates immutable class
///
class _$GetImageCoords extends GetImageCoords {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int camId;
  @override
  final int x;
  @override
  final int y;

  factory _$GetImageCoords([void updates(GetImageCoordsBuilder b)]) =>
      (new GetImageCoordsBuilder()..update(updates)).build();

  _$GetImageCoords._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.camId,
      this.x,
      this.y})
      : super._();

  @override
  GetImageCoords rebuild(void updates(GetImageCoordsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GetImageCoordsBuilder toBuilder() => new GetImageCoordsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GetImageCoords &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        camId == this.camId &&
        x == this.x &&
        y == this.y;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        camId.hashCode), 
        x.hashCode), 
        y.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GetImageCoords')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('camId', camId)
          ..add('x', x)
          ..add('y', y))
        .toString();
  }
}

/// Get Image Coordinates builder class
///
class GetImageCoordsBuilder implements Builder<GetImageCoords, GetImageCoordsBuilder> {
  _$GetImageCoords _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _camId;
  int get camId => _$this._camId;
  set camId(int camId) => _$this._camId = camId;

  int _x;
  int get x => _$this._x;
  set x(int x) => _$this._x = x;

  int _y;
  int get y => _$this._y;
  set y(int y) => _$this._y = y;

  GetImageCoordsBuilder();

  GetImageCoordsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _camId = _$v.camId;
      _x = _$v.x;
      _y = _$v.y;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GetImageCoords other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GetImageCoords;
  }

  @override
  void update(void updates(GetImageCoordsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GetImageCoords build() {
    final _$result = _$v ??
        new _$GetImageCoords._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            camId: camId,
            x: x,
            y: y);
    replace(_$result);
    return _$result;
  }
}

/// Get World Coordinates immutable class
///
class _$GetWorldCoordinates extends GetWorldCoordinates {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final BooleanEnum tracking;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$GetWorldCoordinates([void updates(GetWorldCoordinatesBuilder b)]) =>
      (new GetWorldCoordinatesBuilder()..update(updates)).build();

  _$GetWorldCoordinates._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.tracking,
      this.lat,
      this.lon,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  GetWorldCoordinates rebuild(void updates(GetWorldCoordinatesBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GetWorldCoordinatesBuilder toBuilder() => new GetWorldCoordinatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GetWorldCoordinates &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        tracking == this.tracking &&
        lat == this.lat &&
        lon == this.lon &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        tracking.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GetWorldCoordinates')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('tracking', tracking)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Get World Coordinates builder class
///
class GetWorldCoordinatesBuilder implements Builder<GetWorldCoordinates, GetWorldCoordinatesBuilder> {
  _$GetWorldCoordinates _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  BooleanEnum _tracking;
  BooleanEnum get tracking => _$this._tracking;
  set tracking(BooleanEnum tracking) => _$this._tracking = tracking;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  GetWorldCoordinatesBuilder();

  GetWorldCoordinatesBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _tracking = _$v.tracking;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GetWorldCoordinates other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GetWorldCoordinates;
  }

  @override
  void update(void updates(GetWorldCoordinatesBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GetWorldCoordinates build() {
    final _$result = _$v ??
        new _$GetWorldCoordinates._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            tracking: tracking,
            lat: lat,
            lon: lon,
            x: x,
            y: y,
            z: z);
    replace(_$result);
    return _$result;
  }
}

/// USBL Angles Extended immutable class
///
class _$UsblAnglesExtended extends UsblAnglesExtended {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String target;
  @override
  final double lbearing;
  @override
  final double lelevation;
  @override
  final double bearing;
  @override
  final double elevation;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double accuracy;

  factory _$UsblAnglesExtended([void updates(UsblAnglesExtendedBuilder b)]) =>
      (new UsblAnglesExtendedBuilder()..update(updates)).build();

  _$UsblAnglesExtended._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.target,
      this.lbearing,
      this.lelevation,
      this.bearing,
      this.elevation,
      this.phi,
      this.theta,
      this.psi,
      this.accuracy})
      : super._();

  @override
  UsblAnglesExtended rebuild(void updates(UsblAnglesExtendedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblAnglesExtendedBuilder toBuilder() => new UsblAnglesExtendedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblAnglesExtended &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == this.target &&
        lbearing == this.lbearing &&
        lelevation == this.lelevation &&
        bearing == this.bearing &&
        elevation == this.elevation &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi &&
        accuracy == this.accuracy;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        target.hashCode), 
        lbearing.hashCode), 
        lelevation.hashCode), 
        bearing.hashCode), 
        elevation.hashCode), 
        phi.hashCode), 
        theta.hashCode), 
        psi.hashCode), 
        accuracy.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblAnglesExtended')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('target', target)
          ..add('lbearing', lbearing)
          ..add('lelevation', lelevation)
          ..add('bearing', bearing)
          ..add('elevation', elevation)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi)
          ..add('accuracy', accuracy))
        .toString();
  }
}

/// USBL Angles Extended builder class
///
class UsblAnglesExtendedBuilder implements Builder<UsblAnglesExtended, UsblAnglesExtendedBuilder> {
  _$UsblAnglesExtended _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _target;
  String get target => _$this._target;
  set target(String target) => _$this._target = target;

  double _lbearing;
  double get lbearing => _$this._lbearing;
  set lbearing(double lbearing) => _$this._lbearing = lbearing;

  double _lelevation;
  double get lelevation => _$this._lelevation;
  set lelevation(double lelevation) => _$this._lelevation = lelevation;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _elevation;
  double get elevation => _$this._elevation;
  set elevation(double elevation) => _$this._elevation = elevation;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _accuracy;
  double get accuracy => _$this._accuracy;
  set accuracy(double accuracy) => _$this._accuracy = accuracy;

  UsblAnglesExtendedBuilder();

  UsblAnglesExtendedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _lbearing = _$v.lbearing;
      _lelevation = _$v.lelevation;
      _bearing = _$v.bearing;
      _elevation = _$v.elevation;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _accuracy = _$v.accuracy;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblAnglesExtended other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblAnglesExtended;
  }

  @override
  void update(void updates(UsblAnglesExtendedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblAnglesExtended build() {
    final _$result = _$v ??
        new _$UsblAnglesExtended._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            target: target,
            lbearing: lbearing,
            lelevation: lelevation,
            bearing: bearing,
            elevation: elevation,
            phi: phi,
            theta: theta,
            psi: psi,
            accuracy: accuracy);
    replace(_$result);
    return _$result;
  }
}

/// USBL Position Extended immutable class
///
class _$UsblPositionExtended extends UsblPositionExtended {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String target;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double n;
  @override
  final double e;
  @override
  final double d;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double accuracy;

  factory _$UsblPositionExtended([void updates(UsblPositionExtendedBuilder b)]) =>
      (new UsblPositionExtendedBuilder()..update(updates)).build();

  _$UsblPositionExtended._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.target,
      this.x,
      this.y,
      this.z,
      this.n,
      this.e,
      this.d,
      this.phi,
      this.theta,
      this.psi,
      this.accuracy})
      : super._();

  @override
  UsblPositionExtended rebuild(void updates(UsblPositionExtendedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblPositionExtendedBuilder toBuilder() => new UsblPositionExtendedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblPositionExtended &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == this.target &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        n == this.n &&
        e == this.e &&
        d == this.d &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi &&
        accuracy == this.accuracy;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        target.hashCode), 
        x.hashCode), 
        y.hashCode), 
        z.hashCode), 
        n.hashCode), 
        e.hashCode), 
        d.hashCode), 
        phi.hashCode), 
        theta.hashCode), 
        psi.hashCode), 
        accuracy.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblPositionExtended')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('target', target)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('n', n)
          ..add('e', e)
          ..add('d', d)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi)
          ..add('accuracy', accuracy))
        .toString();
  }
}

/// USBL Position Extended builder class
///
class UsblPositionExtendedBuilder implements Builder<UsblPositionExtended, UsblPositionExtendedBuilder> {
  _$UsblPositionExtended _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _target;
  String get target => _$this._target;
  set target(String target) => _$this._target = target;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _n;
  double get n => _$this._n;
  set n(double n) => _$this._n = n;

  double _e;
  double get e => _$this._e;
  set e(double e) => _$this._e = e;

  double _d;
  double get d => _$this._d;
  set d(double d) => _$this._d = d;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _accuracy;
  double get accuracy => _$this._accuracy;
  set accuracy(double accuracy) => _$this._accuracy = accuracy;

  UsblPositionExtendedBuilder();

  UsblPositionExtendedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _n = _$v.n;
      _e = _$v.e;
      _d = _$v.d;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _accuracy = _$v.accuracy;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblPositionExtended other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblPositionExtended;
  }

  @override
  void update(void updates(UsblPositionExtendedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblPositionExtended build() {
    final _$result = _$v ??
        new _$UsblPositionExtended._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            target: target,
            x: x,
            y: y,
            z: z,
            n: n,
            e: e,
            d: d,
            phi: phi,
            theta: theta,
            psi: psi,
            accuracy: accuracy);
    replace(_$result);
    return _$result;
  }
}

/// USBL Fix Extended immutable class
///
class _$UsblFixExtended extends UsblFixExtended {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String target;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final ZUnitsEnum z_units;
  @override
  final double z;
  @override
  final double accuracy;

  factory _$UsblFixExtended([void updates(UsblFixExtendedBuilder b)]) =>
      (new UsblFixExtendedBuilder()..update(updates)).build();

  _$UsblFixExtended._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.target,
      this.lat,
      this.lon,
      this.z_units,
      this.z,
      this.accuracy})
      : super._();

  @override
  UsblFixExtended rebuild(void updates(UsblFixExtendedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblFixExtendedBuilder toBuilder() => new UsblFixExtendedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblFixExtended &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == this.target &&
        lat == this.lat &&
        lon == this.lon &&
        z_units == this.z_units &&
        z == this.z &&
        accuracy == this.accuracy;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        target.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z_units.hashCode), 
        z.hashCode), 
        accuracy.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblFixExtended')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('target', target)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z_units', z_units)
          ..add('z', z)
          ..add('accuracy', accuracy))
        .toString();
  }
}

/// USBL Fix Extended builder class
///
class UsblFixExtendedBuilder implements Builder<UsblFixExtended, UsblFixExtendedBuilder> {
  _$UsblFixExtended _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _target;
  String get target => _$this._target;
  set target(String target) => _$this._target = target;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _accuracy;
  double get accuracy => _$this._accuracy;
  set accuracy(double accuracy) => _$this._accuracy = accuracy;

  UsblFixExtendedBuilder();

  UsblFixExtendedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z_units = _$v.z_units;
      _z = _$v.z;
      _accuracy = _$v.accuracy;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblFixExtended other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblFixExtended;
  }

  @override
  void update(void updates(UsblFixExtendedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblFixExtended build() {
    final _$result = _$v ??
        new _$UsblFixExtended._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            target: target,
            lat: lat,
            lon: lon,
            z_units: z_units,
            z: z,
            accuracy: accuracy);
    replace(_$result);
    return _$result;
  }
}

/// USBL Modem Configuration immutable class
///
class _$UsblModem extends UsblModem {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum z_units;

  factory _$UsblModem([void updates(UsblModemBuilder b)]) =>
      (new UsblModemBuilder()..update(updates)).build();

  _$UsblModem._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.lat,
      this.lon,
      this.z,
      this.z_units})
      : super._();

  @override
  UsblModem rebuild(void updates(UsblModemBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblModemBuilder toBuilder() => new UsblModemBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblModem &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        z_units == this.z_units;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        name.hashCode), 
        lat.hashCode), 
        lon.hashCode), 
        z.hashCode), 
        z_units.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblModem')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('name', name)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('z_units', z_units))
        .toString();
  }
}

/// USBL Modem Configuration builder class
///
class UsblModemBuilder implements Builder<UsblModem, UsblModemBuilder> {
  _$UsblModem _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _z_units;
  ZUnitsEnum get z_units => _$this._z_units;
  set z_units(ZUnitsEnum z_units) => _$this._z_units = z_units;

  UsblModemBuilder();

  UsblModemBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _z_units = _$v.z_units;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblModem other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblModem;
  }

  @override
  void update(void updates(UsblModemBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblModem build() {
    final _$result = _$v ??
        new _$UsblModem._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            name: name,
            lat: lat,
            lon: lon,
            z: z,
            z_units: z_units);
    replace(_$result);
    return _$result;
  }
}

/// USBL Configuration immutable class
///
class _$UsblConfig extends UsblConfig {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final UsblConfigEnumOp op;
  @override
  final List<UsblModem> modems;

  factory _$UsblConfig([void updates(UsblConfigBuilder b)]) =>
      (new UsblConfigBuilder()..update(updates)).build();

  _$UsblConfig._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.modems})
      : super._();

  @override
  UsblConfig rebuild(void updates(UsblConfigBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblConfigBuilder toBuilder() => new UsblConfigBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblConfig &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        modems == this.modems;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        op.hashCode), 
        modems.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblConfig')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('op', op)
          ..add('modems', modems))
        .toString();
  }
}

/// USBL Configuration builder class
///
class UsblConfigBuilder implements Builder<UsblConfig, UsblConfigBuilder> {
  _$UsblConfig _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  UsblConfigEnumOp _op;
  UsblConfigEnumOp get op => _$this._op;
  set op(UsblConfigEnumOp op) => _$this._op = op;

  List<UsblModem> _modems;
  List<UsblModem> get modems => _$this._modems;
  set modems(List<UsblModem> modems) => _$this._modems = modems;

  UsblConfigBuilder();

  UsblConfigBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _modems = _$v.modems;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblConfig other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblConfig;
  }

  @override
  void update(void updates(UsblConfigBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblConfig build() {
    final _$result = _$v ??
        new _$UsblConfig._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            op: op,
            modems: modems);
    replace(_$result);
    return _$result;
  }
}

/// Dissolved Organic Matter immutable class
///
class _$DissolvedOrganicMatter extends DissolvedOrganicMatter {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final DissolvedOrganicMatterEnumType type;

  factory _$DissolvedOrganicMatter([void updates(DissolvedOrganicMatterBuilder b)]) =>
      (new DissolvedOrganicMatterBuilder()..update(updates)).build();

  _$DissolvedOrganicMatter._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value,
      this.type})
      : super._();

  @override
  DissolvedOrganicMatter rebuild(void updates(DissolvedOrganicMatterBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DissolvedOrganicMatterBuilder toBuilder() => new DissolvedOrganicMatterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DissolvedOrganicMatter &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value &&
        type == this.type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode), 
        type.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DissolvedOrganicMatter')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value)
          ..add('type', type))
        .toString();
  }
}

/// Dissolved Organic Matter builder class
///
class DissolvedOrganicMatterBuilder implements Builder<DissolvedOrganicMatter, DissolvedOrganicMatterBuilder> {
  _$DissolvedOrganicMatter _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DissolvedOrganicMatterEnumType _type;
  DissolvedOrganicMatterEnumType get type => _$this._type;
  set type(DissolvedOrganicMatterEnumType type) => _$this._type = type;

  DissolvedOrganicMatterBuilder();

  DissolvedOrganicMatterBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DissolvedOrganicMatter other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DissolvedOrganicMatter;
  }

  @override
  void update(void updates(DissolvedOrganicMatterBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DissolvedOrganicMatter build() {
    final _$result = _$v ??
        new _$DissolvedOrganicMatter._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value,
            type: type);
    replace(_$result);
    return _$result;
  }
}

/// Optical Backscattering Coefficient immutable class
///
class _$OpticalBackscatter extends OpticalBackscatter {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$OpticalBackscatter([void updates(OpticalBackscatterBuilder b)]) =>
      (new OpticalBackscatterBuilder()..update(updates)).build();

  _$OpticalBackscatter._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  OpticalBackscatter rebuild(void updates(OpticalBackscatterBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  OpticalBackscatterBuilder toBuilder() => new OpticalBackscatterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is OpticalBackscatter &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('OpticalBackscatter')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Optical Backscattering Coefficient builder class
///
class OpticalBackscatterBuilder implements Builder<OpticalBackscatter, OpticalBackscatterBuilder> {
  _$OpticalBackscatter _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  OpticalBackscatterBuilder();

  OpticalBackscatterBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(OpticalBackscatter other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$OpticalBackscatter;
  }

  @override
  void update(void updates(OpticalBackscatterBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$OpticalBackscatter build() {
    final _$result = _$v ??
        new _$OpticalBackscatter._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

/// Tachograph immutable class
///
class _$Tachograph extends Tachograph {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double timestamp_last_service;
  @override
  final double time_next_service;
  @override
  final double time_motor_next_service;
  @override
  final double time_idle_ground;
  @override
  final double time_idle_air;
  @override
  final double time_idle_water;
  @override
  final double time_idle_underwater;
  @override
  final double time_idle_unknown;
  @override
  final double time_motor_ground;
  @override
  final double time_motor_air;
  @override
  final double time_motor_water;
  @override
  final double time_motor_underwater;
  @override
  final double time_motor_unknown;
  @override
  final int rpm_min;
  @override
  final int rpm_max;
  @override
  final double depth_max;

  factory _$Tachograph([void updates(TachographBuilder b)]) =>
      (new TachographBuilder()..update(updates)).build();

  _$Tachograph._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timestamp_last_service,
      this.time_next_service,
      this.time_motor_next_service,
      this.time_idle_ground,
      this.time_idle_air,
      this.time_idle_water,
      this.time_idle_underwater,
      this.time_idle_unknown,
      this.time_motor_ground,
      this.time_motor_air,
      this.time_motor_water,
      this.time_motor_underwater,
      this.time_motor_unknown,
      this.rpm_min,
      this.rpm_max,
      this.depth_max})
      : super._();

  @override
  Tachograph rebuild(void updates(TachographBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TachographBuilder toBuilder() => new TachographBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Tachograph &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timestamp_last_service == this.timestamp_last_service &&
        time_next_service == this.time_next_service &&
        time_motor_next_service == this.time_motor_next_service &&
        time_idle_ground == this.time_idle_ground &&
        time_idle_air == this.time_idle_air &&
        time_idle_water == this.time_idle_water &&
        time_idle_underwater == this.time_idle_underwater &&
        time_idle_unknown == this.time_idle_unknown &&
        time_motor_ground == this.time_motor_ground &&
        time_motor_air == this.time_motor_air &&
        time_motor_water == this.time_motor_water &&
        time_motor_underwater == this.time_motor_underwater &&
        time_motor_unknown == this.time_motor_unknown &&
        rpm_min == this.rpm_min &&
        rpm_max == this.rpm_max &&
        depth_max == this.depth_max;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        timestamp_last_service.hashCode), 
        time_next_service.hashCode), 
        time_motor_next_service.hashCode), 
        time_idle_ground.hashCode), 
        time_idle_air.hashCode), 
        time_idle_water.hashCode), 
        time_idle_underwater.hashCode), 
        time_idle_unknown.hashCode), 
        time_motor_ground.hashCode), 
        time_motor_air.hashCode), 
        time_motor_water.hashCode), 
        time_motor_underwater.hashCode), 
        time_motor_unknown.hashCode), 
        rpm_min.hashCode), 
        rpm_max.hashCode), 
        depth_max.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Tachograph')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('timestamp_last_service', timestamp_last_service)
          ..add('time_next_service', time_next_service)
          ..add('time_motor_next_service', time_motor_next_service)
          ..add('time_idle_ground', time_idle_ground)
          ..add('time_idle_air', time_idle_air)
          ..add('time_idle_water', time_idle_water)
          ..add('time_idle_underwater', time_idle_underwater)
          ..add('time_idle_unknown', time_idle_unknown)
          ..add('time_motor_ground', time_motor_ground)
          ..add('time_motor_air', time_motor_air)
          ..add('time_motor_water', time_motor_water)
          ..add('time_motor_underwater', time_motor_underwater)
          ..add('time_motor_unknown', time_motor_unknown)
          ..add('rpm_min', rpm_min)
          ..add('rpm_max', rpm_max)
          ..add('depth_max', depth_max))
        .toString();
  }
}

/// Tachograph builder class
///
class TachographBuilder implements Builder<Tachograph, TachographBuilder> {
  _$Tachograph _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _timestamp_last_service;
  double get timestamp_last_service => _$this._timestamp_last_service;
  set timestamp_last_service(double timestamp_last_service) => _$this._timestamp_last_service = timestamp_last_service;

  double _time_next_service;
  double get time_next_service => _$this._time_next_service;
  set time_next_service(double time_next_service) => _$this._time_next_service = time_next_service;

  double _time_motor_next_service;
  double get time_motor_next_service => _$this._time_motor_next_service;
  set time_motor_next_service(double time_motor_next_service) => _$this._time_motor_next_service = time_motor_next_service;

  double _time_idle_ground;
  double get time_idle_ground => _$this._time_idle_ground;
  set time_idle_ground(double time_idle_ground) => _$this._time_idle_ground = time_idle_ground;

  double _time_idle_air;
  double get time_idle_air => _$this._time_idle_air;
  set time_idle_air(double time_idle_air) => _$this._time_idle_air = time_idle_air;

  double _time_idle_water;
  double get time_idle_water => _$this._time_idle_water;
  set time_idle_water(double time_idle_water) => _$this._time_idle_water = time_idle_water;

  double _time_idle_underwater;
  double get time_idle_underwater => _$this._time_idle_underwater;
  set time_idle_underwater(double time_idle_underwater) => _$this._time_idle_underwater = time_idle_underwater;

  double _time_idle_unknown;
  double get time_idle_unknown => _$this._time_idle_unknown;
  set time_idle_unknown(double time_idle_unknown) => _$this._time_idle_unknown = time_idle_unknown;

  double _time_motor_ground;
  double get time_motor_ground => _$this._time_motor_ground;
  set time_motor_ground(double time_motor_ground) => _$this._time_motor_ground = time_motor_ground;

  double _time_motor_air;
  double get time_motor_air => _$this._time_motor_air;
  set time_motor_air(double time_motor_air) => _$this._time_motor_air = time_motor_air;

  double _time_motor_water;
  double get time_motor_water => _$this._time_motor_water;
  set time_motor_water(double time_motor_water) => _$this._time_motor_water = time_motor_water;

  double _time_motor_underwater;
  double get time_motor_underwater => _$this._time_motor_underwater;
  set time_motor_underwater(double time_motor_underwater) => _$this._time_motor_underwater = time_motor_underwater;

  double _time_motor_unknown;
  double get time_motor_unknown => _$this._time_motor_unknown;
  set time_motor_unknown(double time_motor_unknown) => _$this._time_motor_unknown = time_motor_unknown;

  int _rpm_min;
  int get rpm_min => _$this._rpm_min;
  set rpm_min(int rpm_min) => _$this._rpm_min = rpm_min;

  int _rpm_max;
  int get rpm_max => _$this._rpm_max;
  set rpm_max(int rpm_max) => _$this._rpm_max = rpm_max;

  double _depth_max;
  double get depth_max => _$this._depth_max;
  set depth_max(double depth_max) => _$this._depth_max = depth_max;

  TachographBuilder();

  TachographBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timestamp_last_service = _$v.timestamp_last_service;
      _time_next_service = _$v.time_next_service;
      _time_motor_next_service = _$v.time_motor_next_service;
      _time_idle_ground = _$v.time_idle_ground;
      _time_idle_air = _$v.time_idle_air;
      _time_idle_water = _$v.time_idle_water;
      _time_idle_underwater = _$v.time_idle_underwater;
      _time_idle_unknown = _$v.time_idle_unknown;
      _time_motor_ground = _$v.time_motor_ground;
      _time_motor_air = _$v.time_motor_air;
      _time_motor_water = _$v.time_motor_water;
      _time_motor_underwater = _$v.time_motor_underwater;
      _time_motor_unknown = _$v.time_motor_unknown;
      _rpm_min = _$v.rpm_min;
      _rpm_max = _$v.rpm_max;
      _depth_max = _$v.depth_max;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Tachograph other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Tachograph;
  }

  @override
  void update(void updates(TachographBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Tachograph build() {
    final _$result = _$v ??
        new _$Tachograph._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            timestamp_last_service: timestamp_last_service,
            time_next_service: time_next_service,
            time_motor_next_service: time_motor_next_service,
            time_idle_ground: time_idle_ground,
            time_idle_air: time_idle_air,
            time_idle_water: time_idle_water,
            time_idle_underwater: time_idle_underwater,
            time_idle_unknown: time_idle_unknown,
            time_motor_ground: time_motor_ground,
            time_motor_air: time_motor_air,
            time_motor_water: time_motor_water,
            time_motor_underwater: time_motor_underwater,
            time_motor_unknown: time_motor_unknown,
            rpm_min: rpm_min,
            rpm_max: rpm_max,
            depth_max: depth_max);
    replace(_$result);
    return _$result;
  }
}

/// APM Status immutable class
///
class _$ApmStatus extends ApmStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ApmStatusEnumSeverity severity;
  @override
  final String text;

  factory _$ApmStatus([void updates(ApmStatusBuilder b)]) =>
      (new ApmStatusBuilder()..update(updates)).build();

  _$ApmStatus._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.severity,
      this.text})
      : super._();

  @override
  ApmStatus rebuild(void updates(ApmStatusBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ApmStatusBuilder toBuilder() => new ApmStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ApmStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        severity == this.severity &&
        text == this.text;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        severity.hashCode), 
        text.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ApmStatus')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('severity', severity)
          ..add('text', text))
        .toString();
  }
}

/// APM Status builder class
///
class ApmStatusBuilder implements Builder<ApmStatus, ApmStatusBuilder> {
  _$ApmStatus _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ApmStatusEnumSeverity _severity;
  ApmStatusEnumSeverity get severity => _$this._severity;
  set severity(ApmStatusEnumSeverity severity) => _$this._severity = severity;

  String _text;
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  ApmStatusBuilder();

  ApmStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _severity = _$v.severity;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ApmStatus other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ApmStatus;
  }

  @override
  void update(void updates(ApmStatusBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ApmStatus build() {
    final _$result = _$v ??
        new _$ApmStatus._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            severity: severity,
            text: text);
    replace(_$result);
    return _$result;
  }
}

/// SADC Readings immutable class
///
class _$SadcReadings extends SadcReadings {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int channel;
  @override
  final int value;
  @override
  final SadcReadingsEnumGain gain;

  factory _$SadcReadings([void updates(SadcReadingsBuilder b)]) =>
      (new SadcReadingsBuilder()..update(updates)).build();

  _$SadcReadings._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.channel,
      this.value,
      this.gain})
      : super._();

  @override
  SadcReadings rebuild(void updates(SadcReadingsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SadcReadingsBuilder toBuilder() => new SadcReadingsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SadcReadings &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        channel == this.channel &&
        value == this.value &&
        gain == this.gain;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        channel.hashCode), 
        value.hashCode), 
        gain.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SadcReadings')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('channel', channel)
          ..add('value', value)
          ..add('gain', gain))
        .toString();
  }
}

/// SADC Readings builder class
///
class SadcReadingsBuilder implements Builder<SadcReadings, SadcReadingsBuilder> {
  _$SadcReadings _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _channel;
  int get channel => _$this._channel;
  set channel(int channel) => _$this._channel = channel;

  int _value;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  SadcReadingsEnumGain _gain;
  SadcReadingsEnumGain get gain => _$this._gain;
  set gain(SadcReadingsEnumGain gain) => _$this._gain = gain;

  SadcReadingsBuilder();

  SadcReadingsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _channel = _$v.channel;
      _value = _$v.value;
      _gain = _$v.gain;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SadcReadings other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SadcReadings;
  }

  @override
  void update(void updates(SadcReadingsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SadcReadings build() {
    final _$result = _$v ??
        new _$SadcReadings._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            channel: channel,
            value: value,
            gain: gain);
    replace(_$result);
    return _$result;
  }
}

/// DMS Detection immutable class
///
class _$DmsDetection extends DmsDetection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double ch01;
  @override
  final double ch02;
  @override
  final double ch03;
  @override
  final double ch04;
  @override
  final double ch05;
  @override
  final double ch06;
  @override
  final double ch07;
  @override
  final double ch08;
  @override
  final double ch09;
  @override
  final double ch10;
  @override
  final double ch11;
  @override
  final double ch12;
  @override
  final double ch13;
  @override
  final double ch14;
  @override
  final double ch15;
  @override
  final double ch16;

  factory _$DmsDetection([void updates(DmsDetectionBuilder b)]) =>
      (new DmsDetectionBuilder()..update(updates)).build();

  _$DmsDetection._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.ch01,
      this.ch02,
      this.ch03,
      this.ch04,
      this.ch05,
      this.ch06,
      this.ch07,
      this.ch08,
      this.ch09,
      this.ch10,
      this.ch11,
      this.ch12,
      this.ch13,
      this.ch14,
      this.ch15,
      this.ch16})
      : super._();

  @override
  DmsDetection rebuild(void updates(DmsDetectionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DmsDetectionBuilder toBuilder() => new DmsDetectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DmsDetection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        ch01 == this.ch01 &&
        ch02 == this.ch02 &&
        ch03 == this.ch03 &&
        ch04 == this.ch04 &&
        ch05 == this.ch05 &&
        ch06 == this.ch06 &&
        ch07 == this.ch07 &&
        ch08 == this.ch08 &&
        ch09 == this.ch09 &&
        ch10 == this.ch10 &&
        ch11 == this.ch11 &&
        ch12 == this.ch12 &&
        ch13 == this.ch13 &&
        ch14 == this.ch14 &&
        ch15 == this.ch15 &&
        ch16 == this.ch16;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        ch01.hashCode), 
        ch02.hashCode), 
        ch03.hashCode), 
        ch04.hashCode), 
        ch05.hashCode), 
        ch06.hashCode), 
        ch07.hashCode), 
        ch08.hashCode), 
        ch09.hashCode), 
        ch10.hashCode), 
        ch11.hashCode), 
        ch12.hashCode), 
        ch13.hashCode), 
        ch14.hashCode), 
        ch15.hashCode), 
        ch16.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DmsDetection')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('ch01', ch01)
          ..add('ch02', ch02)
          ..add('ch03', ch03)
          ..add('ch04', ch04)
          ..add('ch05', ch05)
          ..add('ch06', ch06)
          ..add('ch07', ch07)
          ..add('ch08', ch08)
          ..add('ch09', ch09)
          ..add('ch10', ch10)
          ..add('ch11', ch11)
          ..add('ch12', ch12)
          ..add('ch13', ch13)
          ..add('ch14', ch14)
          ..add('ch15', ch15)
          ..add('ch16', ch16))
        .toString();
  }
}

/// DMS Detection builder class
///
class DmsDetectionBuilder implements Builder<DmsDetection, DmsDetectionBuilder> {
  _$DmsDetection _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _ch01;
  double get ch01 => _$this._ch01;
  set ch01(double ch01) => _$this._ch01 = ch01;

  double _ch02;
  double get ch02 => _$this._ch02;
  set ch02(double ch02) => _$this._ch02 = ch02;

  double _ch03;
  double get ch03 => _$this._ch03;
  set ch03(double ch03) => _$this._ch03 = ch03;

  double _ch04;
  double get ch04 => _$this._ch04;
  set ch04(double ch04) => _$this._ch04 = ch04;

  double _ch05;
  double get ch05 => _$this._ch05;
  set ch05(double ch05) => _$this._ch05 = ch05;

  double _ch06;
  double get ch06 => _$this._ch06;
  set ch06(double ch06) => _$this._ch06 = ch06;

  double _ch07;
  double get ch07 => _$this._ch07;
  set ch07(double ch07) => _$this._ch07 = ch07;

  double _ch08;
  double get ch08 => _$this._ch08;
  set ch08(double ch08) => _$this._ch08 = ch08;

  double _ch09;
  double get ch09 => _$this._ch09;
  set ch09(double ch09) => _$this._ch09 = ch09;

  double _ch10;
  double get ch10 => _$this._ch10;
  set ch10(double ch10) => _$this._ch10 = ch10;

  double _ch11;
  double get ch11 => _$this._ch11;
  set ch11(double ch11) => _$this._ch11 = ch11;

  double _ch12;
  double get ch12 => _$this._ch12;
  set ch12(double ch12) => _$this._ch12 = ch12;

  double _ch13;
  double get ch13 => _$this._ch13;
  set ch13(double ch13) => _$this._ch13 = ch13;

  double _ch14;
  double get ch14 => _$this._ch14;
  set ch14(double ch14) => _$this._ch14 = ch14;

  double _ch15;
  double get ch15 => _$this._ch15;
  set ch15(double ch15) => _$this._ch15 = ch15;

  double _ch16;
  double get ch16 => _$this._ch16;
  set ch16(double ch16) => _$this._ch16 = ch16;

  DmsDetectionBuilder();

  DmsDetectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _ch01 = _$v.ch01;
      _ch02 = _$v.ch02;
      _ch03 = _$v.ch03;
      _ch04 = _$v.ch04;
      _ch05 = _$v.ch05;
      _ch06 = _$v.ch06;
      _ch07 = _$v.ch07;
      _ch08 = _$v.ch08;
      _ch09 = _$v.ch09;
      _ch10 = _$v.ch10;
      _ch11 = _$v.ch11;
      _ch12 = _$v.ch12;
      _ch13 = _$v.ch13;
      _ch14 = _$v.ch14;
      _ch15 = _$v.ch15;
      _ch16 = _$v.ch16;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DmsDetection other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DmsDetection;
  }

  @override
  void update(void updates(DmsDetectionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DmsDetection build() {
    final _$result = _$v ??
        new _$DmsDetection._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            ch01: ch01,
            ch02: ch02,
            ch03: ch03,
            ch04: ch04,
            ch05: ch05,
            ch06: ch06,
            ch07: ch07,
            ch08: ch08,
            ch09: ch09,
            ch10: ch10,
            ch11: ch11,
            ch12: ch12,
            ch13: ch13,
            ch14: ch14,
            ch15: ch15,
            ch16: ch16);
    replace(_$result);
    return _$result;
  }
}

/// Total Magnetic Field Intensity immutable class
///
class _$TotalMagIntensity extends TotalMagIntensity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$TotalMagIntensity([void updates(TotalMagIntensityBuilder b)]) =>
      (new TotalMagIntensityBuilder()..update(updates)).build();

  _$TotalMagIntensity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  TotalMagIntensity rebuild(void updates(TotalMagIntensityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TotalMagIntensityBuilder toBuilder() => new TotalMagIntensityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TotalMagIntensity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp.hashCode), 
        src.hashCode), 
        srcEnt.hashCode), 
        dst.hashCode), 
        dstEnt.hashCode), 
        value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TotalMagIntensity')
          ..add('timestamp', timestamp)
          ..add('src', src)
          ..add('srcEnt', srcEnt)
          ..add('dst', dst)
          ..add('dstEnt', dstEnt)
          ..add('value', value))
        .toString();
  }
}

/// Total Magnetic Field Intensity builder class
///
class TotalMagIntensityBuilder implements Builder<TotalMagIntensity, TotalMagIntensityBuilder> {
  _$TotalMagIntensity _$v;

  DateTime _timestamp;
  DateTime get timestamp => _$this._timestamp;
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src;
  int get src => _$this._src;
  set src(int src) => _$this._src = src;

  int _srcEnt;
  int get srcEnt => _$this._srcEnt;
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst;
  int get dst => _$this._dst;
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt;
  int get dstEnt => _$this._dstEnt;
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  TotalMagIntensityBuilder();

  TotalMagIntensityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TotalMagIntensity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TotalMagIntensity;
  }

  @override
  void update(void updates(TotalMagIntensityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TotalMagIntensity build() {
    final _$result = _$v ??
        new _$TotalMagIntensity._(
            timestamp: timestamp,
            src: src,
            srcEnt: srcEnt,
            dst: dst,
            dstEnt: dstEnt,
            value: value);
    replace(_$result);
    return _$result;
  }
}

