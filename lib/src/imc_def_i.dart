// GENERATED CODE - DO NOT MODIFY BY HAND

// **************************************************************************
// IMC Code Generator
// **************************************************************************

part of 'imc_def_gen.dart';

abstract class ImcBuilderHeaderPart {
  DateTime _timestamp;
  DateTime get timestamp;
  set timestamp(DateTime timestamp);

  int _src;
  int get src;
  set src(int src);

  int _srcEnt;
  int get srcEnt;
  set srcEnt(int srcEnt);

  int _dst;
  int get dst;
  set dst(int dst);

  int _dstEnt;
  int get dstEnt;
  set dstEnt(int dstEnt);
}
/// Entity State immutable class
///
class _$EntityState extends EntityState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EntityStateEnumState state;
  @override
  final EntityStateBitfieldFlags flags;
  @override
  final String description;

  factory _$EntityState([void updates(EntityStateBuilder b)]) =>
      (new EntityStateBuilder()..update(updates)).build();

  _$EntityState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state,
      this.flags,
      this.description})
      : super._();

  @override
  EntityState rebuild(void updates(EntityStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityStateBuilder toBuilder() => new EntityStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state &&
        flags == this.flags &&
        description == this.description;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        state?.hashCode), 
        flags?.hashCode), 
        description?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', state)
          ..add('flags', flags)
          ..add('description', description))
        .toString();
  }
}

/// Entity State builder class
///
class EntityStateBuilder implements Builder<EntityState, EntityStateBuilder>, ImcBuilderHeaderPart {
  _$EntityState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EntityStateEnumState _state;
  EntityStateEnumState get state => _$this._state;
  set state(EntityStateEnumState state) => _$this._state = state;

  EntityStateBitfieldFlags _flags;
  EntityStateBitfieldFlags get flags => _$this._flags;
  set flags(EntityStateBitfieldFlags flags) => _$this._flags = flags;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  EntityStateBuilder();

  EntityStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _flags = _$v.flags;
      _description = _$v.description;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EntityState;
  }

  @override
  void update(void updates(EntityStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityState build() {
    final _$result = _$v ??
        new _$EntityState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? EntityStateEnumState(0),
            flags: flags ?? EntityStateBitfieldFlags(0),
            description: description ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Query Entity State immutable class
///
class _$QueryEntityState extends QueryEntityState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$QueryEntityState([void updates(QueryEntityStateBuilder b)]) =>
      (new QueryEntityStateBuilder()..update(updates)).build();

  _$QueryEntityState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  QueryEntityState rebuild(void updates(QueryEntityStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryEntityStateBuilder toBuilder() => new QueryEntityStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryEntityState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryEntityState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Query Entity State builder class
///
class QueryEntityStateBuilder implements Builder<QueryEntityState, QueryEntityStateBuilder>, ImcBuilderHeaderPart {
  _$QueryEntityState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  QueryEntityStateBuilder();

  QueryEntityStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryEntityState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$QueryEntityState;
  }

  @override
  void update(void updates(QueryEntityStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryEntityState build() {
    final _$result = _$v ??
        new _$QueryEntityState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Entity Information immutable class
///
class _$EntityInfo extends EntityInfo {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final String label;
  @override
  final String component;
  @override
  final int actTime;
  @override
  final int deactTime;

  factory _$EntityInfo([void updates(EntityInfoBuilder b)]) =>
      (new EntityInfoBuilder()..update(updates)).build();

  _$EntityInfo._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.label,
      this.component,
      this.actTime,
      this.deactTime})
      : super._();

  @override
  EntityInfo rebuild(void updates(EntityInfoBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityInfoBuilder toBuilder() => new EntityInfoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityInfo &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        label == this.label &&
        component == this.component &&
        actTime == this.actTime &&
        deactTime == this.deactTime;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        id?.hashCode), 
        label?.hashCode), 
        component?.hashCode), 
        actTime?.hashCode), 
        deactTime?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityInfo')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', id)
          ..add('label', label)
          ..add('component', component)
          ..add('actTime', actTime)
          ..add('deactTime', deactTime))
        .toString();
  }
}

/// Entity Information builder class
///
class EntityInfoBuilder implements Builder<EntityInfo, EntityInfoBuilder>, ImcBuilderHeaderPart {
  _$EntityInfo _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  String _label;
  String get label => _$this._label;
  set label(String label) => _$this._label = label;

  String _component;
  String get component => _$this._component;
  set component(String component) => _$this._component = component;

  int _actTime;
  int get actTime => _$this._actTime;
  set actTime(int actTime) => _$this._actTime = actTime;

  int _deactTime;
  int get deactTime => _$this._deactTime;
  set deactTime(int deactTime) => _$this._deactTime = deactTime;

  EntityInfoBuilder();

  EntityInfoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _label = _$v.label;
      _component = _$v.component;
      _actTime = _$v.actTime;
      _deactTime = _$v.deactTime;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityInfo other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EntityInfo;
  }

  @override
  void update(void updates(EntityInfoBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityInfo build() {
    final _$result = _$v ??
        new _$EntityInfo._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            label: label ?? '',
            component: component ?? '',
            actTime: actTime ?? 0,
            deactTime: deactTime ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Query Entity Information immutable class
///
class _$QueryEntityInfo extends QueryEntityInfo {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;

  factory _$QueryEntityInfo([void updates(QueryEntityInfoBuilder b)]) =>
      (new QueryEntityInfoBuilder()..update(updates)).build();

  _$QueryEntityInfo._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id})
      : super._();

  @override
  QueryEntityInfo rebuild(void updates(QueryEntityInfoBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryEntityInfoBuilder toBuilder() => new QueryEntityInfoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryEntityInfo &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        id?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryEntityInfo')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', id))
        .toString();
  }
}

/// Query Entity Information builder class
///
class QueryEntityInfoBuilder implements Builder<QueryEntityInfo, QueryEntityInfoBuilder>, ImcBuilderHeaderPart {
  _$QueryEntityInfo _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  QueryEntityInfoBuilder();

  QueryEntityInfoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryEntityInfo other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$QueryEntityInfo;
  }

  @override
  void update(void updates(QueryEntityInfoBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryEntityInfo build() {
    final _$result = _$v ??
        new _$QueryEntityInfo._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Entity List immutable class
///
class _$EntityList extends EntityList {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EntityListEnumOp op;
  @override
  final String list;

  factory _$EntityList([void updates(EntityListBuilder b)]) =>
      (new EntityListBuilder()..update(updates)).build();

  _$EntityList._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.list})
      : super._();

  @override
  EntityList rebuild(void updates(EntityListBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityListBuilder toBuilder() => new EntityListBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityList &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        list == this.list;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        list?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityList')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('list', list))
        .toString();
  }
}

/// Entity List builder class
///
class EntityListBuilder implements Builder<EntityList, EntityListBuilder>, ImcBuilderHeaderPart {
  _$EntityList _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EntityListEnumOp _op;
  EntityListEnumOp get op => _$this._op;
  set op(EntityListEnumOp op) => _$this._op = op;

  String _list;
  String get list => _$this._list;
  set list(String list) => _$this._list = list;

  EntityListBuilder();

  EntityListBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _list = _$v.list;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityList other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EntityList;
  }

  @override
  void update(void updates(EntityListBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityList build() {
    final _$result = _$v ??
        new _$EntityList._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? EntityListEnumOp(0),
            list: list ?? '');
    replace(_$result);
    return _$result;
  }
}

/// CPU Usage immutable class
///
class _$CpuUsage extends CpuUsage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int value;

  factory _$CpuUsage([void updates(CpuUsageBuilder b)]) =>
      (new CpuUsageBuilder()..update(updates)).build();

  _$CpuUsage._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  CpuUsage rebuild(void updates(CpuUsageBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CpuUsageBuilder toBuilder() => new CpuUsageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CpuUsage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CpuUsage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// CPU Usage builder class
///
class CpuUsageBuilder implements Builder<CpuUsage, CpuUsageBuilder>, ImcBuilderHeaderPart {
  _$CpuUsage _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _value;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  CpuUsageBuilder();

  CpuUsageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CpuUsage other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CpuUsage;
  }

  @override
  void update(void updates(CpuUsageBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CpuUsage build() {
    final _$result = _$v ??
        new _$CpuUsage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Transport Bindings immutable class
///
class _$TransportBindings extends TransportBindings {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String consumer;
  @override
  final int messageId;

  factory _$TransportBindings([void updates(TransportBindingsBuilder b)]) =>
      (new TransportBindingsBuilder()..update(updates)).build();

  _$TransportBindings._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.consumer,
      this.messageId})
      : super._();

  @override
  TransportBindings rebuild(void updates(TransportBindingsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TransportBindingsBuilder toBuilder() => new TransportBindingsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TransportBindings &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        consumer == this.consumer &&
        messageId == this.messageId;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        consumer?.hashCode), 
        messageId?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TransportBindings')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('consumer', consumer)
          ..add('messageId', messageId))
        .toString();
  }
}

/// Transport Bindings builder class
///
class TransportBindingsBuilder implements Builder<TransportBindings, TransportBindingsBuilder>, ImcBuilderHeaderPart {
  _$TransportBindings _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _consumer;
  String get consumer => _$this._consumer;
  set consumer(String consumer) => _$this._consumer = consumer;

  int _messageId;
  int get messageId => _$this._messageId;
  set messageId(int messageId) => _$this._messageId = messageId;

  TransportBindingsBuilder();

  TransportBindingsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _consumer = _$v.consumer;
      _messageId = _$v.messageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TransportBindings other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TransportBindings;
  }

  @override
  void update(void updates(TransportBindingsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TransportBindings build() {
    final _$result = _$v ??
        new _$TransportBindings._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            consumer: consumer ?? '',
            messageId: messageId ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Restart System immutable class
///
class _$RestartSystem extends RestartSystem {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final RestartSystemEnumType type;

  factory _$RestartSystem([void updates(RestartSystemBuilder b)]) =>
      (new RestartSystemBuilder()..update(updates)).build();

  _$RestartSystem._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type})
      : super._();

  @override
  RestartSystem rebuild(void updates(RestartSystemBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RestartSystemBuilder toBuilder() => new RestartSystemBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RestartSystem &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RestartSystem')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type))
        .toString();
  }
}

/// Restart System builder class
///
class RestartSystemBuilder implements Builder<RestartSystem, RestartSystemBuilder>, ImcBuilderHeaderPart {
  _$RestartSystem _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  RestartSystemEnumType _type;
  RestartSystemEnumType get type => _$this._type;
  set type(RestartSystemEnumType type) => _$this._type = type;

  RestartSystemBuilder();

  RestartSystemBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RestartSystem other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RestartSystem;
  }

  @override
  void update(void updates(RestartSystemBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RestartSystem build() {
    final _$result = _$v ??
        new _$RestartSystem._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? RestartSystemEnumType(0));
    replace(_$result);
    return _$result;
  }
}

/// Device Calibration Control immutable class
///
class _$DevCalibrationControl extends DevCalibrationControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DevCalibrationControlEnumOp op;

  factory _$DevCalibrationControl([void updates(DevCalibrationControlBuilder b)]) =>
      (new DevCalibrationControlBuilder()..update(updates)).build();

  _$DevCalibrationControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op})
      : super._();

  @override
  DevCalibrationControl rebuild(void updates(DevCalibrationControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DevCalibrationControlBuilder toBuilder() => new DevCalibrationControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DevCalibrationControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DevCalibrationControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op))
        .toString();
  }
}

/// Device Calibration Control builder class
///
class DevCalibrationControlBuilder implements Builder<DevCalibrationControl, DevCalibrationControlBuilder>, ImcBuilderHeaderPart {
  _$DevCalibrationControl _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DevCalibrationControlEnumOp _op;
  DevCalibrationControlEnumOp get op => _$this._op;
  set op(DevCalibrationControlEnumOp op) => _$this._op = op;

  DevCalibrationControlBuilder();

  DevCalibrationControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DevCalibrationControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DevCalibrationControl;
  }

  @override
  void update(void updates(DevCalibrationControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DevCalibrationControl build() {
    final _$result = _$v ??
        new _$DevCalibrationControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? DevCalibrationControlEnumOp(0));
    replace(_$result);
    return _$result;
  }
}

/// Device Calibration State immutable class
///
class _$DevCalibrationState extends DevCalibrationState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int totalSteps;
  @override
  final int stepNumber;
  @override
  final String step;
  @override
  final DevCalibrationStateBitfieldFlags flags;

  factory _$DevCalibrationState([void updates(DevCalibrationStateBuilder b)]) =>
      (new DevCalibrationStateBuilder()..update(updates)).build();

  _$DevCalibrationState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.totalSteps,
      this.stepNumber,
      this.step,
      this.flags})
      : super._();

  @override
  DevCalibrationState rebuild(void updates(DevCalibrationStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DevCalibrationStateBuilder toBuilder() => new DevCalibrationStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DevCalibrationState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        totalSteps == this.totalSteps &&
        stepNumber == this.stepNumber &&
        step == this.step &&
        flags == this.flags;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        totalSteps?.hashCode), 
        stepNumber?.hashCode), 
        step?.hashCode), 
        flags?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DevCalibrationState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('totalSteps', totalSteps)
          ..add('stepNumber', stepNumber)
          ..add('step', step)
          ..add('flags', flags))
        .toString();
  }
}

/// Device Calibration State builder class
///
class DevCalibrationStateBuilder implements Builder<DevCalibrationState, DevCalibrationStateBuilder>, ImcBuilderHeaderPart {
  _$DevCalibrationState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _totalSteps;
  int get totalSteps => _$this._totalSteps;
  set totalSteps(int totalSteps) => _$this._totalSteps = totalSteps;

  int _stepNumber;
  int get stepNumber => _$this._stepNumber;
  set stepNumber(int stepNumber) => _$this._stepNumber = stepNumber;

  String _step;
  String get step => _$this._step;
  set step(String step) => _$this._step = step;

  DevCalibrationStateBitfieldFlags _flags;
  DevCalibrationStateBitfieldFlags get flags => _$this._flags;
  set flags(DevCalibrationStateBitfieldFlags flags) => _$this._flags = flags;

  DevCalibrationStateBuilder();

  DevCalibrationStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _totalSteps = _$v.totalSteps;
      _stepNumber = _$v.stepNumber;
      _step = _$v.step;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DevCalibrationState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DevCalibrationState;
  }

  @override
  void update(void updates(DevCalibrationStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DevCalibrationState build() {
    final _$result = _$v ??
        new _$DevCalibrationState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            totalSteps: totalSteps ?? 0,
            stepNumber: stepNumber ?? 0,
            step: step ?? '',
            flags: flags ?? DevCalibrationStateBitfieldFlags(0));
    replace(_$result);
    return _$result;
  }
}

/// Entity Activation State immutable class
///
class _$EntityActivationState extends EntityActivationState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EntityActivationStateEnumState state;
  @override
  final String error;

  factory _$EntityActivationState([void updates(EntityActivationStateBuilder b)]) =>
      (new EntityActivationStateBuilder()..update(updates)).build();

  _$EntityActivationState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state,
      this.error})
      : super._();

  @override
  EntityActivationState rebuild(void updates(EntityActivationStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityActivationStateBuilder toBuilder() => new EntityActivationStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityActivationState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state &&
        error == this.error;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        state?.hashCode), 
        error?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityActivationState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', state)
          ..add('error', error))
        .toString();
  }
}

/// Entity Activation State builder class
///
class EntityActivationStateBuilder implements Builder<EntityActivationState, EntityActivationStateBuilder>, ImcBuilderHeaderPart {
  _$EntityActivationState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EntityActivationStateEnumState _state;
  EntityActivationStateEnumState get state => _$this._state;
  set state(EntityActivationStateEnumState state) => _$this._state = state;

  String _error;
  String get error => _$this._error;
  set error(String error) => _$this._error = error;

  EntityActivationStateBuilder();

  EntityActivationStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _error = _$v.error;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityActivationState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EntityActivationState;
  }

  @override
  void update(void updates(EntityActivationStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityActivationState build() {
    final _$result = _$v ??
        new _$EntityActivationState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? EntityActivationStateEnumState(0),
            error: error ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Query Entity Activation State immutable class
///
class _$QueryEntityActivationState extends QueryEntityActivationState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$QueryEntityActivationState([void updates(QueryEntityActivationStateBuilder b)]) =>
      (new QueryEntityActivationStateBuilder()..update(updates)).build();

  _$QueryEntityActivationState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  QueryEntityActivationState rebuild(void updates(QueryEntityActivationStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryEntityActivationStateBuilder toBuilder() => new QueryEntityActivationStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryEntityActivationState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryEntityActivationState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Query Entity Activation State builder class
///
class QueryEntityActivationStateBuilder implements Builder<QueryEntityActivationState, QueryEntityActivationStateBuilder>, ImcBuilderHeaderPart {
  _$QueryEntityActivationState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  QueryEntityActivationStateBuilder();

  QueryEntityActivationStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryEntityActivationState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$QueryEntityActivationState;
  }

  @override
  void update(void updates(QueryEntityActivationStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryEntityActivationState build() {
    final _$result = _$v ??
        new _$QueryEntityActivationState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Operational Limits immutable class
///
class _$VehicleOperationalLimits extends VehicleOperationalLimits {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VehicleOperationalLimitsEnumOp op;
  @override
  final double speedMin;
  @override
  final double speedMax;
  @override
  final double longAccel;
  @override
  final double altMaxMsl;
  @override
  final double diveFractionMax;
  @override
  final double climbFractionMax;
  @override
  final double bankMax;
  @override
  final double pMax;
  @override
  final double pitchMin;
  @override
  final double pitchMax;
  @override
  final double qMax;
  @override
  final double gMin;
  @override
  final double gMax;
  @override
  final double gLatMax;
  @override
  final double rpmMin;
  @override
  final double rpmMax;
  @override
  final double rpmRateMax;

  factory _$VehicleOperationalLimits([void updates(VehicleOperationalLimitsBuilder b)]) =>
      (new VehicleOperationalLimitsBuilder()..update(updates)).build();

  _$VehicleOperationalLimits._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.speedMin,
      this.speedMax,
      this.longAccel,
      this.altMaxMsl,
      this.diveFractionMax,
      this.climbFractionMax,
      this.bankMax,
      this.pMax,
      this.pitchMin,
      this.pitchMax,
      this.qMax,
      this.gMin,
      this.gMax,
      this.gLatMax,
      this.rpmMin,
      this.rpmMax,
      this.rpmRateMax})
      : super._();

  @override
  VehicleOperationalLimits rebuild(void updates(VehicleOperationalLimitsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleOperationalLimitsBuilder toBuilder() => new VehicleOperationalLimitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleOperationalLimits &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        speedMin == this.speedMin &&
        speedMax == this.speedMax &&
        longAccel == this.longAccel &&
        altMaxMsl == this.altMaxMsl &&
        diveFractionMax == this.diveFractionMax &&
        climbFractionMax == this.climbFractionMax &&
        bankMax == this.bankMax &&
        pMax == this.pMax &&
        pitchMin == this.pitchMin &&
        pitchMax == this.pitchMax &&
        qMax == this.qMax &&
        gMin == this.gMin &&
        gMax == this.gMax &&
        gLatMax == this.gLatMax &&
        rpmMin == this.rpmMin &&
        rpmMax == this.rpmMax &&
        rpmRateMax == this.rpmRateMax;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        speedMin?.hashCode), 
        speedMax?.hashCode), 
        longAccel?.hashCode), 
        altMaxMsl?.hashCode), 
        diveFractionMax?.hashCode), 
        climbFractionMax?.hashCode), 
        bankMax?.hashCode), 
        pMax?.hashCode), 
        pitchMin?.hashCode), 
        pitchMax?.hashCode), 
        qMax?.hashCode), 
        gMin?.hashCode), 
        gMax?.hashCode), 
        gLatMax?.hashCode), 
        rpmMin?.hashCode), 
        rpmMax?.hashCode), 
        rpmRateMax?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleOperationalLimits')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('speedMin', speedMin)
          ..add('speedMax', speedMax)
          ..add('longAccel', longAccel)
          ..add('altMaxMsl', altMaxMsl)
          ..add('diveFractionMax', diveFractionMax)
          ..add('climbFractionMax', climbFractionMax)
          ..add('bankMax', bankMax)
          ..add('pMax', pMax)
          ..add('pitchMin', pitchMin)
          ..add('pitchMax', pitchMax)
          ..add('qMax', qMax)
          ..add('gMin', gMin)
          ..add('gMax', gMax)
          ..add('gLatMax', gLatMax)
          ..add('rpmMin', rpmMin)
          ..add('rpmMax', rpmMax)
          ..add('rpmRateMax', rpmRateMax))
        .toString();
  }
}

/// Vehicle Operational Limits builder class
///
class VehicleOperationalLimitsBuilder implements Builder<VehicleOperationalLimits, VehicleOperationalLimitsBuilder>, ImcBuilderHeaderPart {
  _$VehicleOperationalLimits _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VehicleOperationalLimitsEnumOp _op;
  VehicleOperationalLimitsEnumOp get op => _$this._op;
  set op(VehicleOperationalLimitsEnumOp op) => _$this._op = op;

  double _speedMin;
  double get speedMin => _$this._speedMin;
  set speedMin(double speedMin) => _$this._speedMin = speedMin;

  double _speedMax;
  double get speedMax => _$this._speedMax;
  set speedMax(double speedMax) => _$this._speedMax = speedMax;

  double _longAccel;
  double get longAccel => _$this._longAccel;
  set longAccel(double longAccel) => _$this._longAccel = longAccel;

  double _altMaxMsl;
  double get altMaxMsl => _$this._altMaxMsl;
  set altMaxMsl(double altMaxMsl) => _$this._altMaxMsl = altMaxMsl;

  double _diveFractionMax;
  double get diveFractionMax => _$this._diveFractionMax;
  set diveFractionMax(double diveFractionMax) => _$this._diveFractionMax = diveFractionMax;

  double _climbFractionMax;
  double get climbFractionMax => _$this._climbFractionMax;
  set climbFractionMax(double climbFractionMax) => _$this._climbFractionMax = climbFractionMax;

  double _bankMax;
  double get bankMax => _$this._bankMax;
  set bankMax(double bankMax) => _$this._bankMax = bankMax;

  double _pMax;
  double get pMax => _$this._pMax;
  set pMax(double pMax) => _$this._pMax = pMax;

  double _pitchMin;
  double get pitchMin => _$this._pitchMin;
  set pitchMin(double pitchMin) => _$this._pitchMin = pitchMin;

  double _pitchMax;
  double get pitchMax => _$this._pitchMax;
  set pitchMax(double pitchMax) => _$this._pitchMax = pitchMax;

  double _qMax;
  double get qMax => _$this._qMax;
  set qMax(double qMax) => _$this._qMax = qMax;

  double _gMin;
  double get gMin => _$this._gMin;
  set gMin(double gMin) => _$this._gMin = gMin;

  double _gMax;
  double get gMax => _$this._gMax;
  set gMax(double gMax) => _$this._gMax = gMax;

  double _gLatMax;
  double get gLatMax => _$this._gLatMax;
  set gLatMax(double gLatMax) => _$this._gLatMax = gLatMax;

  double _rpmMin;
  double get rpmMin => _$this._rpmMin;
  set rpmMin(double rpmMin) => _$this._rpmMin = rpmMin;

  double _rpmMax;
  double get rpmMax => _$this._rpmMax;
  set rpmMax(double rpmMax) => _$this._rpmMax = rpmMax;

  double _rpmRateMax;
  double get rpmRateMax => _$this._rpmRateMax;
  set rpmRateMax(double rpmRateMax) => _$this._rpmRateMax = rpmRateMax;

  VehicleOperationalLimitsBuilder();

  VehicleOperationalLimitsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _speedMin = _$v.speedMin;
      _speedMax = _$v.speedMax;
      _longAccel = _$v.longAccel;
      _altMaxMsl = _$v.altMaxMsl;
      _diveFractionMax = _$v.diveFractionMax;
      _climbFractionMax = _$v.climbFractionMax;
      _bankMax = _$v.bankMax;
      _pMax = _$v.pMax;
      _pitchMin = _$v.pitchMin;
      _pitchMax = _$v.pitchMax;
      _qMax = _$v.qMax;
      _gMin = _$v.gMin;
      _gMax = _$v.gMax;
      _gLatMax = _$v.gLatMax;
      _rpmMin = _$v.rpmMin;
      _rpmMax = _$v.rpmMax;
      _rpmRateMax = _$v.rpmRateMax;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleOperationalLimits other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleOperationalLimits;
  }

  @override
  void update(void updates(VehicleOperationalLimitsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleOperationalLimits build() {
    final _$result = _$v ??
        new _$VehicleOperationalLimits._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? VehicleOperationalLimitsEnumOp(0),
            speedMin: speedMin ?? 0,
            speedMax: speedMax ?? 0,
            longAccel: longAccel ?? 0,
            altMaxMsl: altMaxMsl ?? 0,
            diveFractionMax: diveFractionMax ?? 0,
            climbFractionMax: climbFractionMax ?? 0,
            bankMax: bankMax ?? 0,
            pMax: pMax ?? 0,
            pitchMin: pitchMin ?? 0,
            pitchMax: pitchMax ?? 0,
            qMax: qMax ?? 0,
            gMin: gMin ?? 0,
            gMax: gMax ?? 0,
            gLatMax: gLatMax ?? 0,
            rpmMin: rpmMin ?? 0,
            rpmMax: rpmMax ?? 0,
            rpmRateMax: rpmRateMax ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Message List immutable class
///
class _$MsgList extends MsgList {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final List<ImcMessage> msgs;

  factory _$MsgList([void updates(MsgListBuilder b)]) =>
      (new MsgListBuilder()..update(updates)).build();

  _$MsgList._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.msgs})
      : super._();

  @override
  MsgList rebuild(void updates(MsgListBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MsgListBuilder toBuilder() => new MsgListBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MsgList &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        msgs == this.msgs;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        msgs?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MsgList')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('msgs', msgs))
        .toString();
  }
}

/// Message List builder class
///
class MsgListBuilder implements Builder<MsgList, MsgListBuilder>, ImcBuilderHeaderPart {
  _$MsgList _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  List<ImcMessage> _msgs;
  List<ImcMessage> get msgs => _$this._msgs;
  set msgs(List<ImcMessage> msgs) => _$this._msgs = msgs;

  MsgListBuilder();

  MsgListBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _msgs = _$v.msgs;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MsgList other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$MsgList;
  }

  @override
  void update(void updates(MsgListBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$MsgList build() {
    final _$result = _$v ??
        new _$MsgList._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            msgs: msgs ?? List<ImcMessage>(0));
    replace(_$result);
    return _$result;
  }
}

/// Simulated State immutable class
///
class _$SimulatedState extends SimulatedState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double u;
  @override
  final double v;
  @override
  final double w;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final double svx;
  @override
  final double svy;
  @override
  final double svz;

  factory _$SimulatedState([void updates(SimulatedStateBuilder b)]) =>
      (new SimulatedStateBuilder()..update(updates)).build();

  _$SimulatedState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.height,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi,
      this.u,
      this.v,
      this.w,
      this.p,
      this.q,
      this.r,
      this.svx,
      this.svy,
      this.svz})
      : super._();

  @override
  SimulatedState rebuild(void updates(SimulatedStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SimulatedStateBuilder toBuilder() => new SimulatedStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SimulatedState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        height == this.height &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi &&
        u == this.u &&
        v == this.v &&
        w == this.w &&
        p == this.p &&
        q == this.q &&
        r == this.r &&
        svx == this.svx &&
        svy == this.svy &&
        svz == this.svz;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        height?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode), 
        phi?.hashCode), 
        theta?.hashCode), 
        psi?.hashCode), 
        u?.hashCode), 
        v?.hashCode), 
        w?.hashCode), 
        p?.hashCode), 
        q?.hashCode), 
        r?.hashCode), 
        svx?.hashCode), 
        svy?.hashCode), 
        svz?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SimulatedState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('height', height)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi)
          ..add('u', u)
          ..add('v', v)
          ..add('w', w)
          ..add('p', p)
          ..add('q', q)
          ..add('r', r)
          ..add('svx', svx)
          ..add('svy', svy)
          ..add('svz', svz))
        .toString();
  }
}

/// Simulated State builder class
///
class SimulatedStateBuilder implements Builder<SimulatedState, SimulatedStateBuilder>, ImcBuilderHeaderPart {
  _$SimulatedState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _u;
  double get u => _$this._u;
  set u(double u) => _$this._u = u;

  double _v;
  double get v => _$this._v;
  set v(double v) => _$this._v = v;

  double _w;
  double get w => _$this._w;
  set w(double w) => _$this._w = w;

  double _p;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  double _svx;
  double get svx => _$this._svx;
  set svx(double svx) => _$this._svx = svx;

  double _svy;
  double get svy => _$this._svy;
  set svy(double svy) => _$this._svy = svy;

  double _svz;
  double get svz => _$this._svz;
  set svz(double svz) => _$this._svz = svz;

  SimulatedStateBuilder();

  SimulatedStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _u = _$v.u;
      _v = _$v.v;
      _w = _$v.w;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _svx = _$v.svx;
      _svy = _$v.svy;
      _svz = _$v.svz;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SimulatedState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SimulatedState;
  }

  @override
  void update(void updates(SimulatedStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SimulatedState build() {
    final _$result = _$v ??
        new _$SimulatedState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            height: height ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0,
            u: u ?? 0,
            v: v ?? 0,
            w: w ?? 0,
            p: p ?? 0,
            q: q ?? 0,
            r: r ?? 0,
            svx: svx ?? 0,
            svy: svy ?? 0,
            svz: svz ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Leak Simulation immutable class
///
class _$LeakSimulation extends LeakSimulation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LeakSimulationEnumOp op;
  @override
  final String entities;

  factory _$LeakSimulation([void updates(LeakSimulationBuilder b)]) =>
      (new LeakSimulationBuilder()..update(updates)).build();

  _$LeakSimulation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.entities})
      : super._();

  @override
  LeakSimulation rebuild(void updates(LeakSimulationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LeakSimulationBuilder toBuilder() => new LeakSimulationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LeakSimulation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        entities == this.entities;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        entities?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LeakSimulation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('entities', entities))
        .toString();
  }
}

/// Leak Simulation builder class
///
class LeakSimulationBuilder implements Builder<LeakSimulation, LeakSimulationBuilder>, ImcBuilderHeaderPart {
  _$LeakSimulation _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LeakSimulationEnumOp _op;
  LeakSimulationEnumOp get op => _$this._op;
  set op(LeakSimulationEnumOp op) => _$this._op = op;

  String _entities;
  String get entities => _$this._entities;
  set entities(String entities) => _$this._entities = entities;

  LeakSimulationBuilder();

  LeakSimulationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _entities = _$v.entities;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LeakSimulation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LeakSimulation;
  }

  @override
  void update(void updates(LeakSimulationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LeakSimulation build() {
    final _$result = _$v ??
        new _$LeakSimulation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? LeakSimulationEnumOp(0),
            entities: entities ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Underwater Acoustics Simulation immutable class
///
class _$UASimulation extends UASimulation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final UASimulationEnumType type;
  @override
  final int speed;
  @override
  final List<int> data;

  factory _$UASimulation([void updates(UASimulationBuilder b)]) =>
      (new UASimulationBuilder()..update(updates)).build();

  _$UASimulation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.speed,
      this.data})
      : super._();

  @override
  UASimulation rebuild(void updates(UASimulationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UASimulationBuilder toBuilder() => new UASimulationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UASimulation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        speed == this.speed &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode), 
        speed?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UASimulation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type)
          ..add('speed', speed)
          ..add('data', data))
        .toString();
  }
}

/// Underwater Acoustics Simulation builder class
///
class UASimulationBuilder implements Builder<UASimulation, UASimulationBuilder>, ImcBuilderHeaderPart {
  _$UASimulation _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  UASimulationEnumType _type;
  UASimulationEnumType get type => _$this._type;
  set type(UASimulationEnumType type) => _$this._type = type;

  int _speed;
  int get speed => _$this._speed;
  set speed(int speed) => _$this._speed = speed;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  UASimulationBuilder();

  UASimulationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _speed = _$v.speed;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UASimulation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UASimulation;
  }

  @override
  void update(void updates(UASimulationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UASimulation build() {
    final _$result = _$v ??
        new _$UASimulation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? UASimulationEnumType(0),
            speed: speed ?? 0,
            data: data ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// Dynamics Simulation Parameters immutable class
///
class _$DynamicsSimParam extends DynamicsSimParam {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DynamicsSimParamEnumOp op;
  @override
  final double tas2accPgain;
  @override
  final double bank2pPgain;

  factory _$DynamicsSimParam([void updates(DynamicsSimParamBuilder b)]) =>
      (new DynamicsSimParamBuilder()..update(updates)).build();

  _$DynamicsSimParam._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.tas2accPgain,
      this.bank2pPgain})
      : super._();

  @override
  DynamicsSimParam rebuild(void updates(DynamicsSimParamBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DynamicsSimParamBuilder toBuilder() => new DynamicsSimParamBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DynamicsSimParam &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        tas2accPgain == this.tas2accPgain &&
        bank2pPgain == this.bank2pPgain;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        tas2accPgain?.hashCode), 
        bank2pPgain?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DynamicsSimParam')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('tas2accPgain', tas2accPgain)
          ..add('bank2pPgain', bank2pPgain))
        .toString();
  }
}

/// Dynamics Simulation Parameters builder class
///
class DynamicsSimParamBuilder implements Builder<DynamicsSimParam, DynamicsSimParamBuilder>, ImcBuilderHeaderPart {
  _$DynamicsSimParam _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DynamicsSimParamEnumOp _op;
  DynamicsSimParamEnumOp get op => _$this._op;
  set op(DynamicsSimParamEnumOp op) => _$this._op = op;

  double _tas2accPgain;
  double get tas2accPgain => _$this._tas2accPgain;
  set tas2accPgain(double tas2accPgain) => _$this._tas2accPgain = tas2accPgain;

  double _bank2pPgain;
  double get bank2pPgain => _$this._bank2pPgain;
  set bank2pPgain(double bank2pPgain) => _$this._bank2pPgain = bank2pPgain;

  DynamicsSimParamBuilder();

  DynamicsSimParamBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _tas2accPgain = _$v.tas2accPgain;
      _bank2pPgain = _$v.bank2pPgain;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DynamicsSimParam other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DynamicsSimParam;
  }

  @override
  void update(void updates(DynamicsSimParamBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DynamicsSimParam build() {
    final _$result = _$v ??
        new _$DynamicsSimParam._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? DynamicsSimParamEnumOp(0),
            tas2accPgain: tas2accPgain ?? 0,
            bank2pPgain: bank2pPgain ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Storage Usage immutable class
///
class _$StorageUsage extends StorageUsage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int available;
  @override
  final int value;

  factory _$StorageUsage([void updates(StorageUsageBuilder b)]) =>
      (new StorageUsageBuilder()..update(updates)).build();

  _$StorageUsage._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.available,
      this.value})
      : super._();

  @override
  StorageUsage rebuild(void updates(StorageUsageBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  StorageUsageBuilder toBuilder() => new StorageUsageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StorageUsage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        available == this.available &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        available?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StorageUsage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('available', available)
          ..add('value', value))
        .toString();
  }
}

/// Storage Usage builder class
///
class StorageUsageBuilder implements Builder<StorageUsage, StorageUsageBuilder>, ImcBuilderHeaderPart {
  _$StorageUsage _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _available;
  int get available => _$this._available;
  set available(int available) => _$this._available = available;

  int _value;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  StorageUsageBuilder();

  StorageUsageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _available = _$v.available;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StorageUsage other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$StorageUsage;
  }

  @override
  void update(void updates(StorageUsageBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$StorageUsage build() {
    final _$result = _$v ??
        new _$StorageUsage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            available: available ?? 0,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Cache Control immutable class
///
class _$CacheControl extends CacheControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final CacheControlEnumOp op;
  @override
  final String snapshot;
  @override
  final ImcMessage message;

  factory _$CacheControl([void updates(CacheControlBuilder b)]) =>
      (new CacheControlBuilder()..update(updates)).build();

  _$CacheControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.snapshot,
      this.message})
      : super._();

  @override
  CacheControl rebuild(void updates(CacheControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CacheControlBuilder toBuilder() => new CacheControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CacheControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        snapshot == this.snapshot &&
        message == this.message;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        snapshot?.hashCode), 
        message?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CacheControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('snapshot', snapshot)
          ..add('message', message))
        .toString();
  }
}

/// Cache Control builder class
///
class CacheControlBuilder implements Builder<CacheControl, CacheControlBuilder>, ImcBuilderHeaderPart {
  _$CacheControl _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  CacheControlEnumOp _op;
  CacheControlEnumOp get op => _$this._op;
  set op(CacheControlEnumOp op) => _$this._op = op;

  String _snapshot;
  String get snapshot => _$this._snapshot;
  set snapshot(String snapshot) => _$this._snapshot = snapshot;

  ImcMessage _message;
  ImcMessage get message => _$this._message;
  set message(ImcMessage message) => _$this._message = message;

  CacheControlBuilder();

  CacheControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _snapshot = _$v.snapshot;
      _message = _$v.message;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CacheControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CacheControl;
  }

  @override
  void update(void updates(CacheControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CacheControl build() {
    final _$result = _$v ??
        new _$CacheControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? CacheControlEnumOp(0),
            snapshot: snapshot ?? '',
            message: message);
    replace(_$result);
    return _$result;
  }
}

/// Logging Control immutable class
///
class _$LoggingControl extends LoggingControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LoggingControlEnumOp op;
  @override
  final String name;

  factory _$LoggingControl([void updates(LoggingControlBuilder b)]) =>
      (new LoggingControlBuilder()..update(updates)).build();

  _$LoggingControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.name})
      : super._();

  @override
  LoggingControl rebuild(void updates(LoggingControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LoggingControlBuilder toBuilder() => new LoggingControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LoggingControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        name == this.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        name?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LoggingControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('name', name))
        .toString();
  }
}

/// Logging Control builder class
///
class LoggingControlBuilder implements Builder<LoggingControl, LoggingControlBuilder>, ImcBuilderHeaderPart {
  _$LoggingControl _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LoggingControlEnumOp _op;
  LoggingControlEnumOp get op => _$this._op;
  set op(LoggingControlEnumOp op) => _$this._op = op;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  LoggingControlBuilder();

  LoggingControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LoggingControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LoggingControl;
  }

  @override
  void update(void updates(LoggingControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LoggingControl build() {
    final _$result = _$v ??
        new _$LoggingControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? LoggingControlEnumOp(0),
            name: name ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Log Book Entry immutable class
///
class _$LogBookEntry extends LogBookEntry {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LogBookEntryEnumType type;
  @override
  final double htime;
  @override
  final String context;
  @override
  final String text;

  factory _$LogBookEntry([void updates(LogBookEntryBuilder b)]) =>
      (new LogBookEntryBuilder()..update(updates)).build();

  _$LogBookEntry._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.htime,
      this.context,
      this.text})
      : super._();

  @override
  LogBookEntry rebuild(void updates(LogBookEntryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LogBookEntryBuilder toBuilder() => new LogBookEntryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LogBookEntry &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        htime == this.htime &&
        context == this.context &&
        text == this.text;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode), 
        htime?.hashCode), 
        context?.hashCode), 
        text?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LogBookEntry')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type)
          ..add('htime', htime)
          ..add('context', context)
          ..add('text', text))
        .toString();
  }
}

/// Log Book Entry builder class
///
class LogBookEntryBuilder implements Builder<LogBookEntry, LogBookEntryBuilder>, ImcBuilderHeaderPart {
  _$LogBookEntry _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LogBookEntryEnumType _type;
  LogBookEntryEnumType get type => _$this._type;
  set type(LogBookEntryEnumType type) => _$this._type = type;

  double _htime;
  double get htime => _$this._htime;
  set htime(double htime) => _$this._htime = htime;

  String _context;
  String get context => _$this._context;
  set context(String context) => _$this._context = context;

  String _text;
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  LogBookEntryBuilder();

  LogBookEntryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _htime = _$v.htime;
      _context = _$v.context;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LogBookEntry other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LogBookEntry;
  }

  @override
  void update(void updates(LogBookEntryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LogBookEntry build() {
    final _$result = _$v ??
        new _$LogBookEntry._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? LogBookEntryEnumType(0),
            htime: htime ?? 0,
            context: context ?? '',
            text: text ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Log Book Control immutable class
///
class _$LogBookControl extends LogBookControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LogBookControlEnumCommand command;
  @override
  final double htime;
  @override
  final List<LogBookEntry> msg;

  factory _$LogBookControl([void updates(LogBookControlBuilder b)]) =>
      (new LogBookControlBuilder()..update(updates)).build();

  _$LogBookControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.command,
      this.htime,
      this.msg})
      : super._();

  @override
  LogBookControl rebuild(void updates(LogBookControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LogBookControlBuilder toBuilder() => new LogBookControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LogBookControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        command == this.command &&
        htime == this.htime &&
        msg == this.msg;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        command?.hashCode), 
        htime?.hashCode), 
        msg?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LogBookControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('command', command)
          ..add('htime', htime)
          ..add('msg', msg))
        .toString();
  }
}

/// Log Book Control builder class
///
class LogBookControlBuilder implements Builder<LogBookControl, LogBookControlBuilder>, ImcBuilderHeaderPart {
  _$LogBookControl _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LogBookControlEnumCommand _command;
  LogBookControlEnumCommand get command => _$this._command;
  set command(LogBookControlEnumCommand command) => _$this._command = command;

  double _htime;
  double get htime => _$this._htime;
  set htime(double htime) => _$this._htime = htime;

  List<LogBookEntry> _msg;
  List<LogBookEntry> get msg => _$this._msg;
  set msg(List<LogBookEntry> msg) => _$this._msg = msg;

  LogBookControlBuilder();

  LogBookControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _command = _$v.command;
      _htime = _$v.htime;
      _msg = _$v.msg;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LogBookControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LogBookControl;
  }

  @override
  void update(void updates(LogBookControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LogBookControl build() {
    final _$result = _$v ??
        new _$LogBookControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            command: command ?? LogBookControlEnumCommand(0),
            htime: htime ?? 0,
            msg: msg ?? List<LogBookEntry>(0));
    replace(_$result);
    return _$result;
  }
}

/// Replay Control immutable class
///
class _$ReplayControl extends ReplayControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ReplayControlEnumOp op;
  @override
  final String file;

  factory _$ReplayControl([void updates(ReplayControlBuilder b)]) =>
      (new ReplayControlBuilder()..update(updates)).build();

  _$ReplayControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.file})
      : super._();

  @override
  ReplayControl rebuild(void updates(ReplayControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ReplayControlBuilder toBuilder() => new ReplayControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ReplayControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        file == this.file;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        file?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ReplayControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('file', file))
        .toString();
  }
}

/// Replay Control builder class
///
class ReplayControlBuilder implements Builder<ReplayControl, ReplayControlBuilder>, ImcBuilderHeaderPart {
  _$ReplayControl _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ReplayControlEnumOp _op;
  ReplayControlEnumOp get op => _$this._op;
  set op(ReplayControlEnumOp op) => _$this._op = op;

  String _file;
  String get file => _$this._file;
  set file(String file) => _$this._file = file;

  ReplayControlBuilder();

  ReplayControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _file = _$v.file;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ReplayControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ReplayControl;
  }

  @override
  void update(void updates(ReplayControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ReplayControl build() {
    final _$result = _$v ??
        new _$ReplayControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? ReplayControlEnumOp(0),
            file: file ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Clock Control immutable class
///
class _$ClockControl extends ClockControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ClockControlEnumOp op;
  @override
  final double clock;
  @override
  final int tz;

  factory _$ClockControl([void updates(ClockControlBuilder b)]) =>
      (new ClockControlBuilder()..update(updates)).build();

  _$ClockControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.clock,
      this.tz})
      : super._();

  @override
  ClockControl rebuild(void updates(ClockControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ClockControlBuilder toBuilder() => new ClockControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ClockControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        clock == this.clock &&
        tz == this.tz;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        clock?.hashCode), 
        tz?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ClockControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('clock', clock)
          ..add('tz', tz))
        .toString();
  }
}

/// Clock Control builder class
///
class ClockControlBuilder implements Builder<ClockControl, ClockControlBuilder>, ImcBuilderHeaderPart {
  _$ClockControl _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ClockControlEnumOp _op;
  ClockControlEnumOp get op => _$this._op;
  set op(ClockControlEnumOp op) => _$this._op = op;

  double _clock;
  double get clock => _$this._clock;
  set clock(double clock) => _$this._clock = clock;

  int _tz;
  int get tz => _$this._tz;
  set tz(int tz) => _$this._tz = tz;

  ClockControlBuilder();

  ClockControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _clock = _$v.clock;
      _tz = _$v.tz;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ClockControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ClockControl;
  }

  @override
  void update(void updates(ClockControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ClockControl build() {
    final _$result = _$v ??
        new _$ClockControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? ClockControlEnumOp(0),
            clock: clock ?? 0,
            tz: tz ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Historic CTD immutable class
///
class _$HistoricCTD extends HistoricCTD {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double conductivity;
  @override
  final double temperature;
  @override
  final double depth;

  factory _$HistoricCTD([void updates(HistoricCTDBuilder b)]) =>
      (new HistoricCTDBuilder()..update(updates)).build();

  _$HistoricCTD._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.conductivity,
      this.temperature,
      this.depth})
      : super._();

  @override
  HistoricCTD rebuild(void updates(HistoricCTDBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricCTDBuilder toBuilder() => new HistoricCTDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricCTD &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        conductivity == this.conductivity &&
        temperature == this.temperature &&
        depth == this.depth;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        conductivity?.hashCode), 
        temperature?.hashCode), 
        depth?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricCTD')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('conductivity', conductivity)
          ..add('temperature', temperature)
          ..add('depth', depth))
        .toString();
  }
}

/// Historic CTD builder class
///
class HistoricCTDBuilder implements Builder<HistoricCTD, HistoricCTDBuilder>, ImcBuilderHeaderPart {
  _$HistoricCTD _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _conductivity;
  double get conductivity => _$this._conductivity;
  set conductivity(double conductivity) => _$this._conductivity = conductivity;

  double _temperature;
  double get temperature => _$this._temperature;
  set temperature(double temperature) => _$this._temperature = temperature;

  double _depth;
  double get depth => _$this._depth;
  set depth(double depth) => _$this._depth = depth;

  HistoricCTDBuilder();

  HistoricCTDBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _conductivity = _$v.conductivity;
      _temperature = _$v.temperature;
      _depth = _$v.depth;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricCTD other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricCTD;
  }

  @override
  void update(void updates(HistoricCTDBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricCTD build() {
    final _$result = _$v ??
        new _$HistoricCTD._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            conductivity: conductivity ?? 0,
            temperature: temperature ?? 0,
            depth: depth ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Historic Telemetry immutable class
///
class _$HistoricTelemetry extends HistoricTelemetry {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double altitude;
  @override
  final int roll;
  @override
  final int pitch;
  @override
  final int yaw;
  @override
  final int speed;

  factory _$HistoricTelemetry([void updates(HistoricTelemetryBuilder b)]) =>
      (new HistoricTelemetryBuilder()..update(updates)).build();

  _$HistoricTelemetry._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.altitude,
      this.roll,
      this.pitch,
      this.yaw,
      this.speed})
      : super._();

  @override
  HistoricTelemetry rebuild(void updates(HistoricTelemetryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricTelemetryBuilder toBuilder() => new HistoricTelemetryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricTelemetry &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        altitude == this.altitude &&
        roll == this.roll &&
        pitch == this.pitch &&
        yaw == this.yaw &&
        speed == this.speed;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        altitude?.hashCode), 
        roll?.hashCode), 
        pitch?.hashCode), 
        yaw?.hashCode), 
        speed?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricTelemetry')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('altitude', altitude)
          ..add('roll', roll)
          ..add('pitch', pitch)
          ..add('yaw', yaw)
          ..add('speed', speed))
        .toString();
  }
}

/// Historic Telemetry builder class
///
class HistoricTelemetryBuilder implements Builder<HistoricTelemetry, HistoricTelemetryBuilder>, ImcBuilderHeaderPart {
  _$HistoricTelemetry _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _altitude;
  double get altitude => _$this._altitude;
  set altitude(double altitude) => _$this._altitude = altitude;

  int _roll;
  int get roll => _$this._roll;
  set roll(int roll) => _$this._roll = roll;

  int _pitch;
  int get pitch => _$this._pitch;
  set pitch(int pitch) => _$this._pitch = pitch;

  int _yaw;
  int get yaw => _$this._yaw;
  set yaw(int yaw) => _$this._yaw = yaw;

  int _speed;
  int get speed => _$this._speed;
  set speed(int speed) => _$this._speed = speed;

  HistoricTelemetryBuilder();

  HistoricTelemetryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _altitude = _$v.altitude;
      _roll = _$v.roll;
      _pitch = _$v.pitch;
      _yaw = _$v.yaw;
      _speed = _$v.speed;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricTelemetry other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricTelemetry;
  }

  @override
  void update(void updates(HistoricTelemetryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricTelemetry build() {
    final _$result = _$v ??
        new _$HistoricTelemetry._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            altitude: altitude ?? 0,
            roll: roll ?? 0,
            pitch: pitch ?? 0,
            yaw: yaw ?? 0,
            speed: speed ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Historic Sonar Data immutable class
///
class _$HistoricSonarData extends HistoricSonarData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double altitude;
  @override
  final double width;
  @override
  final double length;
  @override
  final double bearing;
  @override
  final int pxl;
  @override
  final HistoricSonarDataEnumEncoding encoding;
  @override
  final List<int> sonarData;

  factory _$HistoricSonarData([void updates(HistoricSonarDataBuilder b)]) =>
      (new HistoricSonarDataBuilder()..update(updates)).build();

  _$HistoricSonarData._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.altitude,
      this.width,
      this.length,
      this.bearing,
      this.pxl,
      this.encoding,
      this.sonarData})
      : super._();

  @override
  HistoricSonarData rebuild(void updates(HistoricSonarDataBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricSonarDataBuilder toBuilder() => new HistoricSonarDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricSonarData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        altitude == this.altitude &&
        width == this.width &&
        length == this.length &&
        bearing == this.bearing &&
        pxl == this.pxl &&
        encoding == this.encoding &&
        sonarData == this.sonarData;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        altitude?.hashCode), 
        width?.hashCode), 
        length?.hashCode), 
        bearing?.hashCode), 
        pxl?.hashCode), 
        encoding?.hashCode), 
        sonarData?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricSonarData')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('altitude', altitude)
          ..add('width', width)
          ..add('length', length)
          ..add('bearing', bearing)
          ..add('pxl', pxl)
          ..add('encoding', encoding)
          ..add('sonarData', sonarData))
        .toString();
  }
}

/// Historic Sonar Data builder class
///
class HistoricSonarDataBuilder implements Builder<HistoricSonarData, HistoricSonarDataBuilder>, ImcBuilderHeaderPart {
  _$HistoricSonarData _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _altitude;
  double get altitude => _$this._altitude;
  set altitude(double altitude) => _$this._altitude = altitude;

  double _width;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  double _length;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  int _pxl;
  int get pxl => _$this._pxl;
  set pxl(int pxl) => _$this._pxl = pxl;

  HistoricSonarDataEnumEncoding _encoding;
  HistoricSonarDataEnumEncoding get encoding => _$this._encoding;
  set encoding(HistoricSonarDataEnumEncoding encoding) => _$this._encoding = encoding;

  List<int> _sonarData;
  List<int> get sonarData => _$this._sonarData;
  set sonarData(List<int> sonarData) => _$this._sonarData = sonarData;

  HistoricSonarDataBuilder();

  HistoricSonarDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _altitude = _$v.altitude;
      _width = _$v.width;
      _length = _$v.length;
      _bearing = _$v.bearing;
      _pxl = _$v.pxl;
      _encoding = _$v.encoding;
      _sonarData = _$v.sonarData;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricSonarData other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricSonarData;
  }

  @override
  void update(void updates(HistoricSonarDataBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricSonarData build() {
    final _$result = _$v ??
        new _$HistoricSonarData._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            altitude: altitude ?? 0,
            width: width ?? 0,
            length: length ?? 0,
            bearing: bearing ?? 0,
            pxl: pxl ?? 0,
            encoding: encoding ?? HistoricSonarDataEnumEncoding(0),
            sonarData: sonarData ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// Historic Event immutable class
///
class _$HistoricEvent extends HistoricEvent {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String text;
  @override
  final HistoricEventEnumType type;

  factory _$HistoricEvent([void updates(HistoricEventBuilder b)]) =>
      (new HistoricEventBuilder()..update(updates)).build();

  _$HistoricEvent._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.text,
      this.type})
      : super._();

  @override
  HistoricEvent rebuild(void updates(HistoricEventBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricEventBuilder toBuilder() => new HistoricEventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricEvent &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        text == this.text &&
        type == this.type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        text?.hashCode), 
        type?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricEvent')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('text', text)
          ..add('type', type))
        .toString();
  }
}

/// Historic Event builder class
///
class HistoricEventBuilder implements Builder<HistoricEvent, HistoricEventBuilder>, ImcBuilderHeaderPart {
  _$HistoricEvent _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _text;
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  HistoricEventEnumType _type;
  HistoricEventEnumType get type => _$this._type;
  set type(HistoricEventEnumType type) => _$this._type = type;

  HistoricEventBuilder();

  HistoricEventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _text = _$v.text;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricEvent other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricEvent;
  }

  @override
  void update(void updates(HistoricEventBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricEvent build() {
    final _$result = _$v ??
        new _$HistoricEvent._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            text: text ?? '',
            type: type ?? HistoricEventEnumType(0));
    replace(_$result);
    return _$result;
  }
}

/// Vertical Profile immutable class
///
class _$VerticalProfile extends VerticalProfile {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VerticalProfileEnumParameter parameter;
  @override
  final int numSamples;
  @override
  final List<ProfileSample> samples;
  @override
  final double lat;
  @override
  final double lon;

  factory _$VerticalProfile([void updates(VerticalProfileBuilder b)]) =>
      (new VerticalProfileBuilder()..update(updates)).build();

  _$VerticalProfile._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.parameter,
      this.numSamples,
      this.samples,
      this.lat,
      this.lon})
      : super._();

  @override
  VerticalProfile rebuild(void updates(VerticalProfileBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VerticalProfileBuilder toBuilder() => new VerticalProfileBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VerticalProfile &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        parameter == this.parameter &&
        numSamples == this.numSamples &&
        samples == this.samples &&
        lat == this.lat &&
        lon == this.lon;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        parameter?.hashCode), 
        numSamples?.hashCode), 
        samples?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VerticalProfile')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('parameter', parameter)
          ..add('numSamples', numSamples)
          ..add('samples', samples)
          ..add('lat', lat)
          ..add('lon', lon))
        .toString();
  }
}

/// Vertical Profile builder class
///
class VerticalProfileBuilder implements Builder<VerticalProfile, VerticalProfileBuilder>, ImcBuilderHeaderPart {
  _$VerticalProfile _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VerticalProfileEnumParameter _parameter;
  VerticalProfileEnumParameter get parameter => _$this._parameter;
  set parameter(VerticalProfileEnumParameter parameter) => _$this._parameter = parameter;

  int _numSamples;
  int get numSamples => _$this._numSamples;
  set numSamples(int numSamples) => _$this._numSamples = numSamples;

  List<ProfileSample> _samples;
  List<ProfileSample> get samples => _$this._samples;
  set samples(List<ProfileSample> samples) => _$this._samples = samples;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  VerticalProfileBuilder();

  VerticalProfileBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _parameter = _$v.parameter;
      _numSamples = _$v.numSamples;
      _samples = _$v.samples;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VerticalProfile other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VerticalProfile;
  }

  @override
  void update(void updates(VerticalProfileBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VerticalProfile build() {
    final _$result = _$v ??
        new _$VerticalProfile._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            parameter: parameter ?? VerticalProfileEnumParameter(0),
            numSamples: numSamples ?? 0,
            samples: samples ?? List<ProfileSample>(0),
            lat: lat ?? 0,
            lon: lon ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Profile Sample immutable class
///
class _$ProfileSample extends ProfileSample {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int depth;
  @override
  final double avg;

  factory _$ProfileSample([void updates(ProfileSampleBuilder b)]) =>
      (new ProfileSampleBuilder()..update(updates)).build();

  _$ProfileSample._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.depth,
      this.avg})
      : super._();

  @override
  ProfileSample rebuild(void updates(ProfileSampleBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ProfileSampleBuilder toBuilder() => new ProfileSampleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ProfileSample &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        depth == this.depth &&
        avg == this.avg;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        depth?.hashCode), 
        avg?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ProfileSample')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('depth', depth)
          ..add('avg', avg))
        .toString();
  }
}

/// Profile Sample builder class
///
class ProfileSampleBuilder implements Builder<ProfileSample, ProfileSampleBuilder>, ImcBuilderHeaderPart {
  _$ProfileSample _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _depth;
  int get depth => _$this._depth;
  set depth(int depth) => _$this._depth = depth;

  double _avg;
  double get avg => _$this._avg;
  set avg(double avg) => _$this._avg = avg;

  ProfileSampleBuilder();

  ProfileSampleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _depth = _$v.depth;
      _avg = _$v.avg;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ProfileSample other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ProfileSample;
  }

  @override
  void update(void updates(ProfileSampleBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ProfileSample build() {
    final _$result = _$v ??
        new _$ProfileSample._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            depth: depth ?? 0,
            avg: avg ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Heartbeat immutable class
///
class _$Heartbeat extends Heartbeat {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$Heartbeat([void updates(HeartbeatBuilder b)]) =>
      (new HeartbeatBuilder()..update(updates)).build();

  _$Heartbeat._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  Heartbeat rebuild(void updates(HeartbeatBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HeartbeatBuilder toBuilder() => new HeartbeatBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Heartbeat &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Heartbeat')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Heartbeat builder class
///
class HeartbeatBuilder implements Builder<Heartbeat, HeartbeatBuilder>, ImcBuilderHeaderPart {
  _$Heartbeat _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  HeartbeatBuilder();

  HeartbeatBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Heartbeat other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Heartbeat;
  }

  @override
  void update(void updates(HeartbeatBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Heartbeat build() {
    final _$result = _$v ??
        new _$Heartbeat._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Announce immutable class
///
class _$Announce extends Announce {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String sysName;
  @override
  final SystemTypeEnum sysType;
  @override
  final int owner;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final String services;

  factory _$Announce([void updates(AnnounceBuilder b)]) =>
      (new AnnounceBuilder()..update(updates)).build();

  _$Announce._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sysName,
      this.sysType,
      this.owner,
      this.lat,
      this.lon,
      this.height,
      this.services})
      : super._();

  @override
  Announce rebuild(void updates(AnnounceBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AnnounceBuilder toBuilder() => new AnnounceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Announce &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sysName == this.sysName &&
        sysType == this.sysType &&
        owner == this.owner &&
        lat == this.lat &&
        lon == this.lon &&
        height == this.height &&
        services == this.services;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        sysName?.hashCode), 
        sysType?.hashCode), 
        owner?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        height?.hashCode), 
        services?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Announce')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sysName', sysName)
          ..add('sysType', sysType)
          ..add('owner', owner)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('height', height)
          ..add('services', services))
        .toString();
  }
}

/// Announce builder class
///
class AnnounceBuilder implements Builder<Announce, AnnounceBuilder>, ImcBuilderHeaderPart {
  _$Announce _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _sysName;
  String get sysName => _$this._sysName;
  set sysName(String sysName) => _$this._sysName = sysName;

  SystemTypeEnum _sysType;
  SystemTypeEnum get sysType => _$this._sysType;
  set sysType(SystemTypeEnum sysType) => _$this._sysType = sysType;

  int _owner;
  int get owner => _$this._owner;
  set owner(int owner) => _$this._owner = owner;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  String _services;
  String get services => _$this._services;
  set services(String services) => _$this._services = services;

  AnnounceBuilder();

  AnnounceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sysName = _$v.sysName;
      _sysType = _$v.sysType;
      _owner = _$v.owner;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _services = _$v.services;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Announce other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Announce;
  }

  @override
  void update(void updates(AnnounceBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Announce build() {
    final _$result = _$v ??
        new _$Announce._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sysName: sysName ?? '',
            sysType: sysType ?? SystemTypeEnum(0),
            owner: owner ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            height: height ?? 0,
            services: services ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Announce Service immutable class
///
class _$AnnounceService extends AnnounceService {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String service;
  @override
  final AnnounceServiceBitfieldServiceType serviceType;

  factory _$AnnounceService([void updates(AnnounceServiceBuilder b)]) =>
      (new AnnounceServiceBuilder()..update(updates)).build();

  _$AnnounceService._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.service,
      this.serviceType})
      : super._();

  @override
  AnnounceService rebuild(void updates(AnnounceServiceBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AnnounceServiceBuilder toBuilder() => new AnnounceServiceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AnnounceService &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        service == this.service &&
        serviceType == this.serviceType;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        service?.hashCode), 
        serviceType?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AnnounceService')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('service', service)
          ..add('serviceType', serviceType))
        .toString();
  }
}

/// Announce Service builder class
///
class AnnounceServiceBuilder implements Builder<AnnounceService, AnnounceServiceBuilder>, ImcBuilderHeaderPart {
  _$AnnounceService _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _service;
  String get service => _$this._service;
  set service(String service) => _$this._service = service;

  AnnounceServiceBitfieldServiceType _serviceType;
  AnnounceServiceBitfieldServiceType get serviceType => _$this._serviceType;
  set serviceType(AnnounceServiceBitfieldServiceType serviceType) => _$this._serviceType = serviceType;

  AnnounceServiceBuilder();

  AnnounceServiceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _service = _$v.service;
      _serviceType = _$v.serviceType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AnnounceService other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AnnounceService;
  }

  @override
  void update(void updates(AnnounceServiceBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AnnounceService build() {
    final _$result = _$v ??
        new _$AnnounceService._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            service: service ?? '',
            serviceType: serviceType ?? AnnounceServiceBitfieldServiceType(0));
    replace(_$result);
    return _$result;
  }
}

/// Receive Signal Strength Information immutable class
///
class _$RSSI extends RSSI {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$RSSI([void updates(RSSIBuilder b)]) =>
      (new RSSIBuilder()..update(updates)).build();

  _$RSSI._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  RSSI rebuild(void updates(RSSIBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RSSIBuilder toBuilder() => new RSSIBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RSSI &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RSSI')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Receive Signal Strength Information builder class
///
class RSSIBuilder implements Builder<RSSI, RSSIBuilder>, ImcBuilderHeaderPart {
  _$RSSI _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RSSIBuilder();

  RSSIBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RSSI other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RSSI;
  }

  @override
  void update(void updates(RSSIBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RSSI build() {
    final _$result = _$v ??
        new _$RSSI._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Voltage Standing Wave Ratio immutable class
///
class _$VSWR extends VSWR {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$VSWR([void updates(VSWRBuilder b)]) =>
      (new VSWRBuilder()..update(updates)).build();

  _$VSWR._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  VSWR rebuild(void updates(VSWRBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VSWRBuilder toBuilder() => new VSWRBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VSWR &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VSWR')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Voltage Standing Wave Ratio builder class
///
class VSWRBuilder implements Builder<VSWR, VSWRBuilder>, ImcBuilderHeaderPart {
  _$VSWR _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  VSWRBuilder();

  VSWRBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VSWR other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VSWR;
  }

  @override
  void update(void updates(VSWRBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VSWR build() {
    final _$result = _$v ??
        new _$VSWR._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Link Level immutable class
///
class _$LinkLevel extends LinkLevel {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$LinkLevel([void updates(LinkLevelBuilder b)]) =>
      (new LinkLevelBuilder()..update(updates)).build();

  _$LinkLevel._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  LinkLevel rebuild(void updates(LinkLevelBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LinkLevelBuilder toBuilder() => new LinkLevelBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LinkLevel &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LinkLevel')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Link Level builder class
///
class LinkLevelBuilder implements Builder<LinkLevel, LinkLevelBuilder>, ImcBuilderHeaderPart {
  _$LinkLevel _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  LinkLevelBuilder();

  LinkLevelBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LinkLevel other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LinkLevel;
  }

  @override
  void update(void updates(LinkLevelBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LinkLevel build() {
    final _$result = _$v ??
        new _$LinkLevel._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// SMS immutable class
///
class _$Sms extends Sms {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String number;
  @override
  final int timeout;
  @override
  final String contents;

  factory _$Sms([void updates(SmsBuilder b)]) =>
      (new SmsBuilder()..update(updates)).build();

  _$Sms._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.number,
      this.timeout,
      this.contents})
      : super._();

  @override
  Sms rebuild(void updates(SmsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsBuilder toBuilder() => new SmsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Sms &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        number == this.number &&
        timeout == this.timeout &&
        contents == this.contents;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        number?.hashCode), 
        timeout?.hashCode), 
        contents?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Sms')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('number', number)
          ..add('timeout', timeout)
          ..add('contents', contents))
        .toString();
  }
}

/// SMS builder class
///
class SmsBuilder implements Builder<Sms, SmsBuilder>, ImcBuilderHeaderPart {
  _$Sms _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _number;
  String get number => _$this._number;
  set number(String number) => _$this._number = number;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  String _contents;
  String get contents => _$this._contents;
  set contents(String contents) => _$this._contents = contents;

  SmsBuilder();

  SmsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _number = _$v.number;
      _timeout = _$v.timeout;
      _contents = _$v.contents;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Sms other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Sms;
  }

  @override
  void update(void updates(SmsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Sms build() {
    final _$result = _$v ??
        new _$Sms._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            number: number ?? '',
            timeout: timeout ?? 0,
            contents: contents ?? '');
    replace(_$result);
    return _$result;
  }
}

/// SMS Transmit immutable class
///
class _$SmsTx extends SmsTx {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final String destination;
  @override
  final int timeout;
  @override
  final List<int> data;

  factory _$SmsTx([void updates(SmsTxBuilder b)]) =>
      (new SmsTxBuilder()..update(updates)).build();

  _$SmsTx._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.seq,
      this.destination,
      this.timeout,
      this.data})
      : super._();

  @override
  SmsTx rebuild(void updates(SmsTxBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsTxBuilder toBuilder() => new SmsTxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsTx &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == this.seq &&
        destination == this.destination &&
        timeout == this.timeout &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        seq?.hashCode), 
        destination?.hashCode), 
        timeout?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsTx')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('seq', seq)
          ..add('destination', destination)
          ..add('timeout', timeout)
          ..add('data', data))
        .toString();
  }
}

/// SMS Transmit builder class
///
class SmsTxBuilder implements Builder<SmsTx, SmsTxBuilder>, ImcBuilderHeaderPart {
  _$SmsTx _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  String _destination;
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  SmsTxBuilder();

  SmsTxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _destination = _$v.destination;
      _timeout = _$v.timeout;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsTx other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SmsTx;
  }

  @override
  void update(void updates(SmsTxBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsTx build() {
    final _$result = _$v ??
        new _$SmsTx._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            seq: seq ?? 0,
            destination: destination ?? '',
            timeout: timeout ?? 0,
            data: data ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// SMS Receive immutable class
///
class _$SmsRx extends SmsRx {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String source;
  @override
  final List<int> data;

  factory _$SmsRx([void updates(SmsRxBuilder b)]) =>
      (new SmsRxBuilder()..update(updates)).build();

  _$SmsRx._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.source,
      this.data})
      : super._();

  @override
  SmsRx rebuild(void updates(SmsRxBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsRxBuilder toBuilder() => new SmsRxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsRx &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        source == this.source &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        source?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsRx')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('source', source)
          ..add('data', data))
        .toString();
  }
}

/// SMS Receive builder class
///
class SmsRxBuilder implements Builder<SmsRx, SmsRxBuilder>, ImcBuilderHeaderPart {
  _$SmsRx _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _source;
  String get source => _$this._source;
  set source(String source) => _$this._source = source;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  SmsRxBuilder();

  SmsRxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _source = _$v.source;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsRx other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SmsRx;
  }

  @override
  void update(void updates(SmsRxBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsRx build() {
    final _$result = _$v ??
        new _$SmsRx._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            source: source ?? '',
            data: data ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// SMS State immutable class
///
class _$SmsState extends SmsState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final SmsStateEnumState state;
  @override
  final String error;

  factory _$SmsState([void updates(SmsStateBuilder b)]) =>
      (new SmsStateBuilder()..update(updates)).build();

  _$SmsState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.seq,
      this.state,
      this.error})
      : super._();

  @override
  SmsState rebuild(void updates(SmsStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsStateBuilder toBuilder() => new SmsStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == this.seq &&
        state == this.state &&
        error == this.error;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        seq?.hashCode), 
        state?.hashCode), 
        error?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('seq', seq)
          ..add('state', state)
          ..add('error', error))
        .toString();
  }
}

/// SMS State builder class
///
class SmsStateBuilder implements Builder<SmsState, SmsStateBuilder>, ImcBuilderHeaderPart {
  _$SmsState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  SmsStateEnumState _state;
  SmsStateEnumState get state => _$this._state;
  set state(SmsStateEnumState state) => _$this._state = state;

  String _error;
  String get error => _$this._error;
  set error(String error) => _$this._error = error;

  SmsStateBuilder();

  SmsStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _state = _$v.state;
      _error = _$v.error;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SmsState;
  }

  @override
  void update(void updates(SmsStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsState build() {
    final _$result = _$v ??
        new _$SmsState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            seq: seq ?? 0,
            state: state ?? SmsStateEnumState(0),
            error: error ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Text Message immutable class
///
class _$TextMessage extends TextMessage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String origin;
  @override
  final String text;

  factory _$TextMessage([void updates(TextMessageBuilder b)]) =>
      (new TextMessageBuilder()..update(updates)).build();

  _$TextMessage._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.origin,
      this.text})
      : super._();

  @override
  TextMessage rebuild(void updates(TextMessageBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TextMessageBuilder toBuilder() => new TextMessageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TextMessage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        origin == this.origin &&
        text == this.text;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        origin?.hashCode), 
        text?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TextMessage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('origin', origin)
          ..add('text', text))
        .toString();
  }
}

/// Text Message builder class
///
class TextMessageBuilder implements Builder<TextMessage, TextMessageBuilder>, ImcBuilderHeaderPart {
  _$TextMessage _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _origin;
  String get origin => _$this._origin;
  set origin(String origin) => _$this._origin = origin;

  String _text;
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  TextMessageBuilder();

  TextMessageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _origin = _$v.origin;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TextMessage other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TextMessage;
  }

  @override
  void update(void updates(TextMessageBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TextMessage build() {
    final _$result = _$v ??
        new _$TextMessage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            origin: origin ?? '',
            text: text ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Received Iridium Message immutable class
///
class _$IridiumMsgRx extends IridiumMsgRx {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String origin;
  @override
  final double htime;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final List<int> data;

  factory _$IridiumMsgRx([void updates(IridiumMsgRxBuilder b)]) =>
      (new IridiumMsgRxBuilder()..update(updates)).build();

  _$IridiumMsgRx._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.origin,
      this.htime,
      this.lat,
      this.lon,
      this.data})
      : super._();

  @override
  IridiumMsgRx rebuild(void updates(IridiumMsgRxBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  IridiumMsgRxBuilder toBuilder() => new IridiumMsgRxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IridiumMsgRx &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        origin == this.origin &&
        htime == this.htime &&
        lat == this.lat &&
        lon == this.lon &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        origin?.hashCode), 
        htime?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IridiumMsgRx')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('origin', origin)
          ..add('htime', htime)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('data', data))
        .toString();
  }
}

/// Received Iridium Message builder class
///
class IridiumMsgRxBuilder implements Builder<IridiumMsgRx, IridiumMsgRxBuilder>, ImcBuilderHeaderPart {
  _$IridiumMsgRx _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _origin;
  String get origin => _$this._origin;
  set origin(String origin) => _$this._origin = origin;

  double _htime;
  double get htime => _$this._htime;
  set htime(double htime) => _$this._htime = htime;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  IridiumMsgRxBuilder();

  IridiumMsgRxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _origin = _$v.origin;
      _htime = _$v.htime;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IridiumMsgRx other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$IridiumMsgRx;
  }

  @override
  void update(void updates(IridiumMsgRxBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$IridiumMsgRx build() {
    final _$result = _$v ??
        new _$IridiumMsgRx._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            origin: origin ?? '',
            htime: htime ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            data: data ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// Transmit Iridium Message immutable class
///
class _$IridiumMsgTx extends IridiumMsgTx {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final int ttl;
  @override
  final String destination;
  @override
  final List<int> data;

  factory _$IridiumMsgTx([void updates(IridiumMsgTxBuilder b)]) =>
      (new IridiumMsgTxBuilder()..update(updates)).build();

  _$IridiumMsgTx._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.reqId,
      this.ttl,
      this.destination,
      this.data})
      : super._();

  @override
  IridiumMsgTx rebuild(void updates(IridiumMsgTxBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  IridiumMsgTxBuilder toBuilder() => new IridiumMsgTxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IridiumMsgTx &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == this.reqId &&
        ttl == this.ttl &&
        destination == this.destination &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        reqId?.hashCode), 
        ttl?.hashCode), 
        destination?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IridiumMsgTx')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', reqId)
          ..add('ttl', ttl)
          ..add('destination', destination)
          ..add('data', data))
        .toString();
  }
}

/// Transmit Iridium Message builder class
///
class IridiumMsgTxBuilder implements Builder<IridiumMsgTx, IridiumMsgTxBuilder>, ImcBuilderHeaderPart {
  _$IridiumMsgTx _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  int _ttl;
  int get ttl => _$this._ttl;
  set ttl(int ttl) => _$this._ttl = ttl;

  String _destination;
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  IridiumMsgTxBuilder();

  IridiumMsgTxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _ttl = _$v.ttl;
      _destination = _$v.destination;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IridiumMsgTx other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$IridiumMsgTx;
  }

  @override
  void update(void updates(IridiumMsgTxBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$IridiumMsgTx build() {
    final _$result = _$v ??
        new _$IridiumMsgTx._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            ttl: ttl ?? 0,
            destination: destination ?? '',
            data: data ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// Iridium Transmission Status immutable class
///
class _$IridiumTxStatus extends IridiumTxStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final IridiumTxStatusEnumStatus status;
  @override
  final String text;

  factory _$IridiumTxStatus([void updates(IridiumTxStatusBuilder b)]) =>
      (new IridiumTxStatusBuilder()..update(updates)).build();

  _$IridiumTxStatus._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.reqId,
      this.status,
      this.text})
      : super._();

  @override
  IridiumTxStatus rebuild(void updates(IridiumTxStatusBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  IridiumTxStatusBuilder toBuilder() => new IridiumTxStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IridiumTxStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == this.reqId &&
        status == this.status &&
        text == this.text;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        reqId?.hashCode), 
        status?.hashCode), 
        text?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IridiumTxStatus')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', reqId)
          ..add('status', status)
          ..add('text', text))
        .toString();
  }
}

/// Iridium Transmission Status builder class
///
class IridiumTxStatusBuilder implements Builder<IridiumTxStatus, IridiumTxStatusBuilder>, ImcBuilderHeaderPart {
  _$IridiumTxStatus _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  IridiumTxStatusEnumStatus _status;
  IridiumTxStatusEnumStatus get status => _$this._status;
  set status(IridiumTxStatusEnumStatus status) => _$this._status = status;

  String _text;
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  IridiumTxStatusBuilder();

  IridiumTxStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _status = _$v.status;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IridiumTxStatus other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$IridiumTxStatus;
  }

  @override
  void update(void updates(IridiumTxStatusBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$IridiumTxStatus build() {
    final _$result = _$v ??
        new _$IridiumTxStatus._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            status: status ?? IridiumTxStatusEnumStatus(0),
            text: text ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Group Membership State immutable class
///
class _$GroupMembershipState extends GroupMembershipState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String groupName;
  @override
  final int links;

  factory _$GroupMembershipState([void updates(GroupMembershipStateBuilder b)]) =>
      (new GroupMembershipStateBuilder()..update(updates)).build();

  _$GroupMembershipState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.groupName,
      this.links})
      : super._();

  @override
  GroupMembershipState rebuild(void updates(GroupMembershipStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GroupMembershipStateBuilder toBuilder() => new GroupMembershipStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GroupMembershipState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        groupName == this.groupName &&
        links == this.links;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        groupName?.hashCode), 
        links?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GroupMembershipState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('groupName', groupName)
          ..add('links', links))
        .toString();
  }
}

/// Group Membership State builder class
///
class GroupMembershipStateBuilder implements Builder<GroupMembershipState, GroupMembershipStateBuilder>, ImcBuilderHeaderPart {
  _$GroupMembershipState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _groupName;
  String get groupName => _$this._groupName;
  set groupName(String groupName) => _$this._groupName = groupName;

  int _links;
  int get links => _$this._links;
  set links(int links) => _$this._links = links;

  GroupMembershipStateBuilder();

  GroupMembershipStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _groupName = _$v.groupName;
      _links = _$v.links;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GroupMembershipState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GroupMembershipState;
  }

  @override
  void update(void updates(GroupMembershipStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GroupMembershipState build() {
    final _$result = _$v ??
        new _$GroupMembershipState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            groupName: groupName ?? '',
            links: links ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// System Group immutable class
///
class _$SystemGroup extends SystemGroup {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String groupName;
  @override
  final SystemGroupEnumAction action;
  @override
  final String groupList;

  factory _$SystemGroup([void updates(SystemGroupBuilder b)]) =>
      (new SystemGroupBuilder()..update(updates)).build();

  _$SystemGroup._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.groupName,
      this.action,
      this.groupList})
      : super._();

  @override
  SystemGroup rebuild(void updates(SystemGroupBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SystemGroupBuilder toBuilder() => new SystemGroupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SystemGroup &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        groupName == this.groupName &&
        action == this.action &&
        groupList == this.groupList;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        groupName?.hashCode), 
        action?.hashCode), 
        groupList?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SystemGroup')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('groupName', groupName)
          ..add('action', action)
          ..add('groupList', groupList))
        .toString();
  }
}

/// System Group builder class
///
class SystemGroupBuilder implements Builder<SystemGroup, SystemGroupBuilder>, ImcBuilderHeaderPart {
  _$SystemGroup _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _groupName;
  String get groupName => _$this._groupName;
  set groupName(String groupName) => _$this._groupName = groupName;

  SystemGroupEnumAction _action;
  SystemGroupEnumAction get action => _$this._action;
  set action(SystemGroupEnumAction action) => _$this._action = action;

  String _groupList;
  String get groupList => _$this._groupList;
  set groupList(String groupList) => _$this._groupList = groupList;

  SystemGroupBuilder();

  SystemGroupBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _groupName = _$v.groupName;
      _action = _$v.action;
      _groupList = _$v.groupList;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SystemGroup other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SystemGroup;
  }

  @override
  void update(void updates(SystemGroupBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SystemGroup build() {
    final _$result = _$v ??
        new _$SystemGroup._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            groupName: groupName ?? '',
            action: action ?? SystemGroupEnumAction(0),
            groupList: groupList ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Link Latency immutable class
///
class _$LinkLatency extends LinkLatency {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final int sysSrc;

  factory _$LinkLatency([void updates(LinkLatencyBuilder b)]) =>
      (new LinkLatencyBuilder()..update(updates)).build();

  _$LinkLatency._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value,
      this.sysSrc})
      : super._();

  @override
  LinkLatency rebuild(void updates(LinkLatencyBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LinkLatencyBuilder toBuilder() => new LinkLatencyBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LinkLatency &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value &&
        sysSrc == this.sysSrc;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode), 
        sysSrc?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LinkLatency')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value)
          ..add('sysSrc', sysSrc))
        .toString();
  }
}

/// Link Latency builder class
///
class LinkLatencyBuilder implements Builder<LinkLatency, LinkLatencyBuilder>, ImcBuilderHeaderPart {
  _$LinkLatency _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  int _sysSrc;
  int get sysSrc => _$this._sysSrc;
  set sysSrc(int sysSrc) => _$this._sysSrc = sysSrc;

  LinkLatencyBuilder();

  LinkLatencyBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _sysSrc = _$v.sysSrc;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LinkLatency other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LinkLatency;
  }

  @override
  void update(void updates(LinkLatencyBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LinkLatency build() {
    final _$result = _$v ??
        new _$LinkLatency._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0,
            sysSrc: sysSrc ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Extended Receive Signal Strength Information immutable class
///
class _$ExtendedRSSI extends ExtendedRSSI {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final RSSIUnitsEnum units;

  factory _$ExtendedRSSI([void updates(ExtendedRSSIBuilder b)]) =>
      (new ExtendedRSSIBuilder()..update(updates)).build();

  _$ExtendedRSSI._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value,
      this.units})
      : super._();

  @override
  ExtendedRSSI rebuild(void updates(ExtendedRSSIBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ExtendedRSSIBuilder toBuilder() => new ExtendedRSSIBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ExtendedRSSI &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value &&
        units == this.units;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode), 
        units?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ExtendedRSSI')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value)
          ..add('units', units))
        .toString();
  }
}

/// Extended Receive Signal Strength Information builder class
///
class ExtendedRSSIBuilder implements Builder<ExtendedRSSI, ExtendedRSSIBuilder>, ImcBuilderHeaderPart {
  _$ExtendedRSSI _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RSSIUnitsEnum _units;
  RSSIUnitsEnum get units => _$this._units;
  set units(RSSIUnitsEnum units) => _$this._units = units;

  ExtendedRSSIBuilder();

  ExtendedRSSIBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _units = _$v.units;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ExtendedRSSI other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ExtendedRSSI;
  }

  @override
  void update(void updates(ExtendedRSSIBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ExtendedRSSI build() {
    final _$result = _$v ??
        new _$ExtendedRSSI._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0,
            units: units ?? RSSIUnitsEnum(0));
    replace(_$result);
    return _$result;
  }
}

/// Historic Data Series immutable class
///
class _$HistoricData extends HistoricData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double baseLat;
  @override
  final double baseLon;
  @override
  final double baseTime;
  @override
  final List<RemoteData> data;

  factory _$HistoricData([void updates(HistoricDataBuilder b)]) =>
      (new HistoricDataBuilder()..update(updates)).build();

  _$HistoricData._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.baseLat,
      this.baseLon,
      this.baseTime,
      this.data})
      : super._();

  @override
  HistoricData rebuild(void updates(HistoricDataBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricDataBuilder toBuilder() => new HistoricDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        baseLat == this.baseLat &&
        baseLon == this.baseLon &&
        baseTime == this.baseTime &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        baseLat?.hashCode), 
        baseLon?.hashCode), 
        baseTime?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricData')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('baseLat', baseLat)
          ..add('baseLon', baseLon)
          ..add('baseTime', baseTime)
          ..add('data', data))
        .toString();
  }
}

/// Historic Data Series builder class
///
class HistoricDataBuilder implements Builder<HistoricData, HistoricDataBuilder>, ImcBuilderHeaderPart {
  _$HistoricData _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _baseLat;
  double get baseLat => _$this._baseLat;
  set baseLat(double baseLat) => _$this._baseLat = baseLat;

  double _baseLon;
  double get baseLon => _$this._baseLon;
  set baseLon(double baseLon) => _$this._baseLon = baseLon;

  double _baseTime;
  double get baseTime => _$this._baseTime;
  set baseTime(double baseTime) => _$this._baseTime = baseTime;

  List<RemoteData> _data;
  List<RemoteData> get data => _$this._data;
  set data(List<RemoteData> data) => _$this._data = data;

  HistoricDataBuilder();

  HistoricDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _baseLat = _$v.baseLat;
      _baseLon = _$v.baseLon;
      _baseTime = _$v.baseTime;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricData other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricData;
  }

  @override
  void update(void updates(HistoricDataBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricData build() {
    final _$result = _$v ??
        new _$HistoricData._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            baseLat: baseLat ?? 0,
            baseLon: baseLon ?? 0,
            baseTime: baseTime ?? 0,
            data: data ?? List<RemoteData>(0));
    replace(_$result);
    return _$result;
  }
}

/// Compressed Historic Data Series immutable class
///
class _$CompressedHistory extends CompressedHistory {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double baseLat;
  @override
  final double baseLon;
  @override
  final double baseTime;
  @override
  final List<int> data;

  factory _$CompressedHistory([void updates(CompressedHistoryBuilder b)]) =>
      (new CompressedHistoryBuilder()..update(updates)).build();

  _$CompressedHistory._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.baseLat,
      this.baseLon,
      this.baseTime,
      this.data})
      : super._();

  @override
  CompressedHistory rebuild(void updates(CompressedHistoryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CompressedHistoryBuilder toBuilder() => new CompressedHistoryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CompressedHistory &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        baseLat == this.baseLat &&
        baseLon == this.baseLon &&
        baseTime == this.baseTime &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        baseLat?.hashCode), 
        baseLon?.hashCode), 
        baseTime?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CompressedHistory')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('baseLat', baseLat)
          ..add('baseLon', baseLon)
          ..add('baseTime', baseTime)
          ..add('data', data))
        .toString();
  }
}

/// Compressed Historic Data Series builder class
///
class CompressedHistoryBuilder implements Builder<CompressedHistory, CompressedHistoryBuilder>, ImcBuilderHeaderPart {
  _$CompressedHistory _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _baseLat;
  double get baseLat => _$this._baseLat;
  set baseLat(double baseLat) => _$this._baseLat = baseLat;

  double _baseLon;
  double get baseLon => _$this._baseLon;
  set baseLon(double baseLon) => _$this._baseLon = baseLon;

  double _baseTime;
  double get baseTime => _$this._baseTime;
  set baseTime(double baseTime) => _$this._baseTime = baseTime;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  CompressedHistoryBuilder();

  CompressedHistoryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _baseLat = _$v.baseLat;
      _baseLon = _$v.baseLon;
      _baseTime = _$v.baseTime;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CompressedHistory other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CompressedHistory;
  }

  @override
  void update(void updates(CompressedHistoryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CompressedHistory build() {
    final _$result = _$v ??
        new _$CompressedHistory._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            baseLat: baseLat ?? 0,
            baseLon: baseLon ?? 0,
            baseTime: baseTime ?? 0,
            data: data ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// Historic Data Sample immutable class
///
class _$HistoricSample extends HistoricSample {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sysId;
  @override
  final int priority;
  @override
  final int x;
  @override
  final int y;
  @override
  final int z;
  @override
  final int t;
  @override
  final ImcMessage sample;

  factory _$HistoricSample([void updates(HistoricSampleBuilder b)]) =>
      (new HistoricSampleBuilder()..update(updates)).build();

  _$HistoricSample._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sysId,
      this.priority,
      this.x,
      this.y,
      this.z,
      this.t,
      this.sample})
      : super._();

  @override
  HistoricSample rebuild(void updates(HistoricSampleBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricSampleBuilder toBuilder() => new HistoricSampleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricSample &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sysId == this.sysId &&
        priority == this.priority &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        t == this.t &&
        sample == this.sample;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        sysId?.hashCode), 
        priority?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode), 
        t?.hashCode), 
        sample?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricSample')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sysId', sysId)
          ..add('priority', priority)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('t', t)
          ..add('sample', sample))
        .toString();
  }
}

/// Historic Data Sample builder class
///
class HistoricSampleBuilder implements Builder<HistoricSample, HistoricSampleBuilder>, ImcBuilderHeaderPart {
  _$HistoricSample _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sysId;
  int get sysId => _$this._sysId;
  set sysId(int sysId) => _$this._sysId = sysId;

  int _priority;
  int get priority => _$this._priority;
  set priority(int priority) => _$this._priority = priority;

  int _x;
  int get x => _$this._x;
  set x(int x) => _$this._x = x;

  int _y;
  int get y => _$this._y;
  set y(int y) => _$this._y = y;

  int _z;
  int get z => _$this._z;
  set z(int z) => _$this._z = z;

  int _t;
  int get t => _$this._t;
  set t(int t) => _$this._t = t;

  ImcMessage _sample;
  ImcMessage get sample => _$this._sample;
  set sample(ImcMessage sample) => _$this._sample = sample;

  HistoricSampleBuilder();

  HistoricSampleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sysId = _$v.sysId;
      _priority = _$v.priority;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _t = _$v.t;
      _sample = _$v.sample;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricSample other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricSample;
  }

  @override
  void update(void updates(HistoricSampleBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricSample build() {
    final _$result = _$v ??
        new _$HistoricSample._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sysId: sysId ?? 0,
            priority: priority ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            t: t ?? 0,
            sample: sample);
    replace(_$result);
    return _$result;
  }
}

/// Historic Data Query immutable class
///
class _$HistoricDataQuery extends HistoricDataQuery {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final HistoricDataQueryEnumType type;
  @override
  final int maxSize;
  @override
  final HistoricData data;

  factory _$HistoricDataQuery([void updates(HistoricDataQueryBuilder b)]) =>
      (new HistoricDataQueryBuilder()..update(updates)).build();

  _$HistoricDataQuery._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.reqId,
      this.type,
      this.maxSize,
      this.data})
      : super._();

  @override
  HistoricDataQuery rebuild(void updates(HistoricDataQueryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricDataQueryBuilder toBuilder() => new HistoricDataQueryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricDataQuery &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == this.reqId &&
        type == this.type &&
        maxSize == this.maxSize &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        reqId?.hashCode), 
        type?.hashCode), 
        maxSize?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricDataQuery')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', reqId)
          ..add('type', type)
          ..add('maxSize', maxSize)
          ..add('data', data))
        .toString();
  }
}

/// Historic Data Query builder class
///
class HistoricDataQueryBuilder implements Builder<HistoricDataQuery, HistoricDataQueryBuilder>, ImcBuilderHeaderPart {
  _$HistoricDataQuery _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  HistoricDataQueryEnumType _type;
  HistoricDataQueryEnumType get type => _$this._type;
  set type(HistoricDataQueryEnumType type) => _$this._type = type;

  int _maxSize;
  int get maxSize => _$this._maxSize;
  set maxSize(int maxSize) => _$this._maxSize = maxSize;

  HistoricData _data;
  HistoricData get data => _$this._data;
  set data(HistoricData data) => _$this._data = data;

  HistoricDataQueryBuilder();

  HistoricDataQueryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _type = _$v.type;
      _maxSize = _$v.maxSize;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricDataQuery other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricDataQuery;
  }

  @override
  void update(void updates(HistoricDataQueryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricDataQuery build() {
    final _$result = _$v ??
        new _$HistoricDataQuery._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            type: type ?? HistoricDataQueryEnumType(0),
            maxSize: maxSize ?? 0,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// Remote Command immutable class
///
class _$RemoteCommand extends RemoteCommand {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int originalSource;
  @override
  final int destination;
  @override
  final double timeout;
  @override
  final ImcMessage cmd;

  factory _$RemoteCommand([void updates(RemoteCommandBuilder b)]) =>
      (new RemoteCommandBuilder()..update(updates)).build();

  _$RemoteCommand._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.originalSource,
      this.destination,
      this.timeout,
      this.cmd})
      : super._();

  @override
  RemoteCommand rebuild(void updates(RemoteCommandBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteCommandBuilder toBuilder() => new RemoteCommandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteCommand &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        originalSource == this.originalSource &&
        destination == this.destination &&
        timeout == this.timeout &&
        cmd == this.cmd;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        originalSource?.hashCode), 
        destination?.hashCode), 
        timeout?.hashCode), 
        cmd?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteCommand')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('originalSource', originalSource)
          ..add('destination', destination)
          ..add('timeout', timeout)
          ..add('cmd', cmd))
        .toString();
  }
}

/// Remote Command builder class
///
class RemoteCommandBuilder implements Builder<RemoteCommand, RemoteCommandBuilder>, ImcBuilderHeaderPart {
  _$RemoteCommand _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _originalSource;
  int get originalSource => _$this._originalSource;
  set originalSource(int originalSource) => _$this._originalSource = originalSource;

  int _destination;
  int get destination => _$this._destination;
  set destination(int destination) => _$this._destination = destination;

  double _timeout;
  double get timeout => _$this._timeout;
  set timeout(double timeout) => _$this._timeout = timeout;

  ImcMessage _cmd;
  ImcMessage get cmd => _$this._cmd;
  set cmd(ImcMessage cmd) => _$this._cmd = cmd;

  RemoteCommandBuilder();

  RemoteCommandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _originalSource = _$v.originalSource;
      _destination = _$v.destination;
      _timeout = _$v.timeout;
      _cmd = _$v.cmd;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteCommand other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteCommand;
  }

  @override
  void update(void updates(RemoteCommandBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteCommand build() {
    final _$result = _$v ??
        new _$RemoteCommand._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            originalSource: originalSource ?? 0,
            destination: destination ?? 0,
            timeout: timeout ?? 0,
            cmd: cmd);
    replace(_$result);
    return _$result;
  }
}

/// Communication Systems Query immutable class
///
class _$CommSystemsQuery extends CommSystemsQuery {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final CommSystemsQueryBitfieldType type;
  @override
  final CommSystemsQueryBitfieldCommInterface commInterface;
  @override
  final CommSystemsQueryEnumModel model;
  @override
  final String list;

  factory _$CommSystemsQuery([void updates(CommSystemsQueryBuilder b)]) =>
      (new CommSystemsQueryBuilder()..update(updates)).build();

  _$CommSystemsQuery._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.commInterface,
      this.model,
      this.list})
      : super._();

  @override
  CommSystemsQuery rebuild(void updates(CommSystemsQueryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CommSystemsQueryBuilder toBuilder() => new CommSystemsQueryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CommSystemsQuery &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        commInterface == this.commInterface &&
        model == this.model &&
        list == this.list;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode), 
        commInterface?.hashCode), 
        model?.hashCode), 
        list?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CommSystemsQuery')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type)
          ..add('commInterface', commInterface)
          ..add('model', model)
          ..add('list', list))
        .toString();
  }
}

/// Communication Systems Query builder class
///
class CommSystemsQueryBuilder implements Builder<CommSystemsQuery, CommSystemsQueryBuilder>, ImcBuilderHeaderPart {
  _$CommSystemsQuery _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  CommSystemsQueryBitfieldType _type;
  CommSystemsQueryBitfieldType get type => _$this._type;
  set type(CommSystemsQueryBitfieldType type) => _$this._type = type;

  CommSystemsQueryBitfieldCommInterface _commInterface;
  CommSystemsQueryBitfieldCommInterface get commInterface => _$this._commInterface;
  set commInterface(CommSystemsQueryBitfieldCommInterface commInterface) => _$this._commInterface = commInterface;

  CommSystemsQueryEnumModel _model;
  CommSystemsQueryEnumModel get model => _$this._model;
  set model(CommSystemsQueryEnumModel model) => _$this._model = model;

  String _list;
  String get list => _$this._list;
  set list(String list) => _$this._list = list;

  CommSystemsQueryBuilder();

  CommSystemsQueryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _commInterface = _$v.commInterface;
      _model = _$v.model;
      _list = _$v.list;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CommSystemsQuery other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CommSystemsQuery;
  }

  @override
  void update(void updates(CommSystemsQueryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CommSystemsQuery build() {
    final _$result = _$v ??
        new _$CommSystemsQuery._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? CommSystemsQueryBitfieldType(0),
            commInterface: commInterface ?? CommSystemsQueryBitfieldCommInterface(0),
            model: model ?? CommSystemsQueryEnumModel(0),
            list: list ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Telemetry Message immutable class
///
class _$TelemetryMsg extends TelemetryMsg {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final TelemetryMsgEnumType type;
  @override
  final int reqId;
  @override
  final int ttl;
  @override
  final TelemetryMsgEnumCode code;
  @override
  final String destination;
  @override
  final String source;
  @override
  final TelemetryMsgBitfieldAcknowledge acknowledge;
  @override
  final TelemetryMsgEnumStatus status;
  @override
  final List<int> data;

  factory _$TelemetryMsg([void updates(TelemetryMsgBuilder b)]) =>
      (new TelemetryMsgBuilder()..update(updates)).build();

  _$TelemetryMsg._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.reqId,
      this.ttl,
      this.code,
      this.destination,
      this.source,
      this.acknowledge,
      this.status,
      this.data})
      : super._();

  @override
  TelemetryMsg rebuild(void updates(TelemetryMsgBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TelemetryMsgBuilder toBuilder() => new TelemetryMsgBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TelemetryMsg &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        reqId == this.reqId &&
        ttl == this.ttl &&
        code == this.code &&
        destination == this.destination &&
        source == this.source &&
        acknowledge == this.acknowledge &&
        status == this.status &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode), 
        reqId?.hashCode), 
        ttl?.hashCode), 
        code?.hashCode), 
        destination?.hashCode), 
        source?.hashCode), 
        acknowledge?.hashCode), 
        status?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TelemetryMsg')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type)
          ..add('reqId', reqId)
          ..add('ttl', ttl)
          ..add('code', code)
          ..add('destination', destination)
          ..add('source', source)
          ..add('acknowledge', acknowledge)
          ..add('status', status)
          ..add('data', data))
        .toString();
  }
}

/// Telemetry Message builder class
///
class TelemetryMsgBuilder implements Builder<TelemetryMsg, TelemetryMsgBuilder>, ImcBuilderHeaderPart {
  _$TelemetryMsg _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  TelemetryMsgEnumType _type;
  TelemetryMsgEnumType get type => _$this._type;
  set type(TelemetryMsgEnumType type) => _$this._type = type;

  int _reqId;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  int _ttl;
  int get ttl => _$this._ttl;
  set ttl(int ttl) => _$this._ttl = ttl;

  TelemetryMsgEnumCode _code;
  TelemetryMsgEnumCode get code => _$this._code;
  set code(TelemetryMsgEnumCode code) => _$this._code = code;

  String _destination;
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  String _source;
  String get source => _$this._source;
  set source(String source) => _$this._source = source;

  TelemetryMsgBitfieldAcknowledge _acknowledge;
  TelemetryMsgBitfieldAcknowledge get acknowledge => _$this._acknowledge;
  set acknowledge(TelemetryMsgBitfieldAcknowledge acknowledge) => _$this._acknowledge = acknowledge;

  TelemetryMsgEnumStatus _status;
  TelemetryMsgEnumStatus get status => _$this._status;
  set status(TelemetryMsgEnumStatus status) => _$this._status = status;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  TelemetryMsgBuilder();

  TelemetryMsgBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _reqId = _$v.reqId;
      _ttl = _$v.ttl;
      _code = _$v.code;
      _destination = _$v.destination;
      _source = _$v.source;
      _acknowledge = _$v.acknowledge;
      _status = _$v.status;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TelemetryMsg other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TelemetryMsg;
  }

  @override
  void update(void updates(TelemetryMsgBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TelemetryMsg build() {
    final _$result = _$v ??
        new _$TelemetryMsg._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? TelemetryMsgEnumType(0),
            reqId: reqId ?? 0,
            ttl: ttl ?? 0,
            code: code ?? TelemetryMsgEnumCode(0),
            destination: destination ?? '',
            source: source ?? '',
            acknowledge: acknowledge ?? TelemetryMsgBitfieldAcknowledge(0),
            status: status ?? TelemetryMsgEnumStatus(0),
            data: data ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// LBL Range immutable class
///
class _$LblRange extends LblRange {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double range;

  factory _$LblRange([void updates(LblRangeBuilder b)]) =>
      (new LblRangeBuilder()..update(updates)).build();

  _$LblRange._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.range})
      : super._();

  @override
  LblRange rebuild(void updates(LblRangeBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LblRangeBuilder toBuilder() => new LblRangeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblRange &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        range == this.range;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        id?.hashCode), 
        range?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblRange')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', id)
          ..add('range', range))
        .toString();
  }
}

/// LBL Range builder class
///
class LblRangeBuilder implements Builder<LblRange, LblRangeBuilder>, ImcBuilderHeaderPart {
  _$LblRange _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _range;
  double get range => _$this._range;
  set range(double range) => _$this._range = range;

  LblRangeBuilder();

  LblRangeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _range = _$v.range;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblRange other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LblRange;
  }

  @override
  void update(void updates(LblRangeBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LblRange build() {
    final _$result = _$v ??
        new _$LblRange._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            range: range ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// LBL Beacon Configuration immutable class
///
class _$LblBeacon extends LblBeacon {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String beacon;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double depth;
  @override
  final int queryChannel;
  @override
  final int replyChannel;
  @override
  final int transponderDelay;

  factory _$LblBeacon([void updates(LblBeaconBuilder b)]) =>
      (new LblBeaconBuilder()..update(updates)).build();

  _$LblBeacon._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.beacon,
      this.lat,
      this.lon,
      this.depth,
      this.queryChannel,
      this.replyChannel,
      this.transponderDelay})
      : super._();

  @override
  LblBeacon rebuild(void updates(LblBeaconBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LblBeaconBuilder toBuilder() => new LblBeaconBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblBeacon &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        beacon == this.beacon &&
        lat == this.lat &&
        lon == this.lon &&
        depth == this.depth &&
        queryChannel == this.queryChannel &&
        replyChannel == this.replyChannel &&
        transponderDelay == this.transponderDelay;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        beacon?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        depth?.hashCode), 
        queryChannel?.hashCode), 
        replyChannel?.hashCode), 
        transponderDelay?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblBeacon')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('beacon', beacon)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('depth', depth)
          ..add('queryChannel', queryChannel)
          ..add('replyChannel', replyChannel)
          ..add('transponderDelay', transponderDelay))
        .toString();
  }
}

/// LBL Beacon Configuration builder class
///
class LblBeaconBuilder implements Builder<LblBeacon, LblBeaconBuilder>, ImcBuilderHeaderPart {
  _$LblBeacon _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _beacon;
  String get beacon => _$this._beacon;
  set beacon(String beacon) => _$this._beacon = beacon;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _depth;
  double get depth => _$this._depth;
  set depth(double depth) => _$this._depth = depth;

  int _queryChannel;
  int get queryChannel => _$this._queryChannel;
  set queryChannel(int queryChannel) => _$this._queryChannel = queryChannel;

  int _replyChannel;
  int get replyChannel => _$this._replyChannel;
  set replyChannel(int replyChannel) => _$this._replyChannel = replyChannel;

  int _transponderDelay;
  int get transponderDelay => _$this._transponderDelay;
  set transponderDelay(int transponderDelay) => _$this._transponderDelay = transponderDelay;

  LblBeaconBuilder();

  LblBeaconBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _beacon = _$v.beacon;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _depth = _$v.depth;
      _queryChannel = _$v.queryChannel;
      _replyChannel = _$v.replyChannel;
      _transponderDelay = _$v.transponderDelay;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblBeacon other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LblBeacon;
  }

  @override
  void update(void updates(LblBeaconBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LblBeacon build() {
    final _$result = _$v ??
        new _$LblBeacon._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            beacon: beacon ?? '',
            lat: lat ?? 0,
            lon: lon ?? 0,
            depth: depth ?? 0,
            queryChannel: queryChannel ?? 0,
            replyChannel: replyChannel ?? 0,
            transponderDelay: transponderDelay ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// LBL Configuration immutable class
///
class _$LblConfig extends LblConfig {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LblConfigEnumOp op;
  @override
  final List<LblBeacon> beacons;

  factory _$LblConfig([void updates(LblConfigBuilder b)]) =>
      (new LblConfigBuilder()..update(updates)).build();

  _$LblConfig._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.beacons})
      : super._();

  @override
  LblConfig rebuild(void updates(LblConfigBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LblConfigBuilder toBuilder() => new LblConfigBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblConfig &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        beacons == this.beacons;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        beacons?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblConfig')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('beacons', beacons))
        .toString();
  }
}

/// LBL Configuration builder class
///
class LblConfigBuilder implements Builder<LblConfig, LblConfigBuilder>, ImcBuilderHeaderPart {
  _$LblConfig _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LblConfigEnumOp _op;
  LblConfigEnumOp get op => _$this._op;
  set op(LblConfigEnumOp op) => _$this._op = op;

  List<LblBeacon> _beacons;
  List<LblBeacon> get beacons => _$this._beacons;
  set beacons(List<LblBeacon> beacons) => _$this._beacons = beacons;

  LblConfigBuilder();

  LblConfigBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _beacons = _$v.beacons;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblConfig other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LblConfig;
  }

  @override
  void update(void updates(LblConfigBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LblConfig build() {
    final _$result = _$v ??
        new _$LblConfig._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? LblConfigEnumOp(0),
            beacons: beacons ?? List<LblBeacon>(0));
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Message immutable class
///
class _$AcousticMessage extends AcousticMessage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ImcMessage message;

  factory _$AcousticMessage([void updates(AcousticMessageBuilder b)]) =>
      (new AcousticMessageBuilder()..update(updates)).build();

  _$AcousticMessage._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.message})
      : super._();

  @override
  AcousticMessage rebuild(void updates(AcousticMessageBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticMessageBuilder toBuilder() => new AcousticMessageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticMessage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        message == this.message;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        message?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticMessage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('message', message))
        .toString();
  }
}

/// Acoustic Message builder class
///
class AcousticMessageBuilder implements Builder<AcousticMessage, AcousticMessageBuilder>, ImcBuilderHeaderPart {
  _$AcousticMessage _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ImcMessage _message;
  ImcMessage get message => _$this._message;
  set message(ImcMessage message) => _$this._message = message;

  AcousticMessageBuilder();

  AcousticMessageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _message = _$v.message;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticMessage other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticMessage;
  }

  @override
  void update(void updates(AcousticMessageBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticMessage build() {
    final _$result = _$v ??
        new _$AcousticMessage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            message: message);
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Operation immutable class
///
class _$AcousticOperation extends AcousticOperation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final AcousticOperationEnumOp op;
  @override
  final String system;
  @override
  final double range;
  @override
  final ImcMessage msg;

  factory _$AcousticOperation([void updates(AcousticOperationBuilder b)]) =>
      (new AcousticOperationBuilder()..update(updates)).build();

  _$AcousticOperation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.system,
      this.range,
      this.msg})
      : super._();

  @override
  AcousticOperation rebuild(void updates(AcousticOperationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticOperationBuilder toBuilder() => new AcousticOperationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticOperation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        system == this.system &&
        range == this.range &&
        msg == this.msg;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        system?.hashCode), 
        range?.hashCode), 
        msg?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticOperation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('system', system)
          ..add('range', range)
          ..add('msg', msg))
        .toString();
  }
}

/// Acoustic Operation builder class
///
class AcousticOperationBuilder implements Builder<AcousticOperation, AcousticOperationBuilder>, ImcBuilderHeaderPart {
  _$AcousticOperation _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AcousticOperationEnumOp _op;
  AcousticOperationEnumOp get op => _$this._op;
  set op(AcousticOperationEnumOp op) => _$this._op = op;

  String _system;
  String get system => _$this._system;
  set system(String system) => _$this._system = system;

  double _range;
  double get range => _$this._range;
  set range(double range) => _$this._range = range;

  ImcMessage _msg;
  ImcMessage get msg => _$this._msg;
  set msg(ImcMessage msg) => _$this._msg = msg;

  AcousticOperationBuilder();

  AcousticOperationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _system = _$v.system;
      _range = _$v.range;
      _msg = _$v.msg;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticOperation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticOperation;
  }

  @override
  void update(void updates(AcousticOperationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticOperation build() {
    final _$result = _$v ??
        new _$AcousticOperation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? AcousticOperationEnumOp(0),
            system: system ?? '',
            range: range ?? 0,
            msg: msg);
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Systems Query immutable class
///
class _$AcousticSystemsQuery extends AcousticSystemsQuery {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$AcousticSystemsQuery([void updates(AcousticSystemsQueryBuilder b)]) =>
      (new AcousticSystemsQueryBuilder()..update(updates)).build();

  _$AcousticSystemsQuery._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  AcousticSystemsQuery rebuild(void updates(AcousticSystemsQueryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticSystemsQueryBuilder toBuilder() => new AcousticSystemsQueryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticSystemsQuery &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticSystemsQuery')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Acoustic Systems Query builder class
///
class AcousticSystemsQueryBuilder implements Builder<AcousticSystemsQuery, AcousticSystemsQueryBuilder>, ImcBuilderHeaderPart {
  _$AcousticSystemsQuery _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AcousticSystemsQueryBuilder();

  AcousticSystemsQueryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticSystemsQuery other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticSystemsQuery;
  }

  @override
  void update(void updates(AcousticSystemsQueryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticSystemsQuery build() {
    final _$result = _$v ??
        new _$AcousticSystemsQuery._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Systems immutable class
///
class _$AcousticSystems extends AcousticSystems {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String list;

  factory _$AcousticSystems([void updates(AcousticSystemsBuilder b)]) =>
      (new AcousticSystemsBuilder()..update(updates)).build();

  _$AcousticSystems._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.list})
      : super._();

  @override
  AcousticSystems rebuild(void updates(AcousticSystemsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticSystemsBuilder toBuilder() => new AcousticSystemsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticSystems &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        list == this.list;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        list?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticSystems')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('list', list))
        .toString();
  }
}

/// Acoustic Systems builder class
///
class AcousticSystemsBuilder implements Builder<AcousticSystems, AcousticSystemsBuilder>, ImcBuilderHeaderPart {
  _$AcousticSystems _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _list;
  String get list => _$this._list;
  set list(String list) => _$this._list = list;

  AcousticSystemsBuilder();

  AcousticSystemsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _list = _$v.list;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticSystems other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticSystems;
  }

  @override
  void update(void updates(AcousticSystemsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticSystems build() {
    final _$result = _$v ??
        new _$AcousticSystems._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            list: list ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Link Quality immutable class
///
class _$AcousticLink extends AcousticLink {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String peer;
  @override
  final double rssi;
  @override
  final int integrity;

  factory _$AcousticLink([void updates(AcousticLinkBuilder b)]) =>
      (new AcousticLinkBuilder()..update(updates)).build();

  _$AcousticLink._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.peer,
      this.rssi,
      this.integrity})
      : super._();

  @override
  AcousticLink rebuild(void updates(AcousticLinkBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticLinkBuilder toBuilder() => new AcousticLinkBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticLink &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        peer == this.peer &&
        rssi == this.rssi &&
        integrity == this.integrity;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        peer?.hashCode), 
        rssi?.hashCode), 
        integrity?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticLink')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('peer', peer)
          ..add('rssi', rssi)
          ..add('integrity', integrity))
        .toString();
  }
}

/// Acoustic Link Quality builder class
///
class AcousticLinkBuilder implements Builder<AcousticLink, AcousticLinkBuilder>, ImcBuilderHeaderPart {
  _$AcousticLink _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _peer;
  String get peer => _$this._peer;
  set peer(String peer) => _$this._peer = peer;

  double _rssi;
  double get rssi => _$this._rssi;
  set rssi(double rssi) => _$this._rssi = rssi;

  int _integrity;
  int get integrity => _$this._integrity;
  set integrity(int integrity) => _$this._integrity = integrity;

  AcousticLinkBuilder();

  AcousticLinkBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _peer = _$v.peer;
      _rssi = _$v.rssi;
      _integrity = _$v.integrity;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticLink other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticLink;
  }

  @override
  void update(void updates(AcousticLinkBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticLink build() {
    final _$result = _$v ??
        new _$AcousticLink._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            peer: peer ?? '',
            rssi: rssi ?? 0,
            integrity: integrity ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Revolutions Per Minute immutable class
///
class _$Rpm extends Rpm {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int value;

  factory _$Rpm([void updates(RpmBuilder b)]) =>
      (new RpmBuilder()..update(updates)).build();

  _$Rpm._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Rpm rebuild(void updates(RpmBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RpmBuilder toBuilder() => new RpmBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Rpm &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Rpm')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Revolutions Per Minute builder class
///
class RpmBuilder implements Builder<Rpm, RpmBuilder>, ImcBuilderHeaderPart {
  _$Rpm _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _value;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  RpmBuilder();

  RpmBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Rpm other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Rpm;
  }

  @override
  void update(void updates(RpmBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Rpm build() {
    final _$result = _$v ??
        new _$Rpm._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Voltage immutable class
///
class _$Voltage extends Voltage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Voltage([void updates(VoltageBuilder b)]) =>
      (new VoltageBuilder()..update(updates)).build();

  _$Voltage._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Voltage rebuild(void updates(VoltageBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VoltageBuilder toBuilder() => new VoltageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Voltage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Voltage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Voltage builder class
///
class VoltageBuilder implements Builder<Voltage, VoltageBuilder>, ImcBuilderHeaderPart {
  _$Voltage _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  VoltageBuilder();

  VoltageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Voltage other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Voltage;
  }

  @override
  void update(void updates(VoltageBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Voltage build() {
    final _$result = _$v ??
        new _$Voltage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Current immutable class
///
class _$Current extends Current {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Current([void updates(CurrentBuilder b)]) =>
      (new CurrentBuilder()..update(updates)).build();

  _$Current._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Current rebuild(void updates(CurrentBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CurrentBuilder toBuilder() => new CurrentBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Current &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Current')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Current builder class
///
class CurrentBuilder implements Builder<Current, CurrentBuilder>, ImcBuilderHeaderPart {
  _$Current _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  CurrentBuilder();

  CurrentBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Current other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Current;
  }

  @override
  void update(void updates(CurrentBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Current build() {
    final _$result = _$v ??
        new _$Current._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// GPS Fix immutable class
///
class _$GpsFix extends GpsFix {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final GpsFixBitfieldValidity validity;
  @override
  final GpsFixEnumType type;
  @override
  final int utcYear;
  @override
  final int utcMonth;
  @override
  final int utcDay;
  @override
  final double utcTime;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final int satellites;
  @override
  final double cog;
  @override
  final double sog;
  @override
  final double hdop;
  @override
  final double vdop;
  @override
  final double hacc;
  @override
  final double vacc;

  factory _$GpsFix([void updates(GpsFixBuilder b)]) =>
      (new GpsFixBuilder()..update(updates)).build();

  _$GpsFix._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.validity,
      this.type,
      this.utcYear,
      this.utcMonth,
      this.utcDay,
      this.utcTime,
      this.lat,
      this.lon,
      this.height,
      this.satellites,
      this.cog,
      this.sog,
      this.hdop,
      this.vdop,
      this.hacc,
      this.vacc})
      : super._();

  @override
  GpsFix rebuild(void updates(GpsFixBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GpsFixBuilder toBuilder() => new GpsFixBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GpsFix &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == this.validity &&
        type == this.type &&
        utcYear == this.utcYear &&
        utcMonth == this.utcMonth &&
        utcDay == this.utcDay &&
        utcTime == this.utcTime &&
        lat == this.lat &&
        lon == this.lon &&
        height == this.height &&
        satellites == this.satellites &&
        cog == this.cog &&
        sog == this.sog &&
        hdop == this.hdop &&
        vdop == this.vdop &&
        hacc == this.hacc &&
        vacc == this.vacc;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        validity?.hashCode), 
        type?.hashCode), 
        utcYear?.hashCode), 
        utcMonth?.hashCode), 
        utcDay?.hashCode), 
        utcTime?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        height?.hashCode), 
        satellites?.hashCode), 
        cog?.hashCode), 
        sog?.hashCode), 
        hdop?.hashCode), 
        vdop?.hashCode), 
        hacc?.hashCode), 
        vacc?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GpsFix')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('validity', validity)
          ..add('type', type)
          ..add('utcYear', utcYear)
          ..add('utcMonth', utcMonth)
          ..add('utcDay', utcDay)
          ..add('utcTime', utcTime)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('height', height)
          ..add('satellites', satellites)
          ..add('cog', cog)
          ..add('sog', sog)
          ..add('hdop', hdop)
          ..add('vdop', vdop)
          ..add('hacc', hacc)
          ..add('vacc', vacc))
        .toString();
  }
}

/// GPS Fix builder class
///
class GpsFixBuilder implements Builder<GpsFix, GpsFixBuilder>, ImcBuilderHeaderPart {
  _$GpsFix _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GpsFixBitfieldValidity _validity;
  GpsFixBitfieldValidity get validity => _$this._validity;
  set validity(GpsFixBitfieldValidity validity) => _$this._validity = validity;

  GpsFixEnumType _type;
  GpsFixEnumType get type => _$this._type;
  set type(GpsFixEnumType type) => _$this._type = type;

  int _utcYear;
  int get utcYear => _$this._utcYear;
  set utcYear(int utcYear) => _$this._utcYear = utcYear;

  int _utcMonth;
  int get utcMonth => _$this._utcMonth;
  set utcMonth(int utcMonth) => _$this._utcMonth = utcMonth;

  int _utcDay;
  int get utcDay => _$this._utcDay;
  set utcDay(int utcDay) => _$this._utcDay = utcDay;

  double _utcTime;
  double get utcTime => _$this._utcTime;
  set utcTime(double utcTime) => _$this._utcTime = utcTime;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  int _satellites;
  int get satellites => _$this._satellites;
  set satellites(int satellites) => _$this._satellites = satellites;

  double _cog;
  double get cog => _$this._cog;
  set cog(double cog) => _$this._cog = cog;

  double _sog;
  double get sog => _$this._sog;
  set sog(double sog) => _$this._sog = sog;

  double _hdop;
  double get hdop => _$this._hdop;
  set hdop(double hdop) => _$this._hdop = hdop;

  double _vdop;
  double get vdop => _$this._vdop;
  set vdop(double vdop) => _$this._vdop = vdop;

  double _hacc;
  double get hacc => _$this._hacc;
  set hacc(double hacc) => _$this._hacc = hacc;

  double _vacc;
  double get vacc => _$this._vacc;
  set vacc(double vacc) => _$this._vacc = vacc;

  GpsFixBuilder();

  GpsFixBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _type = _$v.type;
      _utcYear = _$v.utcYear;
      _utcMonth = _$v.utcMonth;
      _utcDay = _$v.utcDay;
      _utcTime = _$v.utcTime;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _satellites = _$v.satellites;
      _cog = _$v.cog;
      _sog = _$v.sog;
      _hdop = _$v.hdop;
      _vdop = _$v.vdop;
      _hacc = _$v.hacc;
      _vacc = _$v.vacc;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GpsFix other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GpsFix;
  }

  @override
  void update(void updates(GpsFixBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GpsFix build() {
    final _$result = _$v ??
        new _$GpsFix._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            validity: validity ?? GpsFixBitfieldValidity(0),
            type: type ?? GpsFixEnumType(0),
            utcYear: utcYear ?? 0,
            utcMonth: utcMonth ?? 0,
            utcDay: utcDay ?? 0,
            utcTime: utcTime ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            height: height ?? 0,
            satellites: satellites ?? 0,
            cog: cog ?? 0,
            sog: sog ?? 0,
            hdop: hdop ?? 0,
            vdop: vdop ?? 0,
            hacc: hacc ?? 0,
            vacc: vacc ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Euler Angles immutable class
///
class _$EulerAngles extends EulerAngles {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double psiMagnetic;

  factory _$EulerAngles([void updates(EulerAnglesBuilder b)]) =>
      (new EulerAnglesBuilder()..update(updates)).build();

  _$EulerAngles._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.time,
      this.phi,
      this.theta,
      this.psi,
      this.psiMagnetic})
      : super._();

  @override
  EulerAngles rebuild(void updates(EulerAnglesBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EulerAnglesBuilder toBuilder() => new EulerAnglesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EulerAngles &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        time == this.time &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi &&
        psiMagnetic == this.psiMagnetic;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        time?.hashCode), 
        phi?.hashCode), 
        theta?.hashCode), 
        psi?.hashCode), 
        psiMagnetic?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EulerAngles')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('time', time)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi)
          ..add('psiMagnetic', psiMagnetic))
        .toString();
  }
}

/// Euler Angles builder class
///
class EulerAnglesBuilder implements Builder<EulerAngles, EulerAnglesBuilder>, ImcBuilderHeaderPart {
  _$EulerAngles _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _psiMagnetic;
  double get psiMagnetic => _$this._psiMagnetic;
  set psiMagnetic(double psiMagnetic) => _$this._psiMagnetic = psiMagnetic;

  EulerAnglesBuilder();

  EulerAnglesBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _psiMagnetic = _$v.psiMagnetic;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EulerAngles other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EulerAngles;
  }

  @override
  void update(void updates(EulerAnglesBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EulerAngles build() {
    final _$result = _$v ??
        new _$EulerAngles._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            time: time ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0,
            psiMagnetic: psiMagnetic ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Euler Angles Delta immutable class
///
class _$EulerAnglesDelta extends EulerAnglesDelta {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double timestep;

  factory _$EulerAnglesDelta([void updates(EulerAnglesDeltaBuilder b)]) =>
      (new EulerAnglesDeltaBuilder()..update(updates)).build();

  _$EulerAnglesDelta._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z,
      this.timestep})
      : super._();

  @override
  EulerAnglesDelta rebuild(void updates(EulerAnglesDeltaBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EulerAnglesDeltaBuilder toBuilder() => new EulerAnglesDeltaBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EulerAnglesDelta &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        time == this.time &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        timestep == this.timestep;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        time?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode), 
        timestep?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EulerAnglesDelta')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('time', time)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('timestep', timestep))
        .toString();
  }
}

/// Euler Angles Delta builder class
///
class EulerAnglesDeltaBuilder implements Builder<EulerAnglesDelta, EulerAnglesDeltaBuilder>, ImcBuilderHeaderPart {
  _$EulerAnglesDelta _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _timestep;
  double get timestep => _$this._timestep;
  set timestep(double timestep) => _$this._timestep = timestep;

  EulerAnglesDeltaBuilder();

  EulerAnglesDeltaBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _timestep = _$v.timestep;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EulerAnglesDelta other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EulerAnglesDelta;
  }

  @override
  void update(void updates(EulerAnglesDeltaBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EulerAnglesDelta build() {
    final _$result = _$v ??
        new _$EulerAnglesDelta._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            time: time ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            timestep: timestep ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Angular Velocity immutable class
///
class _$AngularVelocity extends AngularVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$AngularVelocity([void updates(AngularVelocityBuilder b)]) =>
      (new AngularVelocityBuilder()..update(updates)).build();

  _$AngularVelocity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  AngularVelocity rebuild(void updates(AngularVelocityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AngularVelocityBuilder toBuilder() => new AngularVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AngularVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        time == this.time &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        time?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AngularVelocity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('time', time)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Angular Velocity builder class
///
class AngularVelocityBuilder implements Builder<AngularVelocity, AngularVelocityBuilder>, ImcBuilderHeaderPart {
  _$AngularVelocity _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  AngularVelocityBuilder();

  AngularVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AngularVelocity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AngularVelocity;
  }

  @override
  void update(void updates(AngularVelocityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AngularVelocity build() {
    final _$result = _$v ??
        new _$AngularVelocity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            time: time ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Acceleration immutable class
///
class _$Acceleration extends Acceleration {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$Acceleration([void updates(AccelerationBuilder b)]) =>
      (new AccelerationBuilder()..update(updates)).build();

  _$Acceleration._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  Acceleration rebuild(void updates(AccelerationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AccelerationBuilder toBuilder() => new AccelerationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Acceleration &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        time == this.time &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        time?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Acceleration')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('time', time)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Acceleration builder class
///
class AccelerationBuilder implements Builder<Acceleration, AccelerationBuilder>, ImcBuilderHeaderPart {
  _$Acceleration _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  AccelerationBuilder();

  AccelerationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Acceleration other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Acceleration;
  }

  @override
  void update(void updates(AccelerationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Acceleration build() {
    final _$result = _$v ??
        new _$Acceleration._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            time: time ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Magnetic Field immutable class
///
class _$MagneticField extends MagneticField {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$MagneticField([void updates(MagneticFieldBuilder b)]) =>
      (new MagneticFieldBuilder()..update(updates)).build();

  _$MagneticField._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  MagneticField rebuild(void updates(MagneticFieldBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MagneticFieldBuilder toBuilder() => new MagneticFieldBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MagneticField &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        time == this.time &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        time?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MagneticField')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('time', time)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Magnetic Field builder class
///
class MagneticFieldBuilder implements Builder<MagneticField, MagneticFieldBuilder>, ImcBuilderHeaderPart {
  _$MagneticField _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  MagneticFieldBuilder();

  MagneticFieldBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MagneticField other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$MagneticField;
  }

  @override
  void update(void updates(MagneticFieldBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$MagneticField build() {
    final _$result = _$v ??
        new _$MagneticField._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            time: time ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Ground Velocity immutable class
///
class _$GroundVelocity extends GroundVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final GroundVelocityBitfieldValidity validity;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$GroundVelocity([void updates(GroundVelocityBuilder b)]) =>
      (new GroundVelocityBuilder()..update(updates)).build();

  _$GroundVelocity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.validity,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  GroundVelocity rebuild(void updates(GroundVelocityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GroundVelocityBuilder toBuilder() => new GroundVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GroundVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == this.validity &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        validity?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GroundVelocity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('validity', validity)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Ground Velocity builder class
///
class GroundVelocityBuilder implements Builder<GroundVelocity, GroundVelocityBuilder>, ImcBuilderHeaderPart {
  _$GroundVelocity _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GroundVelocityBitfieldValidity _validity;
  GroundVelocityBitfieldValidity get validity => _$this._validity;
  set validity(GroundVelocityBitfieldValidity validity) => _$this._validity = validity;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  GroundVelocityBuilder();

  GroundVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GroundVelocity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GroundVelocity;
  }

  @override
  void update(void updates(GroundVelocityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GroundVelocity build() {
    final _$result = _$v ??
        new _$GroundVelocity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            validity: validity ?? GroundVelocityBitfieldValidity(0),
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Water Velocity immutable class
///
class _$WaterVelocity extends WaterVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final WaterVelocityBitfieldValidity validity;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$WaterVelocity([void updates(WaterVelocityBuilder b)]) =>
      (new WaterVelocityBuilder()..update(updates)).build();

  _$WaterVelocity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.validity,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  WaterVelocity rebuild(void updates(WaterVelocityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  WaterVelocityBuilder toBuilder() => new WaterVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is WaterVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == this.validity &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        validity?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('WaterVelocity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('validity', validity)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Water Velocity builder class
///
class WaterVelocityBuilder implements Builder<WaterVelocity, WaterVelocityBuilder>, ImcBuilderHeaderPart {
  _$WaterVelocity _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  WaterVelocityBitfieldValidity _validity;
  WaterVelocityBitfieldValidity get validity => _$this._validity;
  set validity(WaterVelocityBitfieldValidity validity) => _$this._validity = validity;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  WaterVelocityBuilder();

  WaterVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(WaterVelocity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$WaterVelocity;
  }

  @override
  void update(void updates(WaterVelocityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$WaterVelocity build() {
    final _$result = _$v ??
        new _$WaterVelocity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            validity: validity ?? WaterVelocityBitfieldValidity(0),
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Velocity Delta immutable class
///
class _$VelocityDelta extends VelocityDelta {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$VelocityDelta([void updates(VelocityDeltaBuilder b)]) =>
      (new VelocityDeltaBuilder()..update(updates)).build();

  _$VelocityDelta._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  VelocityDelta rebuild(void updates(VelocityDeltaBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VelocityDeltaBuilder toBuilder() => new VelocityDeltaBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VelocityDelta &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        time == this.time &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        time?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VelocityDelta')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('time', time)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Velocity Delta builder class
///
class VelocityDeltaBuilder implements Builder<VelocityDelta, VelocityDeltaBuilder>, ImcBuilderHeaderPart {
  _$VelocityDelta _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  VelocityDeltaBuilder();

  VelocityDeltaBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VelocityDelta other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VelocityDelta;
  }

  @override
  void update(void updates(VelocityDeltaBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VelocityDelta build() {
    final _$result = _$v ??
        new _$VelocityDelta._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            time: time ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Distance immutable class
///
class _$Distance extends Distance {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DistanceEnumValidity validity;
  @override
  final List<DeviceState> location;
  @override
  final List<BeamConfig> beamConfig;
  @override
  final double value;

  factory _$Distance([void updates(DistanceBuilder b)]) =>
      (new DistanceBuilder()..update(updates)).build();

  _$Distance._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.validity,
      this.location,
      this.beamConfig,
      this.value})
      : super._();

  @override
  Distance rebuild(void updates(DistanceBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DistanceBuilder toBuilder() => new DistanceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Distance &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == this.validity &&
        location == this.location &&
        beamConfig == this.beamConfig &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        validity?.hashCode), 
        location?.hashCode), 
        beamConfig?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Distance')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('validity', validity)
          ..add('location', location)
          ..add('beamConfig', beamConfig)
          ..add('value', value))
        .toString();
  }
}

/// Distance builder class
///
class DistanceBuilder implements Builder<Distance, DistanceBuilder>, ImcBuilderHeaderPart {
  _$Distance _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DistanceEnumValidity _validity;
  DistanceEnumValidity get validity => _$this._validity;
  set validity(DistanceEnumValidity validity) => _$this._validity = validity;

  List<DeviceState> _location;
  List<DeviceState> get location => _$this._location;
  set location(List<DeviceState> location) => _$this._location = location;

  List<BeamConfig> _beamConfig;
  List<BeamConfig> get beamConfig => _$this._beamConfig;
  set beamConfig(List<BeamConfig> beamConfig) => _$this._beamConfig = beamConfig;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DistanceBuilder();

  DistanceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _location = _$v.location;
      _beamConfig = _$v.beamConfig;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Distance other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Distance;
  }

  @override
  void update(void updates(DistanceBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Distance build() {
    final _$result = _$v ??
        new _$Distance._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            validity: validity ?? DistanceEnumValidity(0),
            location: location ?? List<DeviceState>(0),
            beamConfig: beamConfig ?? List<BeamConfig>(0),
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Temperature immutable class
///
class _$Temperature extends Temperature {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Temperature([void updates(TemperatureBuilder b)]) =>
      (new TemperatureBuilder()..update(updates)).build();

  _$Temperature._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Temperature rebuild(void updates(TemperatureBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TemperatureBuilder toBuilder() => new TemperatureBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Temperature &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Temperature')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Temperature builder class
///
class TemperatureBuilder implements Builder<Temperature, TemperatureBuilder>, ImcBuilderHeaderPart {
  _$Temperature _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  TemperatureBuilder();

  TemperatureBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Temperature other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Temperature;
  }

  @override
  void update(void updates(TemperatureBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Temperature build() {
    final _$result = _$v ??
        new _$Temperature._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Pressure immutable class
///
class _$Pressure extends Pressure {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Pressure([void updates(PressureBuilder b)]) =>
      (new PressureBuilder()..update(updates)).build();

  _$Pressure._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Pressure rebuild(void updates(PressureBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PressureBuilder toBuilder() => new PressureBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Pressure &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Pressure')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Pressure builder class
///
class PressureBuilder implements Builder<Pressure, PressureBuilder>, ImcBuilderHeaderPart {
  _$Pressure _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  PressureBuilder();

  PressureBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Pressure other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Pressure;
  }

  @override
  void update(void updates(PressureBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Pressure build() {
    final _$result = _$v ??
        new _$Pressure._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Depth immutable class
///
class _$Depth extends Depth {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Depth([void updates(DepthBuilder b)]) =>
      (new DepthBuilder()..update(updates)).build();

  _$Depth._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Depth rebuild(void updates(DepthBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DepthBuilder toBuilder() => new DepthBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Depth &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Depth')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Depth builder class
///
class DepthBuilder implements Builder<Depth, DepthBuilder>, ImcBuilderHeaderPart {
  _$Depth _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DepthBuilder();

  DepthBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Depth other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Depth;
  }

  @override
  void update(void updates(DepthBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Depth build() {
    final _$result = _$v ??
        new _$Depth._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Depth Offset immutable class
///
class _$DepthOffset extends DepthOffset {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DepthOffset([void updates(DepthOffsetBuilder b)]) =>
      (new DepthOffsetBuilder()..update(updates)).build();

  _$DepthOffset._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DepthOffset rebuild(void updates(DepthOffsetBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DepthOffsetBuilder toBuilder() => new DepthOffsetBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DepthOffset &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DepthOffset')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Depth Offset builder class
///
class DepthOffsetBuilder implements Builder<DepthOffset, DepthOffsetBuilder>, ImcBuilderHeaderPart {
  _$DepthOffset _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DepthOffsetBuilder();

  DepthOffsetBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DepthOffset other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DepthOffset;
  }

  @override
  void update(void updates(DepthOffsetBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DepthOffset build() {
    final _$result = _$v ??
        new _$DepthOffset._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Sound Speed immutable class
///
class _$SoundSpeed extends SoundSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$SoundSpeed([void updates(SoundSpeedBuilder b)]) =>
      (new SoundSpeedBuilder()..update(updates)).build();

  _$SoundSpeed._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  SoundSpeed rebuild(void updates(SoundSpeedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SoundSpeedBuilder toBuilder() => new SoundSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoundSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoundSpeed')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Sound Speed builder class
///
class SoundSpeedBuilder implements Builder<SoundSpeed, SoundSpeedBuilder>, ImcBuilderHeaderPart {
  _$SoundSpeed _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SoundSpeedBuilder();

  SoundSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoundSpeed other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SoundSpeed;
  }

  @override
  void update(void updates(SoundSpeedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SoundSpeed build() {
    final _$result = _$v ??
        new _$SoundSpeed._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Water Density immutable class
///
class _$WaterDensity extends WaterDensity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$WaterDensity([void updates(WaterDensityBuilder b)]) =>
      (new WaterDensityBuilder()..update(updates)).build();

  _$WaterDensity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  WaterDensity rebuild(void updates(WaterDensityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  WaterDensityBuilder toBuilder() => new WaterDensityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is WaterDensity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('WaterDensity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Water Density builder class
///
class WaterDensityBuilder implements Builder<WaterDensity, WaterDensityBuilder>, ImcBuilderHeaderPart {
  _$WaterDensity _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  WaterDensityBuilder();

  WaterDensityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(WaterDensity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$WaterDensity;
  }

  @override
  void update(void updates(WaterDensityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$WaterDensity build() {
    final _$result = _$v ??
        new _$WaterDensity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Conductivity immutable class
///
class _$Conductivity extends Conductivity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Conductivity([void updates(ConductivityBuilder b)]) =>
      (new ConductivityBuilder()..update(updates)).build();

  _$Conductivity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Conductivity rebuild(void updates(ConductivityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ConductivityBuilder toBuilder() => new ConductivityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Conductivity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Conductivity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Conductivity builder class
///
class ConductivityBuilder implements Builder<Conductivity, ConductivityBuilder>, ImcBuilderHeaderPart {
  _$Conductivity _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ConductivityBuilder();

  ConductivityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Conductivity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Conductivity;
  }

  @override
  void update(void updates(ConductivityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Conductivity build() {
    final _$result = _$v ??
        new _$Conductivity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Salinity immutable class
///
class _$Salinity extends Salinity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Salinity([void updates(SalinityBuilder b)]) =>
      (new SalinityBuilder()..update(updates)).build();

  _$Salinity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Salinity rebuild(void updates(SalinityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SalinityBuilder toBuilder() => new SalinityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Salinity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Salinity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Salinity builder class
///
class SalinityBuilder implements Builder<Salinity, SalinityBuilder>, ImcBuilderHeaderPart {
  _$Salinity _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SalinityBuilder();

  SalinityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Salinity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Salinity;
  }

  @override
  void update(void updates(SalinityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Salinity build() {
    final _$result = _$v ??
        new _$Salinity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Wind Speed immutable class
///
class _$WindSpeed extends WindSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double direction;
  @override
  final double speed;
  @override
  final double turbulence;

  factory _$WindSpeed([void updates(WindSpeedBuilder b)]) =>
      (new WindSpeedBuilder()..update(updates)).build();

  _$WindSpeed._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.direction,
      this.speed,
      this.turbulence})
      : super._();

  @override
  WindSpeed rebuild(void updates(WindSpeedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  WindSpeedBuilder toBuilder() => new WindSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is WindSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        direction == this.direction &&
        speed == this.speed &&
        turbulence == this.turbulence;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        direction?.hashCode), 
        speed?.hashCode), 
        turbulence?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('WindSpeed')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('direction', direction)
          ..add('speed', speed)
          ..add('turbulence', turbulence))
        .toString();
  }
}

/// Wind Speed builder class
///
class WindSpeedBuilder implements Builder<WindSpeed, WindSpeedBuilder>, ImcBuilderHeaderPart {
  _$WindSpeed _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _direction;
  double get direction => _$this._direction;
  set direction(double direction) => _$this._direction = direction;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  double _turbulence;
  double get turbulence => _$this._turbulence;
  set turbulence(double turbulence) => _$this._turbulence = turbulence;

  WindSpeedBuilder();

  WindSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _direction = _$v.direction;
      _speed = _$v.speed;
      _turbulence = _$v.turbulence;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(WindSpeed other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$WindSpeed;
  }

  @override
  void update(void updates(WindSpeedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$WindSpeed build() {
    final _$result = _$v ??
        new _$WindSpeed._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            direction: direction ?? 0,
            speed: speed ?? 0,
            turbulence: turbulence ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Relative Humidity immutable class
///
class _$RelativeHumidity extends RelativeHumidity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$RelativeHumidity([void updates(RelativeHumidityBuilder b)]) =>
      (new RelativeHumidityBuilder()..update(updates)).build();

  _$RelativeHumidity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  RelativeHumidity rebuild(void updates(RelativeHumidityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RelativeHumidityBuilder toBuilder() => new RelativeHumidityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RelativeHumidity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RelativeHumidity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Relative Humidity builder class
///
class RelativeHumidityBuilder implements Builder<RelativeHumidity, RelativeHumidityBuilder>, ImcBuilderHeaderPart {
  _$RelativeHumidity _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RelativeHumidityBuilder();

  RelativeHumidityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RelativeHumidity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RelativeHumidity;
  }

  @override
  void update(void updates(RelativeHumidityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RelativeHumidity build() {
    final _$result = _$v ??
        new _$RelativeHumidity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Device Data (Text) immutable class
///
class _$DevDataText extends DevDataText {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String value;

  factory _$DevDataText([void updates(DevDataTextBuilder b)]) =>
      (new DevDataTextBuilder()..update(updates)).build();

  _$DevDataText._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DevDataText rebuild(void updates(DevDataTextBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DevDataTextBuilder toBuilder() => new DevDataTextBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DevDataText &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DevDataText')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Device Data (Text) builder class
///
class DevDataTextBuilder implements Builder<DevDataText, DevDataTextBuilder>, ImcBuilderHeaderPart {
  _$DevDataText _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  DevDataTextBuilder();

  DevDataTextBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DevDataText other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DevDataText;
  }

  @override
  void update(void updates(DevDataTextBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DevDataText build() {
    final _$result = _$v ??
        new _$DevDataText._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Device Data (Binary) immutable class
///
class _$DevDataBinary extends DevDataBinary {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final List<int> value;

  factory _$DevDataBinary([void updates(DevDataBinaryBuilder b)]) =>
      (new DevDataBinaryBuilder()..update(updates)).build();

  _$DevDataBinary._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DevDataBinary rebuild(void updates(DevDataBinaryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DevDataBinaryBuilder toBuilder() => new DevDataBinaryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DevDataBinary &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DevDataBinary')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Device Data (Binary) builder class
///
class DevDataBinaryBuilder implements Builder<DevDataBinary, DevDataBinaryBuilder>, ImcBuilderHeaderPart {
  _$DevDataBinary _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  List<int> _value;
  List<int> get value => _$this._value;
  set value(List<int> value) => _$this._value = value;

  DevDataBinaryBuilder();

  DevDataBinaryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DevDataBinary other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DevDataBinary;
  }

  @override
  void update(void updates(DevDataBinaryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DevDataBinary build() {
    final _$result = _$v ??
        new _$DevDataBinary._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// Force immutable class
///
class _$Force extends Force {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Force([void updates(ForceBuilder b)]) =>
      (new ForceBuilder()..update(updates)).build();

  _$Force._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Force rebuild(void updates(ForceBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ForceBuilder toBuilder() => new ForceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Force &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Force')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Force builder class
///
class ForceBuilder implements Builder<Force, ForceBuilder>, ImcBuilderHeaderPart {
  _$Force _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ForceBuilder();

  ForceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Force other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Force;
  }

  @override
  void update(void updates(ForceBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Force build() {
    final _$result = _$v ??
        new _$Force._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Sonar Data immutable class
///
class _$SonarData extends SonarData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final SonarDataEnumType type;
  @override
  final int frequency;
  @override
  final int minRange;
  @override
  final int maxRange;
  @override
  final int bitsPerPoint;
  @override
  final double scaleFactor;
  @override
  final List<BeamConfig> beamConfig;
  @override
  final List<int> data;

  factory _$SonarData([void updates(SonarDataBuilder b)]) =>
      (new SonarDataBuilder()..update(updates)).build();

  _$SonarData._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.frequency,
      this.minRange,
      this.maxRange,
      this.bitsPerPoint,
      this.scaleFactor,
      this.beamConfig,
      this.data})
      : super._();

  @override
  SonarData rebuild(void updates(SonarDataBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SonarDataBuilder toBuilder() => new SonarDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SonarData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        frequency == this.frequency &&
        minRange == this.minRange &&
        maxRange == this.maxRange &&
        bitsPerPoint == this.bitsPerPoint &&
        scaleFactor == this.scaleFactor &&
        beamConfig == this.beamConfig &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode), 
        frequency?.hashCode), 
        minRange?.hashCode), 
        maxRange?.hashCode), 
        bitsPerPoint?.hashCode), 
        scaleFactor?.hashCode), 
        beamConfig?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SonarData')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type)
          ..add('frequency', frequency)
          ..add('minRange', minRange)
          ..add('maxRange', maxRange)
          ..add('bitsPerPoint', bitsPerPoint)
          ..add('scaleFactor', scaleFactor)
          ..add('beamConfig', beamConfig)
          ..add('data', data))
        .toString();
  }
}

/// Sonar Data builder class
///
class SonarDataBuilder implements Builder<SonarData, SonarDataBuilder>, ImcBuilderHeaderPart {
  _$SonarData _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  SonarDataEnumType _type;
  SonarDataEnumType get type => _$this._type;
  set type(SonarDataEnumType type) => _$this._type = type;

  int _frequency;
  int get frequency => _$this._frequency;
  set frequency(int frequency) => _$this._frequency = frequency;

  int _minRange;
  int get minRange => _$this._minRange;
  set minRange(int minRange) => _$this._minRange = minRange;

  int _maxRange;
  int get maxRange => _$this._maxRange;
  set maxRange(int maxRange) => _$this._maxRange = maxRange;

  int _bitsPerPoint;
  int get bitsPerPoint => _$this._bitsPerPoint;
  set bitsPerPoint(int bitsPerPoint) => _$this._bitsPerPoint = bitsPerPoint;

  double _scaleFactor;
  double get scaleFactor => _$this._scaleFactor;
  set scaleFactor(double scaleFactor) => _$this._scaleFactor = scaleFactor;

  List<BeamConfig> _beamConfig;
  List<BeamConfig> get beamConfig => _$this._beamConfig;
  set beamConfig(List<BeamConfig> beamConfig) => _$this._beamConfig = beamConfig;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  SonarDataBuilder();

  SonarDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _frequency = _$v.frequency;
      _minRange = _$v.minRange;
      _maxRange = _$v.maxRange;
      _bitsPerPoint = _$v.bitsPerPoint;
      _scaleFactor = _$v.scaleFactor;
      _beamConfig = _$v.beamConfig;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SonarData other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SonarData;
  }

  @override
  void update(void updates(SonarDataBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SonarData build() {
    final _$result = _$v ??
        new _$SonarData._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? SonarDataEnumType(0),
            frequency: frequency ?? 0,
            minRange: minRange ?? 0,
            maxRange: maxRange ?? 0,
            bitsPerPoint: bitsPerPoint ?? 0,
            scaleFactor: scaleFactor ?? 0,
            beamConfig: beamConfig ?? List<BeamConfig>(0),
            data: data ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// Pulse immutable class
///
class _$Pulse extends Pulse {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$Pulse([void updates(PulseBuilder b)]) =>
      (new PulseBuilder()..update(updates)).build();

  _$Pulse._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  Pulse rebuild(void updates(PulseBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PulseBuilder toBuilder() => new PulseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Pulse &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Pulse')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Pulse builder class
///
class PulseBuilder implements Builder<Pulse, PulseBuilder>, ImcBuilderHeaderPart {
  _$Pulse _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PulseBuilder();

  PulseBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Pulse other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Pulse;
  }

  @override
  void update(void updates(PulseBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Pulse build() {
    final _$result = _$v ??
        new _$Pulse._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Pulse Detection Control immutable class
///
class _$PulseDetectionControl extends PulseDetectionControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PulseDetectionControlEnumOp op;

  factory _$PulseDetectionControl([void updates(PulseDetectionControlBuilder b)]) =>
      (new PulseDetectionControlBuilder()..update(updates)).build();

  _$PulseDetectionControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op})
      : super._();

  @override
  PulseDetectionControl rebuild(void updates(PulseDetectionControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PulseDetectionControlBuilder toBuilder() => new PulseDetectionControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PulseDetectionControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PulseDetectionControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op))
        .toString();
  }
}

/// Pulse Detection Control builder class
///
class PulseDetectionControlBuilder implements Builder<PulseDetectionControl, PulseDetectionControlBuilder>, ImcBuilderHeaderPart {
  _$PulseDetectionControl _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PulseDetectionControlEnumOp _op;
  PulseDetectionControlEnumOp get op => _$this._op;
  set op(PulseDetectionControlEnumOp op) => _$this._op = op;

  PulseDetectionControlBuilder();

  PulseDetectionControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PulseDetectionControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PulseDetectionControl;
  }

  @override
  void update(void updates(PulseDetectionControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PulseDetectionControl build() {
    final _$result = _$v ??
        new _$PulseDetectionControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? PulseDetectionControlEnumOp(0));
    replace(_$result);
    return _$result;
  }
}

/// Fuel Level immutable class
///
class _$FuelLevel extends FuelLevel {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final double confidence;
  @override
  final String opmodes;

  factory _$FuelLevel([void updates(FuelLevelBuilder b)]) =>
      (new FuelLevelBuilder()..update(updates)).build();

  _$FuelLevel._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value,
      this.confidence,
      this.opmodes})
      : super._();

  @override
  FuelLevel rebuild(void updates(FuelLevelBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FuelLevelBuilder toBuilder() => new FuelLevelBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FuelLevel &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value &&
        confidence == this.confidence &&
        opmodes == this.opmodes;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode), 
        confidence?.hashCode), 
        opmodes?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FuelLevel')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value)
          ..add('confidence', confidence)
          ..add('opmodes', opmodes))
        .toString();
  }
}

/// Fuel Level builder class
///
class FuelLevelBuilder implements Builder<FuelLevel, FuelLevelBuilder>, ImcBuilderHeaderPart {
  _$FuelLevel _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  double _confidence;
  double get confidence => _$this._confidence;
  set confidence(double confidence) => _$this._confidence = confidence;

  String _opmodes;
  String get opmodes => _$this._opmodes;
  set opmodes(String opmodes) => _$this._opmodes = opmodes;

  FuelLevelBuilder();

  FuelLevelBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _confidence = _$v.confidence;
      _opmodes = _$v.opmodes;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FuelLevel other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FuelLevel;
  }

  @override
  void update(void updates(FuelLevelBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FuelLevel build() {
    final _$result = _$v ??
        new _$FuelLevel._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0,
            confidence: confidence ?? 0,
            opmodes: opmodes ?? '');
    replace(_$result);
    return _$result;
  }
}

/// GPS Navigation Data immutable class
///
class _$GpsNavData extends GpsNavData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int itow;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double heightEll;
  @override
  final double heightSea;
  @override
  final double hacc;
  @override
  final double vacc;
  @override
  final double velN;
  @override
  final double velE;
  @override
  final double velD;
  @override
  final double speed;
  @override
  final double gspeed;
  @override
  final double heading;
  @override
  final double sacc;
  @override
  final double cacc;

  factory _$GpsNavData([void updates(GpsNavDataBuilder b)]) =>
      (new GpsNavDataBuilder()..update(updates)).build();

  _$GpsNavData._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.itow,
      this.lat,
      this.lon,
      this.heightEll,
      this.heightSea,
      this.hacc,
      this.vacc,
      this.velN,
      this.velE,
      this.velD,
      this.speed,
      this.gspeed,
      this.heading,
      this.sacc,
      this.cacc})
      : super._();

  @override
  GpsNavData rebuild(void updates(GpsNavDataBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GpsNavDataBuilder toBuilder() => new GpsNavDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GpsNavData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        itow == this.itow &&
        lat == this.lat &&
        lon == this.lon &&
        heightEll == this.heightEll &&
        heightSea == this.heightSea &&
        hacc == this.hacc &&
        vacc == this.vacc &&
        velN == this.velN &&
        velE == this.velE &&
        velD == this.velD &&
        speed == this.speed &&
        gspeed == this.gspeed &&
        heading == this.heading &&
        sacc == this.sacc &&
        cacc == this.cacc;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        itow?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        heightEll?.hashCode), 
        heightSea?.hashCode), 
        hacc?.hashCode), 
        vacc?.hashCode), 
        velN?.hashCode), 
        velE?.hashCode), 
        velD?.hashCode), 
        speed?.hashCode), 
        gspeed?.hashCode), 
        heading?.hashCode), 
        sacc?.hashCode), 
        cacc?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GpsNavData')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('itow', itow)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('heightEll', heightEll)
          ..add('heightSea', heightSea)
          ..add('hacc', hacc)
          ..add('vacc', vacc)
          ..add('velN', velN)
          ..add('velE', velE)
          ..add('velD', velD)
          ..add('speed', speed)
          ..add('gspeed', gspeed)
          ..add('heading', heading)
          ..add('sacc', sacc)
          ..add('cacc', cacc))
        .toString();
  }
}

/// GPS Navigation Data builder class
///
class GpsNavDataBuilder implements Builder<GpsNavData, GpsNavDataBuilder>, ImcBuilderHeaderPart {
  _$GpsNavData _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _itow;
  int get itow => _$this._itow;
  set itow(int itow) => _$this._itow = itow;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _heightEll;
  double get heightEll => _$this._heightEll;
  set heightEll(double heightEll) => _$this._heightEll = heightEll;

  double _heightSea;
  double get heightSea => _$this._heightSea;
  set heightSea(double heightSea) => _$this._heightSea = heightSea;

  double _hacc;
  double get hacc => _$this._hacc;
  set hacc(double hacc) => _$this._hacc = hacc;

  double _vacc;
  double get vacc => _$this._vacc;
  set vacc(double vacc) => _$this._vacc = vacc;

  double _velN;
  double get velN => _$this._velN;
  set velN(double velN) => _$this._velN = velN;

  double _velE;
  double get velE => _$this._velE;
  set velE(double velE) => _$this._velE = velE;

  double _velD;
  double get velD => _$this._velD;
  set velD(double velD) => _$this._velD = velD;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  double _gspeed;
  double get gspeed => _$this._gspeed;
  set gspeed(double gspeed) => _$this._gspeed = gspeed;

  double _heading;
  double get heading => _$this._heading;
  set heading(double heading) => _$this._heading = heading;

  double _sacc;
  double get sacc => _$this._sacc;
  set sacc(double sacc) => _$this._sacc = sacc;

  double _cacc;
  double get cacc => _$this._cacc;
  set cacc(double cacc) => _$this._cacc = cacc;

  GpsNavDataBuilder();

  GpsNavDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _itow = _$v.itow;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _heightEll = _$v.heightEll;
      _heightSea = _$v.heightSea;
      _hacc = _$v.hacc;
      _vacc = _$v.vacc;
      _velN = _$v.velN;
      _velE = _$v.velE;
      _velD = _$v.velD;
      _speed = _$v.speed;
      _gspeed = _$v.gspeed;
      _heading = _$v.heading;
      _sacc = _$v.sacc;
      _cacc = _$v.cacc;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GpsNavData other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GpsNavData;
  }

  @override
  void update(void updates(GpsNavDataBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GpsNavData build() {
    final _$result = _$v ??
        new _$GpsNavData._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            itow: itow ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            heightEll: heightEll ?? 0,
            heightSea: heightSea ?? 0,
            hacc: hacc ?? 0,
            vacc: vacc ?? 0,
            velN: velN ?? 0,
            velE: velE ?? 0,
            velD: velD ?? 0,
            speed: speed ?? 0,
            gspeed: gspeed ?? 0,
            heading: heading ?? 0,
            sacc: sacc ?? 0,
            cacc: cacc ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Servo Position immutable class
///
class _$ServoPosition extends ServoPosition {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double value;

  factory _$ServoPosition([void updates(ServoPositionBuilder b)]) =>
      (new ServoPositionBuilder()..update(updates)).build();

  _$ServoPosition._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.value})
      : super._();

  @override
  ServoPosition rebuild(void updates(ServoPositionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ServoPositionBuilder toBuilder() => new ServoPositionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ServoPosition &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        id?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ServoPosition')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', id)
          ..add('value', value))
        .toString();
  }
}

/// Servo Position builder class
///
class ServoPositionBuilder implements Builder<ServoPosition, ServoPositionBuilder>, ImcBuilderHeaderPart {
  _$ServoPosition _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ServoPositionBuilder();

  ServoPositionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ServoPosition other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ServoPosition;
  }

  @override
  void update(void updates(ServoPositionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ServoPosition build() {
    final _$result = _$v ??
        new _$ServoPosition._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Device State immutable class
///
class _$DeviceState extends DeviceState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;

  factory _$DeviceState([void updates(DeviceStateBuilder b)]) =>
      (new DeviceStateBuilder()..update(updates)).build();

  _$DeviceState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi})
      : super._();

  @override
  DeviceState rebuild(void updates(DeviceStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DeviceStateBuilder toBuilder() => new DeviceStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DeviceState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode), 
        phi?.hashCode), 
        theta?.hashCode), 
        psi?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DeviceState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi))
        .toString();
  }
}

/// Device State builder class
///
class DeviceStateBuilder implements Builder<DeviceState, DeviceStateBuilder>, ImcBuilderHeaderPart {
  _$DeviceState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  DeviceStateBuilder();

  DeviceStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DeviceState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DeviceState;
  }

  @override
  void update(void updates(DeviceStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DeviceState build() {
    final _$result = _$v ??
        new _$DeviceState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Beam Configuration immutable class
///
class _$BeamConfig extends BeamConfig {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double beamWidth;
  @override
  final double beamHeight;

  factory _$BeamConfig([void updates(BeamConfigBuilder b)]) =>
      (new BeamConfigBuilder()..update(updates)).build();

  _$BeamConfig._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.beamWidth,
      this.beamHeight})
      : super._();

  @override
  BeamConfig rebuild(void updates(BeamConfigBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  BeamConfigBuilder toBuilder() => new BeamConfigBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is BeamConfig &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        beamWidth == this.beamWidth &&
        beamHeight == this.beamHeight;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        beamWidth?.hashCode), 
        beamHeight?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('BeamConfig')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('beamWidth', beamWidth)
          ..add('beamHeight', beamHeight))
        .toString();
  }
}

/// Beam Configuration builder class
///
class BeamConfigBuilder implements Builder<BeamConfig, BeamConfigBuilder>, ImcBuilderHeaderPart {
  _$BeamConfig _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _beamWidth;
  double get beamWidth => _$this._beamWidth;
  set beamWidth(double beamWidth) => _$this._beamWidth = beamWidth;

  double _beamHeight;
  double get beamHeight => _$this._beamHeight;
  set beamHeight(double beamHeight) => _$this._beamHeight = beamHeight;

  BeamConfigBuilder();

  BeamConfigBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _beamWidth = _$v.beamWidth;
      _beamHeight = _$v.beamHeight;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(BeamConfig other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$BeamConfig;
  }

  @override
  void update(void updates(BeamConfigBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$BeamConfig build() {
    final _$result = _$v ??
        new _$BeamConfig._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            beamWidth: beamWidth ?? 0,
            beamHeight: beamHeight ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Data Sanity immutable class
///
class _$DataSanity extends DataSanity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DataSanityEnumSane sane;

  factory _$DataSanity([void updates(DataSanityBuilder b)]) =>
      (new DataSanityBuilder()..update(updates)).build();

  _$DataSanity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sane})
      : super._();

  @override
  DataSanity rebuild(void updates(DataSanityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DataSanityBuilder toBuilder() => new DataSanityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DataSanity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sane == this.sane;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        sane?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DataSanity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sane', sane))
        .toString();
  }
}

/// Data Sanity builder class
///
class DataSanityBuilder implements Builder<DataSanity, DataSanityBuilder>, ImcBuilderHeaderPart {
  _$DataSanity _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DataSanityEnumSane _sane;
  DataSanityEnumSane get sane => _$this._sane;
  set sane(DataSanityEnumSane sane) => _$this._sane = sane;

  DataSanityBuilder();

  DataSanityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sane = _$v.sane;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DataSanity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DataSanity;
  }

  @override
  void update(void updates(DataSanityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DataSanity build() {
    final _$result = _$v ??
        new _$DataSanity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sane: sane ?? DataSanityEnumSane(0));
    replace(_$result);
    return _$result;
  }
}

/// Rhodamine Dye immutable class
///
class _$RhodamineDye extends RhodamineDye {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$RhodamineDye([void updates(RhodamineDyeBuilder b)]) =>
      (new RhodamineDyeBuilder()..update(updates)).build();

  _$RhodamineDye._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  RhodamineDye rebuild(void updates(RhodamineDyeBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RhodamineDyeBuilder toBuilder() => new RhodamineDyeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RhodamineDye &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RhodamineDye')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Rhodamine Dye builder class
///
class RhodamineDyeBuilder implements Builder<RhodamineDye, RhodamineDyeBuilder>, ImcBuilderHeaderPart {
  _$RhodamineDye _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RhodamineDyeBuilder();

  RhodamineDyeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RhodamineDye other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RhodamineDye;
  }

  @override
  void update(void updates(RhodamineDyeBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RhodamineDye build() {
    final _$result = _$v ??
        new _$RhodamineDye._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Crude Oil immutable class
///
class _$CrudeOil extends CrudeOil {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$CrudeOil([void updates(CrudeOilBuilder b)]) =>
      (new CrudeOilBuilder()..update(updates)).build();

  _$CrudeOil._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  CrudeOil rebuild(void updates(CrudeOilBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CrudeOilBuilder toBuilder() => new CrudeOilBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CrudeOil &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CrudeOil')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Crude Oil builder class
///
class CrudeOilBuilder implements Builder<CrudeOil, CrudeOilBuilder>, ImcBuilderHeaderPart {
  _$CrudeOil _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  CrudeOilBuilder();

  CrudeOilBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CrudeOil other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CrudeOil;
  }

  @override
  void update(void updates(CrudeOilBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CrudeOil build() {
    final _$result = _$v ??
        new _$CrudeOil._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Fine Oil immutable class
///
class _$FineOil extends FineOil {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$FineOil([void updates(FineOilBuilder b)]) =>
      (new FineOilBuilder()..update(updates)).build();

  _$FineOil._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  FineOil rebuild(void updates(FineOilBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FineOilBuilder toBuilder() => new FineOilBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FineOil &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FineOil')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Fine Oil builder class
///
class FineOilBuilder implements Builder<FineOil, FineOilBuilder>, ImcBuilderHeaderPart {
  _$FineOil _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  FineOilBuilder();

  FineOilBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FineOil other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FineOil;
  }

  @override
  void update(void updates(FineOilBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FineOil build() {
    final _$result = _$v ??
        new _$FineOil._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Turbidity immutable class
///
class _$Turbidity extends Turbidity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Turbidity([void updates(TurbidityBuilder b)]) =>
      (new TurbidityBuilder()..update(updates)).build();

  _$Turbidity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Turbidity rebuild(void updates(TurbidityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TurbidityBuilder toBuilder() => new TurbidityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Turbidity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Turbidity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Turbidity builder class
///
class TurbidityBuilder implements Builder<Turbidity, TurbidityBuilder>, ImcBuilderHeaderPart {
  _$Turbidity _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  TurbidityBuilder();

  TurbidityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Turbidity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Turbidity;
  }

  @override
  void update(void updates(TurbidityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Turbidity build() {
    final _$result = _$v ??
        new _$Turbidity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Chlorophyll immutable class
///
class _$Chlorophyll extends Chlorophyll {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Chlorophyll([void updates(ChlorophyllBuilder b)]) =>
      (new ChlorophyllBuilder()..update(updates)).build();

  _$Chlorophyll._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Chlorophyll rebuild(void updates(ChlorophyllBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ChlorophyllBuilder toBuilder() => new ChlorophyllBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Chlorophyll &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Chlorophyll')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Chlorophyll builder class
///
class ChlorophyllBuilder implements Builder<Chlorophyll, ChlorophyllBuilder>, ImcBuilderHeaderPart {
  _$Chlorophyll _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ChlorophyllBuilder();

  ChlorophyllBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Chlorophyll other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Chlorophyll;
  }

  @override
  void update(void updates(ChlorophyllBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Chlorophyll build() {
    final _$result = _$v ??
        new _$Chlorophyll._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Fluorescein immutable class
///
class _$Fluorescein extends Fluorescein {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Fluorescein([void updates(FluoresceinBuilder b)]) =>
      (new FluoresceinBuilder()..update(updates)).build();

  _$Fluorescein._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Fluorescein rebuild(void updates(FluoresceinBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FluoresceinBuilder toBuilder() => new FluoresceinBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Fluorescein &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Fluorescein')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Fluorescein builder class
///
class FluoresceinBuilder implements Builder<Fluorescein, FluoresceinBuilder>, ImcBuilderHeaderPart {
  _$Fluorescein _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  FluoresceinBuilder();

  FluoresceinBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Fluorescein other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Fluorescein;
  }

  @override
  void update(void updates(FluoresceinBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Fluorescein build() {
    final _$result = _$v ??
        new _$Fluorescein._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Phycocyanin immutable class
///
class _$Phycocyanin extends Phycocyanin {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Phycocyanin([void updates(PhycocyaninBuilder b)]) =>
      (new PhycocyaninBuilder()..update(updates)).build();

  _$Phycocyanin._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Phycocyanin rebuild(void updates(PhycocyaninBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PhycocyaninBuilder toBuilder() => new PhycocyaninBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Phycocyanin &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Phycocyanin')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Phycocyanin builder class
///
class PhycocyaninBuilder implements Builder<Phycocyanin, PhycocyaninBuilder>, ImcBuilderHeaderPart {
  _$Phycocyanin _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  PhycocyaninBuilder();

  PhycocyaninBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Phycocyanin other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Phycocyanin;
  }

  @override
  void update(void updates(PhycocyaninBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Phycocyanin build() {
    final _$result = _$v ??
        new _$Phycocyanin._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Phycoerythrin immutable class
///
class _$Phycoerythrin extends Phycoerythrin {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Phycoerythrin([void updates(PhycoerythrinBuilder b)]) =>
      (new PhycoerythrinBuilder()..update(updates)).build();

  _$Phycoerythrin._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Phycoerythrin rebuild(void updates(PhycoerythrinBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PhycoerythrinBuilder toBuilder() => new PhycoerythrinBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Phycoerythrin &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Phycoerythrin')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Phycoerythrin builder class
///
class PhycoerythrinBuilder implements Builder<Phycoerythrin, PhycoerythrinBuilder>, ImcBuilderHeaderPart {
  _$Phycoerythrin _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  PhycoerythrinBuilder();

  PhycoerythrinBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Phycoerythrin other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Phycoerythrin;
  }

  @override
  void update(void updates(PhycoerythrinBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Phycoerythrin build() {
    final _$result = _$v ??
        new _$Phycoerythrin._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// GPS Fix RTK immutable class
///
class _$GpsFixRtk extends GpsFixRtk {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final GpsFixRtkBitfieldValidity validity;
  @override
  final GpsFixRtkEnumType type;
  @override
  final int tow;
  @override
  final double baseLat;
  @override
  final double baseLon;
  @override
  final double baseHeight;
  @override
  final double n;
  @override
  final double e;
  @override
  final double d;
  @override
  final double vN;
  @override
  final double vE;
  @override
  final double vD;
  @override
  final int satellites;
  @override
  final int iarHyp;
  @override
  final double iarRatio;

  factory _$GpsFixRtk([void updates(GpsFixRtkBuilder b)]) =>
      (new GpsFixRtkBuilder()..update(updates)).build();

  _$GpsFixRtk._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.validity,
      this.type,
      this.tow,
      this.baseLat,
      this.baseLon,
      this.baseHeight,
      this.n,
      this.e,
      this.d,
      this.vN,
      this.vE,
      this.vD,
      this.satellites,
      this.iarHyp,
      this.iarRatio})
      : super._();

  @override
  GpsFixRtk rebuild(void updates(GpsFixRtkBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GpsFixRtkBuilder toBuilder() => new GpsFixRtkBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GpsFixRtk &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == this.validity &&
        type == this.type &&
        tow == this.tow &&
        baseLat == this.baseLat &&
        baseLon == this.baseLon &&
        baseHeight == this.baseHeight &&
        n == this.n &&
        e == this.e &&
        d == this.d &&
        vN == this.vN &&
        vE == this.vE &&
        vD == this.vD &&
        satellites == this.satellites &&
        iarHyp == this.iarHyp &&
        iarRatio == this.iarRatio;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        validity?.hashCode), 
        type?.hashCode), 
        tow?.hashCode), 
        baseLat?.hashCode), 
        baseLon?.hashCode), 
        baseHeight?.hashCode), 
        n?.hashCode), 
        e?.hashCode), 
        d?.hashCode), 
        vN?.hashCode), 
        vE?.hashCode), 
        vD?.hashCode), 
        satellites?.hashCode), 
        iarHyp?.hashCode), 
        iarRatio?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GpsFixRtk')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('validity', validity)
          ..add('type', type)
          ..add('tow', tow)
          ..add('baseLat', baseLat)
          ..add('baseLon', baseLon)
          ..add('baseHeight', baseHeight)
          ..add('n', n)
          ..add('e', e)
          ..add('d', d)
          ..add('vN', vN)
          ..add('vE', vE)
          ..add('vD', vD)
          ..add('satellites', satellites)
          ..add('iarHyp', iarHyp)
          ..add('iarRatio', iarRatio))
        .toString();
  }
}

/// GPS Fix RTK builder class
///
class GpsFixRtkBuilder implements Builder<GpsFixRtk, GpsFixRtkBuilder>, ImcBuilderHeaderPart {
  _$GpsFixRtk _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GpsFixRtkBitfieldValidity _validity;
  GpsFixRtkBitfieldValidity get validity => _$this._validity;
  set validity(GpsFixRtkBitfieldValidity validity) => _$this._validity = validity;

  GpsFixRtkEnumType _type;
  GpsFixRtkEnumType get type => _$this._type;
  set type(GpsFixRtkEnumType type) => _$this._type = type;

  int _tow;
  int get tow => _$this._tow;
  set tow(int tow) => _$this._tow = tow;

  double _baseLat;
  double get baseLat => _$this._baseLat;
  set baseLat(double baseLat) => _$this._baseLat = baseLat;

  double _baseLon;
  double get baseLon => _$this._baseLon;
  set baseLon(double baseLon) => _$this._baseLon = baseLon;

  double _baseHeight;
  double get baseHeight => _$this._baseHeight;
  set baseHeight(double baseHeight) => _$this._baseHeight = baseHeight;

  double _n;
  double get n => _$this._n;
  set n(double n) => _$this._n = n;

  double _e;
  double get e => _$this._e;
  set e(double e) => _$this._e = e;

  double _d;
  double get d => _$this._d;
  set d(double d) => _$this._d = d;

  double _vN;
  double get vN => _$this._vN;
  set vN(double vN) => _$this._vN = vN;

  double _vE;
  double get vE => _$this._vE;
  set vE(double vE) => _$this._vE = vE;

  double _vD;
  double get vD => _$this._vD;
  set vD(double vD) => _$this._vD = vD;

  int _satellites;
  int get satellites => _$this._satellites;
  set satellites(int satellites) => _$this._satellites = satellites;

  int _iarHyp;
  int get iarHyp => _$this._iarHyp;
  set iarHyp(int iarHyp) => _$this._iarHyp = iarHyp;

  double _iarRatio;
  double get iarRatio => _$this._iarRatio;
  set iarRatio(double iarRatio) => _$this._iarRatio = iarRatio;

  GpsFixRtkBuilder();

  GpsFixRtkBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _type = _$v.type;
      _tow = _$v.tow;
      _baseLat = _$v.baseLat;
      _baseLon = _$v.baseLon;
      _baseHeight = _$v.baseHeight;
      _n = _$v.n;
      _e = _$v.e;
      _d = _$v.d;
      _vN = _$v.vN;
      _vE = _$v.vE;
      _vD = _$v.vD;
      _satellites = _$v.satellites;
      _iarHyp = _$v.iarHyp;
      _iarRatio = _$v.iarRatio;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GpsFixRtk other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GpsFixRtk;
  }

  @override
  void update(void updates(GpsFixRtkBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GpsFixRtk build() {
    final _$result = _$v ??
        new _$GpsFixRtk._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            validity: validity ?? GpsFixRtkBitfieldValidity(0),
            type: type ?? GpsFixRtkEnumType(0),
            tow: tow ?? 0,
            baseLat: baseLat ?? 0,
            baseLon: baseLon ?? 0,
            baseHeight: baseHeight ?? 0,
            n: n ?? 0,
            e: e ?? 0,
            d: d ?? 0,
            vN: vN ?? 0,
            vE: vE ?? 0,
            vD: vD ?? 0,
            satellites: satellites ?? 0,
            iarHyp: iarHyp ?? 0,
            iarRatio: iarRatio ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// External Navigation Data immutable class
///
class _$ExternalNavData extends ExternalNavData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EstimatedState state;
  @override
  final ExternalNavDataEnumType type;

  factory _$ExternalNavData([void updates(ExternalNavDataBuilder b)]) =>
      (new ExternalNavDataBuilder()..update(updates)).build();

  _$ExternalNavData._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state,
      this.type})
      : super._();

  @override
  ExternalNavData rebuild(void updates(ExternalNavDataBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ExternalNavDataBuilder toBuilder() => new ExternalNavDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ExternalNavData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state &&
        type == this.type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        state?.hashCode), 
        type?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ExternalNavData')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', state)
          ..add('type', type))
        .toString();
  }
}

/// External Navigation Data builder class
///
class ExternalNavDataBuilder implements Builder<ExternalNavData, ExternalNavDataBuilder>, ImcBuilderHeaderPart {
  _$ExternalNavData _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EstimatedState _state;
  EstimatedState get state => _$this._state;
  set state(EstimatedState state) => _$this._state = state;

  ExternalNavDataEnumType _type;
  ExternalNavDataEnumType get type => _$this._type;
  set type(ExternalNavDataEnumType type) => _$this._type = type;

  ExternalNavDataBuilder();

  ExternalNavDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ExternalNavData other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ExternalNavData;
  }

  @override
  void update(void updates(ExternalNavDataBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ExternalNavData build() {
    final _$result = _$v ??
        new _$ExternalNavData._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state,
            type: type ?? ExternalNavDataEnumType(0));
    replace(_$result);
    return _$result;
  }
}

/// Dissolved Oxygen immutable class
///
class _$DissolvedOxygen extends DissolvedOxygen {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DissolvedOxygen([void updates(DissolvedOxygenBuilder b)]) =>
      (new DissolvedOxygenBuilder()..update(updates)).build();

  _$DissolvedOxygen._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DissolvedOxygen rebuild(void updates(DissolvedOxygenBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DissolvedOxygenBuilder toBuilder() => new DissolvedOxygenBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DissolvedOxygen &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DissolvedOxygen')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Dissolved Oxygen builder class
///
class DissolvedOxygenBuilder implements Builder<DissolvedOxygen, DissolvedOxygenBuilder>, ImcBuilderHeaderPart {
  _$DissolvedOxygen _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DissolvedOxygenBuilder();

  DissolvedOxygenBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DissolvedOxygen other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DissolvedOxygen;
  }

  @override
  void update(void updates(DissolvedOxygenBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DissolvedOxygen build() {
    final _$result = _$v ??
        new _$DissolvedOxygen._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Air Saturation immutable class
///
class _$AirSaturation extends AirSaturation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$AirSaturation([void updates(AirSaturationBuilder b)]) =>
      (new AirSaturationBuilder()..update(updates)).build();

  _$AirSaturation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  AirSaturation rebuild(void updates(AirSaturationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AirSaturationBuilder toBuilder() => new AirSaturationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AirSaturation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AirSaturation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Air Saturation builder class
///
class AirSaturationBuilder implements Builder<AirSaturation, AirSaturationBuilder>, ImcBuilderHeaderPart {
  _$AirSaturation _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  AirSaturationBuilder();

  AirSaturationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AirSaturation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AirSaturation;
  }

  @override
  void update(void updates(AirSaturationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AirSaturation build() {
    final _$result = _$v ??
        new _$AirSaturation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Throttle immutable class
///
class _$Throttle extends Throttle {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Throttle([void updates(ThrottleBuilder b)]) =>
      (new ThrottleBuilder()..update(updates)).build();

  _$Throttle._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Throttle rebuild(void updates(ThrottleBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ThrottleBuilder toBuilder() => new ThrottleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Throttle &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Throttle')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Throttle builder class
///
class ThrottleBuilder implements Builder<Throttle, ThrottleBuilder>, ImcBuilderHeaderPart {
  _$Throttle _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ThrottleBuilder();

  ThrottleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Throttle other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Throttle;
  }

  @override
  void update(void updates(ThrottleBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Throttle build() {
    final _$result = _$v ??
        new _$Throttle._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// pH immutable class
///
class _$PH extends PH {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$PH([void updates(PHBuilder b)]) =>
      (new PHBuilder()..update(updates)).build();

  _$PH._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  PH rebuild(void updates(PHBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PHBuilder toBuilder() => new PHBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PH &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PH')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// pH builder class
///
class PHBuilder implements Builder<PH, PHBuilder>, ImcBuilderHeaderPart {
  _$PH _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  PHBuilder();

  PHBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PH other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PH;
  }

  @override
  void update(void updates(PHBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PH build() {
    final _$result = _$v ??
        new _$PH._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Redox Potential immutable class
///
class _$Redox extends Redox {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Redox([void updates(RedoxBuilder b)]) =>
      (new RedoxBuilder()..update(updates)).build();

  _$Redox._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Redox rebuild(void updates(RedoxBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RedoxBuilder toBuilder() => new RedoxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Redox &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Redox')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Redox Potential builder class
///
class RedoxBuilder implements Builder<Redox, RedoxBuilder>, ImcBuilderHeaderPart {
  _$Redox _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RedoxBuilder();

  RedoxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Redox other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Redox;
  }

  @override
  void update(void updates(RedoxBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Redox build() {
    final _$result = _$v ??
        new _$Redox._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Camera Zoom immutable class
///
class _$CameraZoom extends CameraZoom {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final int zoom;
  @override
  final CameraZoomEnumAction action;

  factory _$CameraZoom([void updates(CameraZoomBuilder b)]) =>
      (new CameraZoomBuilder()..update(updates)).build();

  _$CameraZoom._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.zoom,
      this.action})
      : super._();

  @override
  CameraZoom rebuild(void updates(CameraZoomBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CameraZoomBuilder toBuilder() => new CameraZoomBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CameraZoom &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        zoom == this.zoom &&
        action == this.action;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        id?.hashCode), 
        zoom?.hashCode), 
        action?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CameraZoom')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', id)
          ..add('zoom', zoom)
          ..add('action', action))
        .toString();
  }
}

/// Camera Zoom builder class
///
class CameraZoomBuilder implements Builder<CameraZoom, CameraZoomBuilder>, ImcBuilderHeaderPart {
  _$CameraZoom _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  int _zoom;
  int get zoom => _$this._zoom;
  set zoom(int zoom) => _$this._zoom = zoom;

  CameraZoomEnumAction _action;
  CameraZoomEnumAction get action => _$this._action;
  set action(CameraZoomEnumAction action) => _$this._action = action;

  CameraZoomBuilder();

  CameraZoomBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _zoom = _$v.zoom;
      _action = _$v.action;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CameraZoom other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CameraZoom;
  }

  @override
  void update(void updates(CameraZoomBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CameraZoom build() {
    final _$result = _$v ??
        new _$CameraZoom._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            zoom: zoom ?? 0,
            action: action ?? CameraZoomEnumAction(0));
    replace(_$result);
    return _$result;
  }
}

/// Set Thruster Actuation immutable class
///
class _$SetThrusterActuation extends SetThrusterActuation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double value;

  factory _$SetThrusterActuation([void updates(SetThrusterActuationBuilder b)]) =>
      (new SetThrusterActuationBuilder()..update(updates)).build();

  _$SetThrusterActuation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.value})
      : super._();

  @override
  SetThrusterActuation rebuild(void updates(SetThrusterActuationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SetThrusterActuationBuilder toBuilder() => new SetThrusterActuationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetThrusterActuation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        id?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetThrusterActuation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', id)
          ..add('value', value))
        .toString();
  }
}

/// Set Thruster Actuation builder class
///
class SetThrusterActuationBuilder implements Builder<SetThrusterActuation, SetThrusterActuationBuilder>, ImcBuilderHeaderPart {
  _$SetThrusterActuation _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SetThrusterActuationBuilder();

  SetThrusterActuationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetThrusterActuation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SetThrusterActuation;
  }

  @override
  void update(void updates(SetThrusterActuationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SetThrusterActuation build() {
    final _$result = _$v ??
        new _$SetThrusterActuation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Set Servo Position immutable class
///
class _$SetServoPosition extends SetServoPosition {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double value;

  factory _$SetServoPosition([void updates(SetServoPositionBuilder b)]) =>
      (new SetServoPositionBuilder()..update(updates)).build();

  _$SetServoPosition._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.value})
      : super._();

  @override
  SetServoPosition rebuild(void updates(SetServoPositionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SetServoPositionBuilder toBuilder() => new SetServoPositionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetServoPosition &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        id?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetServoPosition')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', id)
          ..add('value', value))
        .toString();
  }
}

/// Set Servo Position builder class
///
class SetServoPositionBuilder implements Builder<SetServoPosition, SetServoPositionBuilder>, ImcBuilderHeaderPart {
  _$SetServoPosition _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SetServoPositionBuilder();

  SetServoPositionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetServoPosition other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SetServoPosition;
  }

  @override
  void update(void updates(SetServoPositionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SetServoPosition build() {
    final _$result = _$v ??
        new _$SetServoPosition._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Set Control Surface Deflection immutable class
///
class _$SetControlSurfaceDeflection extends SetControlSurfaceDeflection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double angle;

  factory _$SetControlSurfaceDeflection([void updates(SetControlSurfaceDeflectionBuilder b)]) =>
      (new SetControlSurfaceDeflectionBuilder()..update(updates)).build();

  _$SetControlSurfaceDeflection._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.angle})
      : super._();

  @override
  SetControlSurfaceDeflection rebuild(void updates(SetControlSurfaceDeflectionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SetControlSurfaceDeflectionBuilder toBuilder() => new SetControlSurfaceDeflectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetControlSurfaceDeflection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        angle == this.angle;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        id?.hashCode), 
        angle?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetControlSurfaceDeflection')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', id)
          ..add('angle', angle))
        .toString();
  }
}

/// Set Control Surface Deflection builder class
///
class SetControlSurfaceDeflectionBuilder implements Builder<SetControlSurfaceDeflection, SetControlSurfaceDeflectionBuilder>, ImcBuilderHeaderPart {
  _$SetControlSurfaceDeflection _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _angle;
  double get angle => _$this._angle;
  set angle(double angle) => _$this._angle = angle;

  SetControlSurfaceDeflectionBuilder();

  SetControlSurfaceDeflectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _angle = _$v.angle;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetControlSurfaceDeflection other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SetControlSurfaceDeflection;
  }

  @override
  void update(void updates(SetControlSurfaceDeflectionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SetControlSurfaceDeflection build() {
    final _$result = _$v ??
        new _$SetControlSurfaceDeflection._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            angle: angle ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Remote Actions Request immutable class
///
class _$RemoteActionsRequest extends RemoteActionsRequest {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final RemoteActionsRequestEnumOp op;
  @override
  final String actions;

  factory _$RemoteActionsRequest([void updates(RemoteActionsRequestBuilder b)]) =>
      (new RemoteActionsRequestBuilder()..update(updates)).build();

  _$RemoteActionsRequest._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.actions})
      : super._();

  @override
  RemoteActionsRequest rebuild(void updates(RemoteActionsRequestBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteActionsRequestBuilder toBuilder() => new RemoteActionsRequestBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteActionsRequest &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        actions == this.actions;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        actions?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteActionsRequest')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('actions', actions))
        .toString();
  }
}

/// Remote Actions Request builder class
///
class RemoteActionsRequestBuilder implements Builder<RemoteActionsRequest, RemoteActionsRequestBuilder>, ImcBuilderHeaderPart {
  _$RemoteActionsRequest _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  RemoteActionsRequestEnumOp _op;
  RemoteActionsRequestEnumOp get op => _$this._op;
  set op(RemoteActionsRequestEnumOp op) => _$this._op = op;

  String _actions;
  String get actions => _$this._actions;
  set actions(String actions) => _$this._actions = actions;

  RemoteActionsRequestBuilder();

  RemoteActionsRequestBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _actions = _$v.actions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteActionsRequest other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteActionsRequest;
  }

  @override
  void update(void updates(RemoteActionsRequestBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteActionsRequest build() {
    final _$result = _$v ??
        new _$RemoteActionsRequest._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? RemoteActionsRequestEnumOp(0),
            actions: actions ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Remote Actions immutable class
///
class _$RemoteActions extends RemoteActions {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String actions;

  factory _$RemoteActions([void updates(RemoteActionsBuilder b)]) =>
      (new RemoteActionsBuilder()..update(updates)).build();

  _$RemoteActions._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.actions})
      : super._();

  @override
  RemoteActions rebuild(void updates(RemoteActionsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteActionsBuilder toBuilder() => new RemoteActionsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteActions &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        actions == this.actions;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        actions?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteActions')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('actions', actions))
        .toString();
  }
}

/// Remote Actions builder class
///
class RemoteActionsBuilder implements Builder<RemoteActions, RemoteActionsBuilder>, ImcBuilderHeaderPart {
  _$RemoteActions _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _actions;
  String get actions => _$this._actions;
  set actions(String actions) => _$this._actions = actions;

  RemoteActionsBuilder();

  RemoteActionsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _actions = _$v.actions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteActions other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteActions;
  }

  @override
  void update(void updates(RemoteActionsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteActions build() {
    final _$result = _$v ??
        new _$RemoteActions._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            actions: actions ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Button Event immutable class
///
class _$ButtonEvent extends ButtonEvent {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int button;
  @override
  final int value;

  factory _$ButtonEvent([void updates(ButtonEventBuilder b)]) =>
      (new ButtonEventBuilder()..update(updates)).build();

  _$ButtonEvent._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.button,
      this.value})
      : super._();

  @override
  ButtonEvent rebuild(void updates(ButtonEventBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ButtonEventBuilder toBuilder() => new ButtonEventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ButtonEvent &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        button == this.button &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        button?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ButtonEvent')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('button', button)
          ..add('value', value))
        .toString();
  }
}

/// Button Event builder class
///
class ButtonEventBuilder implements Builder<ButtonEvent, ButtonEventBuilder>, ImcBuilderHeaderPart {
  _$ButtonEvent _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _button;
  int get button => _$this._button;
  set button(int button) => _$this._button = button;

  int _value;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  ButtonEventBuilder();

  ButtonEventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _button = _$v.button;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ButtonEvent other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ButtonEvent;
  }

  @override
  void update(void updates(ButtonEventBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ButtonEvent build() {
    final _$result = _$v ??
        new _$ButtonEvent._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            button: button ?? 0,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// LCD Control immutable class
///
class _$LcdControl extends LcdControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LcdControlEnumOp op;
  @override
  final String text;

  factory _$LcdControl([void updates(LcdControlBuilder b)]) =>
      (new LcdControlBuilder()..update(updates)).build();

  _$LcdControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.text})
      : super._();

  @override
  LcdControl rebuild(void updates(LcdControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LcdControlBuilder toBuilder() => new LcdControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LcdControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        text == this.text;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        text?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LcdControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('text', text))
        .toString();
  }
}

/// LCD Control builder class
///
class LcdControlBuilder implements Builder<LcdControl, LcdControlBuilder>, ImcBuilderHeaderPart {
  _$LcdControl _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LcdControlEnumOp _op;
  LcdControlEnumOp get op => _$this._op;
  set op(LcdControlEnumOp op) => _$this._op = op;

  String _text;
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  LcdControlBuilder();

  LcdControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LcdControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LcdControl;
  }

  @override
  void update(void updates(LcdControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LcdControl build() {
    final _$result = _$v ??
        new _$LcdControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? LcdControlEnumOp(0),
            text: text ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Power Operation immutable class
///
class _$PowerOperation extends PowerOperation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PowerOperationEnumOp op;
  @override
  final double timeRemain;
  @override
  final double schedTime;

  factory _$PowerOperation([void updates(PowerOperationBuilder b)]) =>
      (new PowerOperationBuilder()..update(updates)).build();

  _$PowerOperation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.timeRemain,
      this.schedTime})
      : super._();

  @override
  PowerOperation rebuild(void updates(PowerOperationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PowerOperationBuilder toBuilder() => new PowerOperationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PowerOperation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        timeRemain == this.timeRemain &&
        schedTime == this.schedTime;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        timeRemain?.hashCode), 
        schedTime?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PowerOperation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('timeRemain', timeRemain)
          ..add('schedTime', schedTime))
        .toString();
  }
}

/// Power Operation builder class
///
class PowerOperationBuilder implements Builder<PowerOperation, PowerOperationBuilder>, ImcBuilderHeaderPart {
  _$PowerOperation _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PowerOperationEnumOp _op;
  PowerOperationEnumOp get op => _$this._op;
  set op(PowerOperationEnumOp op) => _$this._op = op;

  double _timeRemain;
  double get timeRemain => _$this._timeRemain;
  set timeRemain(double timeRemain) => _$this._timeRemain = timeRemain;

  double _schedTime;
  double get schedTime => _$this._schedTime;
  set schedTime(double schedTime) => _$this._schedTime = schedTime;

  PowerOperationBuilder();

  PowerOperationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _timeRemain = _$v.timeRemain;
      _schedTime = _$v.schedTime;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PowerOperation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PowerOperation;
  }

  @override
  void update(void updates(PowerOperationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PowerOperation build() {
    final _$result = _$v ??
        new _$PowerOperation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? PowerOperationEnumOp(0),
            timeRemain: timeRemain ?? 0,
            schedTime: schedTime ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Power Channel Control immutable class
///
class _$PowerChannelControl extends PowerChannelControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final PowerChannelControlEnumOp op;
  @override
  final double schedTime;

  factory _$PowerChannelControl([void updates(PowerChannelControlBuilder b)]) =>
      (new PowerChannelControlBuilder()..update(updates)).build();

  _$PowerChannelControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.op,
      this.schedTime})
      : super._();

  @override
  PowerChannelControl rebuild(void updates(PowerChannelControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PowerChannelControlBuilder toBuilder() => new PowerChannelControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PowerChannelControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        op == this.op &&
        schedTime == this.schedTime;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode), 
        op?.hashCode), 
        schedTime?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PowerChannelControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name)
          ..add('op', op)
          ..add('schedTime', schedTime))
        .toString();
  }
}

/// Power Channel Control builder class
///
class PowerChannelControlBuilder implements Builder<PowerChannelControl, PowerChannelControlBuilder>, ImcBuilderHeaderPart {
  _$PowerChannelControl _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  PowerChannelControlEnumOp _op;
  PowerChannelControlEnumOp get op => _$this._op;
  set op(PowerChannelControlEnumOp op) => _$this._op = op;

  double _schedTime;
  double get schedTime => _$this._schedTime;
  set schedTime(double schedTime) => _$this._schedTime = schedTime;

  PowerChannelControlBuilder();

  PowerChannelControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _op = _$v.op;
      _schedTime = _$v.schedTime;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PowerChannelControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PowerChannelControl;
  }

  @override
  void update(void updates(PowerChannelControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PowerChannelControl build() {
    final _$result = _$v ??
        new _$PowerChannelControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            op: op ?? PowerChannelControlEnumOp(0),
            schedTime: schedTime ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Query Power Channel State immutable class
///
class _$QueryPowerChannelState extends QueryPowerChannelState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$QueryPowerChannelState([void updates(QueryPowerChannelStateBuilder b)]) =>
      (new QueryPowerChannelStateBuilder()..update(updates)).build();

  _$QueryPowerChannelState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  QueryPowerChannelState rebuild(void updates(QueryPowerChannelStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryPowerChannelStateBuilder toBuilder() => new QueryPowerChannelStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryPowerChannelState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryPowerChannelState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Query Power Channel State builder class
///
class QueryPowerChannelStateBuilder implements Builder<QueryPowerChannelState, QueryPowerChannelStateBuilder>, ImcBuilderHeaderPart {
  _$QueryPowerChannelState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  QueryPowerChannelStateBuilder();

  QueryPowerChannelStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryPowerChannelState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$QueryPowerChannelState;
  }

  @override
  void update(void updates(QueryPowerChannelStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryPowerChannelState build() {
    final _$result = _$v ??
        new _$QueryPowerChannelState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Power Channel State immutable class
///
class _$PowerChannelState extends PowerChannelState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final PowerChannelStateEnumState state;

  factory _$PowerChannelState([void updates(PowerChannelStateBuilder b)]) =>
      (new PowerChannelStateBuilder()..update(updates)).build();

  _$PowerChannelState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.state})
      : super._();

  @override
  PowerChannelState rebuild(void updates(PowerChannelStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PowerChannelStateBuilder toBuilder() => new PowerChannelStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PowerChannelState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        state == this.state;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode), 
        state?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PowerChannelState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name)
          ..add('state', state))
        .toString();
  }
}

/// Power Channel State builder class
///
class PowerChannelStateBuilder implements Builder<PowerChannelState, PowerChannelStateBuilder>, ImcBuilderHeaderPart {
  _$PowerChannelState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  PowerChannelStateEnumState _state;
  PowerChannelStateEnumState get state => _$this._state;
  set state(PowerChannelStateEnumState state) => _$this._state = state;

  PowerChannelStateBuilder();

  PowerChannelStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _state = _$v.state;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PowerChannelState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PowerChannelState;
  }

  @override
  void update(void updates(PowerChannelStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PowerChannelState build() {
    final _$result = _$v ??
        new _$PowerChannelState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            state: state ?? PowerChannelStateEnumState(0));
    replace(_$result);
    return _$result;
  }
}

/// LED Brightness immutable class
///
class _$LedBrightness extends LedBrightness {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final int value;

  factory _$LedBrightness([void updates(LedBrightnessBuilder b)]) =>
      (new LedBrightnessBuilder()..update(updates)).build();

  _$LedBrightness._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.value})
      : super._();

  @override
  LedBrightness rebuild(void updates(LedBrightnessBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LedBrightnessBuilder toBuilder() => new LedBrightnessBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LedBrightness &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LedBrightness')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name)
          ..add('value', value))
        .toString();
  }
}

/// LED Brightness builder class
///
class LedBrightnessBuilder implements Builder<LedBrightness, LedBrightnessBuilder>, ImcBuilderHeaderPart {
  _$LedBrightness _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  int _value;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  LedBrightnessBuilder();

  LedBrightnessBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LedBrightness other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LedBrightness;
  }

  @override
  void update(void updates(LedBrightnessBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LedBrightness build() {
    final _$result = _$v ??
        new _$LedBrightness._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Query LED Brightness immutable class
///
class _$QueryLedBrightness extends QueryLedBrightness {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;

  factory _$QueryLedBrightness([void updates(QueryLedBrightnessBuilder b)]) =>
      (new QueryLedBrightnessBuilder()..update(updates)).build();

  _$QueryLedBrightness._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name})
      : super._();

  @override
  QueryLedBrightness rebuild(void updates(QueryLedBrightnessBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryLedBrightnessBuilder toBuilder() => new QueryLedBrightnessBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryLedBrightness &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryLedBrightness')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name))
        .toString();
  }
}

/// Query LED Brightness builder class
///
class QueryLedBrightnessBuilder implements Builder<QueryLedBrightness, QueryLedBrightnessBuilder>, ImcBuilderHeaderPart {
  _$QueryLedBrightness _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  QueryLedBrightnessBuilder();

  QueryLedBrightnessBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryLedBrightness other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$QueryLedBrightness;
  }

  @override
  void update(void updates(QueryLedBrightnessBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryLedBrightness build() {
    final _$result = _$v ??
        new _$QueryLedBrightness._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Set LED Brightness immutable class
///
class _$SetLedBrightness extends SetLedBrightness {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final int value;

  factory _$SetLedBrightness([void updates(SetLedBrightnessBuilder b)]) =>
      (new SetLedBrightnessBuilder()..update(updates)).build();

  _$SetLedBrightness._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.value})
      : super._();

  @override
  SetLedBrightness rebuild(void updates(SetLedBrightnessBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SetLedBrightnessBuilder toBuilder() => new SetLedBrightnessBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetLedBrightness &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetLedBrightness')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name)
          ..add('value', value))
        .toString();
  }
}

/// Set LED Brightness builder class
///
class SetLedBrightnessBuilder implements Builder<SetLedBrightness, SetLedBrightnessBuilder>, ImcBuilderHeaderPart {
  _$SetLedBrightness _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  int _value;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  SetLedBrightnessBuilder();

  SetLedBrightnessBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetLedBrightness other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SetLedBrightness;
  }

  @override
  void update(void updates(SetLedBrightnessBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SetLedBrightness build() {
    final _$result = _$v ??
        new _$SetLedBrightness._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Set PWM immutable class
///
class _$SetPWM extends SetPWM {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final int period;
  @override
  final int dutyCycle;

  factory _$SetPWM([void updates(SetPWMBuilder b)]) =>
      (new SetPWMBuilder()..update(updates)).build();

  _$SetPWM._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.period,
      this.dutyCycle})
      : super._();

  @override
  SetPWM rebuild(void updates(SetPWMBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SetPWMBuilder toBuilder() => new SetPWMBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetPWM &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        period == this.period &&
        dutyCycle == this.dutyCycle;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        id?.hashCode), 
        period?.hashCode), 
        dutyCycle?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetPWM')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', id)
          ..add('period', period)
          ..add('dutyCycle', dutyCycle))
        .toString();
  }
}

/// Set PWM builder class
///
class SetPWMBuilder implements Builder<SetPWM, SetPWMBuilder>, ImcBuilderHeaderPart {
  _$SetPWM _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  int _period;
  int get period => _$this._period;
  set period(int period) => _$this._period = period;

  int _dutyCycle;
  int get dutyCycle => _$this._dutyCycle;
  set dutyCycle(int dutyCycle) => _$this._dutyCycle = dutyCycle;

  SetPWMBuilder();

  SetPWMBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _period = _$v.period;
      _dutyCycle = _$v.dutyCycle;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetPWM other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SetPWM;
  }

  @override
  void update(void updates(SetPWMBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SetPWM build() {
    final _$result = _$v ??
        new _$SetPWM._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            period: period ?? 0,
            dutyCycle: dutyCycle ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// PWM immutable class
///
class _$PWM extends PWM {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final int period;
  @override
  final int dutyCycle;

  factory _$PWM([void updates(PWMBuilder b)]) =>
      (new PWMBuilder()..update(updates)).build();

  _$PWM._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.period,
      this.dutyCycle})
      : super._();

  @override
  PWM rebuild(void updates(PWMBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PWMBuilder toBuilder() => new PWMBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PWM &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        period == this.period &&
        dutyCycle == this.dutyCycle;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        id?.hashCode), 
        period?.hashCode), 
        dutyCycle?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PWM')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', id)
          ..add('period', period)
          ..add('dutyCycle', dutyCycle))
        .toString();
  }
}

/// PWM builder class
///
class PWMBuilder implements Builder<PWM, PWMBuilder>, ImcBuilderHeaderPart {
  _$PWM _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  int _period;
  int get period => _$this._period;
  set period(int period) => _$this._period = period;

  int _dutyCycle;
  int get dutyCycle => _$this._dutyCycle;
  set dutyCycle(int dutyCycle) => _$this._dutyCycle = dutyCycle;

  PWMBuilder();

  PWMBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _period = _$v.period;
      _dutyCycle = _$v.dutyCycle;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PWM other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PWM;
  }

  @override
  void update(void updates(PWMBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PWM build() {
    final _$result = _$v ??
        new _$PWM._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            period: period ?? 0,
            dutyCycle: dutyCycle ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Estimated State immutable class
///
class _$EstimatedState extends EstimatedState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double u;
  @override
  final double v;
  @override
  final double w;
  @override
  final double vx;
  @override
  final double vy;
  @override
  final double vz;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final double depth;
  @override
  final double alt;

  factory _$EstimatedState([void updates(EstimatedStateBuilder b)]) =>
      (new EstimatedStateBuilder()..update(updates)).build();

  _$EstimatedState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.height,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi,
      this.u,
      this.v,
      this.w,
      this.vx,
      this.vy,
      this.vz,
      this.p,
      this.q,
      this.r,
      this.depth,
      this.alt})
      : super._();

  @override
  EstimatedState rebuild(void updates(EstimatedStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EstimatedStateBuilder toBuilder() => new EstimatedStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EstimatedState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        height == this.height &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi &&
        u == this.u &&
        v == this.v &&
        w == this.w &&
        vx == this.vx &&
        vy == this.vy &&
        vz == this.vz &&
        p == this.p &&
        q == this.q &&
        r == this.r &&
        depth == this.depth &&
        alt == this.alt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        height?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode), 
        phi?.hashCode), 
        theta?.hashCode), 
        psi?.hashCode), 
        u?.hashCode), 
        v?.hashCode), 
        w?.hashCode), 
        vx?.hashCode), 
        vy?.hashCode), 
        vz?.hashCode), 
        p?.hashCode), 
        q?.hashCode), 
        r?.hashCode), 
        depth?.hashCode), 
        alt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EstimatedState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('height', height)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi)
          ..add('u', u)
          ..add('v', v)
          ..add('w', w)
          ..add('vx', vx)
          ..add('vy', vy)
          ..add('vz', vz)
          ..add('p', p)
          ..add('q', q)
          ..add('r', r)
          ..add('depth', depth)
          ..add('alt', alt))
        .toString();
  }
}

/// Estimated State builder class
///
class EstimatedStateBuilder implements Builder<EstimatedState, EstimatedStateBuilder>, ImcBuilderHeaderPart {
  _$EstimatedState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _u;
  double get u => _$this._u;
  set u(double u) => _$this._u = u;

  double _v;
  double get v => _$this._v;
  set v(double v) => _$this._v = v;

  double _w;
  double get w => _$this._w;
  set w(double w) => _$this._w = w;

  double _vx;
  double get vx => _$this._vx;
  set vx(double vx) => _$this._vx = vx;

  double _vy;
  double get vy => _$this._vy;
  set vy(double vy) => _$this._vy = vy;

  double _vz;
  double get vz => _$this._vz;
  set vz(double vz) => _$this._vz = vz;

  double _p;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  double _depth;
  double get depth => _$this._depth;
  set depth(double depth) => _$this._depth = depth;

  double _alt;
  double get alt => _$this._alt;
  set alt(double alt) => _$this._alt = alt;

  EstimatedStateBuilder();

  EstimatedStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _u = _$v.u;
      _v = _$v.v;
      _w = _$v.w;
      _vx = _$v.vx;
      _vy = _$v.vy;
      _vz = _$v.vz;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _depth = _$v.depth;
      _alt = _$v.alt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EstimatedState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EstimatedState;
  }

  @override
  void update(void updates(EstimatedStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EstimatedState build() {
    final _$result = _$v ??
        new _$EstimatedState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            height: height ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0,
            u: u ?? 0,
            v: v ?? 0,
            w: w ?? 0,
            vx: vx ?? 0,
            vy: vy ?? 0,
            vz: vz ?? 0,
            p: p ?? 0,
            q: q ?? 0,
            r: r ?? 0,
            depth: depth ?? 0,
            alt: alt ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Estimated Stream Velocity immutable class
///
class _$EstimatedStreamVelocity extends EstimatedStreamVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$EstimatedStreamVelocity([void updates(EstimatedStreamVelocityBuilder b)]) =>
      (new EstimatedStreamVelocityBuilder()..update(updates)).build();

  _$EstimatedStreamVelocity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  EstimatedStreamVelocity rebuild(void updates(EstimatedStreamVelocityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EstimatedStreamVelocityBuilder toBuilder() => new EstimatedStreamVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EstimatedStreamVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EstimatedStreamVelocity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Estimated Stream Velocity builder class
///
class EstimatedStreamVelocityBuilder implements Builder<EstimatedStreamVelocity, EstimatedStreamVelocityBuilder>, ImcBuilderHeaderPart {
  _$EstimatedStreamVelocity _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  EstimatedStreamVelocityBuilder();

  EstimatedStreamVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EstimatedStreamVelocity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EstimatedStreamVelocity;
  }

  @override
  void update(void updates(EstimatedStreamVelocityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EstimatedStreamVelocity build() {
    final _$result = _$v ??
        new _$EstimatedStreamVelocity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Indicated Speed immutable class
///
class _$IndicatedSpeed extends IndicatedSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$IndicatedSpeed([void updates(IndicatedSpeedBuilder b)]) =>
      (new IndicatedSpeedBuilder()..update(updates)).build();

  _$IndicatedSpeed._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  IndicatedSpeed rebuild(void updates(IndicatedSpeedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  IndicatedSpeedBuilder toBuilder() => new IndicatedSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IndicatedSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IndicatedSpeed')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Indicated Speed builder class
///
class IndicatedSpeedBuilder implements Builder<IndicatedSpeed, IndicatedSpeedBuilder>, ImcBuilderHeaderPart {
  _$IndicatedSpeed _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  IndicatedSpeedBuilder();

  IndicatedSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IndicatedSpeed other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$IndicatedSpeed;
  }

  @override
  void update(void updates(IndicatedSpeedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$IndicatedSpeed build() {
    final _$result = _$v ??
        new _$IndicatedSpeed._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// True Speed immutable class
///
class _$TrueSpeed extends TrueSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$TrueSpeed([void updates(TrueSpeedBuilder b)]) =>
      (new TrueSpeedBuilder()..update(updates)).build();

  _$TrueSpeed._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  TrueSpeed rebuild(void updates(TrueSpeedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrueSpeedBuilder toBuilder() => new TrueSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrueSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrueSpeed')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// True Speed builder class
///
class TrueSpeedBuilder implements Builder<TrueSpeed, TrueSpeedBuilder>, ImcBuilderHeaderPart {
  _$TrueSpeed _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  TrueSpeedBuilder();

  TrueSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrueSpeed other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrueSpeed;
  }

  @override
  void update(void updates(TrueSpeedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrueSpeed build() {
    final _$result = _$v ??
        new _$TrueSpeed._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Navigation Uncertainty immutable class
///
class _$NavigationUncertainty extends NavigationUncertainty {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final double u;
  @override
  final double v;
  @override
  final double w;
  @override
  final double biasPsi;
  @override
  final double biasR;

  factory _$NavigationUncertainty([void updates(NavigationUncertaintyBuilder b)]) =>
      (new NavigationUncertaintyBuilder()..update(updates)).build();

  _$NavigationUncertainty._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi,
      this.p,
      this.q,
      this.r,
      this.u,
      this.v,
      this.w,
      this.biasPsi,
      this.biasR})
      : super._();

  @override
  NavigationUncertainty rebuild(void updates(NavigationUncertaintyBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  NavigationUncertaintyBuilder toBuilder() => new NavigationUncertaintyBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is NavigationUncertainty &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi &&
        p == this.p &&
        q == this.q &&
        r == this.r &&
        u == this.u &&
        v == this.v &&
        w == this.w &&
        biasPsi == this.biasPsi &&
        biasR == this.biasR;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode), 
        phi?.hashCode), 
        theta?.hashCode), 
        psi?.hashCode), 
        p?.hashCode), 
        q?.hashCode), 
        r?.hashCode), 
        u?.hashCode), 
        v?.hashCode), 
        w?.hashCode), 
        biasPsi?.hashCode), 
        biasR?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('NavigationUncertainty')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi)
          ..add('p', p)
          ..add('q', q)
          ..add('r', r)
          ..add('u', u)
          ..add('v', v)
          ..add('w', w)
          ..add('biasPsi', biasPsi)
          ..add('biasR', biasR))
        .toString();
  }
}

/// Navigation Uncertainty builder class
///
class NavigationUncertaintyBuilder implements Builder<NavigationUncertainty, NavigationUncertaintyBuilder>, ImcBuilderHeaderPart {
  _$NavigationUncertainty _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _p;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  double _u;
  double get u => _$this._u;
  set u(double u) => _$this._u = u;

  double _v;
  double get v => _$this._v;
  set v(double v) => _$this._v = v;

  double _w;
  double get w => _$this._w;
  set w(double w) => _$this._w = w;

  double _biasPsi;
  double get biasPsi => _$this._biasPsi;
  set biasPsi(double biasPsi) => _$this._biasPsi = biasPsi;

  double _biasR;
  double get biasR => _$this._biasR;
  set biasR(double biasR) => _$this._biasR = biasR;

  NavigationUncertaintyBuilder();

  NavigationUncertaintyBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _u = _$v.u;
      _v = _$v.v;
      _w = _$v.w;
      _biasPsi = _$v.biasPsi;
      _biasR = _$v.biasR;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(NavigationUncertainty other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$NavigationUncertainty;
  }

  @override
  void update(void updates(NavigationUncertaintyBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$NavigationUncertainty build() {
    final _$result = _$v ??
        new _$NavigationUncertainty._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0,
            p: p ?? 0,
            q: q ?? 0,
            r: r ?? 0,
            u: u ?? 0,
            v: v ?? 0,
            w: w ?? 0,
            biasPsi: biasPsi ?? 0,
            biasR: biasR ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Navigation Data immutable class
///
class _$NavigationData extends NavigationData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double biasPsi;
  @override
  final double biasR;
  @override
  final double cog;
  @override
  final double cyaw;
  @override
  final double lblRejLevel;
  @override
  final double gpsRejLevel;
  @override
  final double customX;
  @override
  final double customY;
  @override
  final double customZ;

  factory _$NavigationData([void updates(NavigationDataBuilder b)]) =>
      (new NavigationDataBuilder()..update(updates)).build();

  _$NavigationData._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.biasPsi,
      this.biasR,
      this.cog,
      this.cyaw,
      this.lblRejLevel,
      this.gpsRejLevel,
      this.customX,
      this.customY,
      this.customZ})
      : super._();

  @override
  NavigationData rebuild(void updates(NavigationDataBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  NavigationDataBuilder toBuilder() => new NavigationDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is NavigationData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        biasPsi == this.biasPsi &&
        biasR == this.biasR &&
        cog == this.cog &&
        cyaw == this.cyaw &&
        lblRejLevel == this.lblRejLevel &&
        gpsRejLevel == this.gpsRejLevel &&
        customX == this.customX &&
        customY == this.customY &&
        customZ == this.customZ;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        biasPsi?.hashCode), 
        biasR?.hashCode), 
        cog?.hashCode), 
        cyaw?.hashCode), 
        lblRejLevel?.hashCode), 
        gpsRejLevel?.hashCode), 
        customX?.hashCode), 
        customY?.hashCode), 
        customZ?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('NavigationData')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('biasPsi', biasPsi)
          ..add('biasR', biasR)
          ..add('cog', cog)
          ..add('cyaw', cyaw)
          ..add('lblRejLevel', lblRejLevel)
          ..add('gpsRejLevel', gpsRejLevel)
          ..add('customX', customX)
          ..add('customY', customY)
          ..add('customZ', customZ))
        .toString();
  }
}

/// Navigation Data builder class
///
class NavigationDataBuilder implements Builder<NavigationData, NavigationDataBuilder>, ImcBuilderHeaderPart {
  _$NavigationData _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _biasPsi;
  double get biasPsi => _$this._biasPsi;
  set biasPsi(double biasPsi) => _$this._biasPsi = biasPsi;

  double _biasR;
  double get biasR => _$this._biasR;
  set biasR(double biasR) => _$this._biasR = biasR;

  double _cog;
  double get cog => _$this._cog;
  set cog(double cog) => _$this._cog = cog;

  double _cyaw;
  double get cyaw => _$this._cyaw;
  set cyaw(double cyaw) => _$this._cyaw = cyaw;

  double _lblRejLevel;
  double get lblRejLevel => _$this._lblRejLevel;
  set lblRejLevel(double lblRejLevel) => _$this._lblRejLevel = lblRejLevel;

  double _gpsRejLevel;
  double get gpsRejLevel => _$this._gpsRejLevel;
  set gpsRejLevel(double gpsRejLevel) => _$this._gpsRejLevel = gpsRejLevel;

  double _customX;
  double get customX => _$this._customX;
  set customX(double customX) => _$this._customX = customX;

  double _customY;
  double get customY => _$this._customY;
  set customY(double customY) => _$this._customY = customY;

  double _customZ;
  double get customZ => _$this._customZ;
  set customZ(double customZ) => _$this._customZ = customZ;

  NavigationDataBuilder();

  NavigationDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _biasPsi = _$v.biasPsi;
      _biasR = _$v.biasR;
      _cog = _$v.cog;
      _cyaw = _$v.cyaw;
      _lblRejLevel = _$v.lblRejLevel;
      _gpsRejLevel = _$v.gpsRejLevel;
      _customX = _$v.customX;
      _customY = _$v.customY;
      _customZ = _$v.customZ;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(NavigationData other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$NavigationData;
  }

  @override
  void update(void updates(NavigationDataBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$NavigationData build() {
    final _$result = _$v ??
        new _$NavigationData._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            biasPsi: biasPsi ?? 0,
            biasR: biasR ?? 0,
            cog: cog ?? 0,
            cyaw: cyaw ?? 0,
            lblRejLevel: lblRejLevel ?? 0,
            gpsRejLevel: gpsRejLevel ?? 0,
            customX: customX ?? 0,
            customY: customY ?? 0,
            customZ: customZ ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// GPS Fix Rejection immutable class
///
class _$GpsFixRejection extends GpsFixRejection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double utcTime;
  @override
  final GpsFixRejectionEnumReason reason;

  factory _$GpsFixRejection([void updates(GpsFixRejectionBuilder b)]) =>
      (new GpsFixRejectionBuilder()..update(updates)).build();

  _$GpsFixRejection._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.utcTime,
      this.reason})
      : super._();

  @override
  GpsFixRejection rebuild(void updates(GpsFixRejectionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GpsFixRejectionBuilder toBuilder() => new GpsFixRejectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GpsFixRejection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        utcTime == this.utcTime &&
        reason == this.reason;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        utcTime?.hashCode), 
        reason?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GpsFixRejection')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('utcTime', utcTime)
          ..add('reason', reason))
        .toString();
  }
}

/// GPS Fix Rejection builder class
///
class GpsFixRejectionBuilder implements Builder<GpsFixRejection, GpsFixRejectionBuilder>, ImcBuilderHeaderPart {
  _$GpsFixRejection _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _utcTime;
  double get utcTime => _$this._utcTime;
  set utcTime(double utcTime) => _$this._utcTime = utcTime;

  GpsFixRejectionEnumReason _reason;
  GpsFixRejectionEnumReason get reason => _$this._reason;
  set reason(GpsFixRejectionEnumReason reason) => _$this._reason = reason;

  GpsFixRejectionBuilder();

  GpsFixRejectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _utcTime = _$v.utcTime;
      _reason = _$v.reason;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GpsFixRejection other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GpsFixRejection;
  }

  @override
  void update(void updates(GpsFixRejectionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GpsFixRejection build() {
    final _$result = _$v ??
        new _$GpsFixRejection._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            utcTime: utcTime ?? 0,
            reason: reason ?? GpsFixRejectionEnumReason(0));
    replace(_$result);
    return _$result;
  }
}

/// LBL Range Acceptance immutable class
///
class _$LblRangeAcceptance extends LblRangeAcceptance {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double range;
  @override
  final LblRangeAcceptanceEnumAcceptance acceptance;

  factory _$LblRangeAcceptance([void updates(LblRangeAcceptanceBuilder b)]) =>
      (new LblRangeAcceptanceBuilder()..update(updates)).build();

  _$LblRangeAcceptance._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.range,
      this.acceptance})
      : super._();

  @override
  LblRangeAcceptance rebuild(void updates(LblRangeAcceptanceBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LblRangeAcceptanceBuilder toBuilder() => new LblRangeAcceptanceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblRangeAcceptance &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        range == this.range &&
        acceptance == this.acceptance;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        id?.hashCode), 
        range?.hashCode), 
        acceptance?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblRangeAcceptance')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', id)
          ..add('range', range)
          ..add('acceptance', acceptance))
        .toString();
  }
}

/// LBL Range Acceptance builder class
///
class LblRangeAcceptanceBuilder implements Builder<LblRangeAcceptance, LblRangeAcceptanceBuilder>, ImcBuilderHeaderPart {
  _$LblRangeAcceptance _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _range;
  double get range => _$this._range;
  set range(double range) => _$this._range = range;

  LblRangeAcceptanceEnumAcceptance _acceptance;
  LblRangeAcceptanceEnumAcceptance get acceptance => _$this._acceptance;
  set acceptance(LblRangeAcceptanceEnumAcceptance acceptance) => _$this._acceptance = acceptance;

  LblRangeAcceptanceBuilder();

  LblRangeAcceptanceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _range = _$v.range;
      _acceptance = _$v.acceptance;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblRangeAcceptance other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LblRangeAcceptance;
  }

  @override
  void update(void updates(LblRangeAcceptanceBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LblRangeAcceptance build() {
    final _$result = _$v ??
        new _$LblRangeAcceptance._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            range: range ?? 0,
            acceptance: acceptance ?? LblRangeAcceptanceEnumAcceptance(0));
    replace(_$result);
    return _$result;
  }
}

/// DVL Rejection immutable class
///
class _$DvlRejection extends DvlRejection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DvlRejectionBitfieldType type;
  @override
  final DvlRejectionEnumReason reason;
  @override
  final double value;
  @override
  final double timestep;

  factory _$DvlRejection([void updates(DvlRejectionBuilder b)]) =>
      (new DvlRejectionBuilder()..update(updates)).build();

  _$DvlRejection._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.reason,
      this.value,
      this.timestep})
      : super._();

  @override
  DvlRejection rebuild(void updates(DvlRejectionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DvlRejectionBuilder toBuilder() => new DvlRejectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DvlRejection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        reason == this.reason &&
        value == this.value &&
        timestep == this.timestep;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode), 
        reason?.hashCode), 
        value?.hashCode), 
        timestep?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DvlRejection')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type)
          ..add('reason', reason)
          ..add('value', value)
          ..add('timestep', timestep))
        .toString();
  }
}

/// DVL Rejection builder class
///
class DvlRejectionBuilder implements Builder<DvlRejection, DvlRejectionBuilder>, ImcBuilderHeaderPart {
  _$DvlRejection _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DvlRejectionBitfieldType _type;
  DvlRejectionBitfieldType get type => _$this._type;
  set type(DvlRejectionBitfieldType type) => _$this._type = type;

  DvlRejectionEnumReason _reason;
  DvlRejectionEnumReason get reason => _$this._reason;
  set reason(DvlRejectionEnumReason reason) => _$this._reason = reason;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  double _timestep;
  double get timestep => _$this._timestep;
  set timestep(double timestep) => _$this._timestep = timestep;

  DvlRejectionBuilder();

  DvlRejectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _reason = _$v.reason;
      _value = _$v.value;
      _timestep = _$v.timestep;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DvlRejection other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DvlRejection;
  }

  @override
  void update(void updates(DvlRejectionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DvlRejection build() {
    final _$result = _$v ??
        new _$DvlRejection._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? DvlRejectionBitfieldType(0),
            reason: reason ?? DvlRejectionEnumReason(0),
            value: value ?? 0,
            timestep: timestep ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// LBL Beacon Position Estimate immutable class
///
class _$LblEstimate extends LblEstimate {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LblBeacon beacon;
  @override
  final double x;
  @override
  final double y;
  @override
  final double varX;
  @override
  final double varY;
  @override
  final double distance;

  factory _$LblEstimate([void updates(LblEstimateBuilder b)]) =>
      (new LblEstimateBuilder()..update(updates)).build();

  _$LblEstimate._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.beacon,
      this.x,
      this.y,
      this.varX,
      this.varY,
      this.distance})
      : super._();

  @override
  LblEstimate rebuild(void updates(LblEstimateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LblEstimateBuilder toBuilder() => new LblEstimateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblEstimate &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        beacon == this.beacon &&
        x == this.x &&
        y == this.y &&
        varX == this.varX &&
        varY == this.varY &&
        distance == this.distance;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        beacon?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        varX?.hashCode), 
        varY?.hashCode), 
        distance?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblEstimate')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('beacon', beacon)
          ..add('x', x)
          ..add('y', y)
          ..add('varX', varX)
          ..add('varY', varY)
          ..add('distance', distance))
        .toString();
  }
}

/// LBL Beacon Position Estimate builder class
///
class LblEstimateBuilder implements Builder<LblEstimate, LblEstimateBuilder>, ImcBuilderHeaderPart {
  _$LblEstimate _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LblBeacon _beacon;
  LblBeacon get beacon => _$this._beacon;
  set beacon(LblBeacon beacon) => _$this._beacon = beacon;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _varX;
  double get varX => _$this._varX;
  set varX(double varX) => _$this._varX = varX;

  double _varY;
  double get varY => _$this._varY;
  set varY(double varY) => _$this._varY = varY;

  double _distance;
  double get distance => _$this._distance;
  set distance(double distance) => _$this._distance = distance;

  LblEstimateBuilder();

  LblEstimateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _beacon = _$v.beacon;
      _x = _$v.x;
      _y = _$v.y;
      _varX = _$v.varX;
      _varY = _$v.varY;
      _distance = _$v.distance;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblEstimate other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LblEstimate;
  }

  @override
  void update(void updates(LblEstimateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LblEstimate build() {
    final _$result = _$v ??
        new _$LblEstimate._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            beacon: beacon,
            x: x ?? 0,
            y: y ?? 0,
            varX: varX ?? 0,
            varY: varY ?? 0,
            distance: distance ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Alignment State immutable class
///
class _$AlignmentState extends AlignmentState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final AlignmentStateEnumState state;

  factory _$AlignmentState([void updates(AlignmentStateBuilder b)]) =>
      (new AlignmentStateBuilder()..update(updates)).build();

  _$AlignmentState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state})
      : super._();

  @override
  AlignmentState rebuild(void updates(AlignmentStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AlignmentStateBuilder toBuilder() => new AlignmentStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AlignmentState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        state?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AlignmentState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', state))
        .toString();
  }
}

/// Alignment State builder class
///
class AlignmentStateBuilder implements Builder<AlignmentState, AlignmentStateBuilder>, ImcBuilderHeaderPart {
  _$AlignmentState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AlignmentStateEnumState _state;
  AlignmentStateEnumState get state => _$this._state;
  set state(AlignmentStateEnumState state) => _$this._state = state;

  AlignmentStateBuilder();

  AlignmentStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AlignmentState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AlignmentState;
  }

  @override
  void update(void updates(AlignmentStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AlignmentState build() {
    final _$result = _$v ??
        new _$AlignmentState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? AlignmentStateEnumState(0));
    replace(_$result);
    return _$result;
  }
}

/// GroupStreamVelocity immutable class
///
class _$GroupStreamVelocity extends GroupStreamVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$GroupStreamVelocity([void updates(GroupStreamVelocityBuilder b)]) =>
      (new GroupStreamVelocityBuilder()..update(updates)).build();

  _$GroupStreamVelocity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  GroupStreamVelocity rebuild(void updates(GroupStreamVelocityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GroupStreamVelocityBuilder toBuilder() => new GroupStreamVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GroupStreamVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GroupStreamVelocity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// GroupStreamVelocity builder class
///
class GroupStreamVelocityBuilder implements Builder<GroupStreamVelocity, GroupStreamVelocityBuilder>, ImcBuilderHeaderPart {
  _$GroupStreamVelocity _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  GroupStreamVelocityBuilder();

  GroupStreamVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GroupStreamVelocity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GroupStreamVelocity;
  }

  @override
  void update(void updates(GroupStreamVelocityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GroupStreamVelocity build() {
    final _$result = _$v ??
        new _$GroupStreamVelocity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Airflow immutable class
///
class _$Airflow extends Airflow {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double va;
  @override
  final double aoa;
  @override
  final double ssa;

  factory _$Airflow([void updates(AirflowBuilder b)]) =>
      (new AirflowBuilder()..update(updates)).build();

  _$Airflow._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.va,
      this.aoa,
      this.ssa})
      : super._();

  @override
  Airflow rebuild(void updates(AirflowBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AirflowBuilder toBuilder() => new AirflowBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Airflow &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        va == this.va &&
        aoa == this.aoa &&
        ssa == this.ssa;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        va?.hashCode), 
        aoa?.hashCode), 
        ssa?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Airflow')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('va', va)
          ..add('aoa', aoa)
          ..add('ssa', ssa))
        .toString();
  }
}

/// Airflow builder class
///
class AirflowBuilder implements Builder<Airflow, AirflowBuilder>, ImcBuilderHeaderPart {
  _$Airflow _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _va;
  double get va => _$this._va;
  set va(double va) => _$this._va = va;

  double _aoa;
  double get aoa => _$this._aoa;
  set aoa(double aoa) => _$this._aoa = aoa;

  double _ssa;
  double get ssa => _$this._ssa;
  set ssa(double ssa) => _$this._ssa = ssa;

  AirflowBuilder();

  AirflowBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _va = _$v.va;
      _aoa = _$v.aoa;
      _ssa = _$v.ssa;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Airflow other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Airflow;
  }

  @override
  void update(void updates(AirflowBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Airflow build() {
    final _$result = _$v ??
        new _$Airflow._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            va: va ?? 0,
            aoa: aoa ?? 0,
            ssa: ssa ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Desired Heading immutable class
///
class _$DesiredHeading extends DesiredHeading {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredHeading([void updates(DesiredHeadingBuilder b)]) =>
      (new DesiredHeadingBuilder()..update(updates)).build();

  _$DesiredHeading._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredHeading rebuild(void updates(DesiredHeadingBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredHeadingBuilder toBuilder() => new DesiredHeadingBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredHeading &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredHeading')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Desired Heading builder class
///
class DesiredHeadingBuilder implements Builder<DesiredHeading, DesiredHeadingBuilder>, ImcBuilderHeaderPart {
  _$DesiredHeading _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredHeadingBuilder();

  DesiredHeadingBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredHeading other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredHeading;
  }

  @override
  void update(void updates(DesiredHeadingBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredHeading build() {
    final _$result = _$v ??
        new _$DesiredHeading._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Desired Z immutable class
///
class _$DesiredZ extends DesiredZ {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final ZUnitsEnum zUnits;

  factory _$DesiredZ([void updates(DesiredZBuilder b)]) =>
      (new DesiredZBuilder()..update(updates)).build();

  _$DesiredZ._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value,
      this.zUnits})
      : super._();

  @override
  DesiredZ rebuild(void updates(DesiredZBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredZBuilder toBuilder() => new DesiredZBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredZ &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value &&
        zUnits == this.zUnits;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode), 
        zUnits?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredZ')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value)
          ..add('zUnits', zUnits))
        .toString();
  }
}

/// Desired Z builder class
///
class DesiredZBuilder implements Builder<DesiredZ, DesiredZBuilder>, ImcBuilderHeaderPart {
  _$DesiredZ _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  DesiredZBuilder();

  DesiredZBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _zUnits = _$v.zUnits;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredZ other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredZ;
  }

  @override
  void update(void updates(DesiredZBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredZ build() {
    final _$result = _$v ??
        new _$DesiredZ._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0));
    replace(_$result);
    return _$result;
  }
}

/// Desired Speed immutable class
///
class _$DesiredSpeed extends DesiredSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final SpeedUnitsEnum speedUnits;

  factory _$DesiredSpeed([void updates(DesiredSpeedBuilder b)]) =>
      (new DesiredSpeedBuilder()..update(updates)).build();

  _$DesiredSpeed._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value,
      this.speedUnits})
      : super._();

  @override
  DesiredSpeed rebuild(void updates(DesiredSpeedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredSpeedBuilder toBuilder() => new DesiredSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value &&
        speedUnits == this.speedUnits;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode), 
        speedUnits?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredSpeed')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value)
          ..add('speedUnits', speedUnits))
        .toString();
  }
}

/// Desired Speed builder class
///
class DesiredSpeedBuilder implements Builder<DesiredSpeed, DesiredSpeedBuilder>, ImcBuilderHeaderPart {
  _$DesiredSpeed _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  DesiredSpeedBuilder();

  DesiredSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _speedUnits = _$v.speedUnits;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredSpeed other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredSpeed;
  }

  @override
  void update(void updates(DesiredSpeedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredSpeed build() {
    final _$result = _$v ??
        new _$DesiredSpeed._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0));
    replace(_$result);
    return _$result;
  }
}

/// Desired Roll immutable class
///
class _$DesiredRoll extends DesiredRoll {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredRoll([void updates(DesiredRollBuilder b)]) =>
      (new DesiredRollBuilder()..update(updates)).build();

  _$DesiredRoll._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredRoll rebuild(void updates(DesiredRollBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredRollBuilder toBuilder() => new DesiredRollBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredRoll &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredRoll')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Desired Roll builder class
///
class DesiredRollBuilder implements Builder<DesiredRoll, DesiredRollBuilder>, ImcBuilderHeaderPart {
  _$DesiredRoll _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredRollBuilder();

  DesiredRollBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredRoll other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredRoll;
  }

  @override
  void update(void updates(DesiredRollBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredRoll build() {
    final _$result = _$v ??
        new _$DesiredRoll._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Desired Pitch immutable class
///
class _$DesiredPitch extends DesiredPitch {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredPitch([void updates(DesiredPitchBuilder b)]) =>
      (new DesiredPitchBuilder()..update(updates)).build();

  _$DesiredPitch._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredPitch rebuild(void updates(DesiredPitchBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredPitchBuilder toBuilder() => new DesiredPitchBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredPitch &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredPitch')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Desired Pitch builder class
///
class DesiredPitchBuilder implements Builder<DesiredPitch, DesiredPitchBuilder>, ImcBuilderHeaderPart {
  _$DesiredPitch _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredPitchBuilder();

  DesiredPitchBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredPitch other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredPitch;
  }

  @override
  void update(void updates(DesiredPitchBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredPitch build() {
    final _$result = _$v ??
        new _$DesiredPitch._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Desired Vertical Rate immutable class
///
class _$DesiredVerticalRate extends DesiredVerticalRate {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredVerticalRate([void updates(DesiredVerticalRateBuilder b)]) =>
      (new DesiredVerticalRateBuilder()..update(updates)).build();

  _$DesiredVerticalRate._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredVerticalRate rebuild(void updates(DesiredVerticalRateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredVerticalRateBuilder toBuilder() => new DesiredVerticalRateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredVerticalRate &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredVerticalRate')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Desired Vertical Rate builder class
///
class DesiredVerticalRateBuilder implements Builder<DesiredVerticalRate, DesiredVerticalRateBuilder>, ImcBuilderHeaderPart {
  _$DesiredVerticalRate _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredVerticalRateBuilder();

  DesiredVerticalRateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredVerticalRate other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredVerticalRate;
  }

  @override
  void update(void updates(DesiredVerticalRateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredVerticalRate build() {
    final _$result = _$v ??
        new _$DesiredVerticalRate._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Desired Path immutable class
///
class _$DesiredPath extends DesiredPath {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int pathRef;
  @override
  final double startLat;
  @override
  final double startLon;
  @override
  final double startZ;
  @override
  final ZUnitsEnum startZUnits;
  @override
  final double endLat;
  @override
  final double endLon;
  @override
  final double endZ;
  @override
  final ZUnitsEnum endZUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double lradius;
  @override
  final DesiredPathBitfieldFlags flags;

  factory _$DesiredPath([void updates(DesiredPathBuilder b)]) =>
      (new DesiredPathBuilder()..update(updates)).build();

  _$DesiredPath._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.pathRef,
      this.startLat,
      this.startLon,
      this.startZ,
      this.startZUnits,
      this.endLat,
      this.endLon,
      this.endZ,
      this.endZUnits,
      this.speed,
      this.speedUnits,
      this.lradius,
      this.flags})
      : super._();

  @override
  DesiredPath rebuild(void updates(DesiredPathBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredPathBuilder toBuilder() => new DesiredPathBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredPath &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        pathRef == this.pathRef &&
        startLat == this.startLat &&
        startLon == this.startLon &&
        startZ == this.startZ &&
        startZUnits == this.startZUnits &&
        endLat == this.endLat &&
        endLon == this.endLon &&
        endZ == this.endZ &&
        endZUnits == this.endZUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        lradius == this.lradius &&
        flags == this.flags;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        pathRef?.hashCode), 
        startLat?.hashCode), 
        startLon?.hashCode), 
        startZ?.hashCode), 
        startZUnits?.hashCode), 
        endLat?.hashCode), 
        endLon?.hashCode), 
        endZ?.hashCode), 
        endZUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        lradius?.hashCode), 
        flags?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredPath')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('pathRef', pathRef)
          ..add('startLat', startLat)
          ..add('startLon', startLon)
          ..add('startZ', startZ)
          ..add('startZUnits', startZUnits)
          ..add('endLat', endLat)
          ..add('endLon', endLon)
          ..add('endZ', endZ)
          ..add('endZUnits', endZUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('lradius', lradius)
          ..add('flags', flags))
        .toString();
  }
}

/// Desired Path builder class
///
class DesiredPathBuilder implements Builder<DesiredPath, DesiredPathBuilder>, ImcBuilderHeaderPart {
  _$DesiredPath _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _pathRef;
  int get pathRef => _$this._pathRef;
  set pathRef(int pathRef) => _$this._pathRef = pathRef;

  double _startLat;
  double get startLat => _$this._startLat;
  set startLat(double startLat) => _$this._startLat = startLat;

  double _startLon;
  double get startLon => _$this._startLon;
  set startLon(double startLon) => _$this._startLon = startLon;

  double _startZ;
  double get startZ => _$this._startZ;
  set startZ(double startZ) => _$this._startZ = startZ;

  ZUnitsEnum _startZUnits;
  ZUnitsEnum get startZUnits => _$this._startZUnits;
  set startZUnits(ZUnitsEnum startZUnits) => _$this._startZUnits = startZUnits;

  double _endLat;
  double get endLat => _$this._endLat;
  set endLat(double endLat) => _$this._endLat = endLat;

  double _endLon;
  double get endLon => _$this._endLon;
  set endLon(double endLon) => _$this._endLon = endLon;

  double _endZ;
  double get endZ => _$this._endZ;
  set endZ(double endZ) => _$this._endZ = endZ;

  ZUnitsEnum _endZUnits;
  ZUnitsEnum get endZUnits => _$this._endZUnits;
  set endZUnits(ZUnitsEnum endZUnits) => _$this._endZUnits = endZUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _lradius;
  double get lradius => _$this._lradius;
  set lradius(double lradius) => _$this._lradius = lradius;

  DesiredPathBitfieldFlags _flags;
  DesiredPathBitfieldFlags get flags => _$this._flags;
  set flags(DesiredPathBitfieldFlags flags) => _$this._flags = flags;

  DesiredPathBuilder();

  DesiredPathBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _pathRef = _$v.pathRef;
      _startLat = _$v.startLat;
      _startLon = _$v.startLon;
      _startZ = _$v.startZ;
      _startZUnits = _$v.startZUnits;
      _endLat = _$v.endLat;
      _endLon = _$v.endLon;
      _endZ = _$v.endZ;
      _endZUnits = _$v.endZUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _lradius = _$v.lradius;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredPath other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredPath;
  }

  @override
  void update(void updates(DesiredPathBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredPath build() {
    final _$result = _$v ??
        new _$DesiredPath._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            pathRef: pathRef ?? 0,
            startLat: startLat ?? 0,
            startLon: startLon ?? 0,
            startZ: startZ ?? 0,
            startZUnits: startZUnits ?? ZUnitsEnum(0),
            endLat: endLat ?? 0,
            endLon: endLon ?? 0,
            endZ: endZ ?? 0,
            endZUnits: endZUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            lradius: lradius ?? 0,
            flags: flags ?? DesiredPathBitfieldFlags(0));
    replace(_$result);
    return _$result;
  }
}

/// Desired Control immutable class
///
class _$DesiredControl extends DesiredControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double k;
  @override
  final double m;
  @override
  final double n;
  @override
  final DesiredControlBitfieldFlags flags;

  factory _$DesiredControl([void updates(DesiredControlBuilder b)]) =>
      (new DesiredControlBuilder()..update(updates)).build();

  _$DesiredControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.k,
      this.m,
      this.n,
      this.flags})
      : super._();

  @override
  DesiredControl rebuild(void updates(DesiredControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredControlBuilder toBuilder() => new DesiredControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        k == this.k &&
        m == this.m &&
        n == this.n &&
        flags == this.flags;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode), 
        k?.hashCode), 
        m?.hashCode), 
        n?.hashCode), 
        flags?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('k', k)
          ..add('m', m)
          ..add('n', n)
          ..add('flags', flags))
        .toString();
  }
}

/// Desired Control builder class
///
class DesiredControlBuilder implements Builder<DesiredControl, DesiredControlBuilder>, ImcBuilderHeaderPart {
  _$DesiredControl _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _k;
  double get k => _$this._k;
  set k(double k) => _$this._k = k;

  double _m;
  double get m => _$this._m;
  set m(double m) => _$this._m = m;

  double _n;
  double get n => _$this._n;
  set n(double n) => _$this._n = n;

  DesiredControlBitfieldFlags _flags;
  DesiredControlBitfieldFlags get flags => _$this._flags;
  set flags(DesiredControlBitfieldFlags flags) => _$this._flags = flags;

  DesiredControlBuilder();

  DesiredControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _k = _$v.k;
      _m = _$v.m;
      _n = _$v.n;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredControl;
  }

  @override
  void update(void updates(DesiredControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredControl build() {
    final _$result = _$v ??
        new _$DesiredControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            k: k ?? 0,
            m: m ?? 0,
            n: n ?? 0,
            flags: flags ?? DesiredControlBitfieldFlags(0));
    replace(_$result);
    return _$result;
  }
}

/// Desired Heading Rate immutable class
///
class _$DesiredHeadingRate extends DesiredHeadingRate {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredHeadingRate([void updates(DesiredHeadingRateBuilder b)]) =>
      (new DesiredHeadingRateBuilder()..update(updates)).build();

  _$DesiredHeadingRate._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredHeadingRate rebuild(void updates(DesiredHeadingRateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredHeadingRateBuilder toBuilder() => new DesiredHeadingRateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredHeadingRate &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredHeadingRate')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Desired Heading Rate builder class
///
class DesiredHeadingRateBuilder implements Builder<DesiredHeadingRate, DesiredHeadingRateBuilder>, ImcBuilderHeaderPart {
  _$DesiredHeadingRate _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredHeadingRateBuilder();

  DesiredHeadingRateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredHeadingRate other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredHeadingRate;
  }

  @override
  void update(void updates(DesiredHeadingRateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredHeadingRate build() {
    final _$result = _$v ??
        new _$DesiredHeadingRate._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Desired Velocity immutable class
///
class _$DesiredVelocity extends DesiredVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double u;
  @override
  final double v;
  @override
  final double w;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final DesiredVelocityBitfieldFlags flags;

  factory _$DesiredVelocity([void updates(DesiredVelocityBuilder b)]) =>
      (new DesiredVelocityBuilder()..update(updates)).build();

  _$DesiredVelocity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.u,
      this.v,
      this.w,
      this.p,
      this.q,
      this.r,
      this.flags})
      : super._();

  @override
  DesiredVelocity rebuild(void updates(DesiredVelocityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredVelocityBuilder toBuilder() => new DesiredVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        u == this.u &&
        v == this.v &&
        w == this.w &&
        p == this.p &&
        q == this.q &&
        r == this.r &&
        flags == this.flags;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        u?.hashCode), 
        v?.hashCode), 
        w?.hashCode), 
        p?.hashCode), 
        q?.hashCode), 
        r?.hashCode), 
        flags?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredVelocity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('u', u)
          ..add('v', v)
          ..add('w', w)
          ..add('p', p)
          ..add('q', q)
          ..add('r', r)
          ..add('flags', flags))
        .toString();
  }
}

/// Desired Velocity builder class
///
class DesiredVelocityBuilder implements Builder<DesiredVelocity, DesiredVelocityBuilder>, ImcBuilderHeaderPart {
  _$DesiredVelocity _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _u;
  double get u => _$this._u;
  set u(double u) => _$this._u = u;

  double _v;
  double get v => _$this._v;
  set v(double v) => _$this._v = v;

  double _w;
  double get w => _$this._w;
  set w(double w) => _$this._w = w;

  double _p;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  DesiredVelocityBitfieldFlags _flags;
  DesiredVelocityBitfieldFlags get flags => _$this._flags;
  set flags(DesiredVelocityBitfieldFlags flags) => _$this._flags = flags;

  DesiredVelocityBuilder();

  DesiredVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _u = _$v.u;
      _v = _$v.v;
      _w = _$v.w;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredVelocity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredVelocity;
  }

  @override
  void update(void updates(DesiredVelocityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredVelocity build() {
    final _$result = _$v ??
        new _$DesiredVelocity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            u: u ?? 0,
            v: v ?? 0,
            w: w ?? 0,
            p: p ?? 0,
            q: q ?? 0,
            r: r ?? 0,
            flags: flags ?? DesiredVelocityBitfieldFlags(0));
    replace(_$result);
    return _$result;
  }
}

/// Path Control State immutable class
///
class _$PathControlState extends PathControlState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int pathRef;
  @override
  final double startLat;
  @override
  final double startLon;
  @override
  final double startZ;
  @override
  final ZUnitsEnum startZUnits;
  @override
  final double endLat;
  @override
  final double endLon;
  @override
  final double endZ;
  @override
  final ZUnitsEnum endZUnits;
  @override
  final double lradius;
  @override
  final PathControlStateBitfieldFlags flags;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double vx;
  @override
  final double vy;
  @override
  final double vz;
  @override
  final double courseError;
  @override
  final int eta;

  factory _$PathControlState([void updates(PathControlStateBuilder b)]) =>
      (new PathControlStateBuilder()..update(updates)).build();

  _$PathControlState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.pathRef,
      this.startLat,
      this.startLon,
      this.startZ,
      this.startZUnits,
      this.endLat,
      this.endLon,
      this.endZ,
      this.endZUnits,
      this.lradius,
      this.flags,
      this.x,
      this.y,
      this.z,
      this.vx,
      this.vy,
      this.vz,
      this.courseError,
      this.eta})
      : super._();

  @override
  PathControlState rebuild(void updates(PathControlStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PathControlStateBuilder toBuilder() => new PathControlStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PathControlState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        pathRef == this.pathRef &&
        startLat == this.startLat &&
        startLon == this.startLon &&
        startZ == this.startZ &&
        startZUnits == this.startZUnits &&
        endLat == this.endLat &&
        endLon == this.endLon &&
        endZ == this.endZ &&
        endZUnits == this.endZUnits &&
        lradius == this.lradius &&
        flags == this.flags &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        vx == this.vx &&
        vy == this.vy &&
        vz == this.vz &&
        courseError == this.courseError &&
        eta == this.eta;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        pathRef?.hashCode), 
        startLat?.hashCode), 
        startLon?.hashCode), 
        startZ?.hashCode), 
        startZUnits?.hashCode), 
        endLat?.hashCode), 
        endLon?.hashCode), 
        endZ?.hashCode), 
        endZUnits?.hashCode), 
        lradius?.hashCode), 
        flags?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode), 
        vx?.hashCode), 
        vy?.hashCode), 
        vz?.hashCode), 
        courseError?.hashCode), 
        eta?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PathControlState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('pathRef', pathRef)
          ..add('startLat', startLat)
          ..add('startLon', startLon)
          ..add('startZ', startZ)
          ..add('startZUnits', startZUnits)
          ..add('endLat', endLat)
          ..add('endLon', endLon)
          ..add('endZ', endZ)
          ..add('endZUnits', endZUnits)
          ..add('lradius', lradius)
          ..add('flags', flags)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('vx', vx)
          ..add('vy', vy)
          ..add('vz', vz)
          ..add('courseError', courseError)
          ..add('eta', eta))
        .toString();
  }
}

/// Path Control State builder class
///
class PathControlStateBuilder implements Builder<PathControlState, PathControlStateBuilder>, ImcBuilderHeaderPart {
  _$PathControlState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _pathRef;
  int get pathRef => _$this._pathRef;
  set pathRef(int pathRef) => _$this._pathRef = pathRef;

  double _startLat;
  double get startLat => _$this._startLat;
  set startLat(double startLat) => _$this._startLat = startLat;

  double _startLon;
  double get startLon => _$this._startLon;
  set startLon(double startLon) => _$this._startLon = startLon;

  double _startZ;
  double get startZ => _$this._startZ;
  set startZ(double startZ) => _$this._startZ = startZ;

  ZUnitsEnum _startZUnits;
  ZUnitsEnum get startZUnits => _$this._startZUnits;
  set startZUnits(ZUnitsEnum startZUnits) => _$this._startZUnits = startZUnits;

  double _endLat;
  double get endLat => _$this._endLat;
  set endLat(double endLat) => _$this._endLat = endLat;

  double _endLon;
  double get endLon => _$this._endLon;
  set endLon(double endLon) => _$this._endLon = endLon;

  double _endZ;
  double get endZ => _$this._endZ;
  set endZ(double endZ) => _$this._endZ = endZ;

  ZUnitsEnum _endZUnits;
  ZUnitsEnum get endZUnits => _$this._endZUnits;
  set endZUnits(ZUnitsEnum endZUnits) => _$this._endZUnits = endZUnits;

  double _lradius;
  double get lradius => _$this._lradius;
  set lradius(double lradius) => _$this._lradius = lradius;

  PathControlStateBitfieldFlags _flags;
  PathControlStateBitfieldFlags get flags => _$this._flags;
  set flags(PathControlStateBitfieldFlags flags) => _$this._flags = flags;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _vx;
  double get vx => _$this._vx;
  set vx(double vx) => _$this._vx = vx;

  double _vy;
  double get vy => _$this._vy;
  set vy(double vy) => _$this._vy = vy;

  double _vz;
  double get vz => _$this._vz;
  set vz(double vz) => _$this._vz = vz;

  double _courseError;
  double get courseError => _$this._courseError;
  set courseError(double courseError) => _$this._courseError = courseError;

  int _eta;
  int get eta => _$this._eta;
  set eta(int eta) => _$this._eta = eta;

  PathControlStateBuilder();

  PathControlStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _pathRef = _$v.pathRef;
      _startLat = _$v.startLat;
      _startLon = _$v.startLon;
      _startZ = _$v.startZ;
      _startZUnits = _$v.startZUnits;
      _endLat = _$v.endLat;
      _endLon = _$v.endLon;
      _endZ = _$v.endZ;
      _endZUnits = _$v.endZUnits;
      _lradius = _$v.lradius;
      _flags = _$v.flags;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _vx = _$v.vx;
      _vy = _$v.vy;
      _vz = _$v.vz;
      _courseError = _$v.courseError;
      _eta = _$v.eta;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PathControlState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PathControlState;
  }

  @override
  void update(void updates(PathControlStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PathControlState build() {
    final _$result = _$v ??
        new _$PathControlState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            pathRef: pathRef ?? 0,
            startLat: startLat ?? 0,
            startLon: startLon ?? 0,
            startZ: startZ ?? 0,
            startZUnits: startZUnits ?? ZUnitsEnum(0),
            endLat: endLat ?? 0,
            endLon: endLon ?? 0,
            endZ: endZ ?? 0,
            endZUnits: endZUnits ?? ZUnitsEnum(0),
            lradius: lradius ?? 0,
            flags: flags ?? PathControlStateBitfieldFlags(0),
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            vx: vx ?? 0,
            vy: vy ?? 0,
            vz: vz ?? 0,
            courseError: courseError ?? 0,
            eta: eta ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Allocated Control Torques immutable class
///
class _$AllocatedControlTorques extends AllocatedControlTorques {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double k;
  @override
  final double m;
  @override
  final double n;

  factory _$AllocatedControlTorques([void updates(AllocatedControlTorquesBuilder b)]) =>
      (new AllocatedControlTorquesBuilder()..update(updates)).build();

  _$AllocatedControlTorques._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.k,
      this.m,
      this.n})
      : super._();

  @override
  AllocatedControlTorques rebuild(void updates(AllocatedControlTorquesBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AllocatedControlTorquesBuilder toBuilder() => new AllocatedControlTorquesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AllocatedControlTorques &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        k == this.k &&
        m == this.m &&
        n == this.n;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        k?.hashCode), 
        m?.hashCode), 
        n?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AllocatedControlTorques')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('k', k)
          ..add('m', m)
          ..add('n', n))
        .toString();
  }
}

/// Allocated Control Torques builder class
///
class AllocatedControlTorquesBuilder implements Builder<AllocatedControlTorques, AllocatedControlTorquesBuilder>, ImcBuilderHeaderPart {
  _$AllocatedControlTorques _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _k;
  double get k => _$this._k;
  set k(double k) => _$this._k = k;

  double _m;
  double get m => _$this._m;
  set m(double m) => _$this._m = m;

  double _n;
  double get n => _$this._n;
  set n(double n) => _$this._n = n;

  AllocatedControlTorquesBuilder();

  AllocatedControlTorquesBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _k = _$v.k;
      _m = _$v.m;
      _n = _$v.n;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AllocatedControlTorques other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AllocatedControlTorques;
  }

  @override
  void update(void updates(AllocatedControlTorquesBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AllocatedControlTorques build() {
    final _$result = _$v ??
        new _$AllocatedControlTorques._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            k: k ?? 0,
            m: m ?? 0,
            n: n ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Control Parcel immutable class
///
class _$ControlParcel extends ControlParcel {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double p;
  @override
  final double i;
  @override
  final double d;
  @override
  final double a;

  factory _$ControlParcel([void updates(ControlParcelBuilder b)]) =>
      (new ControlParcelBuilder()..update(updates)).build();

  _$ControlParcel._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.p,
      this.i,
      this.d,
      this.a})
      : super._();

  @override
  ControlParcel rebuild(void updates(ControlParcelBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ControlParcelBuilder toBuilder() => new ControlParcelBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ControlParcel &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        p == this.p &&
        i == this.i &&
        d == this.d &&
        a == this.a;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        p?.hashCode), 
        i?.hashCode), 
        d?.hashCode), 
        a?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ControlParcel')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('p', p)
          ..add('i', i)
          ..add('d', d)
          ..add('a', a))
        .toString();
  }
}

/// Control Parcel builder class
///
class ControlParcelBuilder implements Builder<ControlParcel, ControlParcelBuilder>, ImcBuilderHeaderPart {
  _$ControlParcel _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _p;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _i;
  double get i => _$this._i;
  set i(double i) => _$this._i = i;

  double _d;
  double get d => _$this._d;
  set d(double d) => _$this._d = d;

  double _a;
  double get a => _$this._a;
  set a(double a) => _$this._a = a;

  ControlParcelBuilder();

  ControlParcelBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _p = _$v.p;
      _i = _$v.i;
      _d = _$v.d;
      _a = _$v.a;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ControlParcel other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ControlParcel;
  }

  @override
  void update(void updates(ControlParcelBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ControlParcel build() {
    final _$result = _$v ??
        new _$ControlParcel._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            p: p ?? 0,
            i: i ?? 0,
            d: d ?? 0,
            a: a ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Brake immutable class
///
class _$Brake extends Brake {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final BrakeEnumOp op;

  factory _$Brake([void updates(BrakeBuilder b)]) =>
      (new BrakeBuilder()..update(updates)).build();

  _$Brake._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op})
      : super._();

  @override
  Brake rebuild(void updates(BrakeBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  BrakeBuilder toBuilder() => new BrakeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Brake &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Brake')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op))
        .toString();
  }
}

/// Brake builder class
///
class BrakeBuilder implements Builder<Brake, BrakeBuilder>, ImcBuilderHeaderPart {
  _$Brake _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  BrakeEnumOp _op;
  BrakeEnumOp get op => _$this._op;
  set op(BrakeEnumOp op) => _$this._op = op;

  BrakeBuilder();

  BrakeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Brake other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Brake;
  }

  @override
  void update(void updates(BrakeBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Brake build() {
    final _$result = _$v ??
        new _$Brake._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? BrakeEnumOp(0));
    replace(_$result);
    return _$result;
  }
}

/// Desired Linear State immutable class
///
class _$DesiredLinearState extends DesiredLinearState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double vx;
  @override
  final double vy;
  @override
  final double vz;
  @override
  final double ax;
  @override
  final double ay;
  @override
  final double az;
  @override
  final DesiredLinearStateBitfieldFlags flags;

  factory _$DesiredLinearState([void updates(DesiredLinearStateBuilder b)]) =>
      (new DesiredLinearStateBuilder()..update(updates)).build();

  _$DesiredLinearState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.vx,
      this.vy,
      this.vz,
      this.ax,
      this.ay,
      this.az,
      this.flags})
      : super._();

  @override
  DesiredLinearState rebuild(void updates(DesiredLinearStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredLinearStateBuilder toBuilder() => new DesiredLinearStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredLinearState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        vx == this.vx &&
        vy == this.vy &&
        vz == this.vz &&
        ax == this.ax &&
        ay == this.ay &&
        az == this.az &&
        flags == this.flags;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode), 
        vx?.hashCode), 
        vy?.hashCode), 
        vz?.hashCode), 
        ax?.hashCode), 
        ay?.hashCode), 
        az?.hashCode), 
        flags?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredLinearState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('vx', vx)
          ..add('vy', vy)
          ..add('vz', vz)
          ..add('ax', ax)
          ..add('ay', ay)
          ..add('az', az)
          ..add('flags', flags))
        .toString();
  }
}

/// Desired Linear State builder class
///
class DesiredLinearStateBuilder implements Builder<DesiredLinearState, DesiredLinearStateBuilder>, ImcBuilderHeaderPart {
  _$DesiredLinearState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _vx;
  double get vx => _$this._vx;
  set vx(double vx) => _$this._vx = vx;

  double _vy;
  double get vy => _$this._vy;
  set vy(double vy) => _$this._vy = vy;

  double _vz;
  double get vz => _$this._vz;
  set vz(double vz) => _$this._vz = vz;

  double _ax;
  double get ax => _$this._ax;
  set ax(double ax) => _$this._ax = ax;

  double _ay;
  double get ay => _$this._ay;
  set ay(double ay) => _$this._ay = ay;

  double _az;
  double get az => _$this._az;
  set az(double az) => _$this._az = az;

  DesiredLinearStateBitfieldFlags _flags;
  DesiredLinearStateBitfieldFlags get flags => _$this._flags;
  set flags(DesiredLinearStateBitfieldFlags flags) => _$this._flags = flags;

  DesiredLinearStateBuilder();

  DesiredLinearStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _vx = _$v.vx;
      _vy = _$v.vy;
      _vz = _$v.vz;
      _ax = _$v.ax;
      _ay = _$v.ay;
      _az = _$v.az;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredLinearState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredLinearState;
  }

  @override
  void update(void updates(DesiredLinearStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredLinearState build() {
    final _$result = _$v ??
        new _$DesiredLinearState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            vx: vx ?? 0,
            vy: vy ?? 0,
            vz: vz ?? 0,
            ax: ax ?? 0,
            ay: ay ?? 0,
            az: az ?? 0,
            flags: flags ?? DesiredLinearStateBitfieldFlags(0));
    replace(_$result);
    return _$result;
  }
}

/// Desired Throttle immutable class
///
class _$DesiredThrottle extends DesiredThrottle {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredThrottle([void updates(DesiredThrottleBuilder b)]) =>
      (new DesiredThrottleBuilder()..update(updates)).build();

  _$DesiredThrottle._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredThrottle rebuild(void updates(DesiredThrottleBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredThrottleBuilder toBuilder() => new DesiredThrottleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredThrottle &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredThrottle')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Desired Throttle builder class
///
class DesiredThrottleBuilder implements Builder<DesiredThrottle, DesiredThrottleBuilder>, ImcBuilderHeaderPart {
  _$DesiredThrottle _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredThrottleBuilder();

  DesiredThrottleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredThrottle other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredThrottle;
  }

  @override
  void update(void updates(DesiredThrottleBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredThrottle build() {
    final _$result = _$v ??
        new _$DesiredThrottle._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Goto Maneuver immutable class
///
class _$Goto extends Goto {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double roll;
  @override
  final double pitch;
  @override
  final double yaw;
  @override
  final String custom;

  factory _$Goto([void updates(GotoBuilder b)]) =>
      (new GotoBuilder()..update(updates)).build();

  _$Goto._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.roll,
      this.pitch,
      this.yaw,
      this.custom})
      : super._();

  @override
  Goto rebuild(void updates(GotoBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GotoBuilder toBuilder() => new GotoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Goto &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        roll == this.roll &&
        pitch == this.pitch &&
        yaw == this.yaw &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        roll?.hashCode), 
        pitch?.hashCode), 
        yaw?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Goto')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('roll', roll)
          ..add('pitch', pitch)
          ..add('yaw', yaw)
          ..add('custom', custom))
        .toString();
  }
}

/// Goto Maneuver builder class
///
class GotoBuilder implements Builder<Goto, GotoBuilder>, ImcBuilderHeaderPart {
  _$Goto _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _roll;
  double get roll => _$this._roll;
  set roll(double roll) => _$this._roll = roll;

  double _pitch;
  double get pitch => _$this._pitch;
  set pitch(double pitch) => _$this._pitch = pitch;

  double _yaw;
  double get yaw => _$this._yaw;
  set yaw(double yaw) => _$this._yaw = yaw;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  GotoBuilder();

  GotoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _roll = _$v.roll;
      _pitch = _$v.pitch;
      _yaw = _$v.yaw;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Goto other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Goto;
  }

  @override
  void update(void updates(GotoBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Goto build() {
    final _$result = _$v ??
        new _$Goto._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            roll: roll ?? 0,
            pitch: pitch ?? 0,
            yaw: yaw ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// PopUp Maneuver immutable class
///
class _$PopUp extends PopUp {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final int duration;
  @override
  final double radius;
  @override
  final PopUpBitfieldFlags flags;
  @override
  final String custom;

  factory _$PopUp([void updates(PopUpBuilder b)]) =>
      (new PopUpBuilder()..update(updates)).build();

  _$PopUp._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.duration,
      this.radius,
      this.flags,
      this.custom})
      : super._();

  @override
  PopUp rebuild(void updates(PopUpBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PopUpBuilder toBuilder() => new PopUpBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PopUp &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        duration == this.duration &&
        radius == this.radius &&
        flags == this.flags &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        duration?.hashCode), 
        radius?.hashCode), 
        flags?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PopUp')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('duration', duration)
          ..add('radius', radius)
          ..add('flags', flags)
          ..add('custom', custom))
        .toString();
  }
}

/// PopUp Maneuver builder class
///
class PopUpBuilder implements Builder<PopUp, PopUpBuilder>, ImcBuilderHeaderPart {
  _$PopUp _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _radius;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  PopUpBitfieldFlags _flags;
  PopUpBitfieldFlags get flags => _$this._flags;
  set flags(PopUpBitfieldFlags flags) => _$this._flags = flags;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  PopUpBuilder();

  PopUpBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _duration = _$v.duration;
      _radius = _$v.radius;
      _flags = _$v.flags;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PopUp other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PopUp;
  }

  @override
  void update(void updates(PopUpBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PopUp build() {
    final _$result = _$v ??
        new _$PopUp._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            duration: duration ?? 0,
            radius: radius ?? 0,
            flags: flags ?? PopUpBitfieldFlags(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Teleoperation Maneuver immutable class
///
class _$Teleoperation extends Teleoperation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String custom;

  factory _$Teleoperation([void updates(TeleoperationBuilder b)]) =>
      (new TeleoperationBuilder()..update(updates)).build();

  _$Teleoperation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.custom})
      : super._();

  @override
  Teleoperation rebuild(void updates(TeleoperationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TeleoperationBuilder toBuilder() => new TeleoperationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Teleoperation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Teleoperation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('custom', custom))
        .toString();
  }
}

/// Teleoperation Maneuver builder class
///
class TeleoperationBuilder implements Builder<Teleoperation, TeleoperationBuilder>, ImcBuilderHeaderPart {
  _$Teleoperation _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  TeleoperationBuilder();

  TeleoperationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Teleoperation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Teleoperation;
  }

  @override
  void update(void updates(TeleoperationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Teleoperation build() {
    final _$result = _$v ??
        new _$Teleoperation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Loiter Maneuver immutable class
///
class _$Loiter extends Loiter {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final LoiterEnumType type;
  @override
  final double radius;
  @override
  final double length;
  @override
  final double bearing;
  @override
  final LoiterEnumDirection direction;
  @override
  final String custom;

  factory _$Loiter([void updates(LoiterBuilder b)]) =>
      (new LoiterBuilder()..update(updates)).build();

  _$Loiter._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.duration,
      this.speed,
      this.speedUnits,
      this.type,
      this.radius,
      this.length,
      this.bearing,
      this.direction,
      this.custom})
      : super._();

  @override
  Loiter rebuild(void updates(LoiterBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LoiterBuilder toBuilder() => new LoiterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Loiter &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        duration == this.duration &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        type == this.type &&
        radius == this.radius &&
        length == this.length &&
        bearing == this.bearing &&
        direction == this.direction &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        duration?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        type?.hashCode), 
        radius?.hashCode), 
        length?.hashCode), 
        bearing?.hashCode), 
        direction?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Loiter')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('duration', duration)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('type', type)
          ..add('radius', radius)
          ..add('length', length)
          ..add('bearing', bearing)
          ..add('direction', direction)
          ..add('custom', custom))
        .toString();
  }
}

/// Loiter Maneuver builder class
///
class LoiterBuilder implements Builder<Loiter, LoiterBuilder>, ImcBuilderHeaderPart {
  _$Loiter _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  LoiterEnumType _type;
  LoiterEnumType get type => _$this._type;
  set type(LoiterEnumType type) => _$this._type = type;

  double _radius;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  double _length;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  LoiterEnumDirection _direction;
  LoiterEnumDirection get direction => _$this._direction;
  set direction(LoiterEnumDirection direction) => _$this._direction = direction;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  LoiterBuilder();

  LoiterBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _type = _$v.type;
      _radius = _$v.radius;
      _length = _$v.length;
      _bearing = _$v.bearing;
      _direction = _$v.direction;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Loiter other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Loiter;
  }

  @override
  void update(void updates(LoiterBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Loiter build() {
    final _$result = _$v ??
        new _$Loiter._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            duration: duration ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            type: type ?? LoiterEnumType(0),
            radius: radius ?? 0,
            length: length ?? 0,
            bearing: bearing ?? 0,
            direction: direction ?? LoiterEnumDirection(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Idle Maneuver immutable class
///
class _$IdleManeuver extends IdleManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int duration;
  @override
  final String custom;

  factory _$IdleManeuver([void updates(IdleManeuverBuilder b)]) =>
      (new IdleManeuverBuilder()..update(updates)).build();

  _$IdleManeuver._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.duration,
      this.custom})
      : super._();

  @override
  IdleManeuver rebuild(void updates(IdleManeuverBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  IdleManeuverBuilder toBuilder() => new IdleManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IdleManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        duration == this.duration &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        duration?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IdleManeuver')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('duration', duration)
          ..add('custom', custom))
        .toString();
  }
}

/// Idle Maneuver builder class
///
class IdleManeuverBuilder implements Builder<IdleManeuver, IdleManeuverBuilder>, ImcBuilderHeaderPart {
  _$IdleManeuver _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  IdleManeuverBuilder();

  IdleManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _duration = _$v.duration;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IdleManeuver other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$IdleManeuver;
  }

  @override
  void update(void updates(IdleManeuverBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$IdleManeuver build() {
    final _$result = _$v ??
        new _$IdleManeuver._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            duration: duration ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Low Level Control Maneuver immutable class
///
class _$LowLevelControl extends LowLevelControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ControlCommand control;
  @override
  final int duration;
  @override
  final String custom;

  factory _$LowLevelControl([void updates(LowLevelControlBuilder b)]) =>
      (new LowLevelControlBuilder()..update(updates)).build();

  _$LowLevelControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.control,
      this.duration,
      this.custom})
      : super._();

  @override
  LowLevelControl rebuild(void updates(LowLevelControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LowLevelControlBuilder toBuilder() => new LowLevelControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LowLevelControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        control == this.control &&
        duration == this.duration &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        control?.hashCode), 
        duration?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LowLevelControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('control', control)
          ..add('duration', duration)
          ..add('custom', custom))
        .toString();
  }
}

/// Low Level Control Maneuver builder class
///
class LowLevelControlBuilder implements Builder<LowLevelControl, LowLevelControlBuilder>, ImcBuilderHeaderPart {
  _$LowLevelControl _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ControlCommand _control;
  ControlCommand get control => _$this._control;
  set control(ControlCommand control) => _$this._control = control;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  LowLevelControlBuilder();

  LowLevelControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _control = _$v.control;
      _duration = _$v.duration;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LowLevelControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LowLevelControl;
  }

  @override
  void update(void updates(LowLevelControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LowLevelControl build() {
    final _$result = _$v ??
        new _$LowLevelControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            control: control,
            duration: duration ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Rows Maneuver immutable class
///
class _$Rows extends Rows {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double bearing;
  @override
  final double crossAngle;
  @override
  final double width;
  @override
  final double length;
  @override
  final double hstep;
  @override
  final int coff;
  @override
  final int alternation;
  @override
  final RowsBitfieldFlags flags;
  @override
  final String custom;

  factory _$Rows([void updates(RowsBuilder b)]) =>
      (new RowsBuilder()..update(updates)).build();

  _$Rows._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.bearing,
      this.crossAngle,
      this.width,
      this.length,
      this.hstep,
      this.coff,
      this.alternation,
      this.flags,
      this.custom})
      : super._();

  @override
  Rows rebuild(void updates(RowsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RowsBuilder toBuilder() => new RowsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Rows &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        bearing == this.bearing &&
        crossAngle == this.crossAngle &&
        width == this.width &&
        length == this.length &&
        hstep == this.hstep &&
        coff == this.coff &&
        alternation == this.alternation &&
        flags == this.flags &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        bearing?.hashCode), 
        crossAngle?.hashCode), 
        width?.hashCode), 
        length?.hashCode), 
        hstep?.hashCode), 
        coff?.hashCode), 
        alternation?.hashCode), 
        flags?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Rows')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('bearing', bearing)
          ..add('crossAngle', crossAngle)
          ..add('width', width)
          ..add('length', length)
          ..add('hstep', hstep)
          ..add('coff', coff)
          ..add('alternation', alternation)
          ..add('flags', flags)
          ..add('custom', custom))
        .toString();
  }
}

/// Rows Maneuver builder class
///
class RowsBuilder implements Builder<Rows, RowsBuilder>, ImcBuilderHeaderPart {
  _$Rows _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _crossAngle;
  double get crossAngle => _$this._crossAngle;
  set crossAngle(double crossAngle) => _$this._crossAngle = crossAngle;

  double _width;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  double _length;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  double _hstep;
  double get hstep => _$this._hstep;
  set hstep(double hstep) => _$this._hstep = hstep;

  int _coff;
  int get coff => _$this._coff;
  set coff(int coff) => _$this._coff = coff;

  int _alternation;
  int get alternation => _$this._alternation;
  set alternation(int alternation) => _$this._alternation = alternation;

  RowsBitfieldFlags _flags;
  RowsBitfieldFlags get flags => _$this._flags;
  set flags(RowsBitfieldFlags flags) => _$this._flags = flags;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  RowsBuilder();

  RowsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _bearing = _$v.bearing;
      _crossAngle = _$v.crossAngle;
      _width = _$v.width;
      _length = _$v.length;
      _hstep = _$v.hstep;
      _coff = _$v.coff;
      _alternation = _$v.alternation;
      _flags = _$v.flags;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Rows other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Rows;
  }

  @override
  void update(void updates(RowsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Rows build() {
    final _$result = _$v ??
        new _$Rows._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            bearing: bearing ?? 0,
            crossAngle: crossAngle ?? 0,
            width: width ?? 0,
            length: length ?? 0,
            hstep: hstep ?? 30,
            coff: coff ?? 0,
            alternation: alternation ?? 50,
            flags: flags ?? RowsBitfieldFlags(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Follow Path Maneuver immutable class
///
class _$FollowPath extends FollowPath {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final List<PathPoint> points;
  @override
  final String custom;

  factory _$FollowPath([void updates(FollowPathBuilder b)]) =>
      (new FollowPathBuilder()..update(updates)).build();

  _$FollowPath._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.points,
      this.custom})
      : super._();

  @override
  FollowPath rebuild(void updates(FollowPathBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowPathBuilder toBuilder() => new FollowPathBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowPath &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        points == this.points &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        points?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowPath')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('points', points)
          ..add('custom', custom))
        .toString();
  }
}

/// Follow Path Maneuver builder class
///
class FollowPathBuilder implements Builder<FollowPath, FollowPathBuilder>, ImcBuilderHeaderPart {
  _$FollowPath _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  List<PathPoint> _points;
  List<PathPoint> get points => _$this._points;
  set points(List<PathPoint> points) => _$this._points = points;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FollowPathBuilder();

  FollowPathBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _points = _$v.points;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowPath other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FollowPath;
  }

  @override
  void update(void updates(FollowPathBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowPath build() {
    final _$result = _$v ??
        new _$FollowPath._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            points: points ?? List<PathPoint>(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Path Point immutable class
///
class _$PathPoint extends PathPoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$PathPoint([void updates(PathPointBuilder b)]) =>
      (new PathPointBuilder()..update(updates)).build();

  _$PathPoint._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  PathPoint rebuild(void updates(PathPointBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PathPointBuilder toBuilder() => new PathPointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PathPoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PathPoint')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Path Point builder class
///
class PathPointBuilder implements Builder<PathPoint, PathPointBuilder>, ImcBuilderHeaderPart {
  _$PathPoint _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  PathPointBuilder();

  PathPointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PathPoint other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PathPoint;
  }

  @override
  void update(void updates(PathPointBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PathPoint build() {
    final _$result = _$v ??
        new _$PathPoint._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Yo-Yo Maneuver immutable class
///
class _$YoYo extends YoYo {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double amplitude;
  @override
  final double pitch;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final String custom;

  factory _$YoYo([void updates(YoYoBuilder b)]) =>
      (new YoYoBuilder()..update(updates)).build();

  _$YoYo._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.amplitude,
      this.pitch,
      this.speed,
      this.speedUnits,
      this.custom})
      : super._();

  @override
  YoYo rebuild(void updates(YoYoBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  YoYoBuilder toBuilder() => new YoYoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is YoYo &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        amplitude == this.amplitude &&
        pitch == this.pitch &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        amplitude?.hashCode), 
        pitch?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('YoYo')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('amplitude', amplitude)
          ..add('pitch', pitch)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('custom', custom))
        .toString();
  }
}

/// Yo-Yo Maneuver builder class
///
class YoYoBuilder implements Builder<YoYo, YoYoBuilder>, ImcBuilderHeaderPart {
  _$YoYo _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _amplitude;
  double get amplitude => _$this._amplitude;
  set amplitude(double amplitude) => _$this._amplitude = amplitude;

  double _pitch;
  double get pitch => _$this._pitch;
  set pitch(double pitch) => _$this._pitch = pitch;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  YoYoBuilder();

  YoYoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _amplitude = _$v.amplitude;
      _pitch = _$v.pitch;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(YoYo other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$YoYo;
  }

  @override
  void update(void updates(YoYoBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$YoYo build() {
    final _$result = _$v ??
        new _$YoYo._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            amplitude: amplitude ?? 0,
            pitch: pitch ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Teleoperation Done immutable class
///
class _$TeleoperationDone extends TeleoperationDone {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$TeleoperationDone([void updates(TeleoperationDoneBuilder b)]) =>
      (new TeleoperationDoneBuilder()..update(updates)).build();

  _$TeleoperationDone._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  TeleoperationDone rebuild(void updates(TeleoperationDoneBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TeleoperationDoneBuilder toBuilder() => new TeleoperationDoneBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TeleoperationDone &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TeleoperationDone')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Teleoperation Done builder class
///
class TeleoperationDoneBuilder implements Builder<TeleoperationDone, TeleoperationDoneBuilder>, ImcBuilderHeaderPart {
  _$TeleoperationDone _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  TeleoperationDoneBuilder();

  TeleoperationDoneBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TeleoperationDone other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TeleoperationDone;
  }

  @override
  void update(void updates(TeleoperationDoneBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TeleoperationDone build() {
    final _$result = _$v ??
        new _$TeleoperationDone._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Station Keeping immutable class
///
class _$StationKeeping extends StationKeeping {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double radius;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final String custom;

  factory _$StationKeeping([void updates(StationKeepingBuilder b)]) =>
      (new StationKeepingBuilder()..update(updates)).build();

  _$StationKeeping._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.radius,
      this.duration,
      this.speed,
      this.speedUnits,
      this.custom})
      : super._();

  @override
  StationKeeping rebuild(void updates(StationKeepingBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  StationKeepingBuilder toBuilder() => new StationKeepingBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StationKeeping &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        radius == this.radius &&
        duration == this.duration &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        radius?.hashCode), 
        duration?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StationKeeping')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('radius', radius)
          ..add('duration', duration)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('custom', custom))
        .toString();
  }
}

/// Station Keeping builder class
///
class StationKeepingBuilder implements Builder<StationKeeping, StationKeepingBuilder>, ImcBuilderHeaderPart {
  _$StationKeeping _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _radius;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  StationKeepingBuilder();

  StationKeepingBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _radius = _$v.radius;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StationKeeping other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$StationKeeping;
  }

  @override
  void update(void updates(StationKeepingBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$StationKeeping build() {
    final _$result = _$v ??
        new _$StationKeeping._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            radius: radius ?? 0,
            duration: duration ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Elevator Maneuver immutable class
///
class _$Elevator extends Elevator {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final ElevatorBitfieldFlags flags;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double startZ;
  @override
  final ZUnitsEnum startZUnits;
  @override
  final double endZ;
  @override
  final ZUnitsEnum endZUnits;
  @override
  final double radius;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final String custom;

  factory _$Elevator([void updates(ElevatorBuilder b)]) =>
      (new ElevatorBuilder()..update(updates)).build();

  _$Elevator._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.flags,
      this.lat,
      this.lon,
      this.startZ,
      this.startZUnits,
      this.endZ,
      this.endZUnits,
      this.radius,
      this.speed,
      this.speedUnits,
      this.custom})
      : super._();

  @override
  Elevator rebuild(void updates(ElevatorBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ElevatorBuilder toBuilder() => new ElevatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Elevator &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        flags == this.flags &&
        lat == this.lat &&
        lon == this.lon &&
        startZ == this.startZ &&
        startZUnits == this.startZUnits &&
        endZ == this.endZ &&
        endZUnits == this.endZUnits &&
        radius == this.radius &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        flags?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        startZ?.hashCode), 
        startZUnits?.hashCode), 
        endZ?.hashCode), 
        endZUnits?.hashCode), 
        radius?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Elevator')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('flags', flags)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('startZ', startZ)
          ..add('startZUnits', startZUnits)
          ..add('endZ', endZ)
          ..add('endZUnits', endZUnits)
          ..add('radius', radius)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('custom', custom))
        .toString();
  }
}

/// Elevator Maneuver builder class
///
class ElevatorBuilder implements Builder<Elevator, ElevatorBuilder>, ImcBuilderHeaderPart {
  _$Elevator _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  ElevatorBitfieldFlags _flags;
  ElevatorBitfieldFlags get flags => _$this._flags;
  set flags(ElevatorBitfieldFlags flags) => _$this._flags = flags;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _startZ;
  double get startZ => _$this._startZ;
  set startZ(double startZ) => _$this._startZ = startZ;

  ZUnitsEnum _startZUnits;
  ZUnitsEnum get startZUnits => _$this._startZUnits;
  set startZUnits(ZUnitsEnum startZUnits) => _$this._startZUnits = startZUnits;

  double _endZ;
  double get endZ => _$this._endZ;
  set endZ(double endZ) => _$this._endZ = endZ;

  ZUnitsEnum _endZUnits;
  ZUnitsEnum get endZUnits => _$this._endZUnits;
  set endZUnits(ZUnitsEnum endZUnits) => _$this._endZUnits = endZUnits;

  double _radius;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  ElevatorBuilder();

  ElevatorBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _flags = _$v.flags;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _startZ = _$v.startZ;
      _startZUnits = _$v.startZUnits;
      _endZ = _$v.endZ;
      _endZUnits = _$v.endZUnits;
      _radius = _$v.radius;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Elevator other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Elevator;
  }

  @override
  void update(void updates(ElevatorBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Elevator build() {
    final _$result = _$v ??
        new _$Elevator._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            flags: flags ?? ElevatorBitfieldFlags(0),
            lat: lat ?? 0,
            lon: lon ?? 0,
            startZ: startZ ?? 0,
            startZUnits: startZUnits ?? ZUnitsEnum(0),
            endZ: endZ ?? 0,
            endZUnits: endZUnits ?? ZUnitsEnum(0),
            radius: radius ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Follow Trajectory immutable class
///
class _$FollowTrajectory extends FollowTrajectory {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final List<TrajectoryPoint> points;
  @override
  final String custom;

  factory _$FollowTrajectory([void updates(FollowTrajectoryBuilder b)]) =>
      (new FollowTrajectoryBuilder()..update(updates)).build();

  _$FollowTrajectory._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.points,
      this.custom})
      : super._();

  @override
  FollowTrajectory rebuild(void updates(FollowTrajectoryBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowTrajectoryBuilder toBuilder() => new FollowTrajectoryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowTrajectory &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        points == this.points &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        points?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowTrajectory')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('points', points)
          ..add('custom', custom))
        .toString();
  }
}

/// Follow Trajectory builder class
///
class FollowTrajectoryBuilder implements Builder<FollowTrajectory, FollowTrajectoryBuilder>, ImcBuilderHeaderPart {
  _$FollowTrajectory _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  List<TrajectoryPoint> _points;
  List<TrajectoryPoint> get points => _$this._points;
  set points(List<TrajectoryPoint> points) => _$this._points = points;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FollowTrajectoryBuilder();

  FollowTrajectoryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _points = _$v.points;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowTrajectory other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FollowTrajectory;
  }

  @override
  void update(void updates(FollowTrajectoryBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowTrajectory build() {
    final _$result = _$v ??
        new _$FollowTrajectory._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            points: points ?? List<TrajectoryPoint>(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Trajectory Point immutable class
///
class _$TrajectoryPoint extends TrajectoryPoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double t;

  factory _$TrajectoryPoint([void updates(TrajectoryPointBuilder b)]) =>
      (new TrajectoryPointBuilder()..update(updates)).build();

  _$TrajectoryPoint._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.t})
      : super._();

  @override
  TrajectoryPoint rebuild(void updates(TrajectoryPointBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrajectoryPointBuilder toBuilder() => new TrajectoryPointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrajectoryPoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        t == this.t;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode), 
        t?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrajectoryPoint')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('t', t))
        .toString();
  }
}

/// Trajectory Point builder class
///
class TrajectoryPointBuilder implements Builder<TrajectoryPoint, TrajectoryPointBuilder>, ImcBuilderHeaderPart {
  _$TrajectoryPoint _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _t;
  double get t => _$this._t;
  set t(double t) => _$this._t = t;

  TrajectoryPointBuilder();

  TrajectoryPointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _t = _$v.t;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrajectoryPoint other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrajectoryPoint;
  }

  @override
  void update(void updates(TrajectoryPointBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrajectoryPoint build() {
    final _$result = _$v ??
        new _$TrajectoryPoint._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            t: t ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Custom Maneuver immutable class
///
class _$CustomManeuver extends CustomManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final String name;
  @override
  final String custom;

  factory _$CustomManeuver([void updates(CustomManeuverBuilder b)]) =>
      (new CustomManeuverBuilder()..update(updates)).build();

  _$CustomManeuver._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.name,
      this.custom})
      : super._();

  @override
  CustomManeuver rebuild(void updates(CustomManeuverBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CustomManeuverBuilder toBuilder() => new CustomManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CustomManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        name == this.name &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        name?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CustomManeuver')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('name', name)
          ..add('custom', custom))
        .toString();
  }
}

/// Custom Maneuver builder class
///
class CustomManeuverBuilder implements Builder<CustomManeuver, CustomManeuverBuilder>, ImcBuilderHeaderPart {
  _$CustomManeuver _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  CustomManeuverBuilder();

  CustomManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _name = _$v.name;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CustomManeuver other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CustomManeuver;
  }

  @override
  void update(void updates(CustomManeuverBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CustomManeuver build() {
    final _$result = _$v ??
        new _$CustomManeuver._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            name: name ?? '',
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Formation immutable class
///
class _$VehicleFormation extends VehicleFormation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final List<TrajectoryPoint> points;
  @override
  final List<VehicleFormationParticipant> participants;
  @override
  final double startTime;
  @override
  final String custom;

  factory _$VehicleFormation([void updates(VehicleFormationBuilder b)]) =>
      (new VehicleFormationBuilder()..update(updates)).build();

  _$VehicleFormation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.points,
      this.participants,
      this.startTime,
      this.custom})
      : super._();

  @override
  VehicleFormation rebuild(void updates(VehicleFormationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleFormationBuilder toBuilder() => new VehicleFormationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleFormation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        points == this.points &&
        participants == this.participants &&
        startTime == this.startTime &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        points?.hashCode), 
        participants?.hashCode), 
        startTime?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleFormation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('points', points)
          ..add('participants', participants)
          ..add('startTime', startTime)
          ..add('custom', custom))
        .toString();
  }
}

/// Vehicle Formation builder class
///
class VehicleFormationBuilder implements Builder<VehicleFormation, VehicleFormationBuilder>, ImcBuilderHeaderPart {
  _$VehicleFormation _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  List<TrajectoryPoint> _points;
  List<TrajectoryPoint> get points => _$this._points;
  set points(List<TrajectoryPoint> points) => _$this._points = points;

  List<VehicleFormationParticipant> _participants;
  List<VehicleFormationParticipant> get participants => _$this._participants;
  set participants(List<VehicleFormationParticipant> participants) => _$this._participants = participants;

  double _startTime;
  double get startTime => _$this._startTime;
  set startTime(double startTime) => _$this._startTime = startTime;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  VehicleFormationBuilder();

  VehicleFormationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _points = _$v.points;
      _participants = _$v.participants;
      _startTime = _$v.startTime;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleFormation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleFormation;
  }

  @override
  void update(void updates(VehicleFormationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleFormation build() {
    final _$result = _$v ??
        new _$VehicleFormation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            points: points ?? List<TrajectoryPoint>(0),
            participants: participants ?? List<VehicleFormationParticipant>(0),
            startTime: startTime ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Formation Participant immutable class
///
class _$VehicleFormationParticipant extends VehicleFormationParticipant {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int vid;
  @override
  final double offX;
  @override
  final double offY;
  @override
  final double offZ;

  factory _$VehicleFormationParticipant([void updates(VehicleFormationParticipantBuilder b)]) =>
      (new VehicleFormationParticipantBuilder()..update(updates)).build();

  _$VehicleFormationParticipant._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.vid,
      this.offX,
      this.offY,
      this.offZ})
      : super._();

  @override
  VehicleFormationParticipant rebuild(void updates(VehicleFormationParticipantBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleFormationParticipantBuilder toBuilder() => new VehicleFormationParticipantBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleFormationParticipant &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        vid == this.vid &&
        offX == this.offX &&
        offY == this.offY &&
        offZ == this.offZ;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        vid?.hashCode), 
        offX?.hashCode), 
        offY?.hashCode), 
        offZ?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleFormationParticipant')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('vid', vid)
          ..add('offX', offX)
          ..add('offY', offY)
          ..add('offZ', offZ))
        .toString();
  }
}

/// Vehicle Formation Participant builder class
///
class VehicleFormationParticipantBuilder implements Builder<VehicleFormationParticipant, VehicleFormationParticipantBuilder>, ImcBuilderHeaderPart {
  _$VehicleFormationParticipant _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _vid;
  int get vid => _$this._vid;
  set vid(int vid) => _$this._vid = vid;

  double _offX;
  double get offX => _$this._offX;
  set offX(double offX) => _$this._offX = offX;

  double _offY;
  double get offY => _$this._offY;
  set offY(double offY) => _$this._offY = offY;

  double _offZ;
  double get offZ => _$this._offZ;
  set offZ(double offZ) => _$this._offZ = offZ;

  VehicleFormationParticipantBuilder();

  VehicleFormationParticipantBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _vid = _$v.vid;
      _offX = _$v.offX;
      _offY = _$v.offY;
      _offZ = _$v.offZ;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleFormationParticipant other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleFormationParticipant;
  }

  @override
  void update(void updates(VehicleFormationParticipantBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleFormationParticipant build() {
    final _$result = _$v ??
        new _$VehicleFormationParticipant._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            vid: vid ?? 0,
            offX: offX ?? 0,
            offY: offY ?? 0,
            offZ: offZ ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Stop Maneuver immutable class
///
class _$StopManeuver extends StopManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$StopManeuver([void updates(StopManeuverBuilder b)]) =>
      (new StopManeuverBuilder()..update(updates)).build();

  _$StopManeuver._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  StopManeuver rebuild(void updates(StopManeuverBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  StopManeuverBuilder toBuilder() => new StopManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StopManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StopManeuver')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Stop Maneuver builder class
///
class StopManeuverBuilder implements Builder<StopManeuver, StopManeuverBuilder>, ImcBuilderHeaderPart {
  _$StopManeuver _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  StopManeuverBuilder();

  StopManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StopManeuver other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$StopManeuver;
  }

  @override
  void update(void updates(StopManeuverBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$StopManeuver build() {
    final _$result = _$v ??
        new _$StopManeuver._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Register Maneuver immutable class
///
class _$RegisterManeuver extends RegisterManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int mid;

  factory _$RegisterManeuver([void updates(RegisterManeuverBuilder b)]) =>
      (new RegisterManeuverBuilder()..update(updates)).build();

  _$RegisterManeuver._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.mid})
      : super._();

  @override
  RegisterManeuver rebuild(void updates(RegisterManeuverBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RegisterManeuverBuilder toBuilder() => new RegisterManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RegisterManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        mid == this.mid;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        mid?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RegisterManeuver')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('mid', mid))
        .toString();
  }
}

/// Register Maneuver builder class
///
class RegisterManeuverBuilder implements Builder<RegisterManeuver, RegisterManeuverBuilder>, ImcBuilderHeaderPart {
  _$RegisterManeuver _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _mid;
  int get mid => _$this._mid;
  set mid(int mid) => _$this._mid = mid;

  RegisterManeuverBuilder();

  RegisterManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _mid = _$v.mid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RegisterManeuver other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RegisterManeuver;
  }

  @override
  void update(void updates(RegisterManeuverBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RegisterManeuver build() {
    final _$result = _$v ??
        new _$RegisterManeuver._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            mid: mid ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Maneuver Control State immutable class
///
class _$ManeuverControlState extends ManeuverControlState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ManeuverControlStateEnumState state;
  @override
  final int eta;
  @override
  final String info;

  factory _$ManeuverControlState([void updates(ManeuverControlStateBuilder b)]) =>
      (new ManeuverControlStateBuilder()..update(updates)).build();

  _$ManeuverControlState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state,
      this.eta,
      this.info})
      : super._();

  @override
  ManeuverControlState rebuild(void updates(ManeuverControlStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ManeuverControlStateBuilder toBuilder() => new ManeuverControlStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ManeuverControlState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state &&
        eta == this.eta &&
        info == this.info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        state?.hashCode), 
        eta?.hashCode), 
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ManeuverControlState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', state)
          ..add('eta', eta)
          ..add('info', info))
        .toString();
  }
}

/// Maneuver Control State builder class
///
class ManeuverControlStateBuilder implements Builder<ManeuverControlState, ManeuverControlStateBuilder>, ImcBuilderHeaderPart {
  _$ManeuverControlState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ManeuverControlStateEnumState _state;
  ManeuverControlStateEnumState get state => _$this._state;
  set state(ManeuverControlStateEnumState state) => _$this._state = state;

  int _eta;
  int get eta => _$this._eta;
  set eta(int eta) => _$this._eta = eta;

  String _info;
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  ManeuverControlStateBuilder();

  ManeuverControlStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _eta = _$v.eta;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ManeuverControlState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ManeuverControlState;
  }

  @override
  void update(void updates(ManeuverControlStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ManeuverControlState build() {
    final _$result = _$v ??
        new _$ManeuverControlState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? ManeuverControlStateEnumState(0),
            eta: eta ?? 0,
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Follow System immutable class
///
class _$FollowSystem extends FollowSystem {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int system;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;

  factory _$FollowSystem([void updates(FollowSystemBuilder b)]) =>
      (new FollowSystemBuilder()..update(updates)).build();

  _$FollowSystem._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.system,
      this.duration,
      this.speed,
      this.speedUnits,
      this.x,
      this.y,
      this.z,
      this.zUnits})
      : super._();

  @override
  FollowSystem rebuild(void updates(FollowSystemBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowSystemBuilder toBuilder() => new FollowSystemBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowSystem &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        system == this.system &&
        duration == this.duration &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        zUnits == this.zUnits;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        system?.hashCode), 
        duration?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowSystem')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('system', system)
          ..add('duration', duration)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('zUnits', zUnits))
        .toString();
  }
}

/// Follow System builder class
///
class FollowSystemBuilder implements Builder<FollowSystem, FollowSystemBuilder>, ImcBuilderHeaderPart {
  _$FollowSystem _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _system;
  int get system => _$this._system;
  set system(int system) => _$this._system = system;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  FollowSystemBuilder();

  FollowSystemBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _system = _$v.system;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowSystem other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FollowSystem;
  }

  @override
  void update(void updates(FollowSystemBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowSystem build() {
    final _$result = _$v ??
        new _$FollowSystem._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            system: system ?? 0,
            duration: duration ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0));
    replace(_$result);
    return _$result;
  }
}

/// Communications Relay immutable class
///
class _$CommsRelay extends CommsRelay {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final int duration;
  @override
  final int sysA;
  @override
  final int sysB;
  @override
  final double moveThreshold;

  factory _$CommsRelay([void updates(CommsRelayBuilder b)]) =>
      (new CommsRelayBuilder()..update(updates)).build();

  _$CommsRelay._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.speed,
      this.speedUnits,
      this.duration,
      this.sysA,
      this.sysB,
      this.moveThreshold})
      : super._();

  @override
  CommsRelay rebuild(void updates(CommsRelayBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CommsRelayBuilder toBuilder() => new CommsRelayBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CommsRelay &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        duration == this.duration &&
        sysA == this.sysA &&
        sysB == this.sysB &&
        moveThreshold == this.moveThreshold;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        duration?.hashCode), 
        sysA?.hashCode), 
        sysB?.hashCode), 
        moveThreshold?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CommsRelay')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('duration', duration)
          ..add('sysA', sysA)
          ..add('sysB', sysB)
          ..add('moveThreshold', moveThreshold))
        .toString();
  }
}

/// Communications Relay builder class
///
class CommsRelayBuilder implements Builder<CommsRelay, CommsRelayBuilder>, ImcBuilderHeaderPart {
  _$CommsRelay _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  int _sysA;
  int get sysA => _$this._sysA;
  set sysA(int sysA) => _$this._sysA = sysA;

  int _sysB;
  int get sysB => _$this._sysB;
  set sysB(int sysB) => _$this._sysB = sysB;

  double _moveThreshold;
  double get moveThreshold => _$this._moveThreshold;
  set moveThreshold(double moveThreshold) => _$this._moveThreshold = moveThreshold;

  CommsRelayBuilder();

  CommsRelayBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _duration = _$v.duration;
      _sysA = _$v.sysA;
      _sysB = _$v.sysB;
      _moveThreshold = _$v.moveThreshold;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CommsRelay other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CommsRelay;
  }

  @override
  void update(void updates(CommsRelayBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CommsRelay build() {
    final _$result = _$v ??
        new _$CommsRelay._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            duration: duration ?? 0,
            sysA: sysA ?? 0,
            sysB: sysB ?? 0,
            moveThreshold: moveThreshold ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Cover Area immutable class
///
class _$CoverArea extends CoverArea {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final List<PolygonVertex> polygon;
  @override
  final String custom;

  factory _$CoverArea([void updates(CoverAreaBuilder b)]) =>
      (new CoverAreaBuilder()..update(updates)).build();

  _$CoverArea._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.polygon,
      this.custom})
      : super._();

  @override
  CoverArea rebuild(void updates(CoverAreaBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CoverAreaBuilder toBuilder() => new CoverAreaBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CoverArea &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        polygon == this.polygon &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        polygon?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CoverArea')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('polygon', polygon)
          ..add('custom', custom))
        .toString();
  }
}

/// Cover Area builder class
///
class CoverAreaBuilder implements Builder<CoverArea, CoverAreaBuilder>, ImcBuilderHeaderPart {
  _$CoverArea _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  List<PolygonVertex> _polygon;
  List<PolygonVertex> get polygon => _$this._polygon;
  set polygon(List<PolygonVertex> polygon) => _$this._polygon = polygon;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  CoverAreaBuilder();

  CoverAreaBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _polygon = _$v.polygon;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CoverArea other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CoverArea;
  }

  @override
  void update(void updates(CoverAreaBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CoverArea build() {
    final _$result = _$v ??
        new _$CoverArea._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            polygon: polygon ?? List<PolygonVertex>(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Polygon Vertex immutable class
///
class _$PolygonVertex extends PolygonVertex {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;

  factory _$PolygonVertex([void updates(PolygonVertexBuilder b)]) =>
      (new PolygonVertexBuilder()..update(updates)).build();

  _$PolygonVertex._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon})
      : super._();

  @override
  PolygonVertex rebuild(void updates(PolygonVertexBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PolygonVertexBuilder toBuilder() => new PolygonVertexBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PolygonVertex &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PolygonVertex')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon))
        .toString();
  }
}

/// Polygon Vertex builder class
///
class PolygonVertexBuilder implements Builder<PolygonVertex, PolygonVertexBuilder>, ImcBuilderHeaderPart {
  _$PolygonVertex _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  PolygonVertexBuilder();

  PolygonVertexBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PolygonVertex other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PolygonVertex;
  }

  @override
  void update(void updates(PolygonVertexBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PolygonVertex build() {
    final _$result = _$v ??
        new _$PolygonVertex._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Compass Calibration Maneuver immutable class
///
class _$CompassCalibration extends CompassCalibration {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double pitch;
  @override
  final double amplitude;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double radius;
  @override
  final CompassCalibrationEnumDirection direction;
  @override
  final String custom;

  factory _$CompassCalibration([void updates(CompassCalibrationBuilder b)]) =>
      (new CompassCalibrationBuilder()..update(updates)).build();

  _$CompassCalibration._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.pitch,
      this.amplitude,
      this.duration,
      this.speed,
      this.speedUnits,
      this.radius,
      this.direction,
      this.custom})
      : super._();

  @override
  CompassCalibration rebuild(void updates(CompassCalibrationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CompassCalibrationBuilder toBuilder() => new CompassCalibrationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CompassCalibration &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        pitch == this.pitch &&
        amplitude == this.amplitude &&
        duration == this.duration &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        radius == this.radius &&
        direction == this.direction &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        pitch?.hashCode), 
        amplitude?.hashCode), 
        duration?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        radius?.hashCode), 
        direction?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CompassCalibration')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('pitch', pitch)
          ..add('amplitude', amplitude)
          ..add('duration', duration)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('radius', radius)
          ..add('direction', direction)
          ..add('custom', custom))
        .toString();
  }
}

/// Compass Calibration Maneuver builder class
///
class CompassCalibrationBuilder implements Builder<CompassCalibration, CompassCalibrationBuilder>, ImcBuilderHeaderPart {
  _$CompassCalibration _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _pitch;
  double get pitch => _$this._pitch;
  set pitch(double pitch) => _$this._pitch = pitch;

  double _amplitude;
  double get amplitude => _$this._amplitude;
  set amplitude(double amplitude) => _$this._amplitude = amplitude;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _radius;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  CompassCalibrationEnumDirection _direction;
  CompassCalibrationEnumDirection get direction => _$this._direction;
  set direction(CompassCalibrationEnumDirection direction) => _$this._direction = direction;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  CompassCalibrationBuilder();

  CompassCalibrationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _pitch = _$v.pitch;
      _amplitude = _$v.amplitude;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _radius = _$v.radius;
      _direction = _$v.direction;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CompassCalibration other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CompassCalibration;
  }

  @override
  void update(void updates(CompassCalibrationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CompassCalibration build() {
    final _$result = _$v ??
        new _$CompassCalibration._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            pitch: pitch ?? 0,
            amplitude: amplitude ?? 0,
            duration: duration ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            radius: radius ?? 0,
            direction: direction ?? CompassCalibrationEnumDirection(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Formation Parameters immutable class
///
class _$FormationParameters extends FormationParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String formationName;
  @override
  final FormationParametersEnumReferenceFrame referenceFrame;
  @override
  final List<VehicleFormationParticipant> participants;
  @override
  final String custom;

  factory _$FormationParameters([void updates(FormationParametersBuilder b)]) =>
      (new FormationParametersBuilder()..update(updates)).build();

  _$FormationParameters._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.formationName,
      this.referenceFrame,
      this.participants,
      this.custom})
      : super._();

  @override
  FormationParameters rebuild(void updates(FormationParametersBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationParametersBuilder toBuilder() => new FormationParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        formationName == this.formationName &&
        referenceFrame == this.referenceFrame &&
        participants == this.participants &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        formationName?.hashCode), 
        referenceFrame?.hashCode), 
        participants?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationParameters')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('formationName', formationName)
          ..add('referenceFrame', referenceFrame)
          ..add('participants', participants)
          ..add('custom', custom))
        .toString();
  }
}

/// Formation Parameters builder class
///
class FormationParametersBuilder implements Builder<FormationParameters, FormationParametersBuilder>, ImcBuilderHeaderPart {
  _$FormationParameters _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _formationName;
  String get formationName => _$this._formationName;
  set formationName(String formationName) => _$this._formationName = formationName;

  FormationParametersEnumReferenceFrame _referenceFrame;
  FormationParametersEnumReferenceFrame get referenceFrame => _$this._referenceFrame;
  set referenceFrame(FormationParametersEnumReferenceFrame referenceFrame) => _$this._referenceFrame = referenceFrame;

  List<VehicleFormationParticipant> _participants;
  List<VehicleFormationParticipant> get participants => _$this._participants;
  set participants(List<VehicleFormationParticipant> participants) => _$this._participants = participants;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FormationParametersBuilder();

  FormationParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _formationName = _$v.formationName;
      _referenceFrame = _$v.referenceFrame;
      _participants = _$v.participants;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationParameters other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormationParameters;
  }

  @override
  void update(void updates(FormationParametersBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationParameters build() {
    final _$result = _$v ??
        new _$FormationParameters._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            formationName: formationName ?? '',
            referenceFrame: referenceFrame ?? FormationParametersEnumReferenceFrame(0),
            participants: participants ?? List<VehicleFormationParticipant>(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Formation Plan Execution immutable class
///
class _$FormationPlanExecution extends FormationPlanExecution {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String groupName;
  @override
  final String formationName;
  @override
  final String planId;
  @override
  final String description;
  @override
  final double leaderSpeed;
  @override
  final double leaderBankLim;
  @override
  final double posSimErrLim;
  @override
  final double posSimErrWrn;
  @override
  final int posSimErrTimeout;
  @override
  final double convergMax;
  @override
  final int convergTimeout;
  @override
  final int commsTimeout;
  @override
  final double turbLim;
  @override
  final String custom;

  factory _$FormationPlanExecution([void updates(FormationPlanExecutionBuilder b)]) =>
      (new FormationPlanExecutionBuilder()..update(updates)).build();

  _$FormationPlanExecution._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.groupName,
      this.formationName,
      this.planId,
      this.description,
      this.leaderSpeed,
      this.leaderBankLim,
      this.posSimErrLim,
      this.posSimErrWrn,
      this.posSimErrTimeout,
      this.convergMax,
      this.convergTimeout,
      this.commsTimeout,
      this.turbLim,
      this.custom})
      : super._();

  @override
  FormationPlanExecution rebuild(void updates(FormationPlanExecutionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationPlanExecutionBuilder toBuilder() => new FormationPlanExecutionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationPlanExecution &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        groupName == this.groupName &&
        formationName == this.formationName &&
        planId == this.planId &&
        description == this.description &&
        leaderSpeed == this.leaderSpeed &&
        leaderBankLim == this.leaderBankLim &&
        posSimErrLim == this.posSimErrLim &&
        posSimErrWrn == this.posSimErrWrn &&
        posSimErrTimeout == this.posSimErrTimeout &&
        convergMax == this.convergMax &&
        convergTimeout == this.convergTimeout &&
        commsTimeout == this.commsTimeout &&
        turbLim == this.turbLim &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        groupName?.hashCode), 
        formationName?.hashCode), 
        planId?.hashCode), 
        description?.hashCode), 
        leaderSpeed?.hashCode), 
        leaderBankLim?.hashCode), 
        posSimErrLim?.hashCode), 
        posSimErrWrn?.hashCode), 
        posSimErrTimeout?.hashCode), 
        convergMax?.hashCode), 
        convergTimeout?.hashCode), 
        commsTimeout?.hashCode), 
        turbLim?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationPlanExecution')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('groupName', groupName)
          ..add('formationName', formationName)
          ..add('planId', planId)
          ..add('description', description)
          ..add('leaderSpeed', leaderSpeed)
          ..add('leaderBankLim', leaderBankLim)
          ..add('posSimErrLim', posSimErrLim)
          ..add('posSimErrWrn', posSimErrWrn)
          ..add('posSimErrTimeout', posSimErrTimeout)
          ..add('convergMax', convergMax)
          ..add('convergTimeout', convergTimeout)
          ..add('commsTimeout', commsTimeout)
          ..add('turbLim', turbLim)
          ..add('custom', custom))
        .toString();
  }
}

/// Formation Plan Execution builder class
///
class FormationPlanExecutionBuilder implements Builder<FormationPlanExecution, FormationPlanExecutionBuilder>, ImcBuilderHeaderPart {
  _$FormationPlanExecution _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _groupName;
  String get groupName => _$this._groupName;
  set groupName(String groupName) => _$this._groupName = groupName;

  String _formationName;
  String get formationName => _$this._formationName;
  set formationName(String formationName) => _$this._formationName = formationName;

  String _planId;
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  double _leaderSpeed;
  double get leaderSpeed => _$this._leaderSpeed;
  set leaderSpeed(double leaderSpeed) => _$this._leaderSpeed = leaderSpeed;

  double _leaderBankLim;
  double get leaderBankLim => _$this._leaderBankLim;
  set leaderBankLim(double leaderBankLim) => _$this._leaderBankLim = leaderBankLim;

  double _posSimErrLim;
  double get posSimErrLim => _$this._posSimErrLim;
  set posSimErrLim(double posSimErrLim) => _$this._posSimErrLim = posSimErrLim;

  double _posSimErrWrn;
  double get posSimErrWrn => _$this._posSimErrWrn;
  set posSimErrWrn(double posSimErrWrn) => _$this._posSimErrWrn = posSimErrWrn;

  int _posSimErrTimeout;
  int get posSimErrTimeout => _$this._posSimErrTimeout;
  set posSimErrTimeout(int posSimErrTimeout) => _$this._posSimErrTimeout = posSimErrTimeout;

  double _convergMax;
  double get convergMax => _$this._convergMax;
  set convergMax(double convergMax) => _$this._convergMax = convergMax;

  int _convergTimeout;
  int get convergTimeout => _$this._convergTimeout;
  set convergTimeout(int convergTimeout) => _$this._convergTimeout = convergTimeout;

  int _commsTimeout;
  int get commsTimeout => _$this._commsTimeout;
  set commsTimeout(int commsTimeout) => _$this._commsTimeout = commsTimeout;

  double _turbLim;
  double get turbLim => _$this._turbLim;
  set turbLim(double turbLim) => _$this._turbLim = turbLim;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FormationPlanExecutionBuilder();

  FormationPlanExecutionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _groupName = _$v.groupName;
      _formationName = _$v.formationName;
      _planId = _$v.planId;
      _description = _$v.description;
      _leaderSpeed = _$v.leaderSpeed;
      _leaderBankLim = _$v.leaderBankLim;
      _posSimErrLim = _$v.posSimErrLim;
      _posSimErrWrn = _$v.posSimErrWrn;
      _posSimErrTimeout = _$v.posSimErrTimeout;
      _convergMax = _$v.convergMax;
      _convergTimeout = _$v.convergTimeout;
      _commsTimeout = _$v.commsTimeout;
      _turbLim = _$v.turbLim;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationPlanExecution other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormationPlanExecution;
  }

  @override
  void update(void updates(FormationPlanExecutionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationPlanExecution build() {
    final _$result = _$v ??
        new _$FormationPlanExecution._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            groupName: groupName ?? '',
            formationName: formationName ?? '',
            planId: planId ?? '',
            description: description ?? '',
            leaderSpeed: leaderSpeed ?? 0,
            leaderBankLim: leaderBankLim ?? 0,
            posSimErrLim: posSimErrLim ?? 0,
            posSimErrWrn: posSimErrWrn ?? 0,
            posSimErrTimeout: posSimErrTimeout ?? 0,
            convergMax: convergMax ?? 0,
            convergTimeout: convergTimeout ?? 0,
            commsTimeout: commsTimeout ?? 0,
            turbLim: turbLim ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Follow Reference Maneuver immutable class
///
class _$FollowReference extends FollowReference {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int controlSrc;
  @override
  final int controlEnt;
  @override
  final double timeout;
  @override
  final double loiterRadius;
  @override
  final double altitudeInterval;

  factory _$FollowReference([void updates(FollowReferenceBuilder b)]) =>
      (new FollowReferenceBuilder()..update(updates)).build();

  _$FollowReference._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.controlSrc,
      this.controlEnt,
      this.timeout,
      this.loiterRadius,
      this.altitudeInterval})
      : super._();

  @override
  FollowReference rebuild(void updates(FollowReferenceBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowReferenceBuilder toBuilder() => new FollowReferenceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowReference &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        controlSrc == this.controlSrc &&
        controlEnt == this.controlEnt &&
        timeout == this.timeout &&
        loiterRadius == this.loiterRadius &&
        altitudeInterval == this.altitudeInterval;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        controlSrc?.hashCode), 
        controlEnt?.hashCode), 
        timeout?.hashCode), 
        loiterRadius?.hashCode), 
        altitudeInterval?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowReference')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('controlSrc', controlSrc)
          ..add('controlEnt', controlEnt)
          ..add('timeout', timeout)
          ..add('loiterRadius', loiterRadius)
          ..add('altitudeInterval', altitudeInterval))
        .toString();
  }
}

/// Follow Reference Maneuver builder class
///
class FollowReferenceBuilder implements Builder<FollowReference, FollowReferenceBuilder>, ImcBuilderHeaderPart {
  _$FollowReference _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _controlSrc;
  int get controlSrc => _$this._controlSrc;
  set controlSrc(int controlSrc) => _$this._controlSrc = controlSrc;

  int _controlEnt;
  int get controlEnt => _$this._controlEnt;
  set controlEnt(int controlEnt) => _$this._controlEnt = controlEnt;

  double _timeout;
  double get timeout => _$this._timeout;
  set timeout(double timeout) => _$this._timeout = timeout;

  double _loiterRadius;
  double get loiterRadius => _$this._loiterRadius;
  set loiterRadius(double loiterRadius) => _$this._loiterRadius = loiterRadius;

  double _altitudeInterval;
  double get altitudeInterval => _$this._altitudeInterval;
  set altitudeInterval(double altitudeInterval) => _$this._altitudeInterval = altitudeInterval;

  FollowReferenceBuilder();

  FollowReferenceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _controlSrc = _$v.controlSrc;
      _controlEnt = _$v.controlEnt;
      _timeout = _$v.timeout;
      _loiterRadius = _$v.loiterRadius;
      _altitudeInterval = _$v.altitudeInterval;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowReference other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FollowReference;
  }

  @override
  void update(void updates(FollowReferenceBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowReference build() {
    final _$result = _$v ??
        new _$FollowReference._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            controlSrc: controlSrc ?? 0,
            controlEnt: controlEnt ?? 0,
            timeout: timeout ?? 0,
            loiterRadius: loiterRadius ?? 0,
            altitudeInterval: altitudeInterval ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Reference To Follow immutable class
///
class _$Reference extends Reference {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ReferenceBitfieldFlags flags;
  @override
  final DesiredSpeed speed;
  @override
  final DesiredZ z;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double radius;

  factory _$Reference([void updates(ReferenceBuilder b)]) =>
      (new ReferenceBuilder()..update(updates)).build();

  _$Reference._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.flags,
      this.speed,
      this.z,
      this.lat,
      this.lon,
      this.radius})
      : super._();

  @override
  Reference rebuild(void updates(ReferenceBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ReferenceBuilder toBuilder() => new ReferenceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Reference &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        flags == this.flags &&
        speed == this.speed &&
        z == this.z &&
        lat == this.lat &&
        lon == this.lon &&
        radius == this.radius;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        flags?.hashCode), 
        speed?.hashCode), 
        z?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        radius?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Reference')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('flags', flags)
          ..add('speed', speed)
          ..add('z', z)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('radius', radius))
        .toString();
  }
}

/// Reference To Follow builder class
///
class ReferenceBuilder implements Builder<Reference, ReferenceBuilder>, ImcBuilderHeaderPart {
  _$Reference _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ReferenceBitfieldFlags _flags;
  ReferenceBitfieldFlags get flags => _$this._flags;
  set flags(ReferenceBitfieldFlags flags) => _$this._flags = flags;

  DesiredSpeed _speed;
  DesiredSpeed get speed => _$this._speed;
  set speed(DesiredSpeed speed) => _$this._speed = speed;

  DesiredZ _z;
  DesiredZ get z => _$this._z;
  set z(DesiredZ z) => _$this._z = z;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _radius;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  ReferenceBuilder();

  ReferenceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _flags = _$v.flags;
      _speed = _$v.speed;
      _z = _$v.z;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _radius = _$v.radius;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Reference other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Reference;
  }

  @override
  void update(void updates(ReferenceBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Reference build() {
    final _$result = _$v ??
        new _$Reference._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            flags: flags ?? ReferenceBitfieldFlags(0),
            speed: speed,
            z: z,
            lat: lat ?? 0,
            lon: lon ?? 0,
            radius: radius ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Follow Reference State immutable class
///
class _$FollowRefState extends FollowRefState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int controlSrc;
  @override
  final int controlEnt;
  @override
  final Reference reference;
  @override
  final FollowRefStateEnumState state;
  @override
  final FollowRefStateBitfieldProximity proximity;

  factory _$FollowRefState([void updates(FollowRefStateBuilder b)]) =>
      (new FollowRefStateBuilder()..update(updates)).build();

  _$FollowRefState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.controlSrc,
      this.controlEnt,
      this.reference,
      this.state,
      this.proximity})
      : super._();

  @override
  FollowRefState rebuild(void updates(FollowRefStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowRefStateBuilder toBuilder() => new FollowRefStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowRefState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        controlSrc == this.controlSrc &&
        controlEnt == this.controlEnt &&
        reference == this.reference &&
        state == this.state &&
        proximity == this.proximity;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        controlSrc?.hashCode), 
        controlEnt?.hashCode), 
        reference?.hashCode), 
        state?.hashCode), 
        proximity?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowRefState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('controlSrc', controlSrc)
          ..add('controlEnt', controlEnt)
          ..add('reference', reference)
          ..add('state', state)
          ..add('proximity', proximity))
        .toString();
  }
}

/// Follow Reference State builder class
///
class FollowRefStateBuilder implements Builder<FollowRefState, FollowRefStateBuilder>, ImcBuilderHeaderPart {
  _$FollowRefState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _controlSrc;
  int get controlSrc => _$this._controlSrc;
  set controlSrc(int controlSrc) => _$this._controlSrc = controlSrc;

  int _controlEnt;
  int get controlEnt => _$this._controlEnt;
  set controlEnt(int controlEnt) => _$this._controlEnt = controlEnt;

  Reference _reference;
  Reference get reference => _$this._reference;
  set reference(Reference reference) => _$this._reference = reference;

  FollowRefStateEnumState _state;
  FollowRefStateEnumState get state => _$this._state;
  set state(FollowRefStateEnumState state) => _$this._state = state;

  FollowRefStateBitfieldProximity _proximity;
  FollowRefStateBitfieldProximity get proximity => _$this._proximity;
  set proximity(FollowRefStateBitfieldProximity proximity) => _$this._proximity = proximity;

  FollowRefStateBuilder();

  FollowRefStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _controlSrc = _$v.controlSrc;
      _controlEnt = _$v.controlEnt;
      _reference = _$v.reference;
      _state = _$v.state;
      _proximity = _$v.proximity;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowRefState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FollowRefState;
  }

  @override
  void update(void updates(FollowRefStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowRefState build() {
    final _$result = _$v ??
        new _$FollowRefState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            controlSrc: controlSrc ?? 0,
            controlEnt: controlEnt ?? 0,
            reference: reference,
            state: state ?? FollowRefStateEnumState(0),
            proximity: proximity ?? FollowRefStateBitfieldProximity(0));
    replace(_$result);
    return _$result;
  }
}

/// Formation Monitoring Data immutable class
///
class _$FormationMonitor extends FormationMonitor {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double axCmd;
  @override
  final double ayCmd;
  @override
  final double azCmd;
  @override
  final double axDes;
  @override
  final double ayDes;
  @override
  final double azDes;
  @override
  final double virtErrX;
  @override
  final double virtErrY;
  @override
  final double virtErrZ;
  @override
  final double surfFdbkX;
  @override
  final double surfFdbkY;
  @override
  final double surfFdbkZ;
  @override
  final double surfUnknX;
  @override
  final double surfUnknY;
  @override
  final double surfUnknZ;
  @override
  final double ssX;
  @override
  final double ssY;
  @override
  final double ssZ;
  @override
  final List<RelativeState> relState;

  factory _$FormationMonitor([void updates(FormationMonitorBuilder b)]) =>
      (new FormationMonitorBuilder()..update(updates)).build();

  _$FormationMonitor._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.axCmd,
      this.ayCmd,
      this.azCmd,
      this.axDes,
      this.ayDes,
      this.azDes,
      this.virtErrX,
      this.virtErrY,
      this.virtErrZ,
      this.surfFdbkX,
      this.surfFdbkY,
      this.surfFdbkZ,
      this.surfUnknX,
      this.surfUnknY,
      this.surfUnknZ,
      this.ssX,
      this.ssY,
      this.ssZ,
      this.relState})
      : super._();

  @override
  FormationMonitor rebuild(void updates(FormationMonitorBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationMonitorBuilder toBuilder() => new FormationMonitorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationMonitor &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        axCmd == this.axCmd &&
        ayCmd == this.ayCmd &&
        azCmd == this.azCmd &&
        axDes == this.axDes &&
        ayDes == this.ayDes &&
        azDes == this.azDes &&
        virtErrX == this.virtErrX &&
        virtErrY == this.virtErrY &&
        virtErrZ == this.virtErrZ &&
        surfFdbkX == this.surfFdbkX &&
        surfFdbkY == this.surfFdbkY &&
        surfFdbkZ == this.surfFdbkZ &&
        surfUnknX == this.surfUnknX &&
        surfUnknY == this.surfUnknY &&
        surfUnknZ == this.surfUnknZ &&
        ssX == this.ssX &&
        ssY == this.ssY &&
        ssZ == this.ssZ &&
        relState == this.relState;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        axCmd?.hashCode), 
        ayCmd?.hashCode), 
        azCmd?.hashCode), 
        axDes?.hashCode), 
        ayDes?.hashCode), 
        azDes?.hashCode), 
        virtErrX?.hashCode), 
        virtErrY?.hashCode), 
        virtErrZ?.hashCode), 
        surfFdbkX?.hashCode), 
        surfFdbkY?.hashCode), 
        surfFdbkZ?.hashCode), 
        surfUnknX?.hashCode), 
        surfUnknY?.hashCode), 
        surfUnknZ?.hashCode), 
        ssX?.hashCode), 
        ssY?.hashCode), 
        ssZ?.hashCode), 
        relState?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationMonitor')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('axCmd', axCmd)
          ..add('ayCmd', ayCmd)
          ..add('azCmd', azCmd)
          ..add('axDes', axDes)
          ..add('ayDes', ayDes)
          ..add('azDes', azDes)
          ..add('virtErrX', virtErrX)
          ..add('virtErrY', virtErrY)
          ..add('virtErrZ', virtErrZ)
          ..add('surfFdbkX', surfFdbkX)
          ..add('surfFdbkY', surfFdbkY)
          ..add('surfFdbkZ', surfFdbkZ)
          ..add('surfUnknX', surfUnknX)
          ..add('surfUnknY', surfUnknY)
          ..add('surfUnknZ', surfUnknZ)
          ..add('ssX', ssX)
          ..add('ssY', ssY)
          ..add('ssZ', ssZ)
          ..add('relState', relState))
        .toString();
  }
}

/// Formation Monitoring Data builder class
///
class FormationMonitorBuilder implements Builder<FormationMonitor, FormationMonitorBuilder>, ImcBuilderHeaderPart {
  _$FormationMonitor _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _axCmd;
  double get axCmd => _$this._axCmd;
  set axCmd(double axCmd) => _$this._axCmd = axCmd;

  double _ayCmd;
  double get ayCmd => _$this._ayCmd;
  set ayCmd(double ayCmd) => _$this._ayCmd = ayCmd;

  double _azCmd;
  double get azCmd => _$this._azCmd;
  set azCmd(double azCmd) => _$this._azCmd = azCmd;

  double _axDes;
  double get axDes => _$this._axDes;
  set axDes(double axDes) => _$this._axDes = axDes;

  double _ayDes;
  double get ayDes => _$this._ayDes;
  set ayDes(double ayDes) => _$this._ayDes = ayDes;

  double _azDes;
  double get azDes => _$this._azDes;
  set azDes(double azDes) => _$this._azDes = azDes;

  double _virtErrX;
  double get virtErrX => _$this._virtErrX;
  set virtErrX(double virtErrX) => _$this._virtErrX = virtErrX;

  double _virtErrY;
  double get virtErrY => _$this._virtErrY;
  set virtErrY(double virtErrY) => _$this._virtErrY = virtErrY;

  double _virtErrZ;
  double get virtErrZ => _$this._virtErrZ;
  set virtErrZ(double virtErrZ) => _$this._virtErrZ = virtErrZ;

  double _surfFdbkX;
  double get surfFdbkX => _$this._surfFdbkX;
  set surfFdbkX(double surfFdbkX) => _$this._surfFdbkX = surfFdbkX;

  double _surfFdbkY;
  double get surfFdbkY => _$this._surfFdbkY;
  set surfFdbkY(double surfFdbkY) => _$this._surfFdbkY = surfFdbkY;

  double _surfFdbkZ;
  double get surfFdbkZ => _$this._surfFdbkZ;
  set surfFdbkZ(double surfFdbkZ) => _$this._surfFdbkZ = surfFdbkZ;

  double _surfUnknX;
  double get surfUnknX => _$this._surfUnknX;
  set surfUnknX(double surfUnknX) => _$this._surfUnknX = surfUnknX;

  double _surfUnknY;
  double get surfUnknY => _$this._surfUnknY;
  set surfUnknY(double surfUnknY) => _$this._surfUnknY = surfUnknY;

  double _surfUnknZ;
  double get surfUnknZ => _$this._surfUnknZ;
  set surfUnknZ(double surfUnknZ) => _$this._surfUnknZ = surfUnknZ;

  double _ssX;
  double get ssX => _$this._ssX;
  set ssX(double ssX) => _$this._ssX = ssX;

  double _ssY;
  double get ssY => _$this._ssY;
  set ssY(double ssY) => _$this._ssY = ssY;

  double _ssZ;
  double get ssZ => _$this._ssZ;
  set ssZ(double ssZ) => _$this._ssZ = ssZ;

  List<RelativeState> _relState;
  List<RelativeState> get relState => _$this._relState;
  set relState(List<RelativeState> relState) => _$this._relState = relState;

  FormationMonitorBuilder();

  FormationMonitorBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _axCmd = _$v.axCmd;
      _ayCmd = _$v.ayCmd;
      _azCmd = _$v.azCmd;
      _axDes = _$v.axDes;
      _ayDes = _$v.ayDes;
      _azDes = _$v.azDes;
      _virtErrX = _$v.virtErrX;
      _virtErrY = _$v.virtErrY;
      _virtErrZ = _$v.virtErrZ;
      _surfFdbkX = _$v.surfFdbkX;
      _surfFdbkY = _$v.surfFdbkY;
      _surfFdbkZ = _$v.surfFdbkZ;
      _surfUnknX = _$v.surfUnknX;
      _surfUnknY = _$v.surfUnknY;
      _surfUnknZ = _$v.surfUnknZ;
      _ssX = _$v.ssX;
      _ssY = _$v.ssY;
      _ssZ = _$v.ssZ;
      _relState = _$v.relState;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationMonitor other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormationMonitor;
  }

  @override
  void update(void updates(FormationMonitorBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationMonitor build() {
    final _$result = _$v ??
        new _$FormationMonitor._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            axCmd: axCmd ?? 0,
            ayCmd: ayCmd ?? 0,
            azCmd: azCmd ?? 0,
            axDes: axDes ?? 0,
            ayDes: ayDes ?? 0,
            azDes: azDes ?? 0,
            virtErrX: virtErrX ?? 0,
            virtErrY: virtErrY ?? 0,
            virtErrZ: virtErrZ ?? 0,
            surfFdbkX: surfFdbkX ?? 0,
            surfFdbkY: surfFdbkY ?? 0,
            surfFdbkZ: surfFdbkZ ?? 0,
            surfUnknX: surfUnknX ?? 0,
            surfUnknY: surfUnknY ?? 0,
            surfUnknZ: surfUnknZ ?? 0,
            ssX: ssX ?? 0,
            ssY: ssY ?? 0,
            ssZ: ssZ ?? 0,
            relState: relState ?? List<RelativeState>(0));
    replace(_$result);
    return _$result;
  }
}

/// Relative State immutable class
///
class _$RelativeState extends RelativeState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String sId;
  @override
  final double dist;
  @override
  final double err;
  @override
  final double ctrlImp;
  @override
  final double relDirX;
  @override
  final double relDirY;
  @override
  final double relDirZ;
  @override
  final double errX;
  @override
  final double errY;
  @override
  final double errZ;
  @override
  final double rfErrX;
  @override
  final double rfErrY;
  @override
  final double rfErrZ;
  @override
  final double rfErrVx;
  @override
  final double rfErrVy;
  @override
  final double rfErrVz;
  @override
  final double ssX;
  @override
  final double ssY;
  @override
  final double ssZ;
  @override
  final double virtErrX;
  @override
  final double virtErrY;
  @override
  final double virtErrZ;

  factory _$RelativeState([void updates(RelativeStateBuilder b)]) =>
      (new RelativeStateBuilder()..update(updates)).build();

  _$RelativeState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sId,
      this.dist,
      this.err,
      this.ctrlImp,
      this.relDirX,
      this.relDirY,
      this.relDirZ,
      this.errX,
      this.errY,
      this.errZ,
      this.rfErrX,
      this.rfErrY,
      this.rfErrZ,
      this.rfErrVx,
      this.rfErrVy,
      this.rfErrVz,
      this.ssX,
      this.ssY,
      this.ssZ,
      this.virtErrX,
      this.virtErrY,
      this.virtErrZ})
      : super._();

  @override
  RelativeState rebuild(void updates(RelativeStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RelativeStateBuilder toBuilder() => new RelativeStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RelativeState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sId == this.sId &&
        dist == this.dist &&
        err == this.err &&
        ctrlImp == this.ctrlImp &&
        relDirX == this.relDirX &&
        relDirY == this.relDirY &&
        relDirZ == this.relDirZ &&
        errX == this.errX &&
        errY == this.errY &&
        errZ == this.errZ &&
        rfErrX == this.rfErrX &&
        rfErrY == this.rfErrY &&
        rfErrZ == this.rfErrZ &&
        rfErrVx == this.rfErrVx &&
        rfErrVy == this.rfErrVy &&
        rfErrVz == this.rfErrVz &&
        ssX == this.ssX &&
        ssY == this.ssY &&
        ssZ == this.ssZ &&
        virtErrX == this.virtErrX &&
        virtErrY == this.virtErrY &&
        virtErrZ == this.virtErrZ;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        sId?.hashCode), 
        dist?.hashCode), 
        err?.hashCode), 
        ctrlImp?.hashCode), 
        relDirX?.hashCode), 
        relDirY?.hashCode), 
        relDirZ?.hashCode), 
        errX?.hashCode), 
        errY?.hashCode), 
        errZ?.hashCode), 
        rfErrX?.hashCode), 
        rfErrY?.hashCode), 
        rfErrZ?.hashCode), 
        rfErrVx?.hashCode), 
        rfErrVy?.hashCode), 
        rfErrVz?.hashCode), 
        ssX?.hashCode), 
        ssY?.hashCode), 
        ssZ?.hashCode), 
        virtErrX?.hashCode), 
        virtErrY?.hashCode), 
        virtErrZ?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RelativeState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sId', sId)
          ..add('dist', dist)
          ..add('err', err)
          ..add('ctrlImp', ctrlImp)
          ..add('relDirX', relDirX)
          ..add('relDirY', relDirY)
          ..add('relDirZ', relDirZ)
          ..add('errX', errX)
          ..add('errY', errY)
          ..add('errZ', errZ)
          ..add('rfErrX', rfErrX)
          ..add('rfErrY', rfErrY)
          ..add('rfErrZ', rfErrZ)
          ..add('rfErrVx', rfErrVx)
          ..add('rfErrVy', rfErrVy)
          ..add('rfErrVz', rfErrVz)
          ..add('ssX', ssX)
          ..add('ssY', ssY)
          ..add('ssZ', ssZ)
          ..add('virtErrX', virtErrX)
          ..add('virtErrY', virtErrY)
          ..add('virtErrZ', virtErrZ))
        .toString();
  }
}

/// Relative State builder class
///
class RelativeStateBuilder implements Builder<RelativeState, RelativeStateBuilder>, ImcBuilderHeaderPart {
  _$RelativeState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _sId;
  String get sId => _$this._sId;
  set sId(String sId) => _$this._sId = sId;

  double _dist;
  double get dist => _$this._dist;
  set dist(double dist) => _$this._dist = dist;

  double _err;
  double get err => _$this._err;
  set err(double err) => _$this._err = err;

  double _ctrlImp;
  double get ctrlImp => _$this._ctrlImp;
  set ctrlImp(double ctrlImp) => _$this._ctrlImp = ctrlImp;

  double _relDirX;
  double get relDirX => _$this._relDirX;
  set relDirX(double relDirX) => _$this._relDirX = relDirX;

  double _relDirY;
  double get relDirY => _$this._relDirY;
  set relDirY(double relDirY) => _$this._relDirY = relDirY;

  double _relDirZ;
  double get relDirZ => _$this._relDirZ;
  set relDirZ(double relDirZ) => _$this._relDirZ = relDirZ;

  double _errX;
  double get errX => _$this._errX;
  set errX(double errX) => _$this._errX = errX;

  double _errY;
  double get errY => _$this._errY;
  set errY(double errY) => _$this._errY = errY;

  double _errZ;
  double get errZ => _$this._errZ;
  set errZ(double errZ) => _$this._errZ = errZ;

  double _rfErrX;
  double get rfErrX => _$this._rfErrX;
  set rfErrX(double rfErrX) => _$this._rfErrX = rfErrX;

  double _rfErrY;
  double get rfErrY => _$this._rfErrY;
  set rfErrY(double rfErrY) => _$this._rfErrY = rfErrY;

  double _rfErrZ;
  double get rfErrZ => _$this._rfErrZ;
  set rfErrZ(double rfErrZ) => _$this._rfErrZ = rfErrZ;

  double _rfErrVx;
  double get rfErrVx => _$this._rfErrVx;
  set rfErrVx(double rfErrVx) => _$this._rfErrVx = rfErrVx;

  double _rfErrVy;
  double get rfErrVy => _$this._rfErrVy;
  set rfErrVy(double rfErrVy) => _$this._rfErrVy = rfErrVy;

  double _rfErrVz;
  double get rfErrVz => _$this._rfErrVz;
  set rfErrVz(double rfErrVz) => _$this._rfErrVz = rfErrVz;

  double _ssX;
  double get ssX => _$this._ssX;
  set ssX(double ssX) => _$this._ssX = ssX;

  double _ssY;
  double get ssY => _$this._ssY;
  set ssY(double ssY) => _$this._ssY = ssY;

  double _ssZ;
  double get ssZ => _$this._ssZ;
  set ssZ(double ssZ) => _$this._ssZ = ssZ;

  double _virtErrX;
  double get virtErrX => _$this._virtErrX;
  set virtErrX(double virtErrX) => _$this._virtErrX = virtErrX;

  double _virtErrY;
  double get virtErrY => _$this._virtErrY;
  set virtErrY(double virtErrY) => _$this._virtErrY = virtErrY;

  double _virtErrZ;
  double get virtErrZ => _$this._virtErrZ;
  set virtErrZ(double virtErrZ) => _$this._virtErrZ = virtErrZ;

  RelativeStateBuilder();

  RelativeStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sId = _$v.sId;
      _dist = _$v.dist;
      _err = _$v.err;
      _ctrlImp = _$v.ctrlImp;
      _relDirX = _$v.relDirX;
      _relDirY = _$v.relDirY;
      _relDirZ = _$v.relDirZ;
      _errX = _$v.errX;
      _errY = _$v.errY;
      _errZ = _$v.errZ;
      _rfErrX = _$v.rfErrX;
      _rfErrY = _$v.rfErrY;
      _rfErrZ = _$v.rfErrZ;
      _rfErrVx = _$v.rfErrVx;
      _rfErrVy = _$v.rfErrVy;
      _rfErrVz = _$v.rfErrVz;
      _ssX = _$v.ssX;
      _ssY = _$v.ssY;
      _ssZ = _$v.ssZ;
      _virtErrX = _$v.virtErrX;
      _virtErrY = _$v.virtErrY;
      _virtErrZ = _$v.virtErrZ;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RelativeState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RelativeState;
  }

  @override
  void update(void updates(RelativeStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RelativeState build() {
    final _$result = _$v ??
        new _$RelativeState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sId: sId ?? '',
            dist: dist ?? 0,
            err: err ?? 0,
            ctrlImp: ctrlImp ?? 0,
            relDirX: relDirX ?? 0,
            relDirY: relDirY ?? 0,
            relDirZ: relDirZ ?? 0,
            errX: errX ?? 0,
            errY: errY ?? 0,
            errZ: errZ ?? 0,
            rfErrX: rfErrX ?? 0,
            rfErrY: rfErrY ?? 0,
            rfErrZ: rfErrZ ?? 0,
            rfErrVx: rfErrVx ?? 0,
            rfErrVy: rfErrVy ?? 0,
            rfErrVz: rfErrVz ?? 0,
            ssX: ssX ?? 0,
            ssY: ssY ?? 0,
            ssZ: ssZ ?? 0,
            virtErrX: virtErrX ?? 0,
            virtErrY: virtErrY ?? 0,
            virtErrZ: virtErrZ ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Dislodge Maneuver immutable class
///
class _$Dislodge extends Dislodge {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double rpm;
  @override
  final DislodgeEnumDirection direction;
  @override
  final String custom;

  factory _$Dislodge([void updates(DislodgeBuilder b)]) =>
      (new DislodgeBuilder()..update(updates)).build();

  _$Dislodge._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.rpm,
      this.direction,
      this.custom})
      : super._();

  @override
  Dislodge rebuild(void updates(DislodgeBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DislodgeBuilder toBuilder() => new DislodgeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Dislodge &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        rpm == this.rpm &&
        direction == this.direction &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        rpm?.hashCode), 
        direction?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Dislodge')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('rpm', rpm)
          ..add('direction', direction)
          ..add('custom', custom))
        .toString();
  }
}

/// Dislodge Maneuver builder class
///
class DislodgeBuilder implements Builder<Dislodge, DislodgeBuilder>, ImcBuilderHeaderPart {
  _$Dislodge _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _rpm;
  double get rpm => _$this._rpm;
  set rpm(double rpm) => _$this._rpm = rpm;

  DislodgeEnumDirection _direction;
  DislodgeEnumDirection get direction => _$this._direction;
  set direction(DislodgeEnumDirection direction) => _$this._direction = direction;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  DislodgeBuilder();

  DislodgeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _rpm = _$v.rpm;
      _direction = _$v.direction;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Dislodge other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Dislodge;
  }

  @override
  void update(void updates(DislodgeBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Dislodge build() {
    final _$result = _$v ??
        new _$Dislodge._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            rpm: rpm ?? 0,
            direction: direction ?? DislodgeEnumDirection(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Formation immutable class
///
class _$Formation extends Formation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String formationName;
  @override
  final FormationEnumType type;
  @override
  final FormationEnumOp op;
  @override
  final String groupName;
  @override
  final String planId;
  @override
  final String description;
  @override
  final FormationEnumReferenceFrame referenceFrame;
  @override
  final List<VehicleFormationParticipant> participants;
  @override
  final double leaderBankLim;
  @override
  final double leaderSpeedMin;
  @override
  final double leaderSpeedMax;
  @override
  final double leaderAltMin;
  @override
  final double leaderAltMax;
  @override
  final double posSimErrLim;
  @override
  final double posSimErrWrn;
  @override
  final int posSimErrTimeout;
  @override
  final double convergMax;
  @override
  final int convergTimeout;
  @override
  final int commsTimeout;
  @override
  final double turbLim;
  @override
  final String custom;

  factory _$Formation([void updates(FormationBuilder b)]) =>
      (new FormationBuilder()..update(updates)).build();

  _$Formation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.formationName,
      this.type,
      this.op,
      this.groupName,
      this.planId,
      this.description,
      this.referenceFrame,
      this.participants,
      this.leaderBankLim,
      this.leaderSpeedMin,
      this.leaderSpeedMax,
      this.leaderAltMin,
      this.leaderAltMax,
      this.posSimErrLim,
      this.posSimErrWrn,
      this.posSimErrTimeout,
      this.convergMax,
      this.convergTimeout,
      this.commsTimeout,
      this.turbLim,
      this.custom})
      : super._();

  @override
  Formation rebuild(void updates(FormationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationBuilder toBuilder() => new FormationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Formation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        formationName == this.formationName &&
        type == this.type &&
        op == this.op &&
        groupName == this.groupName &&
        planId == this.planId &&
        description == this.description &&
        referenceFrame == this.referenceFrame &&
        participants == this.participants &&
        leaderBankLim == this.leaderBankLim &&
        leaderSpeedMin == this.leaderSpeedMin &&
        leaderSpeedMax == this.leaderSpeedMax &&
        leaderAltMin == this.leaderAltMin &&
        leaderAltMax == this.leaderAltMax &&
        posSimErrLim == this.posSimErrLim &&
        posSimErrWrn == this.posSimErrWrn &&
        posSimErrTimeout == this.posSimErrTimeout &&
        convergMax == this.convergMax &&
        convergTimeout == this.convergTimeout &&
        commsTimeout == this.commsTimeout &&
        turbLim == this.turbLim &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        formationName?.hashCode), 
        type?.hashCode), 
        op?.hashCode), 
        groupName?.hashCode), 
        planId?.hashCode), 
        description?.hashCode), 
        referenceFrame?.hashCode), 
        participants?.hashCode), 
        leaderBankLim?.hashCode), 
        leaderSpeedMin?.hashCode), 
        leaderSpeedMax?.hashCode), 
        leaderAltMin?.hashCode), 
        leaderAltMax?.hashCode), 
        posSimErrLim?.hashCode), 
        posSimErrWrn?.hashCode), 
        posSimErrTimeout?.hashCode), 
        convergMax?.hashCode), 
        convergTimeout?.hashCode), 
        commsTimeout?.hashCode), 
        turbLim?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Formation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('formationName', formationName)
          ..add('type', type)
          ..add('op', op)
          ..add('groupName', groupName)
          ..add('planId', planId)
          ..add('description', description)
          ..add('referenceFrame', referenceFrame)
          ..add('participants', participants)
          ..add('leaderBankLim', leaderBankLim)
          ..add('leaderSpeedMin', leaderSpeedMin)
          ..add('leaderSpeedMax', leaderSpeedMax)
          ..add('leaderAltMin', leaderAltMin)
          ..add('leaderAltMax', leaderAltMax)
          ..add('posSimErrLim', posSimErrLim)
          ..add('posSimErrWrn', posSimErrWrn)
          ..add('posSimErrTimeout', posSimErrTimeout)
          ..add('convergMax', convergMax)
          ..add('convergTimeout', convergTimeout)
          ..add('commsTimeout', commsTimeout)
          ..add('turbLim', turbLim)
          ..add('custom', custom))
        .toString();
  }
}

/// Formation builder class
///
class FormationBuilder implements Builder<Formation, FormationBuilder>, ImcBuilderHeaderPart {
  _$Formation _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _formationName;
  String get formationName => _$this._formationName;
  set formationName(String formationName) => _$this._formationName = formationName;

  FormationEnumType _type;
  FormationEnumType get type => _$this._type;
  set type(FormationEnumType type) => _$this._type = type;

  FormationEnumOp _op;
  FormationEnumOp get op => _$this._op;
  set op(FormationEnumOp op) => _$this._op = op;

  String _groupName;
  String get groupName => _$this._groupName;
  set groupName(String groupName) => _$this._groupName = groupName;

  String _planId;
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  FormationEnumReferenceFrame _referenceFrame;
  FormationEnumReferenceFrame get referenceFrame => _$this._referenceFrame;
  set referenceFrame(FormationEnumReferenceFrame referenceFrame) => _$this._referenceFrame = referenceFrame;

  List<VehicleFormationParticipant> _participants;
  List<VehicleFormationParticipant> get participants => _$this._participants;
  set participants(List<VehicleFormationParticipant> participants) => _$this._participants = participants;

  double _leaderBankLim;
  double get leaderBankLim => _$this._leaderBankLim;
  set leaderBankLim(double leaderBankLim) => _$this._leaderBankLim = leaderBankLim;

  double _leaderSpeedMin;
  double get leaderSpeedMin => _$this._leaderSpeedMin;
  set leaderSpeedMin(double leaderSpeedMin) => _$this._leaderSpeedMin = leaderSpeedMin;

  double _leaderSpeedMax;
  double get leaderSpeedMax => _$this._leaderSpeedMax;
  set leaderSpeedMax(double leaderSpeedMax) => _$this._leaderSpeedMax = leaderSpeedMax;

  double _leaderAltMin;
  double get leaderAltMin => _$this._leaderAltMin;
  set leaderAltMin(double leaderAltMin) => _$this._leaderAltMin = leaderAltMin;

  double _leaderAltMax;
  double get leaderAltMax => _$this._leaderAltMax;
  set leaderAltMax(double leaderAltMax) => _$this._leaderAltMax = leaderAltMax;

  double _posSimErrLim;
  double get posSimErrLim => _$this._posSimErrLim;
  set posSimErrLim(double posSimErrLim) => _$this._posSimErrLim = posSimErrLim;

  double _posSimErrWrn;
  double get posSimErrWrn => _$this._posSimErrWrn;
  set posSimErrWrn(double posSimErrWrn) => _$this._posSimErrWrn = posSimErrWrn;

  int _posSimErrTimeout;
  int get posSimErrTimeout => _$this._posSimErrTimeout;
  set posSimErrTimeout(int posSimErrTimeout) => _$this._posSimErrTimeout = posSimErrTimeout;

  double _convergMax;
  double get convergMax => _$this._convergMax;
  set convergMax(double convergMax) => _$this._convergMax = convergMax;

  int _convergTimeout;
  int get convergTimeout => _$this._convergTimeout;
  set convergTimeout(int convergTimeout) => _$this._convergTimeout = convergTimeout;

  int _commsTimeout;
  int get commsTimeout => _$this._commsTimeout;
  set commsTimeout(int commsTimeout) => _$this._commsTimeout = commsTimeout;

  double _turbLim;
  double get turbLim => _$this._turbLim;
  set turbLim(double turbLim) => _$this._turbLim = turbLim;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FormationBuilder();

  FormationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _formationName = _$v.formationName;
      _type = _$v.type;
      _op = _$v.op;
      _groupName = _$v.groupName;
      _planId = _$v.planId;
      _description = _$v.description;
      _referenceFrame = _$v.referenceFrame;
      _participants = _$v.participants;
      _leaderBankLim = _$v.leaderBankLim;
      _leaderSpeedMin = _$v.leaderSpeedMin;
      _leaderSpeedMax = _$v.leaderSpeedMax;
      _leaderAltMin = _$v.leaderAltMin;
      _leaderAltMax = _$v.leaderAltMax;
      _posSimErrLim = _$v.posSimErrLim;
      _posSimErrWrn = _$v.posSimErrWrn;
      _posSimErrTimeout = _$v.posSimErrTimeout;
      _convergMax = _$v.convergMax;
      _convergTimeout = _$v.convergTimeout;
      _commsTimeout = _$v.commsTimeout;
      _turbLim = _$v.turbLim;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Formation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Formation;
  }

  @override
  void update(void updates(FormationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Formation build() {
    final _$result = _$v ??
        new _$Formation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            formationName: formationName ?? '',
            type: type ?? FormationEnumType(0),
            op: op ?? FormationEnumOp(0),
            groupName: groupName ?? '',
            planId: planId ?? '',
            description: description ?? '',
            referenceFrame: referenceFrame ?? FormationEnumReferenceFrame(0),
            participants: participants ?? List<VehicleFormationParticipant>(0),
            leaderBankLim: leaderBankLim ?? 0,
            leaderSpeedMin: leaderSpeedMin ?? 0,
            leaderSpeedMax: leaderSpeedMax ?? 0,
            leaderAltMin: leaderAltMin ?? 0,
            leaderAltMax: leaderAltMax ?? 0,
            posSimErrLim: posSimErrLim ?? 0,
            posSimErrWrn: posSimErrWrn ?? 0,
            posSimErrTimeout: posSimErrTimeout ?? 0,
            convergMax: convergMax ?? 0,
            convergTimeout: convergTimeout ?? 0,
            commsTimeout: commsTimeout ?? 0,
            turbLim: turbLim ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Launch Maneuver immutable class
///
class _$Launch extends Launch {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final String custom;

  factory _$Launch([void updates(LaunchBuilder b)]) =>
      (new LaunchBuilder()..update(updates)).build();

  _$Launch._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.custom})
      : super._();

  @override
  Launch rebuild(void updates(LaunchBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LaunchBuilder toBuilder() => new LaunchBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Launch &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Launch')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('custom', custom))
        .toString();
  }
}

/// Launch Maneuver builder class
///
class LaunchBuilder implements Builder<Launch, LaunchBuilder>, ImcBuilderHeaderPart {
  _$Launch _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  LaunchBuilder();

  LaunchBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Launch other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Launch;
  }

  @override
  void update(void updates(LaunchBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Launch build() {
    final _$result = _$v ??
        new _$Launch._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Drop Maneuver immutable class
///
class _$Drop extends Drop {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final String custom;

  factory _$Drop([void updates(DropBuilder b)]) =>
      (new DropBuilder()..update(updates)).build();

  _$Drop._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.custom})
      : super._();

  @override
  Drop rebuild(void updates(DropBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DropBuilder toBuilder() => new DropBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Drop &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Drop')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('custom', custom))
        .toString();
  }
}

/// Drop Maneuver builder class
///
class DropBuilder implements Builder<Drop, DropBuilder>, ImcBuilderHeaderPart {
  _$Drop _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  DropBuilder();

  DropBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Drop other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Drop;
  }

  @override
  void update(void updates(DropBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Drop build() {
    final _$result = _$v ??
        new _$Drop._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Scheduled Goto immutable class
///
class _$ScheduledGoto extends ScheduledGoto {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double arrivalTime;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double travelZ;
  @override
  final ZUnitsEnum travelZUnits;
  @override
  final ScheduledGotoEnumDelayed delayed;

  factory _$ScheduledGoto([void updates(ScheduledGotoBuilder b)]) =>
      (new ScheduledGotoBuilder()..update(updates)).build();

  _$ScheduledGoto._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.arrivalTime,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.travelZ,
      this.travelZUnits,
      this.delayed})
      : super._();

  @override
  ScheduledGoto rebuild(void updates(ScheduledGotoBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ScheduledGotoBuilder toBuilder() => new ScheduledGotoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ScheduledGoto &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        arrivalTime == this.arrivalTime &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        travelZ == this.travelZ &&
        travelZUnits == this.travelZUnits &&
        delayed == this.delayed;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        arrivalTime?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        travelZ?.hashCode), 
        travelZUnits?.hashCode), 
        delayed?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ScheduledGoto')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('arrivalTime', arrivalTime)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('travelZ', travelZ)
          ..add('travelZUnits', travelZUnits)
          ..add('delayed', delayed))
        .toString();
  }
}

/// Scheduled Goto builder class
///
class ScheduledGotoBuilder implements Builder<ScheduledGoto, ScheduledGotoBuilder>, ImcBuilderHeaderPart {
  _$ScheduledGoto _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _arrivalTime;
  double get arrivalTime => _$this._arrivalTime;
  set arrivalTime(double arrivalTime) => _$this._arrivalTime = arrivalTime;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _travelZ;
  double get travelZ => _$this._travelZ;
  set travelZ(double travelZ) => _$this._travelZ = travelZ;

  ZUnitsEnum _travelZUnits;
  ZUnitsEnum get travelZUnits => _$this._travelZUnits;
  set travelZUnits(ZUnitsEnum travelZUnits) => _$this._travelZUnits = travelZUnits;

  ScheduledGotoEnumDelayed _delayed;
  ScheduledGotoEnumDelayed get delayed => _$this._delayed;
  set delayed(ScheduledGotoEnumDelayed delayed) => _$this._delayed = delayed;

  ScheduledGotoBuilder();

  ScheduledGotoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _arrivalTime = _$v.arrivalTime;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _travelZ = _$v.travelZ;
      _travelZUnits = _$v.travelZUnits;
      _delayed = _$v.delayed;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ScheduledGoto other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ScheduledGoto;
  }

  @override
  void update(void updates(ScheduledGotoBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ScheduledGoto build() {
    final _$result = _$v ??
        new _$ScheduledGoto._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            arrivalTime: arrivalTime ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            travelZ: travelZ ?? 0,
            travelZUnits: travelZUnits ?? ZUnitsEnum(0),
            delayed: delayed ?? ScheduledGotoEnumDelayed(0));
    replace(_$result);
    return _$result;
  }
}

/// Rows Coverage immutable class
///
class _$RowsCoverage extends RowsCoverage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double bearing;
  @override
  final double crossAngle;
  @override
  final double width;
  @override
  final double length;
  @override
  final int coff;
  @override
  final double angAperture;
  @override
  final int range;
  @override
  final int overlap;
  @override
  final RowsCoverageBitfieldFlags flags;
  @override
  final String custom;

  factory _$RowsCoverage([void updates(RowsCoverageBuilder b)]) =>
      (new RowsCoverageBuilder()..update(updates)).build();

  _$RowsCoverage._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.bearing,
      this.crossAngle,
      this.width,
      this.length,
      this.coff,
      this.angAperture,
      this.range,
      this.overlap,
      this.flags,
      this.custom})
      : super._();

  @override
  RowsCoverage rebuild(void updates(RowsCoverageBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RowsCoverageBuilder toBuilder() => new RowsCoverageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RowsCoverage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        bearing == this.bearing &&
        crossAngle == this.crossAngle &&
        width == this.width &&
        length == this.length &&
        coff == this.coff &&
        angAperture == this.angAperture &&
        range == this.range &&
        overlap == this.overlap &&
        flags == this.flags &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        bearing?.hashCode), 
        crossAngle?.hashCode), 
        width?.hashCode), 
        length?.hashCode), 
        coff?.hashCode), 
        angAperture?.hashCode), 
        range?.hashCode), 
        overlap?.hashCode), 
        flags?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RowsCoverage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('bearing', bearing)
          ..add('crossAngle', crossAngle)
          ..add('width', width)
          ..add('length', length)
          ..add('coff', coff)
          ..add('angAperture', angAperture)
          ..add('range', range)
          ..add('overlap', overlap)
          ..add('flags', flags)
          ..add('custom', custom))
        .toString();
  }
}

/// Rows Coverage builder class
///
class RowsCoverageBuilder implements Builder<RowsCoverage, RowsCoverageBuilder>, ImcBuilderHeaderPart {
  _$RowsCoverage _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _crossAngle;
  double get crossAngle => _$this._crossAngle;
  set crossAngle(double crossAngle) => _$this._crossAngle = crossAngle;

  double _width;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  double _length;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  int _coff;
  int get coff => _$this._coff;
  set coff(int coff) => _$this._coff = coff;

  double _angAperture;
  double get angAperture => _$this._angAperture;
  set angAperture(double angAperture) => _$this._angAperture = angAperture;

  int _range;
  int get range => _$this._range;
  set range(int range) => _$this._range = range;

  int _overlap;
  int get overlap => _$this._overlap;
  set overlap(int overlap) => _$this._overlap = overlap;

  RowsCoverageBitfieldFlags _flags;
  RowsCoverageBitfieldFlags get flags => _$this._flags;
  set flags(RowsCoverageBitfieldFlags flags) => _$this._flags = flags;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  RowsCoverageBuilder();

  RowsCoverageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _bearing = _$v.bearing;
      _crossAngle = _$v.crossAngle;
      _width = _$v.width;
      _length = _$v.length;
      _coff = _$v.coff;
      _angAperture = _$v.angAperture;
      _range = _$v.range;
      _overlap = _$v.overlap;
      _flags = _$v.flags;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RowsCoverage other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RowsCoverage;
  }

  @override
  void update(void updates(RowsCoverageBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RowsCoverage build() {
    final _$result = _$v ??
        new _$RowsCoverage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            bearing: bearing ?? 0,
            crossAngle: crossAngle ?? 0,
            width: width ?? 0,
            length: length ?? 0,
            coff: coff ?? 0,
            angAperture: angAperture ?? 2.094395,
            range: range ?? 0,
            overlap: overlap ?? 10,
            flags: flags ?? RowsCoverageBitfieldFlags(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Sample Maneuver immutable class
///
class _$Sample extends Sample {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final BooleanEnum syringe0;
  @override
  final BooleanEnum syringe1;
  @override
  final BooleanEnum syringe2;
  @override
  final String custom;

  factory _$Sample([void updates(SampleBuilder b)]) =>
      (new SampleBuilder()..update(updates)).build();

  _$Sample._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.syringe0,
      this.syringe1,
      this.syringe2,
      this.custom})
      : super._();

  @override
  Sample rebuild(void updates(SampleBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SampleBuilder toBuilder() => new SampleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Sample &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        syringe0 == this.syringe0 &&
        syringe1 == this.syringe1 &&
        syringe2 == this.syringe2 &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        syringe0?.hashCode), 
        syringe1?.hashCode), 
        syringe2?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Sample')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('syringe0', syringe0)
          ..add('syringe1', syringe1)
          ..add('syringe2', syringe2)
          ..add('custom', custom))
        .toString();
  }
}

/// Sample Maneuver builder class
///
class SampleBuilder implements Builder<Sample, SampleBuilder>, ImcBuilderHeaderPart {
  _$Sample _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  BooleanEnum _syringe0;
  BooleanEnum get syringe0 => _$this._syringe0;
  set syringe0(BooleanEnum syringe0) => _$this._syringe0 = syringe0;

  BooleanEnum _syringe1;
  BooleanEnum get syringe1 => _$this._syringe1;
  set syringe1(BooleanEnum syringe1) => _$this._syringe1 = syringe1;

  BooleanEnum _syringe2;
  BooleanEnum get syringe2 => _$this._syringe2;
  set syringe2(BooleanEnum syringe2) => _$this._syringe2 = syringe2;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  SampleBuilder();

  SampleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _syringe0 = _$v.syringe0;
      _syringe1 = _$v.syringe1;
      _syringe2 = _$v.syringe2;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Sample other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Sample;
  }

  @override
  void update(void updates(SampleBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Sample build() {
    final _$result = _$v ??
        new _$Sample._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            syringe0: syringe0 ?? BooleanEnum(0),
            syringe1: syringe1 ?? BooleanEnum(0),
            syringe2: syringe2 ?? BooleanEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Image Tracking immutable class
///
class _$ImageTracking extends ImageTracking {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$ImageTracking([void updates(ImageTrackingBuilder b)]) =>
      (new ImageTrackingBuilder()..update(updates)).build();

  _$ImageTracking._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  ImageTracking rebuild(void updates(ImageTrackingBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ImageTrackingBuilder toBuilder() => new ImageTrackingBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ImageTracking &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ImageTracking')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Image Tracking builder class
///
class ImageTrackingBuilder implements Builder<ImageTracking, ImageTrackingBuilder>, ImcBuilderHeaderPart {
  _$ImageTracking _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ImageTrackingBuilder();

  ImageTrackingBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ImageTracking other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ImageTracking;
  }

  @override
  void update(void updates(ImageTrackingBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ImageTracking build() {
    final _$result = _$v ??
        new _$ImageTracking._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Takeoff Maneuver immutable class
///
class _$Takeoff extends Takeoff {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double takeoffPitch;
  @override
  final String custom;

  factory _$Takeoff([void updates(TakeoffBuilder b)]) =>
      (new TakeoffBuilder()..update(updates)).build();

  _$Takeoff._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.takeoffPitch,
      this.custom})
      : super._();

  @override
  Takeoff rebuild(void updates(TakeoffBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TakeoffBuilder toBuilder() => new TakeoffBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Takeoff &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        takeoffPitch == this.takeoffPitch &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        takeoffPitch?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Takeoff')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('takeoffPitch', takeoffPitch)
          ..add('custom', custom))
        .toString();
  }
}

/// Takeoff Maneuver builder class
///
class TakeoffBuilder implements Builder<Takeoff, TakeoffBuilder>, ImcBuilderHeaderPart {
  _$Takeoff _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _takeoffPitch;
  double get takeoffPitch => _$this._takeoffPitch;
  set takeoffPitch(double takeoffPitch) => _$this._takeoffPitch = takeoffPitch;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  TakeoffBuilder();

  TakeoffBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _takeoffPitch = _$v.takeoffPitch;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Takeoff other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Takeoff;
  }

  @override
  void update(void updates(TakeoffBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Takeoff build() {
    final _$result = _$v ??
        new _$Takeoff._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            takeoffPitch: takeoffPitch ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Land Maneuver immutable class
///
class _$Land extends Land {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double abortZ;
  @override
  final double bearing;
  @override
  final int glideSlope;
  @override
  final double glideSlopeAlt;
  @override
  final String custom;

  factory _$Land([void updates(LandBuilder b)]) =>
      (new LandBuilder()..update(updates)).build();

  _$Land._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.abortZ,
      this.bearing,
      this.glideSlope,
      this.glideSlopeAlt,
      this.custom})
      : super._();

  @override
  Land rebuild(void updates(LandBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LandBuilder toBuilder() => new LandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Land &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        abortZ == this.abortZ &&
        bearing == this.bearing &&
        glideSlope == this.glideSlope &&
        glideSlopeAlt == this.glideSlopeAlt &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        abortZ?.hashCode), 
        bearing?.hashCode), 
        glideSlope?.hashCode), 
        glideSlopeAlt?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Land')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('abortZ', abortZ)
          ..add('bearing', bearing)
          ..add('glideSlope', glideSlope)
          ..add('glideSlopeAlt', glideSlopeAlt)
          ..add('custom', custom))
        .toString();
  }
}

/// Land Maneuver builder class
///
class LandBuilder implements Builder<Land, LandBuilder>, ImcBuilderHeaderPart {
  _$Land _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _abortZ;
  double get abortZ => _$this._abortZ;
  set abortZ(double abortZ) => _$this._abortZ = abortZ;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  int _glideSlope;
  int get glideSlope => _$this._glideSlope;
  set glideSlope(int glideSlope) => _$this._glideSlope = glideSlope;

  double _glideSlopeAlt;
  double get glideSlopeAlt => _$this._glideSlopeAlt;
  set glideSlopeAlt(double glideSlopeAlt) => _$this._glideSlopeAlt = glideSlopeAlt;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  LandBuilder();

  LandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _abortZ = _$v.abortZ;
      _bearing = _$v.bearing;
      _glideSlope = _$v.glideSlope;
      _glideSlopeAlt = _$v.glideSlopeAlt;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Land other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Land;
  }

  @override
  void update(void updates(LandBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Land build() {
    final _$result = _$v ??
        new _$Land._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            abortZ: abortZ ?? 0,
            bearing: bearing ?? 0,
            glideSlope: glideSlope ?? 0,
            glideSlopeAlt: glideSlopeAlt ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Autonomous Section immutable class
///
class _$AutonomousSection extends AutonomousSection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final AutonomousSectionBitfieldLimits limits;
  @override
  final double maxDepth;
  @override
  final double minAlt;
  @override
  final double timeLimit;
  @override
  final List<PolygonVertex> areaLimits;
  @override
  final String controller;
  @override
  final String custom;

  factory _$AutonomousSection([void updates(AutonomousSectionBuilder b)]) =>
      (new AutonomousSectionBuilder()..update(updates)).build();

  _$AutonomousSection._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.speed,
      this.speedUnits,
      this.limits,
      this.maxDepth,
      this.minAlt,
      this.timeLimit,
      this.areaLimits,
      this.controller,
      this.custom})
      : super._();

  @override
  AutonomousSection rebuild(void updates(AutonomousSectionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AutonomousSectionBuilder toBuilder() => new AutonomousSectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AutonomousSection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        limits == this.limits &&
        maxDepth == this.maxDepth &&
        minAlt == this.minAlt &&
        timeLimit == this.timeLimit &&
        areaLimits == this.areaLimits &&
        controller == this.controller &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        limits?.hashCode), 
        maxDepth?.hashCode), 
        minAlt?.hashCode), 
        timeLimit?.hashCode), 
        areaLimits?.hashCode), 
        controller?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AutonomousSection')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('limits', limits)
          ..add('maxDepth', maxDepth)
          ..add('minAlt', minAlt)
          ..add('timeLimit', timeLimit)
          ..add('areaLimits', areaLimits)
          ..add('controller', controller)
          ..add('custom', custom))
        .toString();
  }
}

/// Autonomous Section builder class
///
class AutonomousSectionBuilder implements Builder<AutonomousSection, AutonomousSectionBuilder>, ImcBuilderHeaderPart {
  _$AutonomousSection _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  AutonomousSectionBitfieldLimits _limits;
  AutonomousSectionBitfieldLimits get limits => _$this._limits;
  set limits(AutonomousSectionBitfieldLimits limits) => _$this._limits = limits;

  double _maxDepth;
  double get maxDepth => _$this._maxDepth;
  set maxDepth(double maxDepth) => _$this._maxDepth = maxDepth;

  double _minAlt;
  double get minAlt => _$this._minAlt;
  set minAlt(double minAlt) => _$this._minAlt = minAlt;

  double _timeLimit;
  double get timeLimit => _$this._timeLimit;
  set timeLimit(double timeLimit) => _$this._timeLimit = timeLimit;

  List<PolygonVertex> _areaLimits;
  List<PolygonVertex> get areaLimits => _$this._areaLimits;
  set areaLimits(List<PolygonVertex> areaLimits) => _$this._areaLimits = areaLimits;

  String _controller;
  String get controller => _$this._controller;
  set controller(String controller) => _$this._controller = controller;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  AutonomousSectionBuilder();

  AutonomousSectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _limits = _$v.limits;
      _maxDepth = _$v.maxDepth;
      _minAlt = _$v.minAlt;
      _timeLimit = _$v.timeLimit;
      _areaLimits = _$v.areaLimits;
      _controller = _$v.controller;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AutonomousSection other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AutonomousSection;
  }

  @override
  void update(void updates(AutonomousSectionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AutonomousSection build() {
    final _$result = _$v ??
        new _$AutonomousSection._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            limits: limits ?? AutonomousSectionBitfieldLimits(0),
            maxDepth: maxDepth ?? 0,
            minAlt: minAlt ?? 0,
            timeLimit: timeLimit ?? 0,
            areaLimits: areaLimits ?? List<PolygonVertex>(0),
            controller: controller ?? '',
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Follow Point Maneuver immutable class
///
class _$FollowPoint extends FollowPoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String target;
  @override
  final double maxSpeed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final String custom;

  factory _$FollowPoint([void updates(FollowPointBuilder b)]) =>
      (new FollowPointBuilder()..update(updates)).build();

  _$FollowPoint._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.target,
      this.maxSpeed,
      this.speedUnits,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.custom})
      : super._();

  @override
  FollowPoint rebuild(void updates(FollowPointBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowPointBuilder toBuilder() => new FollowPointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowPoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == this.target &&
        maxSpeed == this.maxSpeed &&
        speedUnits == this.speedUnits &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        target?.hashCode), 
        maxSpeed?.hashCode), 
        speedUnits?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowPoint')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('target', target)
          ..add('maxSpeed', maxSpeed)
          ..add('speedUnits', speedUnits)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('custom', custom))
        .toString();
  }
}

/// Follow Point Maneuver builder class
///
class FollowPointBuilder implements Builder<FollowPoint, FollowPointBuilder>, ImcBuilderHeaderPart {
  _$FollowPoint _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _target;
  String get target => _$this._target;
  set target(String target) => _$this._target = target;

  double _maxSpeed;
  double get maxSpeed => _$this._maxSpeed;
  set maxSpeed(double maxSpeed) => _$this._maxSpeed = maxSpeed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FollowPointBuilder();

  FollowPointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _maxSpeed = _$v.maxSpeed;
      _speedUnits = _$v.speedUnits;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowPoint other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FollowPoint;
  }

  @override
  void update(void updates(FollowPointBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowPoint build() {
    final _$result = _$v ??
        new _$FollowPoint._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            target: target ?? '',
            maxSpeed: maxSpeed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Alignment Maneuver immutable class
///
class _$Alignment extends Alignment {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final String custom;

  factory _$Alignment([void updates(AlignmentBuilder b)]) =>
      (new AlignmentBuilder()..update(updates)).build();

  _$Alignment._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.speed,
      this.speedUnits,
      this.custom})
      : super._();

  @override
  Alignment rebuild(void updates(AlignmentBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AlignmentBuilder toBuilder() => new AlignmentBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Alignment &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Alignment')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('custom', custom))
        .toString();
  }
}

/// Alignment Maneuver builder class
///
class AlignmentBuilder implements Builder<Alignment, AlignmentBuilder>, ImcBuilderHeaderPart {
  _$Alignment _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  AlignmentBuilder();

  AlignmentBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Alignment other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Alignment;
  }

  @override
  void update(void updates(AlignmentBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Alignment build() {
    final _$result = _$v ??
        new _$Alignment._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Station Keeping Extended immutable class
///
class _$StationKeepingExtended extends StationKeepingExtended {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double radius;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final int popupPeriod;
  @override
  final int popupDuration;
  @override
  final StationKeepingExtendedBitfieldFlags flags;
  @override
  final String custom;

  factory _$StationKeepingExtended([void updates(StationKeepingExtendedBuilder b)]) =>
      (new StationKeepingExtendedBuilder()..update(updates)).build();

  _$StationKeepingExtended._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.radius,
      this.duration,
      this.speed,
      this.speedUnits,
      this.popupPeriod,
      this.popupDuration,
      this.flags,
      this.custom})
      : super._();

  @override
  StationKeepingExtended rebuild(void updates(StationKeepingExtendedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  StationKeepingExtendedBuilder toBuilder() => new StationKeepingExtendedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StationKeepingExtended &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        radius == this.radius &&
        duration == this.duration &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        popupPeriod == this.popupPeriod &&
        popupDuration == this.popupDuration &&
        flags == this.flags &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        radius?.hashCode), 
        duration?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        popupPeriod?.hashCode), 
        popupDuration?.hashCode), 
        flags?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StationKeepingExtended')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('radius', radius)
          ..add('duration', duration)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('popupPeriod', popupPeriod)
          ..add('popupDuration', popupDuration)
          ..add('flags', flags)
          ..add('custom', custom))
        .toString();
  }
}

/// Station Keeping Extended builder class
///
class StationKeepingExtendedBuilder implements Builder<StationKeepingExtended, StationKeepingExtendedBuilder>, ImcBuilderHeaderPart {
  _$StationKeepingExtended _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _radius;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  int _popupPeriod;
  int get popupPeriod => _$this._popupPeriod;
  set popupPeriod(int popupPeriod) => _$this._popupPeriod = popupPeriod;

  int _popupDuration;
  int get popupDuration => _$this._popupDuration;
  set popupDuration(int popupDuration) => _$this._popupDuration = popupDuration;

  StationKeepingExtendedBitfieldFlags _flags;
  StationKeepingExtendedBitfieldFlags get flags => _$this._flags;
  set flags(StationKeepingExtendedBitfieldFlags flags) => _$this._flags = flags;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  StationKeepingExtendedBuilder();

  StationKeepingExtendedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _radius = _$v.radius;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _popupPeriod = _$v.popupPeriod;
      _popupDuration = _$v.popupDuration;
      _flags = _$v.flags;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StationKeepingExtended other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$StationKeepingExtended;
  }

  @override
  void update(void updates(StationKeepingExtendedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$StationKeepingExtended build() {
    final _$result = _$v ??
        new _$StationKeepingExtended._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            radius: radius ?? 0,
            duration: duration ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            popupPeriod: popupPeriod ?? 0,
            popupDuration: popupDuration ?? 0,
            flags: flags ?? StationKeepingExtendedBitfieldFlags(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Magnetometer Maneuver immutable class
///
class _$Magnetometer extends Magnetometer {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double bearing;
  @override
  final double width;
  @override
  final MagnetometerEnumDirection direction;
  @override
  final String custom;

  factory _$Magnetometer([void updates(MagnetometerBuilder b)]) =>
      (new MagnetometerBuilder()..update(updates)).build();

  _$Magnetometer._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.bearing,
      this.width,
      this.direction,
      this.custom})
      : super._();

  @override
  Magnetometer rebuild(void updates(MagnetometerBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MagnetometerBuilder toBuilder() => new MagnetometerBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Magnetometer &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        speed == this.speed &&
        speedUnits == this.speedUnits &&
        bearing == this.bearing &&
        width == this.width &&
        direction == this.direction &&
        custom == this.custom;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        speed?.hashCode), 
        speedUnits?.hashCode), 
        bearing?.hashCode), 
        width?.hashCode), 
        direction?.hashCode), 
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Magnetometer')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('speed', speed)
          ..add('speedUnits', speedUnits)
          ..add('bearing', bearing)
          ..add('width', width)
          ..add('direction', direction)
          ..add('custom', custom))
        .toString();
  }
}

/// Magnetometer Maneuver builder class
///
class MagnetometerBuilder implements Builder<Magnetometer, MagnetometerBuilder>, ImcBuilderHeaderPart {
  _$Magnetometer _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits;
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _width;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  MagnetometerEnumDirection _direction;
  MagnetometerEnumDirection get direction => _$this._direction;
  set direction(MagnetometerEnumDirection direction) => _$this._direction = direction;

  String _custom;
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  MagnetometerBuilder();

  MagnetometerBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _bearing = _$v.bearing;
      _width = _$v.width;
      _direction = _$v.direction;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Magnetometer other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Magnetometer;
  }

  @override
  void update(void updates(MagnetometerBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Magnetometer build() {
    final _$result = _$v ??
        new _$Magnetometer._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            bearing: bearing ?? 0,
            width: width ?? 0,
            direction: direction ?? MagnetometerEnumDirection(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Vehicle State immutable class
///
class _$VehicleState extends VehicleState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VehicleStateEnumOpMode opMode;
  @override
  final int errorCount;
  @override
  final String errorEnts;
  @override
  final int maneuverType;
  @override
  final double maneuverStime;
  @override
  final int maneuverEta;
  @override
  final CLoopsMaskBitfield controlLoops;
  @override
  final VehicleStateBitfieldFlags flags;
  @override
  final String lastError;
  @override
  final double lastErrorTime;

  factory _$VehicleState([void updates(VehicleStateBuilder b)]) =>
      (new VehicleStateBuilder()..update(updates)).build();

  _$VehicleState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.opMode,
      this.errorCount,
      this.errorEnts,
      this.maneuverType,
      this.maneuverStime,
      this.maneuverEta,
      this.controlLoops,
      this.flags,
      this.lastError,
      this.lastErrorTime})
      : super._();

  @override
  VehicleState rebuild(void updates(VehicleStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleStateBuilder toBuilder() => new VehicleStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        opMode == this.opMode &&
        errorCount == this.errorCount &&
        errorEnts == this.errorEnts &&
        maneuverType == this.maneuverType &&
        maneuverStime == this.maneuverStime &&
        maneuverEta == this.maneuverEta &&
        controlLoops == this.controlLoops &&
        flags == this.flags &&
        lastError == this.lastError &&
        lastErrorTime == this.lastErrorTime;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        opMode?.hashCode), 
        errorCount?.hashCode), 
        errorEnts?.hashCode), 
        maneuverType?.hashCode), 
        maneuverStime?.hashCode), 
        maneuverEta?.hashCode), 
        controlLoops?.hashCode), 
        flags?.hashCode), 
        lastError?.hashCode), 
        lastErrorTime?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('opMode', opMode)
          ..add('errorCount', errorCount)
          ..add('errorEnts', errorEnts)
          ..add('maneuverType', maneuverType)
          ..add('maneuverStime', maneuverStime)
          ..add('maneuverEta', maneuverEta)
          ..add('controlLoops', controlLoops)
          ..add('flags', flags)
          ..add('lastError', lastError)
          ..add('lastErrorTime', lastErrorTime))
        .toString();
  }
}

/// Vehicle State builder class
///
class VehicleStateBuilder implements Builder<VehicleState, VehicleStateBuilder>, ImcBuilderHeaderPart {
  _$VehicleState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VehicleStateEnumOpMode _opMode;
  VehicleStateEnumOpMode get opMode => _$this._opMode;
  set opMode(VehicleStateEnumOpMode opMode) => _$this._opMode = opMode;

  int _errorCount;
  int get errorCount => _$this._errorCount;
  set errorCount(int errorCount) => _$this._errorCount = errorCount;

  String _errorEnts;
  String get errorEnts => _$this._errorEnts;
  set errorEnts(String errorEnts) => _$this._errorEnts = errorEnts;

  int _maneuverType;
  int get maneuverType => _$this._maneuverType;
  set maneuverType(int maneuverType) => _$this._maneuverType = maneuverType;

  double _maneuverStime;
  double get maneuverStime => _$this._maneuverStime;
  set maneuverStime(double maneuverStime) => _$this._maneuverStime = maneuverStime;

  int _maneuverEta;
  int get maneuverEta => _$this._maneuverEta;
  set maneuverEta(int maneuverEta) => _$this._maneuverEta = maneuverEta;

  CLoopsMaskBitfield _controlLoops;
  CLoopsMaskBitfield get controlLoops => _$this._controlLoops;
  set controlLoops(CLoopsMaskBitfield controlLoops) => _$this._controlLoops = controlLoops;

  VehicleStateBitfieldFlags _flags;
  VehicleStateBitfieldFlags get flags => _$this._flags;
  set flags(VehicleStateBitfieldFlags flags) => _$this._flags = flags;

  String _lastError;
  String get lastError => _$this._lastError;
  set lastError(String lastError) => _$this._lastError = lastError;

  double _lastErrorTime;
  double get lastErrorTime => _$this._lastErrorTime;
  set lastErrorTime(double lastErrorTime) => _$this._lastErrorTime = lastErrorTime;

  VehicleStateBuilder();

  VehicleStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _opMode = _$v.opMode;
      _errorCount = _$v.errorCount;
      _errorEnts = _$v.errorEnts;
      _maneuverType = _$v.maneuverType;
      _maneuverStime = _$v.maneuverStime;
      _maneuverEta = _$v.maneuverEta;
      _controlLoops = _$v.controlLoops;
      _flags = _$v.flags;
      _lastError = _$v.lastError;
      _lastErrorTime = _$v.lastErrorTime;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleState;
  }

  @override
  void update(void updates(VehicleStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleState build() {
    final _$result = _$v ??
        new _$VehicleState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            opMode: opMode ?? VehicleStateEnumOpMode(0),
            errorCount: errorCount ?? 0,
            errorEnts: errorEnts ?? '',
            maneuverType: maneuverType ?? 0,
            maneuverStime: maneuverStime ?? 0,
            maneuverEta: maneuverEta ?? 0,
            controlLoops: controlLoops ?? CLoopsMaskBitfield(0),
            flags: flags ?? VehicleStateBitfieldFlags(0),
            lastError: lastError ?? '',
            lastErrorTime: lastErrorTime ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Command immutable class
///
class _$VehicleCommand extends VehicleCommand {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VehicleCommandEnumType type;
  @override
  final int requestId;
  @override
  final VehicleCommandEnumCommand command;
  @override
  final Maneuver maneuver;
  @override
  final int calibTime;
  @override
  final String info;

  factory _$VehicleCommand([void updates(VehicleCommandBuilder b)]) =>
      (new VehicleCommandBuilder()..update(updates)).build();

  _$VehicleCommand._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.requestId,
      this.command,
      this.maneuver,
      this.calibTime,
      this.info})
      : super._();

  @override
  VehicleCommand rebuild(void updates(VehicleCommandBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleCommandBuilder toBuilder() => new VehicleCommandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleCommand &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        requestId == this.requestId &&
        command == this.command &&
        maneuver == this.maneuver &&
        calibTime == this.calibTime &&
        info == this.info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode), 
        requestId?.hashCode), 
        command?.hashCode), 
        maneuver?.hashCode), 
        calibTime?.hashCode), 
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleCommand')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type)
          ..add('requestId', requestId)
          ..add('command', command)
          ..add('maneuver', maneuver)
          ..add('calibTime', calibTime)
          ..add('info', info))
        .toString();
  }
}

/// Vehicle Command builder class
///
class VehicleCommandBuilder implements Builder<VehicleCommand, VehicleCommandBuilder>, ImcBuilderHeaderPart {
  _$VehicleCommand _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VehicleCommandEnumType _type;
  VehicleCommandEnumType get type => _$this._type;
  set type(VehicleCommandEnumType type) => _$this._type = type;

  int _requestId;
  int get requestId => _$this._requestId;
  set requestId(int requestId) => _$this._requestId = requestId;

  VehicleCommandEnumCommand _command;
  VehicleCommandEnumCommand get command => _$this._command;
  set command(VehicleCommandEnumCommand command) => _$this._command = command;

  Maneuver _maneuver;
  Maneuver get maneuver => _$this._maneuver;
  set maneuver(Maneuver maneuver) => _$this._maneuver = maneuver;

  int _calibTime;
  int get calibTime => _$this._calibTime;
  set calibTime(int calibTime) => _$this._calibTime = calibTime;

  String _info;
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  VehicleCommandBuilder();

  VehicleCommandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _requestId = _$v.requestId;
      _command = _$v.command;
      _maneuver = _$v.maneuver;
      _calibTime = _$v.calibTime;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleCommand other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleCommand;
  }

  @override
  void update(void updates(VehicleCommandBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleCommand build() {
    final _$result = _$v ??
        new _$VehicleCommand._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? VehicleCommandEnumType(0),
            requestId: requestId ?? 0,
            command: command ?? VehicleCommandEnumCommand(0),
            maneuver: maneuver,
            calibTime: calibTime ?? 0,
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Monitor Entity State immutable class
///
class _$MonitorEntityState extends MonitorEntityState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final MonitorEntityStateEnumCommand command;
  @override
  final String entities;

  factory _$MonitorEntityState([void updates(MonitorEntityStateBuilder b)]) =>
      (new MonitorEntityStateBuilder()..update(updates)).build();

  _$MonitorEntityState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.command,
      this.entities})
      : super._();

  @override
  MonitorEntityState rebuild(void updates(MonitorEntityStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MonitorEntityStateBuilder toBuilder() => new MonitorEntityStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MonitorEntityState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        command == this.command &&
        entities == this.entities;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        command?.hashCode), 
        entities?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MonitorEntityState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('command', command)
          ..add('entities', entities))
        .toString();
  }
}

/// Monitor Entity State builder class
///
class MonitorEntityStateBuilder implements Builder<MonitorEntityState, MonitorEntityStateBuilder>, ImcBuilderHeaderPart {
  _$MonitorEntityState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  MonitorEntityStateEnumCommand _command;
  MonitorEntityStateEnumCommand get command => _$this._command;
  set command(MonitorEntityStateEnumCommand command) => _$this._command = command;

  String _entities;
  String get entities => _$this._entities;
  set entities(String entities) => _$this._entities = entities;

  MonitorEntityStateBuilder();

  MonitorEntityStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _command = _$v.command;
      _entities = _$v.entities;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MonitorEntityState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$MonitorEntityState;
  }

  @override
  void update(void updates(MonitorEntityStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$MonitorEntityState build() {
    final _$result = _$v ??
        new _$MonitorEntityState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            command: command ?? MonitorEntityStateEnumCommand(0),
            entities: entities ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Entity Monitoring State immutable class
///
class _$EntityMonitoringState extends EntityMonitoringState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int mcount;
  @override
  final String mnames;
  @override
  final int ecount;
  @override
  final String enames;
  @override
  final int ccount;
  @override
  final String cnames;
  @override
  final String lastError;
  @override
  final double lastErrorTime;

  factory _$EntityMonitoringState([void updates(EntityMonitoringStateBuilder b)]) =>
      (new EntityMonitoringStateBuilder()..update(updates)).build();

  _$EntityMonitoringState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.mcount,
      this.mnames,
      this.ecount,
      this.enames,
      this.ccount,
      this.cnames,
      this.lastError,
      this.lastErrorTime})
      : super._();

  @override
  EntityMonitoringState rebuild(void updates(EntityMonitoringStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityMonitoringStateBuilder toBuilder() => new EntityMonitoringStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityMonitoringState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        mcount == this.mcount &&
        mnames == this.mnames &&
        ecount == this.ecount &&
        enames == this.enames &&
        ccount == this.ccount &&
        cnames == this.cnames &&
        lastError == this.lastError &&
        lastErrorTime == this.lastErrorTime;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        mcount?.hashCode), 
        mnames?.hashCode), 
        ecount?.hashCode), 
        enames?.hashCode), 
        ccount?.hashCode), 
        cnames?.hashCode), 
        lastError?.hashCode), 
        lastErrorTime?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityMonitoringState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('mcount', mcount)
          ..add('mnames', mnames)
          ..add('ecount', ecount)
          ..add('enames', enames)
          ..add('ccount', ccount)
          ..add('cnames', cnames)
          ..add('lastError', lastError)
          ..add('lastErrorTime', lastErrorTime))
        .toString();
  }
}

/// Entity Monitoring State builder class
///
class EntityMonitoringStateBuilder implements Builder<EntityMonitoringState, EntityMonitoringStateBuilder>, ImcBuilderHeaderPart {
  _$EntityMonitoringState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _mcount;
  int get mcount => _$this._mcount;
  set mcount(int mcount) => _$this._mcount = mcount;

  String _mnames;
  String get mnames => _$this._mnames;
  set mnames(String mnames) => _$this._mnames = mnames;

  int _ecount;
  int get ecount => _$this._ecount;
  set ecount(int ecount) => _$this._ecount = ecount;

  String _enames;
  String get enames => _$this._enames;
  set enames(String enames) => _$this._enames = enames;

  int _ccount;
  int get ccount => _$this._ccount;
  set ccount(int ccount) => _$this._ccount = ccount;

  String _cnames;
  String get cnames => _$this._cnames;
  set cnames(String cnames) => _$this._cnames = cnames;

  String _lastError;
  String get lastError => _$this._lastError;
  set lastError(String lastError) => _$this._lastError = lastError;

  double _lastErrorTime;
  double get lastErrorTime => _$this._lastErrorTime;
  set lastErrorTime(double lastErrorTime) => _$this._lastErrorTime = lastErrorTime;

  EntityMonitoringStateBuilder();

  EntityMonitoringStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _mcount = _$v.mcount;
      _mnames = _$v.mnames;
      _ecount = _$v.ecount;
      _enames = _$v.enames;
      _ccount = _$v.ccount;
      _cnames = _$v.cnames;
      _lastError = _$v.lastError;
      _lastErrorTime = _$v.lastErrorTime;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityMonitoringState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EntityMonitoringState;
  }

  @override
  void update(void updates(EntityMonitoringStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityMonitoringState build() {
    final _$result = _$v ??
        new _$EntityMonitoringState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            mcount: mcount ?? 0,
            mnames: mnames ?? '',
            ecount: ecount ?? 0,
            enames: enames ?? '',
            ccount: ccount ?? 0,
            cnames: cnames ?? '',
            lastError: lastError ?? '',
            lastErrorTime: lastErrorTime ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Operational Limits immutable class
///
class _$OperationalLimits extends OperationalLimits {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final OpLimitsMaskBitfield mask;
  @override
  final double maxDepth;
  @override
  final double minAltitude;
  @override
  final double maxAltitude;
  @override
  final double minSpeed;
  @override
  final double maxSpeed;
  @override
  final double maxVrate;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double orientation;
  @override
  final double width;
  @override
  final double length;

  factory _$OperationalLimits([void updates(OperationalLimitsBuilder b)]) =>
      (new OperationalLimitsBuilder()..update(updates)).build();

  _$OperationalLimits._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.mask,
      this.maxDepth,
      this.minAltitude,
      this.maxAltitude,
      this.minSpeed,
      this.maxSpeed,
      this.maxVrate,
      this.lat,
      this.lon,
      this.orientation,
      this.width,
      this.length})
      : super._();

  @override
  OperationalLimits rebuild(void updates(OperationalLimitsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  OperationalLimitsBuilder toBuilder() => new OperationalLimitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is OperationalLimits &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        mask == this.mask &&
        maxDepth == this.maxDepth &&
        minAltitude == this.minAltitude &&
        maxAltitude == this.maxAltitude &&
        minSpeed == this.minSpeed &&
        maxSpeed == this.maxSpeed &&
        maxVrate == this.maxVrate &&
        lat == this.lat &&
        lon == this.lon &&
        orientation == this.orientation &&
        width == this.width &&
        length == this.length;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        mask?.hashCode), 
        maxDepth?.hashCode), 
        minAltitude?.hashCode), 
        maxAltitude?.hashCode), 
        minSpeed?.hashCode), 
        maxSpeed?.hashCode), 
        maxVrate?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        orientation?.hashCode), 
        width?.hashCode), 
        length?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('OperationalLimits')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('mask', mask)
          ..add('maxDepth', maxDepth)
          ..add('minAltitude', minAltitude)
          ..add('maxAltitude', maxAltitude)
          ..add('minSpeed', minSpeed)
          ..add('maxSpeed', maxSpeed)
          ..add('maxVrate', maxVrate)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('orientation', orientation)
          ..add('width', width)
          ..add('length', length))
        .toString();
  }
}

/// Operational Limits builder class
///
class OperationalLimitsBuilder implements Builder<OperationalLimits, OperationalLimitsBuilder>, ImcBuilderHeaderPart {
  _$OperationalLimits _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  OpLimitsMaskBitfield _mask;
  OpLimitsMaskBitfield get mask => _$this._mask;
  set mask(OpLimitsMaskBitfield mask) => _$this._mask = mask;

  double _maxDepth;
  double get maxDepth => _$this._maxDepth;
  set maxDepth(double maxDepth) => _$this._maxDepth = maxDepth;

  double _minAltitude;
  double get minAltitude => _$this._minAltitude;
  set minAltitude(double minAltitude) => _$this._minAltitude = minAltitude;

  double _maxAltitude;
  double get maxAltitude => _$this._maxAltitude;
  set maxAltitude(double maxAltitude) => _$this._maxAltitude = maxAltitude;

  double _minSpeed;
  double get minSpeed => _$this._minSpeed;
  set minSpeed(double minSpeed) => _$this._minSpeed = minSpeed;

  double _maxSpeed;
  double get maxSpeed => _$this._maxSpeed;
  set maxSpeed(double maxSpeed) => _$this._maxSpeed = maxSpeed;

  double _maxVrate;
  double get maxVrate => _$this._maxVrate;
  set maxVrate(double maxVrate) => _$this._maxVrate = maxVrate;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _orientation;
  double get orientation => _$this._orientation;
  set orientation(double orientation) => _$this._orientation = orientation;

  double _width;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  double _length;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  OperationalLimitsBuilder();

  OperationalLimitsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _mask = _$v.mask;
      _maxDepth = _$v.maxDepth;
      _minAltitude = _$v.minAltitude;
      _maxAltitude = _$v.maxAltitude;
      _minSpeed = _$v.minSpeed;
      _maxSpeed = _$v.maxSpeed;
      _maxVrate = _$v.maxVrate;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _orientation = _$v.orientation;
      _width = _$v.width;
      _length = _$v.length;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(OperationalLimits other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$OperationalLimits;
  }

  @override
  void update(void updates(OperationalLimitsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$OperationalLimits build() {
    final _$result = _$v ??
        new _$OperationalLimits._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            mask: mask ?? OpLimitsMaskBitfield(0),
            maxDepth: maxDepth ?? 0,
            minAltitude: minAltitude ?? 0,
            maxAltitude: maxAltitude ?? 0,
            minSpeed: minSpeed ?? 0,
            maxSpeed: maxSpeed ?? 0,
            maxVrate: maxVrate ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            orientation: orientation ?? 0,
            width: width ?? 0,
            length: length ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Get Operational Limits immutable class
///
class _$GetOperationalLimits extends GetOperationalLimits {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$GetOperationalLimits([void updates(GetOperationalLimitsBuilder b)]) =>
      (new GetOperationalLimitsBuilder()..update(updates)).build();

  _$GetOperationalLimits._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  GetOperationalLimits rebuild(void updates(GetOperationalLimitsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GetOperationalLimitsBuilder toBuilder() => new GetOperationalLimitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GetOperationalLimits &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GetOperationalLimits')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Get Operational Limits builder class
///
class GetOperationalLimitsBuilder implements Builder<GetOperationalLimits, GetOperationalLimitsBuilder>, ImcBuilderHeaderPart {
  _$GetOperationalLimits _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GetOperationalLimitsBuilder();

  GetOperationalLimitsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GetOperationalLimits other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GetOperationalLimits;
  }

  @override
  void update(void updates(GetOperationalLimitsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GetOperationalLimits build() {
    final _$result = _$v ??
        new _$GetOperationalLimits._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Calibration immutable class
///
class _$Calibration extends Calibration {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int duration;

  factory _$Calibration([void updates(CalibrationBuilder b)]) =>
      (new CalibrationBuilder()..update(updates)).build();

  _$Calibration._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.duration})
      : super._();

  @override
  Calibration rebuild(void updates(CalibrationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CalibrationBuilder toBuilder() => new CalibrationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Calibration &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        duration == this.duration;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        duration?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Calibration')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('duration', duration))
        .toString();
  }
}

/// Calibration builder class
///
class CalibrationBuilder implements Builder<Calibration, CalibrationBuilder>, ImcBuilderHeaderPart {
  _$Calibration _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  CalibrationBuilder();

  CalibrationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _duration = _$v.duration;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Calibration other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Calibration;
  }

  @override
  void update(void updates(CalibrationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Calibration build() {
    final _$result = _$v ??
        new _$Calibration._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            duration: duration ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Control Loops immutable class
///
class _$ControlLoops extends ControlLoops {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ControlLoopsEnumEnable enable;
  @override
  final CLoopsMaskBitfield mask;
  @override
  final int scopeRef;

  factory _$ControlLoops([void updates(ControlLoopsBuilder b)]) =>
      (new ControlLoopsBuilder()..update(updates)).build();

  _$ControlLoops._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.enable,
      this.mask,
      this.scopeRef})
      : super._();

  @override
  ControlLoops rebuild(void updates(ControlLoopsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ControlLoopsBuilder toBuilder() => new ControlLoopsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ControlLoops &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        enable == this.enable &&
        mask == this.mask &&
        scopeRef == this.scopeRef;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        enable?.hashCode), 
        mask?.hashCode), 
        scopeRef?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ControlLoops')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('enable', enable)
          ..add('mask', mask)
          ..add('scopeRef', scopeRef))
        .toString();
  }
}

/// Control Loops builder class
///
class ControlLoopsBuilder implements Builder<ControlLoops, ControlLoopsBuilder>, ImcBuilderHeaderPart {
  _$ControlLoops _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ControlLoopsEnumEnable _enable;
  ControlLoopsEnumEnable get enable => _$this._enable;
  set enable(ControlLoopsEnumEnable enable) => _$this._enable = enable;

  CLoopsMaskBitfield _mask;
  CLoopsMaskBitfield get mask => _$this._mask;
  set mask(CLoopsMaskBitfield mask) => _$this._mask = mask;

  int _scopeRef;
  int get scopeRef => _$this._scopeRef;
  set scopeRef(int scopeRef) => _$this._scopeRef = scopeRef;

  ControlLoopsBuilder();

  ControlLoopsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _enable = _$v.enable;
      _mask = _$v.mask;
      _scopeRef = _$v.scopeRef;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ControlLoops other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ControlLoops;
  }

  @override
  void update(void updates(ControlLoopsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ControlLoops build() {
    final _$result = _$v ??
        new _$ControlLoops._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            enable: enable ?? ControlLoopsEnumEnable(0),
            mask: mask ?? CLoopsMaskBitfield(0),
            scopeRef: scopeRef ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Medium immutable class
///
class _$VehicleMedium extends VehicleMedium {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VehicleMediumEnumMedium medium;

  factory _$VehicleMedium([void updates(VehicleMediumBuilder b)]) =>
      (new VehicleMediumBuilder()..update(updates)).build();

  _$VehicleMedium._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.medium})
      : super._();

  @override
  VehicleMedium rebuild(void updates(VehicleMediumBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleMediumBuilder toBuilder() => new VehicleMediumBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleMedium &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        medium == this.medium;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        medium?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleMedium')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('medium', medium))
        .toString();
  }
}

/// Vehicle Medium builder class
///
class VehicleMediumBuilder implements Builder<VehicleMedium, VehicleMediumBuilder>, ImcBuilderHeaderPart {
  _$VehicleMedium _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VehicleMediumEnumMedium _medium;
  VehicleMediumEnumMedium get medium => _$this._medium;
  set medium(VehicleMediumEnumMedium medium) => _$this._medium = medium;

  VehicleMediumBuilder();

  VehicleMediumBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _medium = _$v.medium;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleMedium other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleMedium;
  }

  @override
  void update(void updates(VehicleMediumBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleMedium build() {
    final _$result = _$v ??
        new _$VehicleMedium._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            medium: medium ?? VehicleMediumEnumMedium(0));
    replace(_$result);
    return _$result;
  }
}

/// Collision immutable class
///
class _$Collision extends Collision {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final CollisionBitfieldType type;

  factory _$Collision([void updates(CollisionBuilder b)]) =>
      (new CollisionBuilder()..update(updates)).build();

  _$Collision._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value,
      this.type})
      : super._();

  @override
  Collision rebuild(void updates(CollisionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CollisionBuilder toBuilder() => new CollisionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Collision &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value &&
        type == this.type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode), 
        type?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Collision')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value)
          ..add('type', type))
        .toString();
  }
}

/// Collision builder class
///
class CollisionBuilder implements Builder<Collision, CollisionBuilder>, ImcBuilderHeaderPart {
  _$Collision _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  CollisionBitfieldType _type;
  CollisionBitfieldType get type => _$this._type;
  set type(CollisionBitfieldType type) => _$this._type = type;

  CollisionBuilder();

  CollisionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Collision other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Collision;
  }

  @override
  void update(void updates(CollisionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Collision build() {
    final _$result = _$v ??
        new _$Collision._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0,
            type: type ?? CollisionBitfieldType(0));
    replace(_$result);
    return _$result;
  }
}

/// Formation Tracking State immutable class
///
class _$FormState extends FormState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double posSimErr;
  @override
  final double converg;
  @override
  final double turbulence;
  @override
  final FormStateEnumPosSimMon posSimMon;
  @override
  final FormStateEnumCommMon commMon;
  @override
  final FormStateEnumConvergMon convergMon;

  factory _$FormState([void updates(FormStateBuilder b)]) =>
      (new FormStateBuilder()..update(updates)).build();

  _$FormState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.posSimErr,
      this.converg,
      this.turbulence,
      this.posSimMon,
      this.commMon,
      this.convergMon})
      : super._();

  @override
  FormState rebuild(void updates(FormStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormStateBuilder toBuilder() => new FormStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        posSimErr == this.posSimErr &&
        converg == this.converg &&
        turbulence == this.turbulence &&
        posSimMon == this.posSimMon &&
        commMon == this.commMon &&
        convergMon == this.convergMon;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        posSimErr?.hashCode), 
        converg?.hashCode), 
        turbulence?.hashCode), 
        posSimMon?.hashCode), 
        commMon?.hashCode), 
        convergMon?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('posSimErr', posSimErr)
          ..add('converg', converg)
          ..add('turbulence', turbulence)
          ..add('posSimMon', posSimMon)
          ..add('commMon', commMon)
          ..add('convergMon', convergMon))
        .toString();
  }
}

/// Formation Tracking State builder class
///
class FormStateBuilder implements Builder<FormState, FormStateBuilder>, ImcBuilderHeaderPart {
  _$FormState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _posSimErr;
  double get posSimErr => _$this._posSimErr;
  set posSimErr(double posSimErr) => _$this._posSimErr = posSimErr;

  double _converg;
  double get converg => _$this._converg;
  set converg(double converg) => _$this._converg = converg;

  double _turbulence;
  double get turbulence => _$this._turbulence;
  set turbulence(double turbulence) => _$this._turbulence = turbulence;

  FormStateEnumPosSimMon _posSimMon;
  FormStateEnumPosSimMon get posSimMon => _$this._posSimMon;
  set posSimMon(FormStateEnumPosSimMon posSimMon) => _$this._posSimMon = posSimMon;

  FormStateEnumCommMon _commMon;
  FormStateEnumCommMon get commMon => _$this._commMon;
  set commMon(FormStateEnumCommMon commMon) => _$this._commMon = commMon;

  FormStateEnumConvergMon _convergMon;
  FormStateEnumConvergMon get convergMon => _$this._convergMon;
  set convergMon(FormStateEnumConvergMon convergMon) => _$this._convergMon = convergMon;

  FormStateBuilder();

  FormStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _posSimErr = _$v.posSimErr;
      _converg = _$v.converg;
      _turbulence = _$v.turbulence;
      _posSimMon = _$v.posSimMon;
      _commMon = _$v.commMon;
      _convergMon = _$v.convergMon;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormState;
  }

  @override
  void update(void updates(FormStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormState build() {
    final _$result = _$v ??
        new _$FormState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            posSimErr: posSimErr ?? 0,
            converg: converg ?? 0,
            turbulence: turbulence ?? 0,
            posSimMon: posSimMon ?? FormStateEnumPosSimMon(0),
            commMon: commMon ?? FormStateEnumCommMon(0),
            convergMon: convergMon ?? FormStateEnumConvergMon(0));
    replace(_$result);
    return _$result;
  }
}

/// Autopilot Mode immutable class
///
class _$AutopilotMode extends AutopilotMode {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final AutopilotModeEnumAutonomy autonomy;
  @override
  final String mode;

  factory _$AutopilotMode([void updates(AutopilotModeBuilder b)]) =>
      (new AutopilotModeBuilder()..update(updates)).build();

  _$AutopilotMode._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.autonomy,
      this.mode})
      : super._();

  @override
  AutopilotMode rebuild(void updates(AutopilotModeBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AutopilotModeBuilder toBuilder() => new AutopilotModeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AutopilotMode &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        autonomy == this.autonomy &&
        mode == this.mode;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        autonomy?.hashCode), 
        mode?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AutopilotMode')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('autonomy', autonomy)
          ..add('mode', mode))
        .toString();
  }
}

/// Autopilot Mode builder class
///
class AutopilotModeBuilder implements Builder<AutopilotMode, AutopilotModeBuilder>, ImcBuilderHeaderPart {
  _$AutopilotMode _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AutopilotModeEnumAutonomy _autonomy;
  AutopilotModeEnumAutonomy get autonomy => _$this._autonomy;
  set autonomy(AutopilotModeEnumAutonomy autonomy) => _$this._autonomy = autonomy;

  String _mode;
  String get mode => _$this._mode;
  set mode(String mode) => _$this._mode = mode;

  AutopilotModeBuilder();

  AutopilotModeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _autonomy = _$v.autonomy;
      _mode = _$v.mode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AutopilotMode other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$AutopilotMode;
  }

  @override
  void update(void updates(AutopilotModeBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$AutopilotMode build() {
    final _$result = _$v ??
        new _$AutopilotMode._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            autonomy: autonomy ?? AutopilotModeEnumAutonomy(0),
            mode: mode ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Formation Tracking State immutable class
///
class _$FormationState extends FormationState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final FormationStateEnumType type;
  @override
  final FormationStateEnumOp op;
  @override
  final double posSimErr;
  @override
  final double converg;
  @override
  final double turbulence;
  @override
  final FormationStateEnumPosSimMon posSimMon;
  @override
  final FormationStateEnumCommMon commMon;
  @override
  final FormationStateEnumConvergMon convergMon;

  factory _$FormationState([void updates(FormationStateBuilder b)]) =>
      (new FormationStateBuilder()..update(updates)).build();

  _$FormationState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.op,
      this.posSimErr,
      this.converg,
      this.turbulence,
      this.posSimMon,
      this.commMon,
      this.convergMon})
      : super._();

  @override
  FormationState rebuild(void updates(FormationStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationStateBuilder toBuilder() => new FormationStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        op == this.op &&
        posSimErr == this.posSimErr &&
        converg == this.converg &&
        turbulence == this.turbulence &&
        posSimMon == this.posSimMon &&
        commMon == this.commMon &&
        convergMon == this.convergMon;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode), 
        op?.hashCode), 
        posSimErr?.hashCode), 
        converg?.hashCode), 
        turbulence?.hashCode), 
        posSimMon?.hashCode), 
        commMon?.hashCode), 
        convergMon?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type)
          ..add('op', op)
          ..add('posSimErr', posSimErr)
          ..add('converg', converg)
          ..add('turbulence', turbulence)
          ..add('posSimMon', posSimMon)
          ..add('commMon', commMon)
          ..add('convergMon', convergMon))
        .toString();
  }
}

/// Formation Tracking State builder class
///
class FormationStateBuilder implements Builder<FormationState, FormationStateBuilder>, ImcBuilderHeaderPart {
  _$FormationState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  FormationStateEnumType _type;
  FormationStateEnumType get type => _$this._type;
  set type(FormationStateEnumType type) => _$this._type = type;

  FormationStateEnumOp _op;
  FormationStateEnumOp get op => _$this._op;
  set op(FormationStateEnumOp op) => _$this._op = op;

  double _posSimErr;
  double get posSimErr => _$this._posSimErr;
  set posSimErr(double posSimErr) => _$this._posSimErr = posSimErr;

  double _converg;
  double get converg => _$this._converg;
  set converg(double converg) => _$this._converg = converg;

  double _turbulence;
  double get turbulence => _$this._turbulence;
  set turbulence(double turbulence) => _$this._turbulence = turbulence;

  FormationStateEnumPosSimMon _posSimMon;
  FormationStateEnumPosSimMon get posSimMon => _$this._posSimMon;
  set posSimMon(FormationStateEnumPosSimMon posSimMon) => _$this._posSimMon = posSimMon;

  FormationStateEnumCommMon _commMon;
  FormationStateEnumCommMon get commMon => _$this._commMon;
  set commMon(FormationStateEnumCommMon commMon) => _$this._commMon = commMon;

  FormationStateEnumConvergMon _convergMon;
  FormationStateEnumConvergMon get convergMon => _$this._convergMon;
  set convergMon(FormationStateEnumConvergMon convergMon) => _$this._convergMon = convergMon;

  FormationStateBuilder();

  FormationStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _op = _$v.op;
      _posSimErr = _$v.posSimErr;
      _converg = _$v.converg;
      _turbulence = _$v.turbulence;
      _posSimMon = _$v.posSimMon;
      _commMon = _$v.commMon;
      _convergMon = _$v.convergMon;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormationState;
  }

  @override
  void update(void updates(FormationStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationState build() {
    final _$result = _$v ??
        new _$FormationState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? FormationStateEnumType(0),
            op: op ?? FormationStateEnumOp(0),
            posSimErr: posSimErr ?? 0,
            converg: converg ?? 0,
            turbulence: turbulence ?? 0,
            posSimMon: posSimMon ?? FormationStateEnumPosSimMon(0),
            commMon: commMon ?? FormationStateEnumCommMon(0),
            convergMon: convergMon ?? FormationStateEnumConvergMon(0));
    replace(_$result);
    return _$result;
  }
}

/// Report Control immutable class
///
class _$ReportControl extends ReportControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ReportControlEnumOp op;
  @override
  final ReportControlBitfieldCommInterface commInterface;
  @override
  final int period;
  @override
  final String sysDst;

  factory _$ReportControl([void updates(ReportControlBuilder b)]) =>
      (new ReportControlBuilder()..update(updates)).build();

  _$ReportControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.commInterface,
      this.period,
      this.sysDst})
      : super._();

  @override
  ReportControl rebuild(void updates(ReportControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ReportControlBuilder toBuilder() => new ReportControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ReportControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        commInterface == this.commInterface &&
        period == this.period &&
        sysDst == this.sysDst;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        commInterface?.hashCode), 
        period?.hashCode), 
        sysDst?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ReportControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('commInterface', commInterface)
          ..add('period', period)
          ..add('sysDst', sysDst))
        .toString();
  }
}

/// Report Control builder class
///
class ReportControlBuilder implements Builder<ReportControl, ReportControlBuilder>, ImcBuilderHeaderPart {
  _$ReportControl _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ReportControlEnumOp _op;
  ReportControlEnumOp get op => _$this._op;
  set op(ReportControlEnumOp op) => _$this._op = op;

  ReportControlBitfieldCommInterface _commInterface;
  ReportControlBitfieldCommInterface get commInterface => _$this._commInterface;
  set commInterface(ReportControlBitfieldCommInterface commInterface) => _$this._commInterface = commInterface;

  int _period;
  int get period => _$this._period;
  set period(int period) => _$this._period = period;

  String _sysDst;
  String get sysDst => _$this._sysDst;
  set sysDst(String sysDst) => _$this._sysDst = sysDst;

  ReportControlBuilder();

  ReportControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _commInterface = _$v.commInterface;
      _period = _$v.period;
      _sysDst = _$v.sysDst;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ReportControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ReportControl;
  }

  @override
  void update(void updates(ReportControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ReportControl build() {
    final _$result = _$v ??
        new _$ReportControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? ReportControlEnumOp(0),
            commInterface: commInterface ?? ReportControlBitfieldCommInterface(0),
            period: period ?? 0,
            sysDst: sysDst ?? '');
    replace(_$result);
    return _$result;
  }
}

/// State Report immutable class
///
class _$StateReport extends StateReport {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int stime;
  @override
  final double latitude;
  @override
  final double longitude;
  @override
  final int altitude;
  @override
  final int depth;
  @override
  final int heading;
  @override
  final int speed;
  @override
  final int fuel;
  @override
  final int execState;
  @override
  final int planChecksum;

  factory _$StateReport([void updates(StateReportBuilder b)]) =>
      (new StateReportBuilder()..update(updates)).build();

  _$StateReport._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.stime,
      this.latitude,
      this.longitude,
      this.altitude,
      this.depth,
      this.heading,
      this.speed,
      this.fuel,
      this.execState,
      this.planChecksum})
      : super._();

  @override
  StateReport rebuild(void updates(StateReportBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  StateReportBuilder toBuilder() => new StateReportBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StateReport &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        stime == this.stime &&
        latitude == this.latitude &&
        longitude == this.longitude &&
        altitude == this.altitude &&
        depth == this.depth &&
        heading == this.heading &&
        speed == this.speed &&
        fuel == this.fuel &&
        execState == this.execState &&
        planChecksum == this.planChecksum;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        stime?.hashCode), 
        latitude?.hashCode), 
        longitude?.hashCode), 
        altitude?.hashCode), 
        depth?.hashCode), 
        heading?.hashCode), 
        speed?.hashCode), 
        fuel?.hashCode), 
        execState?.hashCode), 
        planChecksum?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StateReport')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('stime', stime)
          ..add('latitude', latitude)
          ..add('longitude', longitude)
          ..add('altitude', altitude)
          ..add('depth', depth)
          ..add('heading', heading)
          ..add('speed', speed)
          ..add('fuel', fuel)
          ..add('execState', execState)
          ..add('planChecksum', planChecksum))
        .toString();
  }
}

/// State Report builder class
///
class StateReportBuilder implements Builder<StateReport, StateReportBuilder>, ImcBuilderHeaderPart {
  _$StateReport _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _stime;
  int get stime => _$this._stime;
  set stime(int stime) => _$this._stime = stime;

  double _latitude;
  double get latitude => _$this._latitude;
  set latitude(double latitude) => _$this._latitude = latitude;

  double _longitude;
  double get longitude => _$this._longitude;
  set longitude(double longitude) => _$this._longitude = longitude;

  int _altitude;
  int get altitude => _$this._altitude;
  set altitude(int altitude) => _$this._altitude = altitude;

  int _depth;
  int get depth => _$this._depth;
  set depth(int depth) => _$this._depth = depth;

  int _heading;
  int get heading => _$this._heading;
  set heading(int heading) => _$this._heading = heading;

  int _speed;
  int get speed => _$this._speed;
  set speed(int speed) => _$this._speed = speed;

  int _fuel;
  int get fuel => _$this._fuel;
  set fuel(int fuel) => _$this._fuel = fuel;

  int _execState;
  int get execState => _$this._execState;
  set execState(int execState) => _$this._execState = execState;

  int _planChecksum;
  int get planChecksum => _$this._planChecksum;
  set planChecksum(int planChecksum) => _$this._planChecksum = planChecksum;

  StateReportBuilder();

  StateReportBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _stime = _$v.stime;
      _latitude = _$v.latitude;
      _longitude = _$v.longitude;
      _altitude = _$v.altitude;
      _depth = _$v.depth;
      _heading = _$v.heading;
      _speed = _$v.speed;
      _fuel = _$v.fuel;
      _execState = _$v.execState;
      _planChecksum = _$v.planChecksum;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StateReport other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$StateReport;
  }

  @override
  void update(void updates(StateReportBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$StateReport build() {
    final _$result = _$v ??
        new _$StateReport._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            stime: stime ?? 0,
            latitude: latitude ?? 0,
            longitude: longitude ?? 0,
            altitude: altitude ?? 0,
            depth: depth ?? 0,
            heading: heading ?? 0,
            speed: speed ?? 0,
            fuel: fuel ?? 0,
            execState: execState ?? 0,
            planChecksum: planChecksum ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Transmission Request immutable class
///
class _$TransmissionRequest extends TransmissionRequest {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final TransmissionRequestEnumCommMean commMean;
  @override
  final String destination;
  @override
  final double deadline;
  @override
  final TransmissionRequestEnumDataMode dataMode;
  @override
  final ImcMessage msgData;
  @override
  final String txtData;
  @override
  final List<int> rawData;

  factory _$TransmissionRequest([void updates(TransmissionRequestBuilder b)]) =>
      (new TransmissionRequestBuilder()..update(updates)).build();

  _$TransmissionRequest._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.reqId,
      this.commMean,
      this.destination,
      this.deadline,
      this.dataMode,
      this.msgData,
      this.txtData,
      this.rawData})
      : super._();

  @override
  TransmissionRequest rebuild(void updates(TransmissionRequestBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TransmissionRequestBuilder toBuilder() => new TransmissionRequestBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TransmissionRequest &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == this.reqId &&
        commMean == this.commMean &&
        destination == this.destination &&
        deadline == this.deadline &&
        dataMode == this.dataMode &&
        msgData == this.msgData &&
        txtData == this.txtData &&
        rawData == this.rawData;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        reqId?.hashCode), 
        commMean?.hashCode), 
        destination?.hashCode), 
        deadline?.hashCode), 
        dataMode?.hashCode), 
        msgData?.hashCode), 
        txtData?.hashCode), 
        rawData?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TransmissionRequest')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', reqId)
          ..add('commMean', commMean)
          ..add('destination', destination)
          ..add('deadline', deadline)
          ..add('dataMode', dataMode)
          ..add('msgData', msgData)
          ..add('txtData', txtData)
          ..add('rawData', rawData))
        .toString();
  }
}

/// Transmission Request builder class
///
class TransmissionRequestBuilder implements Builder<TransmissionRequest, TransmissionRequestBuilder>, ImcBuilderHeaderPart {
  _$TransmissionRequest _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  TransmissionRequestEnumCommMean _commMean;
  TransmissionRequestEnumCommMean get commMean => _$this._commMean;
  set commMean(TransmissionRequestEnumCommMean commMean) => _$this._commMean = commMean;

  String _destination;
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  double _deadline;
  double get deadline => _$this._deadline;
  set deadline(double deadline) => _$this._deadline = deadline;

  TransmissionRequestEnumDataMode _dataMode;
  TransmissionRequestEnumDataMode get dataMode => _$this._dataMode;
  set dataMode(TransmissionRequestEnumDataMode dataMode) => _$this._dataMode = dataMode;

  ImcMessage _msgData;
  ImcMessage get msgData => _$this._msgData;
  set msgData(ImcMessage msgData) => _$this._msgData = msgData;

  String _txtData;
  String get txtData => _$this._txtData;
  set txtData(String txtData) => _$this._txtData = txtData;

  List<int> _rawData;
  List<int> get rawData => _$this._rawData;
  set rawData(List<int> rawData) => _$this._rawData = rawData;

  TransmissionRequestBuilder();

  TransmissionRequestBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _commMean = _$v.commMean;
      _destination = _$v.destination;
      _deadline = _$v.deadline;
      _dataMode = _$v.dataMode;
      _msgData = _$v.msgData;
      _txtData = _$v.txtData;
      _rawData = _$v.rawData;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TransmissionRequest other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TransmissionRequest;
  }

  @override
  void update(void updates(TransmissionRequestBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TransmissionRequest build() {
    final _$result = _$v ??
        new _$TransmissionRequest._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            commMean: commMean ?? TransmissionRequestEnumCommMean(0),
            destination: destination ?? '',
            deadline: deadline ?? 0,
            dataMode: dataMode ?? TransmissionRequestEnumDataMode(0),
            msgData: msgData,
            txtData: txtData ?? '',
            rawData: rawData ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// Transmission Status immutable class
///
class _$TransmissionStatus extends TransmissionStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final TransmissionStatusEnumStatus status;
  @override
  final String info;

  factory _$TransmissionStatus([void updates(TransmissionStatusBuilder b)]) =>
      (new TransmissionStatusBuilder()..update(updates)).build();

  _$TransmissionStatus._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.reqId,
      this.status,
      this.info})
      : super._();

  @override
  TransmissionStatus rebuild(void updates(TransmissionStatusBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TransmissionStatusBuilder toBuilder() => new TransmissionStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TransmissionStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == this.reqId &&
        status == this.status &&
        info == this.info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        reqId?.hashCode), 
        status?.hashCode), 
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TransmissionStatus')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', reqId)
          ..add('status', status)
          ..add('info', info))
        .toString();
  }
}

/// Transmission Status builder class
///
class TransmissionStatusBuilder implements Builder<TransmissionStatus, TransmissionStatusBuilder>, ImcBuilderHeaderPart {
  _$TransmissionStatus _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  TransmissionStatusEnumStatus _status;
  TransmissionStatusEnumStatus get status => _$this._status;
  set status(TransmissionStatusEnumStatus status) => _$this._status = status;

  String _info;
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  TransmissionStatusBuilder();

  TransmissionStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _status = _$v.status;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TransmissionStatus other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TransmissionStatus;
  }

  @override
  void update(void updates(TransmissionStatusBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TransmissionStatus build() {
    final _$result = _$v ??
        new _$TransmissionStatus._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            status: status ?? TransmissionStatusEnumStatus(0),
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// SMS Transmission Request immutable class
///
class _$SmsRequest extends SmsRequest {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final String destination;
  @override
  final double timeout;
  @override
  final String smsText;

  factory _$SmsRequest([void updates(SmsRequestBuilder b)]) =>
      (new SmsRequestBuilder()..update(updates)).build();

  _$SmsRequest._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.reqId,
      this.destination,
      this.timeout,
      this.smsText})
      : super._();

  @override
  SmsRequest rebuild(void updates(SmsRequestBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsRequestBuilder toBuilder() => new SmsRequestBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsRequest &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == this.reqId &&
        destination == this.destination &&
        timeout == this.timeout &&
        smsText == this.smsText;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        reqId?.hashCode), 
        destination?.hashCode), 
        timeout?.hashCode), 
        smsText?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsRequest')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', reqId)
          ..add('destination', destination)
          ..add('timeout', timeout)
          ..add('smsText', smsText))
        .toString();
  }
}

/// SMS Transmission Request builder class
///
class SmsRequestBuilder implements Builder<SmsRequest, SmsRequestBuilder>, ImcBuilderHeaderPart {
  _$SmsRequest _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  String _destination;
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  double _timeout;
  double get timeout => _$this._timeout;
  set timeout(double timeout) => _$this._timeout = timeout;

  String _smsText;
  String get smsText => _$this._smsText;
  set smsText(String smsText) => _$this._smsText = smsText;

  SmsRequestBuilder();

  SmsRequestBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _destination = _$v.destination;
      _timeout = _$v.timeout;
      _smsText = _$v.smsText;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsRequest other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SmsRequest;
  }

  @override
  void update(void updates(SmsRequestBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsRequest build() {
    final _$result = _$v ??
        new _$SmsRequest._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            destination: destination ?? '',
            timeout: timeout ?? 0,
            smsText: smsText ?? '');
    replace(_$result);
    return _$result;
  }
}

/// SMS Transmission Status immutable class
///
class _$SmsStatus extends SmsStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final SmsStatusEnumStatus status;
  @override
  final String info;

  factory _$SmsStatus([void updates(SmsStatusBuilder b)]) =>
      (new SmsStatusBuilder()..update(updates)).build();

  _$SmsStatus._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.reqId,
      this.status,
      this.info})
      : super._();

  @override
  SmsStatus rebuild(void updates(SmsStatusBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsStatusBuilder toBuilder() => new SmsStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == this.reqId &&
        status == this.status &&
        info == this.info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        reqId?.hashCode), 
        status?.hashCode), 
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsStatus')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', reqId)
          ..add('status', status)
          ..add('info', info))
        .toString();
  }
}

/// SMS Transmission Status builder class
///
class SmsStatusBuilder implements Builder<SmsStatus, SmsStatusBuilder>, ImcBuilderHeaderPart {
  _$SmsStatus _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  SmsStatusEnumStatus _status;
  SmsStatusEnumStatus get status => _$this._status;
  set status(SmsStatusEnumStatus status) => _$this._status = status;

  String _info;
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  SmsStatusBuilder();

  SmsStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _status = _$v.status;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsStatus other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SmsStatus;
  }

  @override
  void update(void updates(SmsStatusBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsStatus build() {
    final _$result = _$v ??
        new _$SmsStatus._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            status: status ?? SmsStatusEnumStatus(0),
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// VTOL State immutable class
///
class _$VtolState extends VtolState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VtolStateEnumState state;

  factory _$VtolState([void updates(VtolStateBuilder b)]) =>
      (new VtolStateBuilder()..update(updates)).build();

  _$VtolState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state})
      : super._();

  @override
  VtolState rebuild(void updates(VtolStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VtolStateBuilder toBuilder() => new VtolStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VtolState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        state?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VtolState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', state))
        .toString();
  }
}

/// VTOL State builder class
///
class VtolStateBuilder implements Builder<VtolState, VtolStateBuilder>, ImcBuilderHeaderPart {
  _$VtolState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VtolStateEnumState _state;
  VtolStateEnumState get state => _$this._state;
  set state(VtolStateEnumState state) => _$this._state = state;

  VtolStateBuilder();

  VtolStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VtolState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VtolState;
  }

  @override
  void update(void updates(VtolStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VtolState build() {
    final _$result = _$v ??
        new _$VtolState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? VtolStateEnumState(0));
    replace(_$result);
    return _$result;
  }
}

/// Arming State immutable class
///
class _$ArmingState extends ArmingState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ArmingStateEnumState state;

  factory _$ArmingState([void updates(ArmingStateBuilder b)]) =>
      (new ArmingStateBuilder()..update(updates)).build();

  _$ArmingState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state})
      : super._();

  @override
  ArmingState rebuild(void updates(ArmingStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ArmingStateBuilder toBuilder() => new ArmingStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ArmingState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        state?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ArmingState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', state))
        .toString();
  }
}

/// Arming State builder class
///
class ArmingStateBuilder implements Builder<ArmingState, ArmingStateBuilder>, ImcBuilderHeaderPart {
  _$ArmingState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ArmingStateEnumState _state;
  ArmingStateEnumState get state => _$this._state;
  set state(ArmingStateEnumState state) => _$this._state = state;

  ArmingStateBuilder();

  ArmingStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ArmingState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ArmingState;
  }

  @override
  void update(void updates(ArmingStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ArmingState build() {
    final _$result = _$v ??
        new _$ArmingState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? ArmingStateEnumState(0));
    replace(_$result);
    return _$result;
  }
}

/// Abort immutable class
///
class _$Abort extends Abort {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$Abort([void updates(AbortBuilder b)]) =>
      (new AbortBuilder()..update(updates)).build();

  _$Abort._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  Abort rebuild(void updates(AbortBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AbortBuilder toBuilder() => new AbortBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Abort &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Abort')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Abort builder class
///
class AbortBuilder implements Builder<Abort, AbortBuilder>, ImcBuilderHeaderPart {
  _$Abort _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AbortBuilder();

  AbortBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Abort other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Abort;
  }

  @override
  void update(void updates(AbortBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Abort build() {
    final _$result = _$v ??
        new _$Abort._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Plan Specification immutable class
///
class _$PlanSpecification extends PlanSpecification {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String planId;
  @override
  final String description;
  @override
  final String vnamespace;
  @override
  final List<PlanVariable> variables;
  @override
  final String startManId;
  @override
  final List<PlanManeuver> maneuvers;
  @override
  final List<PlanTransition> transitions;
  @override
  final List<ImcMessage> startActions;
  @override
  final List<ImcMessage> endActions;

  factory _$PlanSpecification([void updates(PlanSpecificationBuilder b)]) =>
      (new PlanSpecificationBuilder()..update(updates)).build();

  _$PlanSpecification._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.planId,
      this.description,
      this.vnamespace,
      this.variables,
      this.startManId,
      this.maneuvers,
      this.transitions,
      this.startActions,
      this.endActions})
      : super._();

  @override
  PlanSpecification rebuild(void updates(PlanSpecificationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanSpecificationBuilder toBuilder() => new PlanSpecificationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanSpecification &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        planId == this.planId &&
        description == this.description &&
        vnamespace == this.vnamespace &&
        variables == this.variables &&
        startManId == this.startManId &&
        maneuvers == this.maneuvers &&
        transitions == this.transitions &&
        startActions == this.startActions &&
        endActions == this.endActions;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        planId?.hashCode), 
        description?.hashCode), 
        vnamespace?.hashCode), 
        variables?.hashCode), 
        startManId?.hashCode), 
        maneuvers?.hashCode), 
        transitions?.hashCode), 
        startActions?.hashCode), 
        endActions?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanSpecification')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('planId', planId)
          ..add('description', description)
          ..add('vnamespace', vnamespace)
          ..add('variables', variables)
          ..add('startManId', startManId)
          ..add('maneuvers', maneuvers)
          ..add('transitions', transitions)
          ..add('startActions', startActions)
          ..add('endActions', endActions))
        .toString();
  }
}

/// Plan Specification builder class
///
class PlanSpecificationBuilder implements Builder<PlanSpecification, PlanSpecificationBuilder>, ImcBuilderHeaderPart {
  _$PlanSpecification _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _planId;
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  String _description;
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  String _vnamespace;
  String get vnamespace => _$this._vnamespace;
  set vnamespace(String vnamespace) => _$this._vnamespace = vnamespace;

  List<PlanVariable> _variables;
  List<PlanVariable> get variables => _$this._variables;
  set variables(List<PlanVariable> variables) => _$this._variables = variables;

  String _startManId;
  String get startManId => _$this._startManId;
  set startManId(String startManId) => _$this._startManId = startManId;

  List<PlanManeuver> _maneuvers;
  List<PlanManeuver> get maneuvers => _$this._maneuvers;
  set maneuvers(List<PlanManeuver> maneuvers) => _$this._maneuvers = maneuvers;

  List<PlanTransition> _transitions;
  List<PlanTransition> get transitions => _$this._transitions;
  set transitions(List<PlanTransition> transitions) => _$this._transitions = transitions;

  List<ImcMessage> _startActions;
  List<ImcMessage> get startActions => _$this._startActions;
  set startActions(List<ImcMessage> startActions) => _$this._startActions = startActions;

  List<ImcMessage> _endActions;
  List<ImcMessage> get endActions => _$this._endActions;
  set endActions(List<ImcMessage> endActions) => _$this._endActions = endActions;

  PlanSpecificationBuilder();

  PlanSpecificationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _planId = _$v.planId;
      _description = _$v.description;
      _vnamespace = _$v.vnamespace;
      _variables = _$v.variables;
      _startManId = _$v.startManId;
      _maneuvers = _$v.maneuvers;
      _transitions = _$v.transitions;
      _startActions = _$v.startActions;
      _endActions = _$v.endActions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanSpecification other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanSpecification;
  }

  @override
  void update(void updates(PlanSpecificationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanSpecification build() {
    final _$result = _$v ??
        new _$PlanSpecification._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            planId: planId ?? '',
            description: description ?? '',
            vnamespace: vnamespace ?? '',
            variables: variables ?? List<PlanVariable>(0),
            startManId: startManId ?? '',
            maneuvers: maneuvers ?? List<PlanManeuver>(0),
            transitions: transitions ?? List<PlanTransition>(0),
            startActions: startActions ?? List<ImcMessage>(0),
            endActions: endActions ?? List<ImcMessage>(0));
    replace(_$result);
    return _$result;
  }
}

/// Plan Maneuver immutable class
///
class _$PlanManeuver extends PlanManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String maneuverId;
  @override
  final Maneuver data;
  @override
  final List<ImcMessage> startActions;
  @override
  final List<ImcMessage> endActions;

  factory _$PlanManeuver([void updates(PlanManeuverBuilder b)]) =>
      (new PlanManeuverBuilder()..update(updates)).build();

  _$PlanManeuver._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.maneuverId,
      this.data,
      this.startActions,
      this.endActions})
      : super._();

  @override
  PlanManeuver rebuild(void updates(PlanManeuverBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanManeuverBuilder toBuilder() => new PlanManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        maneuverId == this.maneuverId &&
        data == this.data &&
        startActions == this.startActions &&
        endActions == this.endActions;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        maneuverId?.hashCode), 
        data?.hashCode), 
        startActions?.hashCode), 
        endActions?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanManeuver')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('maneuverId', maneuverId)
          ..add('data', data)
          ..add('startActions', startActions)
          ..add('endActions', endActions))
        .toString();
  }
}

/// Plan Maneuver builder class
///
class PlanManeuverBuilder implements Builder<PlanManeuver, PlanManeuverBuilder>, ImcBuilderHeaderPart {
  _$PlanManeuver _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _maneuverId;
  String get maneuverId => _$this._maneuverId;
  set maneuverId(String maneuverId) => _$this._maneuverId = maneuverId;

  Maneuver _data;
  Maneuver get data => _$this._data;
  set data(Maneuver data) => _$this._data = data;

  List<ImcMessage> _startActions;
  List<ImcMessage> get startActions => _$this._startActions;
  set startActions(List<ImcMessage> startActions) => _$this._startActions = startActions;

  List<ImcMessage> _endActions;
  List<ImcMessage> get endActions => _$this._endActions;
  set endActions(List<ImcMessage> endActions) => _$this._endActions = endActions;

  PlanManeuverBuilder();

  PlanManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _maneuverId = _$v.maneuverId;
      _data = _$v.data;
      _startActions = _$v.startActions;
      _endActions = _$v.endActions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanManeuver other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanManeuver;
  }

  @override
  void update(void updates(PlanManeuverBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanManeuver build() {
    final _$result = _$v ??
        new _$PlanManeuver._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            maneuverId: maneuverId ?? '',
            data: data,
            startActions: startActions ?? List<ImcMessage>(0),
            endActions: endActions ?? List<ImcMessage>(0));
    replace(_$result);
    return _$result;
  }
}

/// Plan Transition immutable class
///
class _$PlanTransition extends PlanTransition {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String sourceMan;
  @override
  final String destMan;
  @override
  final String conditions;
  @override
  final List<ImcMessage> actions;

  factory _$PlanTransition([void updates(PlanTransitionBuilder b)]) =>
      (new PlanTransitionBuilder()..update(updates)).build();

  _$PlanTransition._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sourceMan,
      this.destMan,
      this.conditions,
      this.actions})
      : super._();

  @override
  PlanTransition rebuild(void updates(PlanTransitionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanTransitionBuilder toBuilder() => new PlanTransitionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanTransition &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sourceMan == this.sourceMan &&
        destMan == this.destMan &&
        conditions == this.conditions &&
        actions == this.actions;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        sourceMan?.hashCode), 
        destMan?.hashCode), 
        conditions?.hashCode), 
        actions?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanTransition')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sourceMan', sourceMan)
          ..add('destMan', destMan)
          ..add('conditions', conditions)
          ..add('actions', actions))
        .toString();
  }
}

/// Plan Transition builder class
///
class PlanTransitionBuilder implements Builder<PlanTransition, PlanTransitionBuilder>, ImcBuilderHeaderPart {
  _$PlanTransition _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _sourceMan;
  String get sourceMan => _$this._sourceMan;
  set sourceMan(String sourceMan) => _$this._sourceMan = sourceMan;

  String _destMan;
  String get destMan => _$this._destMan;
  set destMan(String destMan) => _$this._destMan = destMan;

  String _conditions;
  String get conditions => _$this._conditions;
  set conditions(String conditions) => _$this._conditions = conditions;

  List<ImcMessage> _actions;
  List<ImcMessage> get actions => _$this._actions;
  set actions(List<ImcMessage> actions) => _$this._actions = actions;

  PlanTransitionBuilder();

  PlanTransitionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sourceMan = _$v.sourceMan;
      _destMan = _$v.destMan;
      _conditions = _$v.conditions;
      _actions = _$v.actions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanTransition other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanTransition;
  }

  @override
  void update(void updates(PlanTransitionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanTransition build() {
    final _$result = _$v ??
        new _$PlanTransition._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sourceMan: sourceMan ?? '',
            destMan: destMan ?? '',
            conditions: conditions ?? '',
            actions: actions ?? List<ImcMessage>(0));
    replace(_$result);
    return _$result;
  }
}

/// Emergency Control immutable class
///
class _$EmergencyControl extends EmergencyControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EmergencyControlEnumCommand command;
  @override
  final PlanSpecification plan;

  factory _$EmergencyControl([void updates(EmergencyControlBuilder b)]) =>
      (new EmergencyControlBuilder()..update(updates)).build();

  _$EmergencyControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.command,
      this.plan})
      : super._();

  @override
  EmergencyControl rebuild(void updates(EmergencyControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EmergencyControlBuilder toBuilder() => new EmergencyControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EmergencyControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        command == this.command &&
        plan == this.plan;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        command?.hashCode), 
        plan?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EmergencyControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('command', command)
          ..add('plan', plan))
        .toString();
  }
}

/// Emergency Control builder class
///
class EmergencyControlBuilder implements Builder<EmergencyControl, EmergencyControlBuilder>, ImcBuilderHeaderPart {
  _$EmergencyControl _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EmergencyControlEnumCommand _command;
  EmergencyControlEnumCommand get command => _$this._command;
  set command(EmergencyControlEnumCommand command) => _$this._command = command;

  PlanSpecification _plan;
  PlanSpecification get plan => _$this._plan;
  set plan(PlanSpecification plan) => _$this._plan = plan;

  EmergencyControlBuilder();

  EmergencyControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _command = _$v.command;
      _plan = _$v.plan;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EmergencyControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EmergencyControl;
  }

  @override
  void update(void updates(EmergencyControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EmergencyControl build() {
    final _$result = _$v ??
        new _$EmergencyControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            command: command ?? EmergencyControlEnumCommand(0),
            plan: plan);
    replace(_$result);
    return _$result;
  }
}

/// Emergency Control State immutable class
///
class _$EmergencyControlState extends EmergencyControlState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EmergencyControlStateEnumState state;
  @override
  final String planId;
  @override
  final int commLevel;

  factory _$EmergencyControlState([void updates(EmergencyControlStateBuilder b)]) =>
      (new EmergencyControlStateBuilder()..update(updates)).build();

  _$EmergencyControlState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state,
      this.planId,
      this.commLevel})
      : super._();

  @override
  EmergencyControlState rebuild(void updates(EmergencyControlStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EmergencyControlStateBuilder toBuilder() => new EmergencyControlStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EmergencyControlState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state &&
        planId == this.planId &&
        commLevel == this.commLevel;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        state?.hashCode), 
        planId?.hashCode), 
        commLevel?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EmergencyControlState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', state)
          ..add('planId', planId)
          ..add('commLevel', commLevel))
        .toString();
  }
}

/// Emergency Control State builder class
///
class EmergencyControlStateBuilder implements Builder<EmergencyControlState, EmergencyControlStateBuilder>, ImcBuilderHeaderPart {
  _$EmergencyControlState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EmergencyControlStateEnumState _state;
  EmergencyControlStateEnumState get state => _$this._state;
  set state(EmergencyControlStateEnumState state) => _$this._state = state;

  String _planId;
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  int _commLevel;
  int get commLevel => _$this._commLevel;
  set commLevel(int commLevel) => _$this._commLevel = commLevel;

  EmergencyControlStateBuilder();

  EmergencyControlStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _planId = _$v.planId;
      _commLevel = _$v.commLevel;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EmergencyControlState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EmergencyControlState;
  }

  @override
  void update(void updates(EmergencyControlStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EmergencyControlState build() {
    final _$result = _$v ??
        new _$EmergencyControlState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? EmergencyControlStateEnumState(0),
            planId: planId ?? '',
            commLevel: commLevel ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Plan DB immutable class
///
class _$PlanDB extends PlanDB {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PlanDBEnumType type;
  @override
  final PlanDBEnumOp op;
  @override
  final int requestId;
  @override
  final String planId;
  @override
  final ImcMessage arg;
  @override
  final String info;

  factory _$PlanDB([void updates(PlanDBBuilder b)]) =>
      (new PlanDBBuilder()..update(updates)).build();

  _$PlanDB._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.op,
      this.requestId,
      this.planId,
      this.arg,
      this.info})
      : super._();

  @override
  PlanDB rebuild(void updates(PlanDBBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanDBBuilder toBuilder() => new PlanDBBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanDB &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        op == this.op &&
        requestId == this.requestId &&
        planId == this.planId &&
        arg == this.arg &&
        info == this.info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode), 
        op?.hashCode), 
        requestId?.hashCode), 
        planId?.hashCode), 
        arg?.hashCode), 
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanDB')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type)
          ..add('op', op)
          ..add('requestId', requestId)
          ..add('planId', planId)
          ..add('arg', arg)
          ..add('info', info))
        .toString();
  }
}

/// Plan DB builder class
///
class PlanDBBuilder implements Builder<PlanDB, PlanDBBuilder>, ImcBuilderHeaderPart {
  _$PlanDB _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PlanDBEnumType _type;
  PlanDBEnumType get type => _$this._type;
  set type(PlanDBEnumType type) => _$this._type = type;

  PlanDBEnumOp _op;
  PlanDBEnumOp get op => _$this._op;
  set op(PlanDBEnumOp op) => _$this._op = op;

  int _requestId;
  int get requestId => _$this._requestId;
  set requestId(int requestId) => _$this._requestId = requestId;

  String _planId;
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  ImcMessage _arg;
  ImcMessage get arg => _$this._arg;
  set arg(ImcMessage arg) => _$this._arg = arg;

  String _info;
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  PlanDBBuilder();

  PlanDBBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _op = _$v.op;
      _requestId = _$v.requestId;
      _planId = _$v.planId;
      _arg = _$v.arg;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanDB other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanDB;
  }

  @override
  void update(void updates(PlanDBBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanDB build() {
    final _$result = _$v ??
        new _$PlanDB._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? PlanDBEnumType(0),
            op: op ?? PlanDBEnumOp(0),
            requestId: requestId ?? 0,
            planId: planId ?? '',
            arg: arg,
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Plan DB State immutable class
///
class _$PlanDBState extends PlanDBState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int planCount;
  @override
  final int planSize;
  @override
  final double changeTime;
  @override
  final int changeSid;
  @override
  final String changeSname;
  @override
  final List<int> md5;
  @override
  final List<PlanDBInformation> plansInfo;

  factory _$PlanDBState([void updates(PlanDBStateBuilder b)]) =>
      (new PlanDBStateBuilder()..update(updates)).build();

  _$PlanDBState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.planCount,
      this.planSize,
      this.changeTime,
      this.changeSid,
      this.changeSname,
      this.md5,
      this.plansInfo})
      : super._();

  @override
  PlanDBState rebuild(void updates(PlanDBStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanDBStateBuilder toBuilder() => new PlanDBStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanDBState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        planCount == this.planCount &&
        planSize == this.planSize &&
        changeTime == this.changeTime &&
        changeSid == this.changeSid &&
        changeSname == this.changeSname &&
        md5 == this.md5 &&
        plansInfo == this.plansInfo;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        planCount?.hashCode), 
        planSize?.hashCode), 
        changeTime?.hashCode), 
        changeSid?.hashCode), 
        changeSname?.hashCode), 
        md5?.hashCode), 
        plansInfo?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanDBState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('planCount', planCount)
          ..add('planSize', planSize)
          ..add('changeTime', changeTime)
          ..add('changeSid', changeSid)
          ..add('changeSname', changeSname)
          ..add('md5', md5)
          ..add('plansInfo', plansInfo))
        .toString();
  }
}

/// Plan DB State builder class
///
class PlanDBStateBuilder implements Builder<PlanDBState, PlanDBStateBuilder>, ImcBuilderHeaderPart {
  _$PlanDBState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _planCount;
  int get planCount => _$this._planCount;
  set planCount(int planCount) => _$this._planCount = planCount;

  int _planSize;
  int get planSize => _$this._planSize;
  set planSize(int planSize) => _$this._planSize = planSize;

  double _changeTime;
  double get changeTime => _$this._changeTime;
  set changeTime(double changeTime) => _$this._changeTime = changeTime;

  int _changeSid;
  int get changeSid => _$this._changeSid;
  set changeSid(int changeSid) => _$this._changeSid = changeSid;

  String _changeSname;
  String get changeSname => _$this._changeSname;
  set changeSname(String changeSname) => _$this._changeSname = changeSname;

  List<int> _md5;
  List<int> get md5 => _$this._md5;
  set md5(List<int> md5) => _$this._md5 = md5;

  List<PlanDBInformation> _plansInfo;
  List<PlanDBInformation> get plansInfo => _$this._plansInfo;
  set plansInfo(List<PlanDBInformation> plansInfo) => _$this._plansInfo = plansInfo;

  PlanDBStateBuilder();

  PlanDBStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _planCount = _$v.planCount;
      _planSize = _$v.planSize;
      _changeTime = _$v.changeTime;
      _changeSid = _$v.changeSid;
      _changeSname = _$v.changeSname;
      _md5 = _$v.md5;
      _plansInfo = _$v.plansInfo;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanDBState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanDBState;
  }

  @override
  void update(void updates(PlanDBStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanDBState build() {
    final _$result = _$v ??
        new _$PlanDBState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            planCount: planCount ?? 0,
            planSize: planSize ?? 0,
            changeTime: changeTime ?? 0,
            changeSid: changeSid ?? 0,
            changeSname: changeSname ?? '',
            md5: md5 ?? List<int>(0),
            plansInfo: plansInfo ?? List<PlanDBInformation>(0));
    replace(_$result);
    return _$result;
  }
}

/// Plan DB Information immutable class
///
class _$PlanDBInformation extends PlanDBInformation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String planId;
  @override
  final int planSize;
  @override
  final double changeTime;
  @override
  final int changeSid;
  @override
  final String changeSname;
  @override
  final List<int> md5;

  factory _$PlanDBInformation([void updates(PlanDBInformationBuilder b)]) =>
      (new PlanDBInformationBuilder()..update(updates)).build();

  _$PlanDBInformation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.planId,
      this.planSize,
      this.changeTime,
      this.changeSid,
      this.changeSname,
      this.md5})
      : super._();

  @override
  PlanDBInformation rebuild(void updates(PlanDBInformationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanDBInformationBuilder toBuilder() => new PlanDBInformationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanDBInformation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        planId == this.planId &&
        planSize == this.planSize &&
        changeTime == this.changeTime &&
        changeSid == this.changeSid &&
        changeSname == this.changeSname &&
        md5 == this.md5;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        planId?.hashCode), 
        planSize?.hashCode), 
        changeTime?.hashCode), 
        changeSid?.hashCode), 
        changeSname?.hashCode), 
        md5?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanDBInformation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('planId', planId)
          ..add('planSize', planSize)
          ..add('changeTime', changeTime)
          ..add('changeSid', changeSid)
          ..add('changeSname', changeSname)
          ..add('md5', md5))
        .toString();
  }
}

/// Plan DB Information builder class
///
class PlanDBInformationBuilder implements Builder<PlanDBInformation, PlanDBInformationBuilder>, ImcBuilderHeaderPart {
  _$PlanDBInformation _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _planId;
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  int _planSize;
  int get planSize => _$this._planSize;
  set planSize(int planSize) => _$this._planSize = planSize;

  double _changeTime;
  double get changeTime => _$this._changeTime;
  set changeTime(double changeTime) => _$this._changeTime = changeTime;

  int _changeSid;
  int get changeSid => _$this._changeSid;
  set changeSid(int changeSid) => _$this._changeSid = changeSid;

  String _changeSname;
  String get changeSname => _$this._changeSname;
  set changeSname(String changeSname) => _$this._changeSname = changeSname;

  List<int> _md5;
  List<int> get md5 => _$this._md5;
  set md5(List<int> md5) => _$this._md5 = md5;

  PlanDBInformationBuilder();

  PlanDBInformationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _planId = _$v.planId;
      _planSize = _$v.planSize;
      _changeTime = _$v.changeTime;
      _changeSid = _$v.changeSid;
      _changeSname = _$v.changeSname;
      _md5 = _$v.md5;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanDBInformation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanDBInformation;
  }

  @override
  void update(void updates(PlanDBInformationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanDBInformation build() {
    final _$result = _$v ??
        new _$PlanDBInformation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            planId: planId ?? '',
            planSize: planSize ?? 0,
            changeTime: changeTime ?? 0,
            changeSid: changeSid ?? 0,
            changeSname: changeSname ?? '',
            md5: md5 ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// Plan Control immutable class
///
class _$PlanControl extends PlanControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PlanControlEnumType type;
  @override
  final PlanControlEnumOp op;
  @override
  final int requestId;
  @override
  final String planId;
  @override
  final PlanControlBitfieldFlags flags;
  @override
  final ImcMessage arg;
  @override
  final String info;

  factory _$PlanControl([void updates(PlanControlBuilder b)]) =>
      (new PlanControlBuilder()..update(updates)).build();

  _$PlanControl._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.op,
      this.requestId,
      this.planId,
      this.flags,
      this.arg,
      this.info})
      : super._();

  @override
  PlanControl rebuild(void updates(PlanControlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanControlBuilder toBuilder() => new PlanControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        op == this.op &&
        requestId == this.requestId &&
        planId == this.planId &&
        flags == this.flags &&
        arg == this.arg &&
        info == this.info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode), 
        op?.hashCode), 
        requestId?.hashCode), 
        planId?.hashCode), 
        flags?.hashCode), 
        arg?.hashCode), 
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type)
          ..add('op', op)
          ..add('requestId', requestId)
          ..add('planId', planId)
          ..add('flags', flags)
          ..add('arg', arg)
          ..add('info', info))
        .toString();
  }
}

/// Plan Control builder class
///
class PlanControlBuilder implements Builder<PlanControl, PlanControlBuilder>, ImcBuilderHeaderPart {
  _$PlanControl _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PlanControlEnumType _type;
  PlanControlEnumType get type => _$this._type;
  set type(PlanControlEnumType type) => _$this._type = type;

  PlanControlEnumOp _op;
  PlanControlEnumOp get op => _$this._op;
  set op(PlanControlEnumOp op) => _$this._op = op;

  int _requestId;
  int get requestId => _$this._requestId;
  set requestId(int requestId) => _$this._requestId = requestId;

  String _planId;
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  PlanControlBitfieldFlags _flags;
  PlanControlBitfieldFlags get flags => _$this._flags;
  set flags(PlanControlBitfieldFlags flags) => _$this._flags = flags;

  ImcMessage _arg;
  ImcMessage get arg => _$this._arg;
  set arg(ImcMessage arg) => _$this._arg = arg;

  String _info;
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  PlanControlBuilder();

  PlanControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _op = _$v.op;
      _requestId = _$v.requestId;
      _planId = _$v.planId;
      _flags = _$v.flags;
      _arg = _$v.arg;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanControl other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanControl;
  }

  @override
  void update(void updates(PlanControlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanControl build() {
    final _$result = _$v ??
        new _$PlanControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? PlanControlEnumType(0),
            op: op ?? PlanControlEnumOp(0),
            requestId: requestId ?? 0,
            planId: planId ?? '',
            flags: flags ?? PlanControlBitfieldFlags(0),
            arg: arg,
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Plan Control State immutable class
///
class _$PlanControlState extends PlanControlState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PlanControlStateEnumState state;
  @override
  final String planId;
  @override
  final int planEta;
  @override
  final double planProgress;
  @override
  final String manId;
  @override
  final int manType;
  @override
  final int manEta;
  @override
  final PlanControlStateEnumLastOutcome lastOutcome;

  factory _$PlanControlState([void updates(PlanControlStateBuilder b)]) =>
      (new PlanControlStateBuilder()..update(updates)).build();

  _$PlanControlState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state,
      this.planId,
      this.planEta,
      this.planProgress,
      this.manId,
      this.manType,
      this.manEta,
      this.lastOutcome})
      : super._();

  @override
  PlanControlState rebuild(void updates(PlanControlStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanControlStateBuilder toBuilder() => new PlanControlStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanControlState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state &&
        planId == this.planId &&
        planEta == this.planEta &&
        planProgress == this.planProgress &&
        manId == this.manId &&
        manType == this.manType &&
        manEta == this.manEta &&
        lastOutcome == this.lastOutcome;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        state?.hashCode), 
        planId?.hashCode), 
        planEta?.hashCode), 
        planProgress?.hashCode), 
        manId?.hashCode), 
        manType?.hashCode), 
        manEta?.hashCode), 
        lastOutcome?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanControlState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', state)
          ..add('planId', planId)
          ..add('planEta', planEta)
          ..add('planProgress', planProgress)
          ..add('manId', manId)
          ..add('manType', manType)
          ..add('manEta', manEta)
          ..add('lastOutcome', lastOutcome))
        .toString();
  }
}

/// Plan Control State builder class
///
class PlanControlStateBuilder implements Builder<PlanControlState, PlanControlStateBuilder>, ImcBuilderHeaderPart {
  _$PlanControlState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PlanControlStateEnumState _state;
  PlanControlStateEnumState get state => _$this._state;
  set state(PlanControlStateEnumState state) => _$this._state = state;

  String _planId;
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  int _planEta;
  int get planEta => _$this._planEta;
  set planEta(int planEta) => _$this._planEta = planEta;

  double _planProgress;
  double get planProgress => _$this._planProgress;
  set planProgress(double planProgress) => _$this._planProgress = planProgress;

  String _manId;
  String get manId => _$this._manId;
  set manId(String manId) => _$this._manId = manId;

  int _manType;
  int get manType => _$this._manType;
  set manType(int manType) => _$this._manType = manType;

  int _manEta;
  int get manEta => _$this._manEta;
  set manEta(int manEta) => _$this._manEta = manEta;

  PlanControlStateEnumLastOutcome _lastOutcome;
  PlanControlStateEnumLastOutcome get lastOutcome => _$this._lastOutcome;
  set lastOutcome(PlanControlStateEnumLastOutcome lastOutcome) => _$this._lastOutcome = lastOutcome;

  PlanControlStateBuilder();

  PlanControlStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _planId = _$v.planId;
      _planEta = _$v.planEta;
      _planProgress = _$v.planProgress;
      _manId = _$v.manId;
      _manType = _$v.manType;
      _manEta = _$v.manEta;
      _lastOutcome = _$v.lastOutcome;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanControlState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanControlState;
  }

  @override
  void update(void updates(PlanControlStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanControlState build() {
    final _$result = _$v ??
        new _$PlanControlState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? PlanControlStateEnumState(0),
            planId: planId ?? '',
            planEta: planEta ?? 0,
            planProgress: planProgress ?? 0,
            manId: manId ?? '',
            manType: manType ?? 0,
            manEta: manEta ?? 0,
            lastOutcome: lastOutcome ?? PlanControlStateEnumLastOutcome(0));
    replace(_$result);
    return _$result;
  }
}

/// Plan Variable immutable class
///
class _$PlanVariable extends PlanVariable {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final String value;
  @override
  final PlanVariableEnumType type;
  @override
  final PlanVariableEnumAccess access;

  factory _$PlanVariable([void updates(PlanVariableBuilder b)]) =>
      (new PlanVariableBuilder()..update(updates)).build();

  _$PlanVariable._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.value,
      this.type,
      this.access})
      : super._();

  @override
  PlanVariable rebuild(void updates(PlanVariableBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanVariableBuilder toBuilder() => new PlanVariableBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanVariable &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        value == this.value &&
        type == this.type &&
        access == this.access;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode), 
        value?.hashCode), 
        type?.hashCode), 
        access?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanVariable')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name)
          ..add('value', value)
          ..add('type', type)
          ..add('access', access))
        .toString();
  }
}

/// Plan Variable builder class
///
class PlanVariableBuilder implements Builder<PlanVariable, PlanVariableBuilder>, ImcBuilderHeaderPart {
  _$PlanVariable _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  PlanVariableEnumType _type;
  PlanVariableEnumType get type => _$this._type;
  set type(PlanVariableEnumType type) => _$this._type = type;

  PlanVariableEnumAccess _access;
  PlanVariableEnumAccess get access => _$this._access;
  set access(PlanVariableEnumAccess access) => _$this._access = access;

  PlanVariableBuilder();

  PlanVariableBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _value = _$v.value;
      _type = _$v.type;
      _access = _$v.access;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanVariable other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanVariable;
  }

  @override
  void update(void updates(PlanVariableBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanVariable build() {
    final _$result = _$v ??
        new _$PlanVariable._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            value: value ?? '',
            type: type ?? PlanVariableEnumType(0),
            access: access ?? PlanVariableEnumAccess(0));
    replace(_$result);
    return _$result;
  }
}

/// Plan Generation immutable class
///
class _$PlanGeneration extends PlanGeneration {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PlanGenerationEnumCmd cmd;
  @override
  final PlanGenerationEnumOp op;
  @override
  final String planId;
  @override
  final String params;

  factory _$PlanGeneration([void updates(PlanGenerationBuilder b)]) =>
      (new PlanGenerationBuilder()..update(updates)).build();

  _$PlanGeneration._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.cmd,
      this.op,
      this.planId,
      this.params})
      : super._();

  @override
  PlanGeneration rebuild(void updates(PlanGenerationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanGenerationBuilder toBuilder() => new PlanGenerationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanGeneration &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        cmd == this.cmd &&
        op == this.op &&
        planId == this.planId &&
        params == this.params;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        cmd?.hashCode), 
        op?.hashCode), 
        planId?.hashCode), 
        params?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanGeneration')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('cmd', cmd)
          ..add('op', op)
          ..add('planId', planId)
          ..add('params', params))
        .toString();
  }
}

/// Plan Generation builder class
///
class PlanGenerationBuilder implements Builder<PlanGeneration, PlanGenerationBuilder>, ImcBuilderHeaderPart {
  _$PlanGeneration _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PlanGenerationEnumCmd _cmd;
  PlanGenerationEnumCmd get cmd => _$this._cmd;
  set cmd(PlanGenerationEnumCmd cmd) => _$this._cmd = cmd;

  PlanGenerationEnumOp _op;
  PlanGenerationEnumOp get op => _$this._op;
  set op(PlanGenerationEnumOp op) => _$this._op = op;

  String _planId;
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  String _params;
  String get params => _$this._params;
  set params(String params) => _$this._params = params;

  PlanGenerationBuilder();

  PlanGenerationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _cmd = _$v.cmd;
      _op = _$v.op;
      _planId = _$v.planId;
      _params = _$v.params;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanGeneration other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanGeneration;
  }

  @override
  void update(void updates(PlanGenerationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanGeneration build() {
    final _$result = _$v ??
        new _$PlanGeneration._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            cmd: cmd ?? PlanGenerationEnumCmd(0),
            op: op ?? PlanGenerationEnumOp(0),
            planId: planId ?? '',
            params: params ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Leader State immutable class
///
class _$LeaderState extends LeaderState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String groupName;
  @override
  final LeaderStateEnumOp op;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double vx;
  @override
  final double vy;
  @override
  final double vz;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final double svx;
  @override
  final double svy;
  @override
  final double svz;

  factory _$LeaderState([void updates(LeaderStateBuilder b)]) =>
      (new LeaderStateBuilder()..update(updates)).build();

  _$LeaderState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.groupName,
      this.op,
      this.lat,
      this.lon,
      this.height,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi,
      this.vx,
      this.vy,
      this.vz,
      this.p,
      this.q,
      this.r,
      this.svx,
      this.svy,
      this.svz})
      : super._();

  @override
  LeaderState rebuild(void updates(LeaderStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  LeaderStateBuilder toBuilder() => new LeaderStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LeaderState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        groupName == this.groupName &&
        op == this.op &&
        lat == this.lat &&
        lon == this.lon &&
        height == this.height &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi &&
        vx == this.vx &&
        vy == this.vy &&
        vz == this.vz &&
        p == this.p &&
        q == this.q &&
        r == this.r &&
        svx == this.svx &&
        svy == this.svy &&
        svz == this.svz;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        groupName?.hashCode), 
        op?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        height?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode), 
        phi?.hashCode), 
        theta?.hashCode), 
        psi?.hashCode), 
        vx?.hashCode), 
        vy?.hashCode), 
        vz?.hashCode), 
        p?.hashCode), 
        q?.hashCode), 
        r?.hashCode), 
        svx?.hashCode), 
        svy?.hashCode), 
        svz?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LeaderState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('groupName', groupName)
          ..add('op', op)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('height', height)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi)
          ..add('vx', vx)
          ..add('vy', vy)
          ..add('vz', vz)
          ..add('p', p)
          ..add('q', q)
          ..add('r', r)
          ..add('svx', svx)
          ..add('svy', svy)
          ..add('svz', svz))
        .toString();
  }
}

/// Leader State builder class
///
class LeaderStateBuilder implements Builder<LeaderState, LeaderStateBuilder>, ImcBuilderHeaderPart {
  _$LeaderState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _groupName;
  String get groupName => _$this._groupName;
  set groupName(String groupName) => _$this._groupName = groupName;

  LeaderStateEnumOp _op;
  LeaderStateEnumOp get op => _$this._op;
  set op(LeaderStateEnumOp op) => _$this._op = op;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _vx;
  double get vx => _$this._vx;
  set vx(double vx) => _$this._vx = vx;

  double _vy;
  double get vy => _$this._vy;
  set vy(double vy) => _$this._vy = vy;

  double _vz;
  double get vz => _$this._vz;
  set vz(double vz) => _$this._vz = vz;

  double _p;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  double _svx;
  double get svx => _$this._svx;
  set svx(double svx) => _$this._svx = svx;

  double _svy;
  double get svy => _$this._svy;
  set svy(double svy) => _$this._svy = svy;

  double _svz;
  double get svz => _$this._svz;
  set svz(double svz) => _$this._svz = svz;

  LeaderStateBuilder();

  LeaderStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _groupName = _$v.groupName;
      _op = _$v.op;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _vx = _$v.vx;
      _vy = _$v.vy;
      _vz = _$v.vz;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _svx = _$v.svx;
      _svy = _$v.svy;
      _svz = _$v.svz;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LeaderState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$LeaderState;
  }

  @override
  void update(void updates(LeaderStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$LeaderState build() {
    final _$result = _$v ??
        new _$LeaderState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            groupName: groupName ?? '',
            op: op ?? LeaderStateEnumOp(0),
            lat: lat ?? 0,
            lon: lon ?? 0,
            height: height ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0,
            vx: vx ?? 0,
            vy: vy ?? 0,
            vz: vz ?? 0,
            p: p ?? 0,
            q: q ?? 0,
            r: r ?? 0,
            svx: svx ?? 0,
            svy: svy ?? 0,
            svz: svz ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Plan Statistics immutable class
///
class _$PlanStatistics extends PlanStatistics {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String planId;
  @override
  final PlanStatisticsEnumType type;
  @override
  final PlanStatisticsBitfieldProperties properties;
  @override
  final String durations;
  @override
  final String distances;
  @override
  final String actions;
  @override
  final String fuel;

  factory _$PlanStatistics([void updates(PlanStatisticsBuilder b)]) =>
      (new PlanStatisticsBuilder()..update(updates)).build();

  _$PlanStatistics._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.planId,
      this.type,
      this.properties,
      this.durations,
      this.distances,
      this.actions,
      this.fuel})
      : super._();

  @override
  PlanStatistics rebuild(void updates(PlanStatisticsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanStatisticsBuilder toBuilder() => new PlanStatisticsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanStatistics &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        planId == this.planId &&
        type == this.type &&
        properties == this.properties &&
        durations == this.durations &&
        distances == this.distances &&
        actions == this.actions &&
        fuel == this.fuel;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        planId?.hashCode), 
        type?.hashCode), 
        properties?.hashCode), 
        durations?.hashCode), 
        distances?.hashCode), 
        actions?.hashCode), 
        fuel?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanStatistics')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('planId', planId)
          ..add('type', type)
          ..add('properties', properties)
          ..add('durations', durations)
          ..add('distances', distances)
          ..add('actions', actions)
          ..add('fuel', fuel))
        .toString();
  }
}

/// Plan Statistics builder class
///
class PlanStatisticsBuilder implements Builder<PlanStatistics, PlanStatisticsBuilder>, ImcBuilderHeaderPart {
  _$PlanStatistics _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _planId;
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  PlanStatisticsEnumType _type;
  PlanStatisticsEnumType get type => _$this._type;
  set type(PlanStatisticsEnumType type) => _$this._type = type;

  PlanStatisticsBitfieldProperties _properties;
  PlanStatisticsBitfieldProperties get properties => _$this._properties;
  set properties(PlanStatisticsBitfieldProperties properties) => _$this._properties = properties;

  String _durations;
  String get durations => _$this._durations;
  set durations(String durations) => _$this._durations = durations;

  String _distances;
  String get distances => _$this._distances;
  set distances(String distances) => _$this._distances = distances;

  String _actions;
  String get actions => _$this._actions;
  set actions(String actions) => _$this._actions = actions;

  String _fuel;
  String get fuel => _$this._fuel;
  set fuel(String fuel) => _$this._fuel = fuel;

  PlanStatisticsBuilder();

  PlanStatisticsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _planId = _$v.planId;
      _type = _$v.type;
      _properties = _$v.properties;
      _durations = _$v.durations;
      _distances = _$v.distances;
      _actions = _$v.actions;
      _fuel = _$v.fuel;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanStatistics other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PlanStatistics;
  }

  @override
  void update(void updates(PlanStatisticsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanStatistics build() {
    final _$result = _$v ??
        new _$PlanStatistics._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            planId: planId ?? '',
            type: type ?? PlanStatisticsEnumType(0),
            properties: properties ?? PlanStatisticsBitfieldProperties(0),
            durations: durations ?? '',
            distances: distances ?? '',
            actions: actions ?? '',
            fuel: fuel ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Reported State immutable class
///
class _$ReportedState extends ReportedState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double depth;
  @override
  final double roll;
  @override
  final double pitch;
  @override
  final double yaw;
  @override
  final double rcpTime;
  @override
  final String sid;
  @override
  final ReportedStateEnumSType sType;

  factory _$ReportedState([void updates(ReportedStateBuilder b)]) =>
      (new ReportedStateBuilder()..update(updates)).build();

  _$ReportedState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.depth,
      this.roll,
      this.pitch,
      this.yaw,
      this.rcpTime,
      this.sid,
      this.sType})
      : super._();

  @override
  ReportedState rebuild(void updates(ReportedStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ReportedStateBuilder toBuilder() => new ReportedStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ReportedState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        depth == this.depth &&
        roll == this.roll &&
        pitch == this.pitch &&
        yaw == this.yaw &&
        rcpTime == this.rcpTime &&
        sid == this.sid &&
        sType == this.sType;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        depth?.hashCode), 
        roll?.hashCode), 
        pitch?.hashCode), 
        yaw?.hashCode), 
        rcpTime?.hashCode), 
        sid?.hashCode), 
        sType?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ReportedState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('depth', depth)
          ..add('roll', roll)
          ..add('pitch', pitch)
          ..add('yaw', yaw)
          ..add('rcpTime', rcpTime)
          ..add('sid', sid)
          ..add('sType', sType))
        .toString();
  }
}

/// Reported State builder class
///
class ReportedStateBuilder implements Builder<ReportedState, ReportedStateBuilder>, ImcBuilderHeaderPart {
  _$ReportedState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _depth;
  double get depth => _$this._depth;
  set depth(double depth) => _$this._depth = depth;

  double _roll;
  double get roll => _$this._roll;
  set roll(double roll) => _$this._roll = roll;

  double _pitch;
  double get pitch => _$this._pitch;
  set pitch(double pitch) => _$this._pitch = pitch;

  double _yaw;
  double get yaw => _$this._yaw;
  set yaw(double yaw) => _$this._yaw = yaw;

  double _rcpTime;
  double get rcpTime => _$this._rcpTime;
  set rcpTime(double rcpTime) => _$this._rcpTime = rcpTime;

  String _sid;
  String get sid => _$this._sid;
  set sid(String sid) => _$this._sid = sid;

  ReportedStateEnumSType _sType;
  ReportedStateEnumSType get sType => _$this._sType;
  set sType(ReportedStateEnumSType sType) => _$this._sType = sType;

  ReportedStateBuilder();

  ReportedStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _depth = _$v.depth;
      _roll = _$v.roll;
      _pitch = _$v.pitch;
      _yaw = _$v.yaw;
      _rcpTime = _$v.rcpTime;
      _sid = _$v.sid;
      _sType = _$v.sType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ReportedState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ReportedState;
  }

  @override
  void update(void updates(ReportedStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ReportedState build() {
    final _$result = _$v ??
        new _$ReportedState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            depth: depth ?? 0,
            roll: roll ?? 0,
            pitch: pitch ?? 0,
            yaw: yaw ?? 0,
            rcpTime: rcpTime ?? 0,
            sid: sid ?? '',
            sType: sType ?? ReportedStateEnumSType(0));
    replace(_$result);
    return _$result;
  }
}

/// Remote Sensor Info immutable class
///
class _$RemoteSensorInfo extends RemoteSensorInfo {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String id;
  @override
  final String sensorClass;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double alt;
  @override
  final double heading;
  @override
  final String data;

  factory _$RemoteSensorInfo([void updates(RemoteSensorInfoBuilder b)]) =>
      (new RemoteSensorInfoBuilder()..update(updates)).build();

  _$RemoteSensorInfo._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.sensorClass,
      this.lat,
      this.lon,
      this.alt,
      this.heading,
      this.data})
      : super._();

  @override
  RemoteSensorInfo rebuild(void updates(RemoteSensorInfoBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteSensorInfoBuilder toBuilder() => new RemoteSensorInfoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteSensorInfo &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        sensorClass == this.sensorClass &&
        lat == this.lat &&
        lon == this.lon &&
        alt == this.alt &&
        heading == this.heading &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        id?.hashCode), 
        sensorClass?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        alt?.hashCode), 
        heading?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteSensorInfo')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', id)
          ..add('sensorClass', sensorClass)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('alt', alt)
          ..add('heading', heading)
          ..add('data', data))
        .toString();
  }
}

/// Remote Sensor Info builder class
///
class RemoteSensorInfoBuilder implements Builder<RemoteSensorInfo, RemoteSensorInfoBuilder>, ImcBuilderHeaderPart {
  _$RemoteSensorInfo _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _id;
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  String _sensorClass;
  String get sensorClass => _$this._sensorClass;
  set sensorClass(String sensorClass) => _$this._sensorClass = sensorClass;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _alt;
  double get alt => _$this._alt;
  set alt(double alt) => _$this._alt = alt;

  double _heading;
  double get heading => _$this._heading;
  set heading(double heading) => _$this._heading = heading;

  String _data;
  String get data => _$this._data;
  set data(String data) => _$this._data = data;

  RemoteSensorInfoBuilder();

  RemoteSensorInfoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _sensorClass = _$v.sensorClass;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _alt = _$v.alt;
      _heading = _$v.heading;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteSensorInfo other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteSensorInfo;
  }

  @override
  void update(void updates(RemoteSensorInfoBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteSensorInfo build() {
    final _$result = _$v ??
        new _$RemoteSensorInfo._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? '',
            sensorClass: sensorClass ?? '',
            lat: lat ?? 0,
            lon: lon ?? 0,
            alt: alt ?? 0,
            heading: heading ?? 0,
            data: data ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Map immutable class
///
class _$Map extends Map {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String id;
  @override
  final List<MapFeature> features;

  factory _$Map([void updates(MapBuilder b)]) =>
      (new MapBuilder()..update(updates)).build();

  _$Map._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.features})
      : super._();

  @override
  Map rebuild(void updates(MapBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MapBuilder toBuilder() => new MapBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Map &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        features == this.features;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        id?.hashCode), 
        features?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Map')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', id)
          ..add('features', features))
        .toString();
  }
}

/// Map builder class
///
class MapBuilder implements Builder<Map, MapBuilder>, ImcBuilderHeaderPart {
  _$Map _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _id;
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  List<MapFeature> _features;
  List<MapFeature> get features => _$this._features;
  set features(List<MapFeature> features) => _$this._features = features;

  MapBuilder();

  MapBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _features = _$v.features;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Map other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Map;
  }

  @override
  void update(void updates(MapBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Map build() {
    final _$result = _$v ??
        new _$Map._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? '',
            features: features ?? List<MapFeature>(0));
    replace(_$result);
    return _$result;
  }
}

/// Map Feature immutable class
///
class _$MapFeature extends MapFeature {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String id;
  @override
  final MapFeatureEnumFeatureType featureType;
  @override
  final int rgbRed;
  @override
  final int rgbGreen;
  @override
  final int rgbBlue;
  @override
  final List<MapPoint> feature;

  factory _$MapFeature([void updates(MapFeatureBuilder b)]) =>
      (new MapFeatureBuilder()..update(updates)).build();

  _$MapFeature._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.id,
      this.featureType,
      this.rgbRed,
      this.rgbGreen,
      this.rgbBlue,
      this.feature})
      : super._();

  @override
  MapFeature rebuild(void updates(MapFeatureBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MapFeatureBuilder toBuilder() => new MapFeatureBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MapFeature &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == this.id &&
        featureType == this.featureType &&
        rgbRed == this.rgbRed &&
        rgbGreen == this.rgbGreen &&
        rgbBlue == this.rgbBlue &&
        feature == this.feature;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        id?.hashCode), 
        featureType?.hashCode), 
        rgbRed?.hashCode), 
        rgbGreen?.hashCode), 
        rgbBlue?.hashCode), 
        feature?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MapFeature')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', id)
          ..add('featureType', featureType)
          ..add('rgbRed', rgbRed)
          ..add('rgbGreen', rgbGreen)
          ..add('rgbBlue', rgbBlue)
          ..add('feature', feature))
        .toString();
  }
}

/// Map Feature builder class
///
class MapFeatureBuilder implements Builder<MapFeature, MapFeatureBuilder>, ImcBuilderHeaderPart {
  _$MapFeature _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _id;
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  MapFeatureEnumFeatureType _featureType;
  MapFeatureEnumFeatureType get featureType => _$this._featureType;
  set featureType(MapFeatureEnumFeatureType featureType) => _$this._featureType = featureType;

  int _rgbRed;
  int get rgbRed => _$this._rgbRed;
  set rgbRed(int rgbRed) => _$this._rgbRed = rgbRed;

  int _rgbGreen;
  int get rgbGreen => _$this._rgbGreen;
  set rgbGreen(int rgbGreen) => _$this._rgbGreen = rgbGreen;

  int _rgbBlue;
  int get rgbBlue => _$this._rgbBlue;
  set rgbBlue(int rgbBlue) => _$this._rgbBlue = rgbBlue;

  List<MapPoint> _feature;
  List<MapPoint> get feature => _$this._feature;
  set feature(List<MapPoint> feature) => _$this._feature = feature;

  MapFeatureBuilder();

  MapFeatureBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _featureType = _$v.featureType;
      _rgbRed = _$v.rgbRed;
      _rgbGreen = _$v.rgbGreen;
      _rgbBlue = _$v.rgbBlue;
      _feature = _$v.feature;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MapFeature other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$MapFeature;
  }

  @override
  void update(void updates(MapFeatureBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$MapFeature build() {
    final _$result = _$v ??
        new _$MapFeature._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? '',
            featureType: featureType ?? MapFeatureEnumFeatureType(0),
            rgbRed: rgbRed ?? 0,
            rgbGreen: rgbGreen ?? 0,
            rgbBlue: rgbBlue ?? 0,
            feature: feature ?? List<MapPoint>(0));
    replace(_$result);
    return _$result;
  }
}

/// MapPoint immutable class
///
class _$MapPoint extends MapPoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double alt;

  factory _$MapPoint([void updates(MapPointBuilder b)]) =>
      (new MapPointBuilder()..update(updates)).build();

  _$MapPoint._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.alt})
      : super._();

  @override
  MapPoint rebuild(void updates(MapPointBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MapPointBuilder toBuilder() => new MapPointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MapPoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        alt == this.alt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        alt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MapPoint')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('alt', alt))
        .toString();
  }
}

/// MapPoint builder class
///
class MapPointBuilder implements Builder<MapPoint, MapPointBuilder>, ImcBuilderHeaderPart {
  _$MapPoint _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _alt;
  double get alt => _$this._alt;
  set alt(double alt) => _$this._alt = alt;

  MapPointBuilder();

  MapPointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _alt = _$v.alt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MapPoint other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$MapPoint;
  }

  @override
  void update(void updates(MapPointBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$MapPoint build() {
    final _$result = _$v ??
        new _$MapPoint._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            alt: alt ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// CCU Event immutable class
///
class _$CcuEvent extends CcuEvent {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final CcuEventEnumType type;
  @override
  final String id;
  @override
  final ImcMessage arg;

  factory _$CcuEvent([void updates(CcuEventBuilder b)]) =>
      (new CcuEventBuilder()..update(updates)).build();

  _$CcuEvent._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.id,
      this.arg})
      : super._();

  @override
  CcuEvent rebuild(void updates(CcuEventBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CcuEventBuilder toBuilder() => new CcuEventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CcuEvent &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        id == this.id &&
        arg == this.arg;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode), 
        id?.hashCode), 
        arg?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CcuEvent')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type)
          ..add('id', id)
          ..add('arg', arg))
        .toString();
  }
}

/// CCU Event builder class
///
class CcuEventBuilder implements Builder<CcuEvent, CcuEventBuilder>, ImcBuilderHeaderPart {
  _$CcuEvent _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  CcuEventEnumType _type;
  CcuEventEnumType get type => _$this._type;
  set type(CcuEventEnumType type) => _$this._type = type;

  String _id;
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  ImcMessage _arg;
  ImcMessage get arg => _$this._arg;
  set arg(ImcMessage arg) => _$this._arg = arg;

  CcuEventBuilder();

  CcuEventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _id = _$v.id;
      _arg = _$v.arg;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CcuEvent other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CcuEvent;
  }

  @override
  void update(void updates(CcuEventBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CcuEvent build() {
    final _$result = _$v ??
        new _$CcuEvent._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? CcuEventEnumType(0),
            id: id ?? '',
            arg: arg);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Links immutable class
///
class _$VehicleLinks extends VehicleLinks {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String localname;
  @override
  final List<Announce> links;

  factory _$VehicleLinks([void updates(VehicleLinksBuilder b)]) =>
      (new VehicleLinksBuilder()..update(updates)).build();

  _$VehicleLinks._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.localname,
      this.links})
      : super._();

  @override
  VehicleLinks rebuild(void updates(VehicleLinksBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleLinksBuilder toBuilder() => new VehicleLinksBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleLinks &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        localname == this.localname &&
        links == this.links;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        localname?.hashCode), 
        links?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleLinks')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('localname', localname)
          ..add('links', links))
        .toString();
  }
}

/// Vehicle Links builder class
///
class VehicleLinksBuilder implements Builder<VehicleLinks, VehicleLinksBuilder>, ImcBuilderHeaderPart {
  _$VehicleLinks _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _localname;
  String get localname => _$this._localname;
  set localname(String localname) => _$this._localname = localname;

  List<Announce> _links;
  List<Announce> get links => _$this._links;
  set links(List<Announce> links) => _$this._links = links;

  VehicleLinksBuilder();

  VehicleLinksBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _localname = _$v.localname;
      _links = _$v.links;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleLinks other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleLinks;
  }

  @override
  void update(void updates(VehicleLinksBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleLinks build() {
    final _$result = _$v ??
        new _$VehicleLinks._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            localname: localname ?? '',
            links: links ?? List<Announce>(0));
    replace(_$result);
    return _$result;
  }
}

/// TREX Observation immutable class
///
class _$TrexObservation extends TrexObservation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String timeline;
  @override
  final String predicate;
  @override
  final String attributes;

  factory _$TrexObservation([void updates(TrexObservationBuilder b)]) =>
      (new TrexObservationBuilder()..update(updates)).build();

  _$TrexObservation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeline,
      this.predicate,
      this.attributes})
      : super._();

  @override
  TrexObservation rebuild(void updates(TrexObservationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexObservationBuilder toBuilder() => new TrexObservationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexObservation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeline == this.timeline &&
        predicate == this.predicate &&
        attributes == this.attributes;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeline?.hashCode), 
        predicate?.hashCode), 
        attributes?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexObservation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeline', timeline)
          ..add('predicate', predicate)
          ..add('attributes', attributes))
        .toString();
  }
}

/// TREX Observation builder class
///
class TrexObservationBuilder implements Builder<TrexObservation, TrexObservationBuilder>, ImcBuilderHeaderPart {
  _$TrexObservation _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _timeline;
  String get timeline => _$this._timeline;
  set timeline(String timeline) => _$this._timeline = timeline;

  String _predicate;
  String get predicate => _$this._predicate;
  set predicate(String predicate) => _$this._predicate = predicate;

  String _attributes;
  String get attributes => _$this._attributes;
  set attributes(String attributes) => _$this._attributes = attributes;

  TrexObservationBuilder();

  TrexObservationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeline = _$v.timeline;
      _predicate = _$v.predicate;
      _attributes = _$v.attributes;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexObservation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrexObservation;
  }

  @override
  void update(void updates(TrexObservationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexObservation build() {
    final _$result = _$v ??
        new _$TrexObservation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeline: timeline ?? '',
            predicate: predicate ?? '',
            attributes: attributes ?? '');
    replace(_$result);
    return _$result;
  }
}

/// TREX Command immutable class
///
class _$TrexCommand extends TrexCommand {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final TrexCommandEnumCommand command;
  @override
  final String goalId;
  @override
  final String goalXml;

  factory _$TrexCommand([void updates(TrexCommandBuilder b)]) =>
      (new TrexCommandBuilder()..update(updates)).build();

  _$TrexCommand._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.command,
      this.goalId,
      this.goalXml})
      : super._();

  @override
  TrexCommand rebuild(void updates(TrexCommandBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexCommandBuilder toBuilder() => new TrexCommandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexCommand &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        command == this.command &&
        goalId == this.goalId &&
        goalXml == this.goalXml;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        command?.hashCode), 
        goalId?.hashCode), 
        goalXml?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexCommand')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('command', command)
          ..add('goalId', goalId)
          ..add('goalXml', goalXml))
        .toString();
  }
}

/// TREX Command builder class
///
class TrexCommandBuilder implements Builder<TrexCommand, TrexCommandBuilder>, ImcBuilderHeaderPart {
  _$TrexCommand _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  TrexCommandEnumCommand _command;
  TrexCommandEnumCommand get command => _$this._command;
  set command(TrexCommandEnumCommand command) => _$this._command = command;

  String _goalId;
  String get goalId => _$this._goalId;
  set goalId(String goalId) => _$this._goalId = goalId;

  String _goalXml;
  String get goalXml => _$this._goalXml;
  set goalXml(String goalXml) => _$this._goalXml = goalXml;

  TrexCommandBuilder();

  TrexCommandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _command = _$v.command;
      _goalId = _$v.goalId;
      _goalXml = _$v.goalXml;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexCommand other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrexCommand;
  }

  @override
  void update(void updates(TrexCommandBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexCommand build() {
    final _$result = _$v ??
        new _$TrexCommand._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            command: command ?? TrexCommandEnumCommand(0),
            goalId: goalId ?? '',
            goalXml: goalXml ?? '');
    replace(_$result);
    return _$result;
  }
}

/// TREX Operation immutable class
///
class _$TrexOperation extends TrexOperation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final TrexOperationEnumOp op;
  @override
  final String goalId;
  @override
  final TrexToken token;

  factory _$TrexOperation([void updates(TrexOperationBuilder b)]) =>
      (new TrexOperationBuilder()..update(updates)).build();

  _$TrexOperation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.goalId,
      this.token})
      : super._();

  @override
  TrexOperation rebuild(void updates(TrexOperationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexOperationBuilder toBuilder() => new TrexOperationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexOperation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        goalId == this.goalId &&
        token == this.token;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        goalId?.hashCode), 
        token?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexOperation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('goalId', goalId)
          ..add('token', token))
        .toString();
  }
}

/// TREX Operation builder class
///
class TrexOperationBuilder implements Builder<TrexOperation, TrexOperationBuilder>, ImcBuilderHeaderPart {
  _$TrexOperation _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  TrexOperationEnumOp _op;
  TrexOperationEnumOp get op => _$this._op;
  set op(TrexOperationEnumOp op) => _$this._op = op;

  String _goalId;
  String get goalId => _$this._goalId;
  set goalId(String goalId) => _$this._goalId = goalId;

  TrexToken _token;
  TrexToken get token => _$this._token;
  set token(TrexToken token) => _$this._token = token;

  TrexOperationBuilder();

  TrexOperationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _goalId = _$v.goalId;
      _token = _$v.token;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexOperation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrexOperation;
  }

  @override
  void update(void updates(TrexOperationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexOperation build() {
    final _$result = _$v ??
        new _$TrexOperation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? TrexOperationEnumOp(0),
            goalId: goalId ?? '',
            token: token);
    replace(_$result);
    return _$result;
  }
}

/// TREX Attribute immutable class
///
class _$TrexAttribute extends TrexAttribute {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final TrexAttributeEnumAttrType attrType;
  @override
  final String min;
  @override
  final String max;

  factory _$TrexAttribute([void updates(TrexAttributeBuilder b)]) =>
      (new TrexAttributeBuilder()..update(updates)).build();

  _$TrexAttribute._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.attrType,
      this.min,
      this.max})
      : super._();

  @override
  TrexAttribute rebuild(void updates(TrexAttributeBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexAttributeBuilder toBuilder() => new TrexAttributeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexAttribute &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        attrType == this.attrType &&
        min == this.min &&
        max == this.max;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode), 
        attrType?.hashCode), 
        min?.hashCode), 
        max?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexAttribute')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name)
          ..add('attrType', attrType)
          ..add('min', min)
          ..add('max', max))
        .toString();
  }
}

/// TREX Attribute builder class
///
class TrexAttributeBuilder implements Builder<TrexAttribute, TrexAttributeBuilder>, ImcBuilderHeaderPart {
  _$TrexAttribute _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  TrexAttributeEnumAttrType _attrType;
  TrexAttributeEnumAttrType get attrType => _$this._attrType;
  set attrType(TrexAttributeEnumAttrType attrType) => _$this._attrType = attrType;

  String _min;
  String get min => _$this._min;
  set min(String min) => _$this._min = min;

  String _max;
  String get max => _$this._max;
  set max(String max) => _$this._max = max;

  TrexAttributeBuilder();

  TrexAttributeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _attrType = _$v.attrType;
      _min = _$v.min;
      _max = _$v.max;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexAttribute other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrexAttribute;
  }

  @override
  void update(void updates(TrexAttributeBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexAttribute build() {
    final _$result = _$v ??
        new _$TrexAttribute._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            attrType: attrType ?? TrexAttributeEnumAttrType(0),
            min: min ?? '',
            max: max ?? '');
    replace(_$result);
    return _$result;
  }
}

/// TREX Token immutable class
///
class _$TrexToken extends TrexToken {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String timeline;
  @override
  final String predicate;
  @override
  final List<TrexAttribute> attributes;

  factory _$TrexToken([void updates(TrexTokenBuilder b)]) =>
      (new TrexTokenBuilder()..update(updates)).build();

  _$TrexToken._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeline,
      this.predicate,
      this.attributes})
      : super._();

  @override
  TrexToken rebuild(void updates(TrexTokenBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexTokenBuilder toBuilder() => new TrexTokenBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexToken &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeline == this.timeline &&
        predicate == this.predicate &&
        attributes == this.attributes;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeline?.hashCode), 
        predicate?.hashCode), 
        attributes?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexToken')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeline', timeline)
          ..add('predicate', predicate)
          ..add('attributes', attributes))
        .toString();
  }
}

/// TREX Token builder class
///
class TrexTokenBuilder implements Builder<TrexToken, TrexTokenBuilder>, ImcBuilderHeaderPart {
  _$TrexToken _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _timeline;
  String get timeline => _$this._timeline;
  set timeline(String timeline) => _$this._timeline = timeline;

  String _predicate;
  String get predicate => _$this._predicate;
  set predicate(String predicate) => _$this._predicate = predicate;

  List<TrexAttribute> _attributes;
  List<TrexAttribute> get attributes => _$this._attributes;
  set attributes(List<TrexAttribute> attributes) => _$this._attributes = attributes;

  TrexTokenBuilder();

  TrexTokenBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeline = _$v.timeline;
      _predicate = _$v.predicate;
      _attributes = _$v.attributes;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexToken other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrexToken;
  }

  @override
  void update(void updates(TrexTokenBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexToken build() {
    final _$result = _$v ??
        new _$TrexToken._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeline: timeline ?? '',
            predicate: predicate ?? '',
            attributes: attributes ?? List<TrexAttribute>(0));
    replace(_$result);
    return _$result;
  }
}

/// TREX Plan immutable class
///
class _$TrexPlan extends TrexPlan {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String reactor;
  @override
  final List<TrexToken> tokens;

  factory _$TrexPlan([void updates(TrexPlanBuilder b)]) =>
      (new TrexPlanBuilder()..update(updates)).build();

  _$TrexPlan._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.reactor,
      this.tokens})
      : super._();

  @override
  TrexPlan rebuild(void updates(TrexPlanBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexPlanBuilder toBuilder() => new TrexPlanBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexPlan &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reactor == this.reactor &&
        tokens == this.tokens;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        reactor?.hashCode), 
        tokens?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexPlan')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reactor', reactor)
          ..add('tokens', tokens))
        .toString();
  }
}

/// TREX Plan builder class
///
class TrexPlanBuilder implements Builder<TrexPlan, TrexPlanBuilder>, ImcBuilderHeaderPart {
  _$TrexPlan _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _reactor;
  String get reactor => _$this._reactor;
  set reactor(String reactor) => _$this._reactor = reactor;

  List<TrexToken> _tokens;
  List<TrexToken> get tokens => _$this._tokens;
  set tokens(List<TrexToken> tokens) => _$this._tokens = tokens;

  TrexPlanBuilder();

  TrexPlanBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reactor = _$v.reactor;
      _tokens = _$v.tokens;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexPlan other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TrexPlan;
  }

  @override
  void update(void updates(TrexPlanBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexPlan build() {
    final _$result = _$v ??
        new _$TrexPlan._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reactor: reactor ?? '',
            tokens: tokens ?? List<TrexToken>(0));
    replace(_$result);
    return _$result;
  }
}

/// Event immutable class
///
class _$Event extends Event {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String topic;
  @override
  final String data;

  factory _$Event([void updates(EventBuilder b)]) =>
      (new EventBuilder()..update(updates)).build();

  _$Event._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.topic,
      this.data})
      : super._();

  @override
  Event rebuild(void updates(EventBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EventBuilder toBuilder() => new EventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Event &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        topic == this.topic &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        topic?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Event')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('topic', topic)
          ..add('data', data))
        .toString();
  }
}

/// Event builder class
///
class EventBuilder implements Builder<Event, EventBuilder>, ImcBuilderHeaderPart {
  _$Event _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _topic;
  String get topic => _$this._topic;
  set topic(String topic) => _$this._topic = topic;

  String _data;
  String get data => _$this._data;
  set data(String data) => _$this._data = data;

  EventBuilder();

  EventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _topic = _$v.topic;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Event other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Event;
  }

  @override
  void update(void updates(EventBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Event build() {
    final _$result = _$v ??
        new _$Event._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            topic: topic ?? '',
            data: data ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Compressed Image immutable class
///
class _$CompressedImage extends CompressedImage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int frameid;
  @override
  final List<int> data;

  factory _$CompressedImage([void updates(CompressedImageBuilder b)]) =>
      (new CompressedImageBuilder()..update(updates)).build();

  _$CompressedImage._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.frameid,
      this.data})
      : super._();

  @override
  CompressedImage rebuild(void updates(CompressedImageBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CompressedImageBuilder toBuilder() => new CompressedImageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CompressedImage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        frameid == this.frameid &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        frameid?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CompressedImage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('frameid', frameid)
          ..add('data', data))
        .toString();
  }
}

/// Compressed Image builder class
///
class CompressedImageBuilder implements Builder<CompressedImage, CompressedImageBuilder>, ImcBuilderHeaderPart {
  _$CompressedImage _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _frameid;
  int get frameid => _$this._frameid;
  set frameid(int frameid) => _$this._frameid = frameid;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  CompressedImageBuilder();

  CompressedImageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _frameid = _$v.frameid;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CompressedImage other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CompressedImage;
  }

  @override
  void update(void updates(CompressedImageBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CompressedImage build() {
    final _$result = _$v ??
        new _$CompressedImage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            frameid: frameid ?? 0,
            data: data ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// Image Transmission Settings immutable class
///
class _$ImageTxSettings extends ImageTxSettings {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int fps;
  @override
  final int quality;
  @override
  final int reps;
  @override
  final int tsize;

  factory _$ImageTxSettings([void updates(ImageTxSettingsBuilder b)]) =>
      (new ImageTxSettingsBuilder()..update(updates)).build();

  _$ImageTxSettings._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.fps,
      this.quality,
      this.reps,
      this.tsize})
      : super._();

  @override
  ImageTxSettings rebuild(void updates(ImageTxSettingsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ImageTxSettingsBuilder toBuilder() => new ImageTxSettingsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ImageTxSettings &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        fps == this.fps &&
        quality == this.quality &&
        reps == this.reps &&
        tsize == this.tsize;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        fps?.hashCode), 
        quality?.hashCode), 
        reps?.hashCode), 
        tsize?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ImageTxSettings')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('fps', fps)
          ..add('quality', quality)
          ..add('reps', reps)
          ..add('tsize', tsize))
        .toString();
  }
}

/// Image Transmission Settings builder class
///
class ImageTxSettingsBuilder implements Builder<ImageTxSettings, ImageTxSettingsBuilder>, ImcBuilderHeaderPart {
  _$ImageTxSettings _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _fps;
  int get fps => _$this._fps;
  set fps(int fps) => _$this._fps = fps;

  int _quality;
  int get quality => _$this._quality;
  set quality(int quality) => _$this._quality = quality;

  int _reps;
  int get reps => _$this._reps;
  set reps(int reps) => _$this._reps = reps;

  int _tsize;
  int get tsize => _$this._tsize;
  set tsize(int tsize) => _$this._tsize = tsize;

  ImageTxSettingsBuilder();

  ImageTxSettingsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _fps = _$v.fps;
      _quality = _$v.quality;
      _reps = _$v.reps;
      _tsize = _$v.tsize;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ImageTxSettings other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ImageTxSettings;
  }

  @override
  void update(void updates(ImageTxSettingsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ImageTxSettings build() {
    final _$result = _$v ??
        new _$ImageTxSettings._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            fps: fps ?? 0,
            quality: quality ?? 0,
            reps: reps ?? 0,
            tsize: tsize ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Remote State immutable class
///
class _$RemoteState extends RemoteState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final int depth;
  @override
  final double speed;
  @override
  final double psi;

  factory _$RemoteState([void updates(RemoteStateBuilder b)]) =>
      (new RemoteStateBuilder()..update(updates)).build();

  _$RemoteState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.depth,
      this.speed,
      this.psi})
      : super._();

  @override
  RemoteState rebuild(void updates(RemoteStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteStateBuilder toBuilder() => new RemoteStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        depth == this.depth &&
        speed == this.speed &&
        psi == this.psi;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        depth?.hashCode), 
        speed?.hashCode), 
        psi?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('depth', depth)
          ..add('speed', speed)
          ..add('psi', psi))
        .toString();
  }
}

/// Remote State builder class
///
class RemoteStateBuilder implements Builder<RemoteState, RemoteStateBuilder>, ImcBuilderHeaderPart {
  _$RemoteState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  int _depth;
  int get depth => _$this._depth;
  set depth(int depth) => _$this._depth = depth;

  double _speed;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  RemoteStateBuilder();

  RemoteStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _depth = _$v.depth;
      _speed = _$v.speed;
      _psi = _$v.psi;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteState;
  }

  @override
  void update(void updates(RemoteStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteState build() {
    final _$result = _$v ??
        new _$RemoteState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            depth: depth ?? 0,
            speed: speed ?? 0,
            psi: psi ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Target immutable class
///
class _$Target extends Target {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String label;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double cog;
  @override
  final double sog;

  factory _$Target([void updates(TargetBuilder b)]) =>
      (new TargetBuilder()..update(updates)).build();

  _$Target._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.label,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.cog,
      this.sog})
      : super._();

  @override
  Target rebuild(void updates(TargetBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TargetBuilder toBuilder() => new TargetBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Target &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        label == this.label &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits &&
        cog == this.cog &&
        sog == this.sog;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        label?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode), 
        cog?.hashCode), 
        sog?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Target')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('label', label)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits)
          ..add('cog', cog)
          ..add('sog', sog))
        .toString();
  }
}

/// Target builder class
///
class TargetBuilder implements Builder<Target, TargetBuilder>, ImcBuilderHeaderPart {
  _$Target _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _label;
  String get label => _$this._label;
  set label(String label) => _$this._label = label;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _cog;
  double get cog => _$this._cog;
  set cog(double cog) => _$this._cog = cog;

  double _sog;
  double get sog => _$this._sog;
  set sog(double sog) => _$this._sog = sog;

  TargetBuilder();

  TargetBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _label = _$v.label;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _cog = _$v.cog;
      _sog = _$v.sog;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Target other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Target;
  }

  @override
  void update(void updates(TargetBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Target build() {
    final _$result = _$v ??
        new _$Target._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            label: label ?? '',
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            cog: cog ?? 0,
            sog: sog ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// EntityParameter immutable class
///
class _$EntityParameter extends EntityParameter {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final String value;

  factory _$EntityParameter([void updates(EntityParameterBuilder b)]) =>
      (new EntityParameterBuilder()..update(updates)).build();

  _$EntityParameter._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.value})
      : super._();

  @override
  EntityParameter rebuild(void updates(EntityParameterBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityParameterBuilder toBuilder() => new EntityParameterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityParameter &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityParameter')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name)
          ..add('value', value))
        .toString();
  }
}

/// EntityParameter builder class
///
class EntityParameterBuilder implements Builder<EntityParameter, EntityParameterBuilder>, ImcBuilderHeaderPart {
  _$EntityParameter _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _value;
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  EntityParameterBuilder();

  EntityParameterBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityParameter other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EntityParameter;
  }

  @override
  void update(void updates(EntityParameterBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityParameter build() {
    final _$result = _$v ??
        new _$EntityParameter._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            value: value ?? '');
    replace(_$result);
    return _$result;
  }
}

/// EntityParameters immutable class
///
class _$EntityParameters extends EntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final List<EntityParameter> params;

  factory _$EntityParameters([void updates(EntityParametersBuilder b)]) =>
      (new EntityParametersBuilder()..update(updates)).build();

  _$EntityParameters._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.params})
      : super._();

  @override
  EntityParameters rebuild(void updates(EntityParametersBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityParametersBuilder toBuilder() => new EntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        params == this.params;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode), 
        params?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name)
          ..add('params', params))
        .toString();
  }
}

/// EntityParameters builder class
///
class EntityParametersBuilder implements Builder<EntityParameters, EntityParametersBuilder>, ImcBuilderHeaderPart {
  _$EntityParameters _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  List<EntityParameter> _params;
  List<EntityParameter> get params => _$this._params;
  set params(List<EntityParameter> params) => _$this._params = params;

  EntityParametersBuilder();

  EntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _params = _$v.params;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityParameters other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$EntityParameters;
  }

  @override
  void update(void updates(EntityParametersBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityParameters build() {
    final _$result = _$v ??
        new _$EntityParameters._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            params: params ?? List<EntityParameter>(0));
    replace(_$result);
    return _$result;
  }
}

/// QueryEntityParameters immutable class
///
class _$QueryEntityParameters extends QueryEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final String visibility;
  @override
  final String scope;

  factory _$QueryEntityParameters([void updates(QueryEntityParametersBuilder b)]) =>
      (new QueryEntityParametersBuilder()..update(updates)).build();

  _$QueryEntityParameters._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.visibility,
      this.scope})
      : super._();

  @override
  QueryEntityParameters rebuild(void updates(QueryEntityParametersBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryEntityParametersBuilder toBuilder() => new QueryEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        visibility == this.visibility &&
        scope == this.scope;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode), 
        visibility?.hashCode), 
        scope?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name)
          ..add('visibility', visibility)
          ..add('scope', scope))
        .toString();
  }
}

/// QueryEntityParameters builder class
///
class QueryEntityParametersBuilder implements Builder<QueryEntityParameters, QueryEntityParametersBuilder>, ImcBuilderHeaderPart {
  _$QueryEntityParameters _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _visibility;
  String get visibility => _$this._visibility;
  set visibility(String visibility) => _$this._visibility = visibility;

  String _scope;
  String get scope => _$this._scope;
  set scope(String scope) => _$this._scope = scope;

  QueryEntityParametersBuilder();

  QueryEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _visibility = _$v.visibility;
      _scope = _$v.scope;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryEntityParameters other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$QueryEntityParameters;
  }

  @override
  void update(void updates(QueryEntityParametersBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryEntityParameters build() {
    final _$result = _$v ??
        new _$QueryEntityParameters._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            visibility: visibility ?? '',
            scope: scope ?? '');
    replace(_$result);
    return _$result;
  }
}

/// SetEntityParameters immutable class
///
class _$SetEntityParameters extends SetEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final List<EntityParameter> params;

  factory _$SetEntityParameters([void updates(SetEntityParametersBuilder b)]) =>
      (new SetEntityParametersBuilder()..update(updates)).build();

  _$SetEntityParameters._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.params})
      : super._();

  @override
  SetEntityParameters rebuild(void updates(SetEntityParametersBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SetEntityParametersBuilder toBuilder() => new SetEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        params == this.params;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode), 
        params?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name)
          ..add('params', params))
        .toString();
  }
}

/// SetEntityParameters builder class
///
class SetEntityParametersBuilder implements Builder<SetEntityParameters, SetEntityParametersBuilder>, ImcBuilderHeaderPart {
  _$SetEntityParameters _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  List<EntityParameter> _params;
  List<EntityParameter> get params => _$this._params;
  set params(List<EntityParameter> params) => _$this._params = params;

  SetEntityParametersBuilder();

  SetEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _params = _$v.params;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetEntityParameters other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SetEntityParameters;
  }

  @override
  void update(void updates(SetEntityParametersBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SetEntityParameters build() {
    final _$result = _$v ??
        new _$SetEntityParameters._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            params: params ?? List<EntityParameter>(0));
    replace(_$result);
    return _$result;
  }
}

/// SaveEntityParameters immutable class
///
class _$SaveEntityParameters extends SaveEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;

  factory _$SaveEntityParameters([void updates(SaveEntityParametersBuilder b)]) =>
      (new SaveEntityParametersBuilder()..update(updates)).build();

  _$SaveEntityParameters._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name})
      : super._();

  @override
  SaveEntityParameters rebuild(void updates(SaveEntityParametersBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SaveEntityParametersBuilder toBuilder() => new SaveEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SaveEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SaveEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name))
        .toString();
  }
}

/// SaveEntityParameters builder class
///
class SaveEntityParametersBuilder implements Builder<SaveEntityParameters, SaveEntityParametersBuilder>, ImcBuilderHeaderPart {
  _$SaveEntityParameters _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  SaveEntityParametersBuilder();

  SaveEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SaveEntityParameters other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SaveEntityParameters;
  }

  @override
  void update(void updates(SaveEntityParametersBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SaveEntityParameters build() {
    final _$result = _$v ??
        new _$SaveEntityParameters._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Create Session immutable class
///
class _$CreateSession extends CreateSession {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;

  factory _$CreateSession([void updates(CreateSessionBuilder b)]) =>
      (new CreateSessionBuilder()..update(updates)).build();

  _$CreateSession._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timeout})
      : super._();

  @override
  CreateSession rebuild(void updates(CreateSessionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CreateSessionBuilder toBuilder() => new CreateSessionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CreateSession &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == this.timeout;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timeout?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CreateSession')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', timeout))
        .toString();
  }
}

/// Create Session builder class
///
class CreateSessionBuilder implements Builder<CreateSession, CreateSessionBuilder>, ImcBuilderHeaderPart {
  _$CreateSession _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  CreateSessionBuilder();

  CreateSessionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CreateSession other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CreateSession;
  }

  @override
  void update(void updates(CreateSessionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CreateSession build() {
    final _$result = _$v ??
        new _$CreateSession._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Close Session immutable class
///
class _$CloseSession extends CloseSession {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sessid;

  factory _$CloseSession([void updates(CloseSessionBuilder b)]) =>
      (new CloseSessionBuilder()..update(updates)).build();

  _$CloseSession._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sessid})
      : super._();

  @override
  CloseSession rebuild(void updates(CloseSessionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  CloseSessionBuilder toBuilder() => new CloseSessionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CloseSession &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sessid == this.sessid;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        sessid?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CloseSession')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sessid', sessid))
        .toString();
  }
}

/// Close Session builder class
///
class CloseSessionBuilder implements Builder<CloseSession, CloseSessionBuilder>, ImcBuilderHeaderPart {
  _$CloseSession _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sessid;
  int get sessid => _$this._sessid;
  set sessid(int sessid) => _$this._sessid = sessid;

  CloseSessionBuilder();

  CloseSessionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sessid = _$v.sessid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CloseSession other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$CloseSession;
  }

  @override
  void update(void updates(CloseSessionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$CloseSession build() {
    final _$result = _$v ??
        new _$CloseSession._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sessid: sessid ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Session Subscription immutable class
///
class _$SessionSubscription extends SessionSubscription {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sessid;
  @override
  final String messages;

  factory _$SessionSubscription([void updates(SessionSubscriptionBuilder b)]) =>
      (new SessionSubscriptionBuilder()..update(updates)).build();

  _$SessionSubscription._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sessid,
      this.messages})
      : super._();

  @override
  SessionSubscription rebuild(void updates(SessionSubscriptionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SessionSubscriptionBuilder toBuilder() => new SessionSubscriptionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SessionSubscription &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sessid == this.sessid &&
        messages == this.messages;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        sessid?.hashCode), 
        messages?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SessionSubscription')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sessid', sessid)
          ..add('messages', messages))
        .toString();
  }
}

/// Session Subscription builder class
///
class SessionSubscriptionBuilder implements Builder<SessionSubscription, SessionSubscriptionBuilder>, ImcBuilderHeaderPart {
  _$SessionSubscription _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sessid;
  int get sessid => _$this._sessid;
  set sessid(int sessid) => _$this._sessid = sessid;

  String _messages;
  String get messages => _$this._messages;
  set messages(String messages) => _$this._messages = messages;

  SessionSubscriptionBuilder();

  SessionSubscriptionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sessid = _$v.sessid;
      _messages = _$v.messages;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SessionSubscription other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SessionSubscription;
  }

  @override
  void update(void updates(SessionSubscriptionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SessionSubscription build() {
    final _$result = _$v ??
        new _$SessionSubscription._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sessid: sessid ?? 0,
            messages: messages ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Session Keep-Alive immutable class
///
class _$SessionKeepAlive extends SessionKeepAlive {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sessid;

  factory _$SessionKeepAlive([void updates(SessionKeepAliveBuilder b)]) =>
      (new SessionKeepAliveBuilder()..update(updates)).build();

  _$SessionKeepAlive._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sessid})
      : super._();

  @override
  SessionKeepAlive rebuild(void updates(SessionKeepAliveBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SessionKeepAliveBuilder toBuilder() => new SessionKeepAliveBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SessionKeepAlive &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sessid == this.sessid;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        sessid?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SessionKeepAlive')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sessid', sessid))
        .toString();
  }
}

/// Session Keep-Alive builder class
///
class SessionKeepAliveBuilder implements Builder<SessionKeepAlive, SessionKeepAliveBuilder>, ImcBuilderHeaderPart {
  _$SessionKeepAlive _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sessid;
  int get sessid => _$this._sessid;
  set sessid(int sessid) => _$this._sessid = sessid;

  SessionKeepAliveBuilder();

  SessionKeepAliveBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sessid = _$v.sessid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SessionKeepAlive other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SessionKeepAlive;
  }

  @override
  void update(void updates(SessionKeepAliveBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SessionKeepAlive build() {
    final _$result = _$v ??
        new _$SessionKeepAlive._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sessid: sessid ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Session Status immutable class
///
class _$SessionStatus extends SessionStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sessid;
  @override
  final SessionStatusEnumStatus status;

  factory _$SessionStatus([void updates(SessionStatusBuilder b)]) =>
      (new SessionStatusBuilder()..update(updates)).build();

  _$SessionStatus._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sessid,
      this.status})
      : super._();

  @override
  SessionStatus rebuild(void updates(SessionStatusBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SessionStatusBuilder toBuilder() => new SessionStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SessionStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sessid == this.sessid &&
        status == this.status;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        sessid?.hashCode), 
        status?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SessionStatus')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sessid', sessid)
          ..add('status', status))
        .toString();
  }
}

/// Session Status builder class
///
class SessionStatusBuilder implements Builder<SessionStatus, SessionStatusBuilder>, ImcBuilderHeaderPart {
  _$SessionStatus _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sessid;
  int get sessid => _$this._sessid;
  set sessid(int sessid) => _$this._sessid = sessid;

  SessionStatusEnumStatus _status;
  SessionStatusEnumStatus get status => _$this._status;
  set status(SessionStatusEnumStatus status) => _$this._status = status;

  SessionStatusBuilder();

  SessionStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sessid = _$v.sessid;
      _status = _$v.status;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SessionStatus other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SessionStatus;
  }

  @override
  void update(void updates(SessionStatusBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SessionStatus build() {
    final _$result = _$v ??
        new _$SessionStatus._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sessid: sessid ?? 0,
            status: status ?? SessionStatusEnumStatus(0));
    replace(_$result);
    return _$result;
  }
}

/// Push Entity Parameters immutable class
///
class _$PushEntityParameters extends PushEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;

  factory _$PushEntityParameters([void updates(PushEntityParametersBuilder b)]) =>
      (new PushEntityParametersBuilder()..update(updates)).build();

  _$PushEntityParameters._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name})
      : super._();

  @override
  PushEntityParameters rebuild(void updates(PushEntityParametersBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PushEntityParametersBuilder toBuilder() => new PushEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PushEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PushEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name))
        .toString();
  }
}

/// Push Entity Parameters builder class
///
class PushEntityParametersBuilder implements Builder<PushEntityParameters, PushEntityParametersBuilder>, ImcBuilderHeaderPart {
  _$PushEntityParameters _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  PushEntityParametersBuilder();

  PushEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PushEntityParameters other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PushEntityParameters;
  }

  @override
  void update(void updates(PushEntityParametersBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PushEntityParameters build() {
    final _$result = _$v ??
        new _$PushEntityParameters._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Pop Entity Parameters immutable class
///
class _$PopEntityParameters extends PopEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;

  factory _$PopEntityParameters([void updates(PopEntityParametersBuilder b)]) =>
      (new PopEntityParametersBuilder()..update(updates)).build();

  _$PopEntityParameters._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name})
      : super._();

  @override
  PopEntityParameters rebuild(void updates(PopEntityParametersBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  PopEntityParametersBuilder toBuilder() => new PopEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PopEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PopEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name))
        .toString();
  }
}

/// Pop Entity Parameters builder class
///
class PopEntityParametersBuilder implements Builder<PopEntityParameters, PopEntityParametersBuilder>, ImcBuilderHeaderPart {
  _$PopEntityParameters _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  PopEntityParametersBuilder();

  PopEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PopEntityParameters other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$PopEntityParameters;
  }

  @override
  void update(void updates(PopEntityParametersBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$PopEntityParameters build() {
    final _$result = _$v ??
        new _$PopEntityParameters._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '');
    replace(_$result);
    return _$result;
  }
}

/// I/O Event immutable class
///
class _$IoEvent extends IoEvent {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final IoEventEnumType type;
  @override
  final String error;

  factory _$IoEvent([void updates(IoEventBuilder b)]) =>
      (new IoEventBuilder()..update(updates)).build();

  _$IoEvent._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.error})
      : super._();

  @override
  IoEvent rebuild(void updates(IoEventBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  IoEventBuilder toBuilder() => new IoEventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IoEvent &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        error == this.error;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode), 
        error?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IoEvent')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type)
          ..add('error', error))
        .toString();
  }
}

/// I/O Event builder class
///
class IoEventBuilder implements Builder<IoEvent, IoEventBuilder>, ImcBuilderHeaderPart {
  _$IoEvent _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  IoEventEnumType _type;
  IoEventEnumType get type => _$this._type;
  set type(IoEventEnumType type) => _$this._type = type;

  String _error;
  String get error => _$this._error;
  set error(String error) => _$this._error = error;

  IoEventBuilder();

  IoEventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _error = _$v.error;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IoEvent other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$IoEvent;
  }

  @override
  void update(void updates(IoEventBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$IoEvent build() {
    final _$result = _$v ??
        new _$IoEvent._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? IoEventEnumType(0),
            error: error ?? '');
    replace(_$result);
    return _$result;
  }
}

/// UamTxFrame immutable class
///
class _$UamTxFrame extends UamTxFrame {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final String sysDst;
  @override
  final UamTxFrameBitfieldFlags flags;
  @override
  final List<int> data;

  factory _$UamTxFrame([void updates(UamTxFrameBuilder b)]) =>
      (new UamTxFrameBuilder()..update(updates)).build();

  _$UamTxFrame._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.seq,
      this.sysDst,
      this.flags,
      this.data})
      : super._();

  @override
  UamTxFrame rebuild(void updates(UamTxFrameBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UamTxFrameBuilder toBuilder() => new UamTxFrameBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UamTxFrame &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == this.seq &&
        sysDst == this.sysDst &&
        flags == this.flags &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        seq?.hashCode), 
        sysDst?.hashCode), 
        flags?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UamTxFrame')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('seq', seq)
          ..add('sysDst', sysDst)
          ..add('flags', flags)
          ..add('data', data))
        .toString();
  }
}

/// UamTxFrame builder class
///
class UamTxFrameBuilder implements Builder<UamTxFrame, UamTxFrameBuilder>, ImcBuilderHeaderPart {
  _$UamTxFrame _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  String _sysDst;
  String get sysDst => _$this._sysDst;
  set sysDst(String sysDst) => _$this._sysDst = sysDst;

  UamTxFrameBitfieldFlags _flags;
  UamTxFrameBitfieldFlags get flags => _$this._flags;
  set flags(UamTxFrameBitfieldFlags flags) => _$this._flags = flags;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  UamTxFrameBuilder();

  UamTxFrameBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _sysDst = _$v.sysDst;
      _flags = _$v.flags;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UamTxFrame other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UamTxFrame;
  }

  @override
  void update(void updates(UamTxFrameBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UamTxFrame build() {
    final _$result = _$v ??
        new _$UamTxFrame._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            seq: seq ?? 0,
            sysDst: sysDst ?? '',
            flags: flags ?? UamTxFrameBitfieldFlags(0),
            data: data ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// UamRxFrame immutable class
///
class _$UamRxFrame extends UamRxFrame {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String sysSrc;
  @override
  final String sysDst;
  @override
  final UamRxFrameBitfieldFlags flags;
  @override
  final List<int> data;

  factory _$UamRxFrame([void updates(UamRxFrameBuilder b)]) =>
      (new UamRxFrameBuilder()..update(updates)).build();

  _$UamRxFrame._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.sysSrc,
      this.sysDst,
      this.flags,
      this.data})
      : super._();

  @override
  UamRxFrame rebuild(void updates(UamRxFrameBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UamRxFrameBuilder toBuilder() => new UamRxFrameBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UamRxFrame &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sysSrc == this.sysSrc &&
        sysDst == this.sysDst &&
        flags == this.flags &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        sysSrc?.hashCode), 
        sysDst?.hashCode), 
        flags?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UamRxFrame')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sysSrc', sysSrc)
          ..add('sysDst', sysDst)
          ..add('flags', flags)
          ..add('data', data))
        .toString();
  }
}

/// UamRxFrame builder class
///
class UamRxFrameBuilder implements Builder<UamRxFrame, UamRxFrameBuilder>, ImcBuilderHeaderPart {
  _$UamRxFrame _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _sysSrc;
  String get sysSrc => _$this._sysSrc;
  set sysSrc(String sysSrc) => _$this._sysSrc = sysSrc;

  String _sysDst;
  String get sysDst => _$this._sysDst;
  set sysDst(String sysDst) => _$this._sysDst = sysDst;

  UamRxFrameBitfieldFlags _flags;
  UamRxFrameBitfieldFlags get flags => _$this._flags;
  set flags(UamRxFrameBitfieldFlags flags) => _$this._flags = flags;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  UamRxFrameBuilder();

  UamRxFrameBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sysSrc = _$v.sysSrc;
      _sysDst = _$v.sysDst;
      _flags = _$v.flags;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UamRxFrame other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UamRxFrame;
  }

  @override
  void update(void updates(UamRxFrameBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UamRxFrame build() {
    final _$result = _$v ??
        new _$UamRxFrame._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sysSrc: sysSrc ?? '',
            sysDst: sysDst ?? '',
            flags: flags ?? UamRxFrameBitfieldFlags(0),
            data: data ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// UamTxStatus immutable class
///
class _$UamTxStatus extends UamTxStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final UamTxStatusEnumValue value;
  @override
  final String error;

  factory _$UamTxStatus([void updates(UamTxStatusBuilder b)]) =>
      (new UamTxStatusBuilder()..update(updates)).build();

  _$UamTxStatus._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.seq,
      this.value,
      this.error})
      : super._();

  @override
  UamTxStatus rebuild(void updates(UamTxStatusBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UamTxStatusBuilder toBuilder() => new UamTxStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UamTxStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == this.seq &&
        value == this.value &&
        error == this.error;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        seq?.hashCode), 
        value?.hashCode), 
        error?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UamTxStatus')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('seq', seq)
          ..add('value', value)
          ..add('error', error))
        .toString();
  }
}

/// UamTxStatus builder class
///
class UamTxStatusBuilder implements Builder<UamTxStatus, UamTxStatusBuilder>, ImcBuilderHeaderPart {
  _$UamTxStatus _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  UamTxStatusEnumValue _value;
  UamTxStatusEnumValue get value => _$this._value;
  set value(UamTxStatusEnumValue value) => _$this._value = value;

  String _error;
  String get error => _$this._error;
  set error(String error) => _$this._error = error;

  UamTxStatusBuilder();

  UamTxStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _value = _$v.value;
      _error = _$v.error;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UamTxStatus other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UamTxStatus;
  }

  @override
  void update(void updates(UamTxStatusBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UamTxStatus build() {
    final _$result = _$v ??
        new _$UamTxStatus._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            seq: seq ?? 0,
            value: value ?? UamTxStatusEnumValue(0),
            error: error ?? '');
    replace(_$result);
    return _$result;
  }
}

/// UamRxRange immutable class
///
class _$UamRxRange extends UamRxRange {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final String sys;
  @override
  final double value;

  factory _$UamRxRange([void updates(UamRxRangeBuilder b)]) =>
      (new UamRxRangeBuilder()..update(updates)).build();

  _$UamRxRange._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.seq,
      this.sys,
      this.value})
      : super._();

  @override
  UamRxRange rebuild(void updates(UamRxRangeBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UamRxRangeBuilder toBuilder() => new UamRxRangeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UamRxRange &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == this.seq &&
        sys == this.sys &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        seq?.hashCode), 
        sys?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UamRxRange')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('seq', seq)
          ..add('sys', sys)
          ..add('value', value))
        .toString();
  }
}

/// UamRxRange builder class
///
class UamRxRangeBuilder implements Builder<UamRxRange, UamRxRangeBuilder>, ImcBuilderHeaderPart {
  _$UamRxRange _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  String _sys;
  String get sys => _$this._sys;
  set sys(String sys) => _$this._sys = sys;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  UamRxRangeBuilder();

  UamRxRangeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _sys = _$v.sys;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UamRxRange other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UamRxRange;
  }

  @override
  void update(void updates(UamRxRangeBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UamRxRange build() {
    final _$result = _$v ??
        new _$UamRxRange._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            seq: seq ?? 0,
            sys: sys ?? '',
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Formation Control Parameters immutable class
///
class _$FormCtrlParam extends FormCtrlParam {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final FormCtrlParamEnumAction action;
  @override
  final double lonGain;
  @override
  final double latGain;
  @override
  final int bondThick;
  @override
  final double leadGain;
  @override
  final double deconflGain;

  factory _$FormCtrlParam([void updates(FormCtrlParamBuilder b)]) =>
      (new FormCtrlParamBuilder()..update(updates)).build();

  _$FormCtrlParam._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.action,
      this.lonGain,
      this.latGain,
      this.bondThick,
      this.leadGain,
      this.deconflGain})
      : super._();

  @override
  FormCtrlParam rebuild(void updates(FormCtrlParamBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormCtrlParamBuilder toBuilder() => new FormCtrlParamBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormCtrlParam &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        action == this.action &&
        lonGain == this.lonGain &&
        latGain == this.latGain &&
        bondThick == this.bondThick &&
        leadGain == this.leadGain &&
        deconflGain == this.deconflGain;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        action?.hashCode), 
        lonGain?.hashCode), 
        latGain?.hashCode), 
        bondThick?.hashCode), 
        leadGain?.hashCode), 
        deconflGain?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormCtrlParam')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('action', action)
          ..add('lonGain', lonGain)
          ..add('latGain', latGain)
          ..add('bondThick', bondThick)
          ..add('leadGain', leadGain)
          ..add('deconflGain', deconflGain))
        .toString();
  }
}

/// Formation Control Parameters builder class
///
class FormCtrlParamBuilder implements Builder<FormCtrlParam, FormCtrlParamBuilder>, ImcBuilderHeaderPart {
  _$FormCtrlParam _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  FormCtrlParamEnumAction _action;
  FormCtrlParamEnumAction get action => _$this._action;
  set action(FormCtrlParamEnumAction action) => _$this._action = action;

  double _lonGain;
  double get lonGain => _$this._lonGain;
  set lonGain(double lonGain) => _$this._lonGain = lonGain;

  double _latGain;
  double get latGain => _$this._latGain;
  set latGain(double latGain) => _$this._latGain = latGain;

  int _bondThick;
  int get bondThick => _$this._bondThick;
  set bondThick(int bondThick) => _$this._bondThick = bondThick;

  double _leadGain;
  double get leadGain => _$this._leadGain;
  set leadGain(double leadGain) => _$this._leadGain = leadGain;

  double _deconflGain;
  double get deconflGain => _$this._deconflGain;
  set deconflGain(double deconflGain) => _$this._deconflGain = deconflGain;

  FormCtrlParamBuilder();

  FormCtrlParamBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _action = _$v.action;
      _lonGain = _$v.lonGain;
      _latGain = _$v.latGain;
      _bondThick = _$v.bondThick;
      _leadGain = _$v.leadGain;
      _deconflGain = _$v.deconflGain;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormCtrlParam other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormCtrlParam;
  }

  @override
  void update(void updates(FormCtrlParamBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormCtrlParam build() {
    final _$result = _$v ??
        new _$FormCtrlParam._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            action: action ?? FormCtrlParamEnumAction(0),
            lonGain: lonGain ?? 0,
            latGain: latGain ?? 0,
            bondThick: bondThick ?? 0,
            leadGain: leadGain ?? 0,
            deconflGain: deconflGain ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Formation Evaluation Data immutable class
///
class _$FormationEval extends FormationEval {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double errMean;
  @override
  final double distMinAbs;
  @override
  final double distMinMean;

  factory _$FormationEval([void updates(FormationEvalBuilder b)]) =>
      (new FormationEvalBuilder()..update(updates)).build();

  _$FormationEval._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.errMean,
      this.distMinAbs,
      this.distMinMean})
      : super._();

  @override
  FormationEval rebuild(void updates(FormationEvalBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationEvalBuilder toBuilder() => new FormationEvalBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationEval &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        errMean == this.errMean &&
        distMinAbs == this.distMinAbs &&
        distMinMean == this.distMinMean;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        errMean?.hashCode), 
        distMinAbs?.hashCode), 
        distMinMean?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationEval')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('errMean', errMean)
          ..add('distMinAbs', distMinAbs)
          ..add('distMinMean', distMinMean))
        .toString();
  }
}

/// Formation Evaluation Data builder class
///
class FormationEvalBuilder implements Builder<FormationEval, FormationEvalBuilder>, ImcBuilderHeaderPart {
  _$FormationEval _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _errMean;
  double get errMean => _$this._errMean;
  set errMean(double errMean) => _$this._errMean = errMean;

  double _distMinAbs;
  double get distMinAbs => _$this._distMinAbs;
  set distMinAbs(double distMinAbs) => _$this._distMinAbs = distMinAbs;

  double _distMinMean;
  double get distMinMean => _$this._distMinMean;
  set distMinMean(double distMinMean) => _$this._distMinMean = distMinMean;

  FormationEvalBuilder();

  FormationEvalBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _errMean = _$v.errMean;
      _distMinAbs = _$v.distMinAbs;
      _distMinMean = _$v.distMinMean;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationEval other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormationEval;
  }

  @override
  void update(void updates(FormationEvalBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationEval build() {
    final _$result = _$v ??
        new _$FormationEval._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            errMean: errMean ?? 0,
            distMinAbs: distMinAbs ?? 0,
            distMinMean: distMinMean ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Formation Control Parameters immutable class
///
class _$FormationControlParams extends FormationControlParams {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final FormationControlParamsEnumAction action;
  @override
  final double lonGain;
  @override
  final double latGain;
  @override
  final double bondThick;
  @override
  final double leadGain;
  @override
  final double deconflGain;
  @override
  final double accelSwitchGain;
  @override
  final double safeDist;
  @override
  final double deconflictOffset;
  @override
  final double accelSafeMargin;
  @override
  final double accelLimX;

  factory _$FormationControlParams([void updates(FormationControlParamsBuilder b)]) =>
      (new FormationControlParamsBuilder()..update(updates)).build();

  _$FormationControlParams._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.action,
      this.lonGain,
      this.latGain,
      this.bondThick,
      this.leadGain,
      this.deconflGain,
      this.accelSwitchGain,
      this.safeDist,
      this.deconflictOffset,
      this.accelSafeMargin,
      this.accelLimX})
      : super._();

  @override
  FormationControlParams rebuild(void updates(FormationControlParamsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationControlParamsBuilder toBuilder() => new FormationControlParamsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationControlParams &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        action == this.action &&
        lonGain == this.lonGain &&
        latGain == this.latGain &&
        bondThick == this.bondThick &&
        leadGain == this.leadGain &&
        deconflGain == this.deconflGain &&
        accelSwitchGain == this.accelSwitchGain &&
        safeDist == this.safeDist &&
        deconflictOffset == this.deconflictOffset &&
        accelSafeMargin == this.accelSafeMargin &&
        accelLimX == this.accelLimX;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        action?.hashCode), 
        lonGain?.hashCode), 
        latGain?.hashCode), 
        bondThick?.hashCode), 
        leadGain?.hashCode), 
        deconflGain?.hashCode), 
        accelSwitchGain?.hashCode), 
        safeDist?.hashCode), 
        deconflictOffset?.hashCode), 
        accelSafeMargin?.hashCode), 
        accelLimX?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationControlParams')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('action', action)
          ..add('lonGain', lonGain)
          ..add('latGain', latGain)
          ..add('bondThick', bondThick)
          ..add('leadGain', leadGain)
          ..add('deconflGain', deconflGain)
          ..add('accelSwitchGain', accelSwitchGain)
          ..add('safeDist', safeDist)
          ..add('deconflictOffset', deconflictOffset)
          ..add('accelSafeMargin', accelSafeMargin)
          ..add('accelLimX', accelLimX))
        .toString();
  }
}

/// Formation Control Parameters builder class
///
class FormationControlParamsBuilder implements Builder<FormationControlParams, FormationControlParamsBuilder>, ImcBuilderHeaderPart {
  _$FormationControlParams _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  FormationControlParamsEnumAction _action;
  FormationControlParamsEnumAction get action => _$this._action;
  set action(FormationControlParamsEnumAction action) => _$this._action = action;

  double _lonGain;
  double get lonGain => _$this._lonGain;
  set lonGain(double lonGain) => _$this._lonGain = lonGain;

  double _latGain;
  double get latGain => _$this._latGain;
  set latGain(double latGain) => _$this._latGain = latGain;

  double _bondThick;
  double get bondThick => _$this._bondThick;
  set bondThick(double bondThick) => _$this._bondThick = bondThick;

  double _leadGain;
  double get leadGain => _$this._leadGain;
  set leadGain(double leadGain) => _$this._leadGain = leadGain;

  double _deconflGain;
  double get deconflGain => _$this._deconflGain;
  set deconflGain(double deconflGain) => _$this._deconflGain = deconflGain;

  double _accelSwitchGain;
  double get accelSwitchGain => _$this._accelSwitchGain;
  set accelSwitchGain(double accelSwitchGain) => _$this._accelSwitchGain = accelSwitchGain;

  double _safeDist;
  double get safeDist => _$this._safeDist;
  set safeDist(double safeDist) => _$this._safeDist = safeDist;

  double _deconflictOffset;
  double get deconflictOffset => _$this._deconflictOffset;
  set deconflictOffset(double deconflictOffset) => _$this._deconflictOffset = deconflictOffset;

  double _accelSafeMargin;
  double get accelSafeMargin => _$this._accelSafeMargin;
  set accelSafeMargin(double accelSafeMargin) => _$this._accelSafeMargin = accelSafeMargin;

  double _accelLimX;
  double get accelLimX => _$this._accelLimX;
  set accelLimX(double accelLimX) => _$this._accelLimX = accelLimX;

  FormationControlParamsBuilder();

  FormationControlParamsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _action = _$v.action;
      _lonGain = _$v.lonGain;
      _latGain = _$v.latGain;
      _bondThick = _$v.bondThick;
      _leadGain = _$v.leadGain;
      _deconflGain = _$v.deconflGain;
      _accelSwitchGain = _$v.accelSwitchGain;
      _safeDist = _$v.safeDist;
      _deconflictOffset = _$v.deconflictOffset;
      _accelSafeMargin = _$v.accelSafeMargin;
      _accelLimX = _$v.accelLimX;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationControlParams other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormationControlParams;
  }

  @override
  void update(void updates(FormationControlParamsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationControlParams build() {
    final _$result = _$v ??
        new _$FormationControlParams._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            action: action ?? FormationControlParamsEnumAction(0),
            lonGain: lonGain ?? 0,
            latGain: latGain ?? 0,
            bondThick: bondThick ?? 0,
            leadGain: leadGain ?? 0,
            deconflGain: deconflGain ?? 0,
            accelSwitchGain: accelSwitchGain ?? 0,
            safeDist: safeDist ?? 0,
            deconflictOffset: deconflictOffset ?? 0,
            accelSafeMargin: accelSafeMargin ?? 0,
            accelLimX: accelLimX ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Formation Evaluation Data immutable class
///
class _$FormationEvaluation extends FormationEvaluation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final FormationEvaluationEnumType type;
  @override
  final FormationEvaluationEnumOp op;
  @override
  final double errMean;
  @override
  final double distMinAbs;
  @override
  final double distMinMean;
  @override
  final double rollRateMean;
  @override
  final double time;
  @override
  final FormationControlParams controlParams;

  factory _$FormationEvaluation([void updates(FormationEvaluationBuilder b)]) =>
      (new FormationEvaluationBuilder()..update(updates)).build();

  _$FormationEvaluation._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.op,
      this.errMean,
      this.distMinAbs,
      this.distMinMean,
      this.rollRateMean,
      this.time,
      this.controlParams})
      : super._();

  @override
  FormationEvaluation rebuild(void updates(FormationEvaluationBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationEvaluationBuilder toBuilder() => new FormationEvaluationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationEvaluation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        op == this.op &&
        errMean == this.errMean &&
        distMinAbs == this.distMinAbs &&
        distMinMean == this.distMinMean &&
        rollRateMean == this.rollRateMean &&
        time == this.time &&
        controlParams == this.controlParams;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode), 
        op?.hashCode), 
        errMean?.hashCode), 
        distMinAbs?.hashCode), 
        distMinMean?.hashCode), 
        rollRateMean?.hashCode), 
        time?.hashCode), 
        controlParams?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationEvaluation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type)
          ..add('op', op)
          ..add('errMean', errMean)
          ..add('distMinAbs', distMinAbs)
          ..add('distMinMean', distMinMean)
          ..add('rollRateMean', rollRateMean)
          ..add('time', time)
          ..add('controlParams', controlParams))
        .toString();
  }
}

/// Formation Evaluation Data builder class
///
class FormationEvaluationBuilder implements Builder<FormationEvaluation, FormationEvaluationBuilder>, ImcBuilderHeaderPart {
  _$FormationEvaluation _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  FormationEvaluationEnumType _type;
  FormationEvaluationEnumType get type => _$this._type;
  set type(FormationEvaluationEnumType type) => _$this._type = type;

  FormationEvaluationEnumOp _op;
  FormationEvaluationEnumOp get op => _$this._op;
  set op(FormationEvaluationEnumOp op) => _$this._op = op;

  double _errMean;
  double get errMean => _$this._errMean;
  set errMean(double errMean) => _$this._errMean = errMean;

  double _distMinAbs;
  double get distMinAbs => _$this._distMinAbs;
  set distMinAbs(double distMinAbs) => _$this._distMinAbs = distMinAbs;

  double _distMinMean;
  double get distMinMean => _$this._distMinMean;
  set distMinMean(double distMinMean) => _$this._distMinMean = distMinMean;

  double _rollRateMean;
  double get rollRateMean => _$this._rollRateMean;
  set rollRateMean(double rollRateMean) => _$this._rollRateMean = rollRateMean;

  double _time;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  FormationControlParams _controlParams;
  FormationControlParams get controlParams => _$this._controlParams;
  set controlParams(FormationControlParams controlParams) => _$this._controlParams = controlParams;

  FormationEvaluationBuilder();

  FormationEvaluationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _op = _$v.op;
      _errMean = _$v.errMean;
      _distMinAbs = _$v.distMinAbs;
      _distMinMean = _$v.distMinMean;
      _rollRateMean = _$v.rollRateMean;
      _time = _$v.time;
      _controlParams = _$v.controlParams;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationEvaluation other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$FormationEvaluation;
  }

  @override
  void update(void updates(FormationEvaluationBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationEvaluation build() {
    final _$result = _$v ??
        new _$FormationEvaluation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? FormationEvaluationEnumType(0),
            op: op ?? FormationEvaluationEnumOp(0),
            errMean: errMean ?? 0,
            distMinAbs: distMinAbs ?? 0,
            distMinMean: distMinMean ?? 0,
            rollRateMean: rollRateMean ?? 0,
            time: time ?? 0,
            controlParams: controlParams);
    replace(_$result);
    return _$result;
  }
}

/// SOI Waypoint immutable class
///
class _$SoiWaypoint extends SoiWaypoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final int eta;
  @override
  final int duration;

  factory _$SoiWaypoint([void updates(SoiWaypointBuilder b)]) =>
      (new SoiWaypointBuilder()..update(updates)).build();

  _$SoiWaypoint._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.eta,
      this.duration})
      : super._();

  @override
  SoiWaypoint rebuild(void updates(SoiWaypointBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SoiWaypointBuilder toBuilder() => new SoiWaypointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoiWaypoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        lat == this.lat &&
        lon == this.lon &&
        eta == this.eta &&
        duration == this.duration;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        eta?.hashCode), 
        duration?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoiWaypoint')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('eta', eta)
          ..add('duration', duration))
        .toString();
  }
}

/// SOI Waypoint builder class
///
class SoiWaypointBuilder implements Builder<SoiWaypoint, SoiWaypointBuilder>, ImcBuilderHeaderPart {
  _$SoiWaypoint _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  int _eta;
  int get eta => _$this._eta;
  set eta(int eta) => _$this._eta = eta;

  int _duration;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  SoiWaypointBuilder();

  SoiWaypointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _eta = _$v.eta;
      _duration = _$v.duration;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoiWaypoint other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SoiWaypoint;
  }

  @override
  void update(void updates(SoiWaypointBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SoiWaypoint build() {
    final _$result = _$v ??
        new _$SoiWaypoint._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            eta: eta ?? 0,
            duration: duration ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// SOI Plan immutable class
///
class _$SoiPlan extends SoiPlan {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int planId;
  @override
  final List<SoiWaypoint> waypoints;

  factory _$SoiPlan([void updates(SoiPlanBuilder b)]) =>
      (new SoiPlanBuilder()..update(updates)).build();

  _$SoiPlan._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.planId,
      this.waypoints})
      : super._();

  @override
  SoiPlan rebuild(void updates(SoiPlanBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SoiPlanBuilder toBuilder() => new SoiPlanBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoiPlan &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        planId == this.planId &&
        waypoints == this.waypoints;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        planId?.hashCode), 
        waypoints?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoiPlan')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('planId', planId)
          ..add('waypoints', waypoints))
        .toString();
  }
}

/// SOI Plan builder class
///
class SoiPlanBuilder implements Builder<SoiPlan, SoiPlanBuilder>, ImcBuilderHeaderPart {
  _$SoiPlan _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _planId;
  int get planId => _$this._planId;
  set planId(int planId) => _$this._planId = planId;

  List<SoiWaypoint> _waypoints;
  List<SoiWaypoint> get waypoints => _$this._waypoints;
  set waypoints(List<SoiWaypoint> waypoints) => _$this._waypoints = waypoints;

  SoiPlanBuilder();

  SoiPlanBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _planId = _$v.planId;
      _waypoints = _$v.waypoints;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoiPlan other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SoiPlan;
  }

  @override
  void update(void updates(SoiPlanBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SoiPlan build() {
    final _$result = _$v ??
        new _$SoiPlan._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            planId: planId ?? 0,
            waypoints: waypoints ?? List<SoiWaypoint>(0));
    replace(_$result);
    return _$result;
  }
}

/// SOI Command immutable class
///
class _$SoiCommand extends SoiCommand {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final SoiCommandEnumType type;
  @override
  final SoiCommandEnumCommand command;
  @override
  final String settings;
  @override
  final SoiPlan plan;
  @override
  final String info;

  factory _$SoiCommand([void updates(SoiCommandBuilder b)]) =>
      (new SoiCommandBuilder()..update(updates)).build();

  _$SoiCommand._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.type,
      this.command,
      this.settings,
      this.plan,
      this.info})
      : super._();

  @override
  SoiCommand rebuild(void updates(SoiCommandBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SoiCommandBuilder toBuilder() => new SoiCommandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoiCommand &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == this.type &&
        command == this.command &&
        settings == this.settings &&
        plan == this.plan &&
        info == this.info;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        type?.hashCode), 
        command?.hashCode), 
        settings?.hashCode), 
        plan?.hashCode), 
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoiCommand')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', type)
          ..add('command', command)
          ..add('settings', settings)
          ..add('plan', plan)
          ..add('info', info))
        .toString();
  }
}

/// SOI Command builder class
///
class SoiCommandBuilder implements Builder<SoiCommand, SoiCommandBuilder>, ImcBuilderHeaderPart {
  _$SoiCommand _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  SoiCommandEnumType _type;
  SoiCommandEnumType get type => _$this._type;
  set type(SoiCommandEnumType type) => _$this._type = type;

  SoiCommandEnumCommand _command;
  SoiCommandEnumCommand get command => _$this._command;
  set command(SoiCommandEnumCommand command) => _$this._command = command;

  String _settings;
  String get settings => _$this._settings;
  set settings(String settings) => _$this._settings = settings;

  SoiPlan _plan;
  SoiPlan get plan => _$this._plan;
  set plan(SoiPlan plan) => _$this._plan = plan;

  String _info;
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  SoiCommandBuilder();

  SoiCommandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _command = _$v.command;
      _settings = _$v.settings;
      _plan = _$v.plan;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoiCommand other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SoiCommand;
  }

  @override
  void update(void updates(SoiCommandBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SoiCommand build() {
    final _$result = _$v ??
        new _$SoiCommand._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? SoiCommandEnumType(0),
            command: command ?? SoiCommandEnumCommand(0),
            settings: settings ?? '',
            plan: plan,
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// SOI State immutable class
///
class _$SoiState extends SoiState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final SoiStateEnumState state;
  @override
  final int planId;
  @override
  final int wptId;
  @override
  final int settingsChk;

  factory _$SoiState([void updates(SoiStateBuilder b)]) =>
      (new SoiStateBuilder()..update(updates)).build();

  _$SoiState._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.state,
      this.planId,
      this.wptId,
      this.settingsChk})
      : super._();

  @override
  SoiState rebuild(void updates(SoiStateBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SoiStateBuilder toBuilder() => new SoiStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoiState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == this.state &&
        planId == this.planId &&
        wptId == this.wptId &&
        settingsChk == this.settingsChk;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        state?.hashCode), 
        planId?.hashCode), 
        wptId?.hashCode), 
        settingsChk?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoiState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', state)
          ..add('planId', planId)
          ..add('wptId', wptId)
          ..add('settingsChk', settingsChk))
        .toString();
  }
}

/// SOI State builder class
///
class SoiStateBuilder implements Builder<SoiState, SoiStateBuilder>, ImcBuilderHeaderPart {
  _$SoiState _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  SoiStateEnumState _state;
  SoiStateEnumState get state => _$this._state;
  set state(SoiStateEnumState state) => _$this._state = state;

  int _planId;
  int get planId => _$this._planId;
  set planId(int planId) => _$this._planId = planId;

  int _wptId;
  int get wptId => _$this._wptId;
  set wptId(int wptId) => _$this._wptId = wptId;

  int _settingsChk;
  int get settingsChk => _$this._settingsChk;
  set settingsChk(int settingsChk) => _$this._settingsChk = settingsChk;

  SoiStateBuilder();

  SoiStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _planId = _$v.planId;
      _wptId = _$v.wptId;
      _settingsChk = _$v.settingsChk;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoiState other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SoiState;
  }

  @override
  void update(void updates(SoiStateBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SoiState build() {
    final _$result = _$v ??
        new _$SoiState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? SoiStateEnumState(0),
            planId: planId ?? 0,
            wptId: wptId ?? 0,
            settingsChk: settingsChk ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Message Fragment immutable class
///
class _$MessagePart extends MessagePart {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int uid;
  @override
  final int fragNumber;
  @override
  final int numFrags;
  @override
  final List<int> data;

  factory _$MessagePart([void updates(MessagePartBuilder b)]) =>
      (new MessagePartBuilder()..update(updates)).build();

  _$MessagePart._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.uid,
      this.fragNumber,
      this.numFrags,
      this.data})
      : super._();

  @override
  MessagePart rebuild(void updates(MessagePartBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  MessagePartBuilder toBuilder() => new MessagePartBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MessagePart &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        uid == this.uid &&
        fragNumber == this.fragNumber &&
        numFrags == this.numFrags &&
        data == this.data;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        uid?.hashCode), 
        fragNumber?.hashCode), 
        numFrags?.hashCode), 
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MessagePart')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('uid', uid)
          ..add('fragNumber', fragNumber)
          ..add('numFrags', numFrags)
          ..add('data', data))
        .toString();
  }
}

/// Message Fragment builder class
///
class MessagePartBuilder implements Builder<MessagePart, MessagePartBuilder>, ImcBuilderHeaderPart {
  _$MessagePart _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _uid;
  int get uid => _$this._uid;
  set uid(int uid) => _$this._uid = uid;

  int _fragNumber;
  int get fragNumber => _$this._fragNumber;
  set fragNumber(int fragNumber) => _$this._fragNumber = fragNumber;

  int _numFrags;
  int get numFrags => _$this._numFrags;
  set numFrags(int numFrags) => _$this._numFrags = numFrags;

  List<int> _data;
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  MessagePartBuilder();

  MessagePartBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _uid = _$v.uid;
      _fragNumber = _$v.fragNumber;
      _numFrags = _$v.numFrags;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MessagePart other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$MessagePart;
  }

  @override
  void update(void updates(MessagePartBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$MessagePart build() {
    final _$result = _$v ??
        new _$MessagePart._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            uid: uid ?? 0,
            fragNumber: fragNumber ?? 0,
            numFrags: numFrags ?? 0,
            data: data ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// Neptus Blob immutable class
///
class _$NeptusBlob extends NeptusBlob {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String contentType;
  @override
  final List<int> content;

  factory _$NeptusBlob([void updates(NeptusBlobBuilder b)]) =>
      (new NeptusBlobBuilder()..update(updates)).build();

  _$NeptusBlob._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.contentType,
      this.content})
      : super._();

  @override
  NeptusBlob rebuild(void updates(NeptusBlobBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  NeptusBlobBuilder toBuilder() => new NeptusBlobBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is NeptusBlob &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        contentType == this.contentType &&
        content == this.content;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        contentType?.hashCode), 
        content?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('NeptusBlob')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('contentType', contentType)
          ..add('content', content))
        .toString();
  }
}

/// Neptus Blob builder class
///
class NeptusBlobBuilder implements Builder<NeptusBlob, NeptusBlobBuilder>, ImcBuilderHeaderPart {
  _$NeptusBlob _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _contentType;
  String get contentType => _$this._contentType;
  set contentType(String contentType) => _$this._contentType = contentType;

  List<int> _content;
  List<int> get content => _$this._content;
  set content(List<int> content) => _$this._content = content;

  NeptusBlobBuilder();

  NeptusBlobBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _contentType = _$v.contentType;
      _content = _$v.content;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(NeptusBlob other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$NeptusBlob;
  }

  @override
  void update(void updates(NeptusBlobBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$NeptusBlob build() {
    final _$result = _$v ??
        new _$NeptusBlob._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            contentType: contentType ?? '',
            content: content ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// Aborted immutable class
///
class _$Aborted extends Aborted {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$Aborted([void updates(AbortedBuilder b)]) =>
      (new AbortedBuilder()..update(updates)).build();

  _$Aborted._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  Aborted rebuild(void updates(AbortedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  AbortedBuilder toBuilder() => new AbortedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Aborted &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Aborted')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Aborted builder class
///
class AbortedBuilder implements Builder<Aborted, AbortedBuilder>, ImcBuilderHeaderPart {
  _$Aborted _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AbortedBuilder();

  AbortedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Aborted other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Aborted;
  }

  @override
  void update(void updates(AbortedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Aborted build() {
    final _$result = _$v ??
        new _$Aborted._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// USBL Angles immutable class
///
class _$UsblAngles extends UsblAngles {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int target;
  @override
  final double bearing;
  @override
  final double elevation;

  factory _$UsblAngles([void updates(UsblAnglesBuilder b)]) =>
      (new UsblAnglesBuilder()..update(updates)).build();

  _$UsblAngles._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.target,
      this.bearing,
      this.elevation})
      : super._();

  @override
  UsblAngles rebuild(void updates(UsblAnglesBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblAnglesBuilder toBuilder() => new UsblAnglesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblAngles &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == this.target &&
        bearing == this.bearing &&
        elevation == this.elevation;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        target?.hashCode), 
        bearing?.hashCode), 
        elevation?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblAngles')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('target', target)
          ..add('bearing', bearing)
          ..add('elevation', elevation))
        .toString();
  }
}

/// USBL Angles builder class
///
class UsblAnglesBuilder implements Builder<UsblAngles, UsblAnglesBuilder>, ImcBuilderHeaderPart {
  _$UsblAngles _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _target;
  int get target => _$this._target;
  set target(int target) => _$this._target = target;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _elevation;
  double get elevation => _$this._elevation;
  set elevation(double elevation) => _$this._elevation = elevation;

  UsblAnglesBuilder();

  UsblAnglesBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _bearing = _$v.bearing;
      _elevation = _$v.elevation;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblAngles other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblAngles;
  }

  @override
  void update(void updates(UsblAnglesBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblAngles build() {
    final _$result = _$v ??
        new _$UsblAngles._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            target: target ?? 0,
            bearing: bearing ?? 0,
            elevation: elevation ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// USBL Position immutable class
///
class _$UsblPosition extends UsblPosition {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int target;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$UsblPosition([void updates(UsblPositionBuilder b)]) =>
      (new UsblPositionBuilder()..update(updates)).build();

  _$UsblPosition._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.target,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  UsblPosition rebuild(void updates(UsblPositionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblPositionBuilder toBuilder() => new UsblPositionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblPosition &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == this.target &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        target?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblPosition')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('target', target)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// USBL Position builder class
///
class UsblPositionBuilder implements Builder<UsblPosition, UsblPositionBuilder>, ImcBuilderHeaderPart {
  _$UsblPosition _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _target;
  int get target => _$this._target;
  set target(int target) => _$this._target = target;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  UsblPositionBuilder();

  UsblPositionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblPosition other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblPosition;
  }

  @override
  void update(void updates(UsblPositionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblPosition build() {
    final _$result = _$v ??
        new _$UsblPosition._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            target: target ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// USBL Fix immutable class
///
class _$UsblFix extends UsblFix {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int target;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double z;

  factory _$UsblFix([void updates(UsblFixBuilder b)]) =>
      (new UsblFixBuilder()..update(updates)).build();

  _$UsblFix._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.target,
      this.lat,
      this.lon,
      this.zUnits,
      this.z})
      : super._();

  @override
  UsblFix rebuild(void updates(UsblFixBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblFixBuilder toBuilder() => new UsblFixBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblFix &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == this.target &&
        lat == this.lat &&
        lon == this.lon &&
        zUnits == this.zUnits &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        target?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        zUnits?.hashCode), 
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblFix')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('target', target)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('zUnits', zUnits)
          ..add('z', z))
        .toString();
  }
}

/// USBL Fix builder class
///
class UsblFixBuilder implements Builder<UsblFix, UsblFixBuilder>, ImcBuilderHeaderPart {
  _$UsblFix _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _target;
  int get target => _$this._target;
  set target(int target) => _$this._target = target;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  UsblFixBuilder();

  UsblFixBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _zUnits = _$v.zUnits;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblFix other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblFix;
  }

  @override
  void update(void updates(UsblFixBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblFix build() {
    final _$result = _$v ??
        new _$UsblFix._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            target: target ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Parameters XML immutable class
///
class _$ParametersXml extends ParametersXml {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String locale;
  @override
  final List<int> config;

  factory _$ParametersXml([void updates(ParametersXmlBuilder b)]) =>
      (new ParametersXmlBuilder()..update(updates)).build();

  _$ParametersXml._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.locale,
      this.config})
      : super._();

  @override
  ParametersXml rebuild(void updates(ParametersXmlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ParametersXmlBuilder toBuilder() => new ParametersXmlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ParametersXml &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        locale == this.locale &&
        config == this.config;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        locale?.hashCode), 
        config?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ParametersXml')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('locale', locale)
          ..add('config', config))
        .toString();
  }
}

/// Parameters XML builder class
///
class ParametersXmlBuilder implements Builder<ParametersXml, ParametersXmlBuilder>, ImcBuilderHeaderPart {
  _$ParametersXml _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _locale;
  String get locale => _$this._locale;
  set locale(String locale) => _$this._locale = locale;

  List<int> _config;
  List<int> get config => _$this._config;
  set config(List<int> config) => _$this._config = config;

  ParametersXmlBuilder();

  ParametersXmlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _locale = _$v.locale;
      _config = _$v.config;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ParametersXml other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ParametersXml;
  }

  @override
  void update(void updates(ParametersXmlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ParametersXml build() {
    final _$result = _$v ??
        new _$ParametersXml._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            locale: locale ?? '',
            config: config ?? List<int>(0));
    replace(_$result);
    return _$result;
  }
}

/// Get Parameters XML immutable class
///
class _$GetParametersXml extends GetParametersXml {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;


  factory _$GetParametersXml([void updates(GetParametersXmlBuilder b)]) =>
      (new GetParametersXmlBuilder()..update(updates)).build();

  _$GetParametersXml._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId})
      : super._();

  @override
  GetParametersXml rebuild(void updates(GetParametersXmlBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GetParametersXmlBuilder toBuilder() => new GetParametersXmlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GetParametersXml &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GetParametersXml')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Get Parameters XML builder class
///
class GetParametersXmlBuilder implements Builder<GetParametersXml, GetParametersXmlBuilder>, ImcBuilderHeaderPart {
  _$GetParametersXml _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GetParametersXmlBuilder();

  GetParametersXmlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GetParametersXml other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GetParametersXml;
  }

  @override
  void update(void updates(GetParametersXmlBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GetParametersXml build() {
    final _$result = _$v ??
        new _$GetParametersXml._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Set Image Coordinates immutable class
///
class _$SetImageCoords extends SetImageCoords {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int camId;
  @override
  final int x;
  @override
  final int y;

  factory _$SetImageCoords([void updates(SetImageCoordsBuilder b)]) =>
      (new SetImageCoordsBuilder()..update(updates)).build();

  _$SetImageCoords._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.camId,
      this.x,
      this.y})
      : super._();

  @override
  SetImageCoords rebuild(void updates(SetImageCoordsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SetImageCoordsBuilder toBuilder() => new SetImageCoordsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetImageCoords &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        camId == this.camId &&
        x == this.x &&
        y == this.y;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        camId?.hashCode), 
        x?.hashCode), 
        y?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetImageCoords')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('camId', camId)
          ..add('x', x)
          ..add('y', y))
        .toString();
  }
}

/// Set Image Coordinates builder class
///
class SetImageCoordsBuilder implements Builder<SetImageCoords, SetImageCoordsBuilder>, ImcBuilderHeaderPart {
  _$SetImageCoords _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _camId;
  int get camId => _$this._camId;
  set camId(int camId) => _$this._camId = camId;

  int _x;
  int get x => _$this._x;
  set x(int x) => _$this._x = x;

  int _y;
  int get y => _$this._y;
  set y(int y) => _$this._y = y;

  SetImageCoordsBuilder();

  SetImageCoordsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _camId = _$v.camId;
      _x = _$v.x;
      _y = _$v.y;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetImageCoords other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SetImageCoords;
  }

  @override
  void update(void updates(SetImageCoordsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SetImageCoords build() {
    final _$result = _$v ??
        new _$SetImageCoords._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            camId: camId ?? 0,
            x: x ?? 0,
            y: y ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Get Image Coordinates immutable class
///
class _$GetImageCoords extends GetImageCoords {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int camId;
  @override
  final int x;
  @override
  final int y;

  factory _$GetImageCoords([void updates(GetImageCoordsBuilder b)]) =>
      (new GetImageCoordsBuilder()..update(updates)).build();

  _$GetImageCoords._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.camId,
      this.x,
      this.y})
      : super._();

  @override
  GetImageCoords rebuild(void updates(GetImageCoordsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GetImageCoordsBuilder toBuilder() => new GetImageCoordsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GetImageCoords &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        camId == this.camId &&
        x == this.x &&
        y == this.y;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        camId?.hashCode), 
        x?.hashCode), 
        y?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GetImageCoords')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('camId', camId)
          ..add('x', x)
          ..add('y', y))
        .toString();
  }
}

/// Get Image Coordinates builder class
///
class GetImageCoordsBuilder implements Builder<GetImageCoords, GetImageCoordsBuilder>, ImcBuilderHeaderPart {
  _$GetImageCoords _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _camId;
  int get camId => _$this._camId;
  set camId(int camId) => _$this._camId = camId;

  int _x;
  int get x => _$this._x;
  set x(int x) => _$this._x = x;

  int _y;
  int get y => _$this._y;
  set y(int y) => _$this._y = y;

  GetImageCoordsBuilder();

  GetImageCoordsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _camId = _$v.camId;
      _x = _$v.x;
      _y = _$v.y;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GetImageCoords other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GetImageCoords;
  }

  @override
  void update(void updates(GetImageCoordsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GetImageCoords build() {
    final _$result = _$v ??
        new _$GetImageCoords._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            camId: camId ?? 0,
            x: x ?? 0,
            y: y ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Get World Coordinates immutable class
///
class _$GetWorldCoordinates extends GetWorldCoordinates {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final BooleanEnum tracking;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$GetWorldCoordinates([void updates(GetWorldCoordinatesBuilder b)]) =>
      (new GetWorldCoordinatesBuilder()..update(updates)).build();

  _$GetWorldCoordinates._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.tracking,
      this.lat,
      this.lon,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  GetWorldCoordinates rebuild(void updates(GetWorldCoordinatesBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  GetWorldCoordinatesBuilder toBuilder() => new GetWorldCoordinatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GetWorldCoordinates &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        tracking == this.tracking &&
        lat == this.lat &&
        lon == this.lon &&
        x == this.x &&
        y == this.y &&
        z == this.z;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        tracking?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GetWorldCoordinates')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('tracking', tracking)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z))
        .toString();
  }
}

/// Get World Coordinates builder class
///
class GetWorldCoordinatesBuilder implements Builder<GetWorldCoordinates, GetWorldCoordinatesBuilder>, ImcBuilderHeaderPart {
  _$GetWorldCoordinates _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  BooleanEnum _tracking;
  BooleanEnum get tracking => _$this._tracking;
  set tracking(BooleanEnum tracking) => _$this._tracking = tracking;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  GetWorldCoordinatesBuilder();

  GetWorldCoordinatesBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _tracking = _$v.tracking;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GetWorldCoordinates other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$GetWorldCoordinates;
  }

  @override
  void update(void updates(GetWorldCoordinatesBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$GetWorldCoordinates build() {
    final _$result = _$v ??
        new _$GetWorldCoordinates._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            tracking: tracking ?? BooleanEnum(0),
            lat: lat ?? 0,
            lon: lon ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// USBL Angles Extended immutable class
///
class _$UsblAnglesExtended extends UsblAnglesExtended {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String target;
  @override
  final double lbearing;
  @override
  final double lelevation;
  @override
  final double bearing;
  @override
  final double elevation;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double accuracy;

  factory _$UsblAnglesExtended([void updates(UsblAnglesExtendedBuilder b)]) =>
      (new UsblAnglesExtendedBuilder()..update(updates)).build();

  _$UsblAnglesExtended._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.target,
      this.lbearing,
      this.lelevation,
      this.bearing,
      this.elevation,
      this.phi,
      this.theta,
      this.psi,
      this.accuracy})
      : super._();

  @override
  UsblAnglesExtended rebuild(void updates(UsblAnglesExtendedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblAnglesExtendedBuilder toBuilder() => new UsblAnglesExtendedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblAnglesExtended &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == this.target &&
        lbearing == this.lbearing &&
        lelevation == this.lelevation &&
        bearing == this.bearing &&
        elevation == this.elevation &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi &&
        accuracy == this.accuracy;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        target?.hashCode), 
        lbearing?.hashCode), 
        lelevation?.hashCode), 
        bearing?.hashCode), 
        elevation?.hashCode), 
        phi?.hashCode), 
        theta?.hashCode), 
        psi?.hashCode), 
        accuracy?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblAnglesExtended')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('target', target)
          ..add('lbearing', lbearing)
          ..add('lelevation', lelevation)
          ..add('bearing', bearing)
          ..add('elevation', elevation)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi)
          ..add('accuracy', accuracy))
        .toString();
  }
}

/// USBL Angles Extended builder class
///
class UsblAnglesExtendedBuilder implements Builder<UsblAnglesExtended, UsblAnglesExtendedBuilder>, ImcBuilderHeaderPart {
  _$UsblAnglesExtended _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _target;
  String get target => _$this._target;
  set target(String target) => _$this._target = target;

  double _lbearing;
  double get lbearing => _$this._lbearing;
  set lbearing(double lbearing) => _$this._lbearing = lbearing;

  double _lelevation;
  double get lelevation => _$this._lelevation;
  set lelevation(double lelevation) => _$this._lelevation = lelevation;

  double _bearing;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _elevation;
  double get elevation => _$this._elevation;
  set elevation(double elevation) => _$this._elevation = elevation;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _accuracy;
  double get accuracy => _$this._accuracy;
  set accuracy(double accuracy) => _$this._accuracy = accuracy;

  UsblAnglesExtendedBuilder();

  UsblAnglesExtendedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _lbearing = _$v.lbearing;
      _lelevation = _$v.lelevation;
      _bearing = _$v.bearing;
      _elevation = _$v.elevation;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _accuracy = _$v.accuracy;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblAnglesExtended other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblAnglesExtended;
  }

  @override
  void update(void updates(UsblAnglesExtendedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblAnglesExtended build() {
    final _$result = _$v ??
        new _$UsblAnglesExtended._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            target: target ?? '',
            lbearing: lbearing ?? 0,
            lelevation: lelevation ?? 0,
            bearing: bearing ?? 0,
            elevation: elevation ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0,
            accuracy: accuracy ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// USBL Position Extended immutable class
///
class _$UsblPositionExtended extends UsblPositionExtended {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String target;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double n;
  @override
  final double e;
  @override
  final double d;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double accuracy;

  factory _$UsblPositionExtended([void updates(UsblPositionExtendedBuilder b)]) =>
      (new UsblPositionExtendedBuilder()..update(updates)).build();

  _$UsblPositionExtended._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.target,
      this.x,
      this.y,
      this.z,
      this.n,
      this.e,
      this.d,
      this.phi,
      this.theta,
      this.psi,
      this.accuracy})
      : super._();

  @override
  UsblPositionExtended rebuild(void updates(UsblPositionExtendedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblPositionExtendedBuilder toBuilder() => new UsblPositionExtendedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblPositionExtended &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == this.target &&
        x == this.x &&
        y == this.y &&
        z == this.z &&
        n == this.n &&
        e == this.e &&
        d == this.d &&
        phi == this.phi &&
        theta == this.theta &&
        psi == this.psi &&
        accuracy == this.accuracy;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        target?.hashCode), 
        x?.hashCode), 
        y?.hashCode), 
        z?.hashCode), 
        n?.hashCode), 
        e?.hashCode), 
        d?.hashCode), 
        phi?.hashCode), 
        theta?.hashCode), 
        psi?.hashCode), 
        accuracy?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblPositionExtended')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('target', target)
          ..add('x', x)
          ..add('y', y)
          ..add('z', z)
          ..add('n', n)
          ..add('e', e)
          ..add('d', d)
          ..add('phi', phi)
          ..add('theta', theta)
          ..add('psi', psi)
          ..add('accuracy', accuracy))
        .toString();
  }
}

/// USBL Position Extended builder class
///
class UsblPositionExtendedBuilder implements Builder<UsblPositionExtended, UsblPositionExtendedBuilder>, ImcBuilderHeaderPart {
  _$UsblPositionExtended _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _target;
  String get target => _$this._target;
  set target(String target) => _$this._target = target;

  double _x;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _n;
  double get n => _$this._n;
  set n(double n) => _$this._n = n;

  double _e;
  double get e => _$this._e;
  set e(double e) => _$this._e = e;

  double _d;
  double get d => _$this._d;
  set d(double d) => _$this._d = d;

  double _phi;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _accuracy;
  double get accuracy => _$this._accuracy;
  set accuracy(double accuracy) => _$this._accuracy = accuracy;

  UsblPositionExtendedBuilder();

  UsblPositionExtendedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _n = _$v.n;
      _e = _$v.e;
      _d = _$v.d;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _accuracy = _$v.accuracy;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblPositionExtended other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblPositionExtended;
  }

  @override
  void update(void updates(UsblPositionExtendedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblPositionExtended build() {
    final _$result = _$v ??
        new _$UsblPositionExtended._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            target: target ?? '',
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            n: n ?? 0,
            e: e ?? 0,
            d: d ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0,
            accuracy: accuracy ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// USBL Fix Extended immutable class
///
class _$UsblFixExtended extends UsblFixExtended {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String target;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double z;
  @override
  final double accuracy;

  factory _$UsblFixExtended([void updates(UsblFixExtendedBuilder b)]) =>
      (new UsblFixExtendedBuilder()..update(updates)).build();

  _$UsblFixExtended._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.target,
      this.lat,
      this.lon,
      this.zUnits,
      this.z,
      this.accuracy})
      : super._();

  @override
  UsblFixExtended rebuild(void updates(UsblFixExtendedBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblFixExtendedBuilder toBuilder() => new UsblFixExtendedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblFixExtended &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == this.target &&
        lat == this.lat &&
        lon == this.lon &&
        zUnits == this.zUnits &&
        z == this.z &&
        accuracy == this.accuracy;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        target?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        zUnits?.hashCode), 
        z?.hashCode), 
        accuracy?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblFixExtended')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('target', target)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('zUnits', zUnits)
          ..add('z', z)
          ..add('accuracy', accuracy))
        .toString();
  }
}

/// USBL Fix Extended builder class
///
class UsblFixExtendedBuilder implements Builder<UsblFixExtended, UsblFixExtendedBuilder>, ImcBuilderHeaderPart {
  _$UsblFixExtended _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _target;
  String get target => _$this._target;
  set target(String target) => _$this._target = target;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _accuracy;
  double get accuracy => _$this._accuracy;
  set accuracy(double accuracy) => _$this._accuracy = accuracy;

  UsblFixExtendedBuilder();

  UsblFixExtendedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _zUnits = _$v.zUnits;
      _z = _$v.z;
      _accuracy = _$v.accuracy;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblFixExtended other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblFixExtended;
  }

  @override
  void update(void updates(UsblFixExtendedBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblFixExtended build() {
    final _$result = _$v ??
        new _$UsblFixExtended._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            target: target ?? '',
            lat: lat ?? 0,
            lon: lon ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            z: z ?? 0,
            accuracy: accuracy ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// USBL Modem Configuration immutable class
///
class _$UsblModem extends UsblModem {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;

  factory _$UsblModem([void updates(UsblModemBuilder b)]) =>
      (new UsblModemBuilder()..update(updates)).build();

  _$UsblModem._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.name,
      this.lat,
      this.lon,
      this.z,
      this.zUnits})
      : super._();

  @override
  UsblModem rebuild(void updates(UsblModemBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblModemBuilder toBuilder() => new UsblModemBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblModem &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == this.name &&
        lat == this.lat &&
        lon == this.lon &&
        z == this.z &&
        zUnits == this.zUnits;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        name?.hashCode), 
        lat?.hashCode), 
        lon?.hashCode), 
        z?.hashCode), 
        zUnits?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblModem')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', name)
          ..add('lat', lat)
          ..add('lon', lon)
          ..add('z', z)
          ..add('zUnits', zUnits))
        .toString();
  }
}

/// USBL Modem Configuration builder class
///
class UsblModemBuilder implements Builder<UsblModem, UsblModemBuilder>, ImcBuilderHeaderPart {
  _$UsblModem _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name;
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  double _lat;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits;
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  UsblModemBuilder();

  UsblModemBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblModem other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblModem;
  }

  @override
  void update(void updates(UsblModemBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblModem build() {
    final _$result = _$v ??
        new _$UsblModem._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0));
    replace(_$result);
    return _$result;
  }
}

/// USBL Configuration immutable class
///
class _$UsblConfig extends UsblConfig {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final UsblConfigEnumOp op;
  @override
  final List<UsblModem> modems;

  factory _$UsblConfig([void updates(UsblConfigBuilder b)]) =>
      (new UsblConfigBuilder()..update(updates)).build();

  _$UsblConfig._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.op,
      this.modems})
      : super._();

  @override
  UsblConfig rebuild(void updates(UsblConfigBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblConfigBuilder toBuilder() => new UsblConfigBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblConfig &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == this.op &&
        modems == this.modems;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        op?.hashCode), 
        modems?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblConfig')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', op)
          ..add('modems', modems))
        .toString();
  }
}

/// USBL Configuration builder class
///
class UsblConfigBuilder implements Builder<UsblConfig, UsblConfigBuilder>, ImcBuilderHeaderPart {
  _$UsblConfig _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  UsblConfigEnumOp _op;
  UsblConfigEnumOp get op => _$this._op;
  set op(UsblConfigEnumOp op) => _$this._op = op;

  List<UsblModem> _modems;
  List<UsblModem> get modems => _$this._modems;
  set modems(List<UsblModem> modems) => _$this._modems = modems;

  UsblConfigBuilder();

  UsblConfigBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _modems = _$v.modems;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblConfig other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$UsblConfig;
  }

  @override
  void update(void updates(UsblConfigBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblConfig build() {
    final _$result = _$v ??
        new _$UsblConfig._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? UsblConfigEnumOp(0),
            modems: modems ?? List<UsblModem>(0));
    replace(_$result);
    return _$result;
  }
}

/// Dissolved Organic Matter immutable class
///
class _$DissolvedOrganicMatter extends DissolvedOrganicMatter {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final DissolvedOrganicMatterEnumType type;

  factory _$DissolvedOrganicMatter([void updates(DissolvedOrganicMatterBuilder b)]) =>
      (new DissolvedOrganicMatterBuilder()..update(updates)).build();

  _$DissolvedOrganicMatter._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value,
      this.type})
      : super._();

  @override
  DissolvedOrganicMatter rebuild(void updates(DissolvedOrganicMatterBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DissolvedOrganicMatterBuilder toBuilder() => new DissolvedOrganicMatterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DissolvedOrganicMatter &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value &&
        type == this.type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode), 
        type?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DissolvedOrganicMatter')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value)
          ..add('type', type))
        .toString();
  }
}

/// Dissolved Organic Matter builder class
///
class DissolvedOrganicMatterBuilder implements Builder<DissolvedOrganicMatter, DissolvedOrganicMatterBuilder>, ImcBuilderHeaderPart {
  _$DissolvedOrganicMatter _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DissolvedOrganicMatterEnumType _type;
  DissolvedOrganicMatterEnumType get type => _$this._type;
  set type(DissolvedOrganicMatterEnumType type) => _$this._type = type;

  DissolvedOrganicMatterBuilder();

  DissolvedOrganicMatterBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DissolvedOrganicMatter other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DissolvedOrganicMatter;
  }

  @override
  void update(void updates(DissolvedOrganicMatterBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DissolvedOrganicMatter build() {
    final _$result = _$v ??
        new _$DissolvedOrganicMatter._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0,
            type: type ?? DissolvedOrganicMatterEnumType(0));
    replace(_$result);
    return _$result;
  }
}

/// Optical Backscattering Coefficient immutable class
///
class _$OpticalBackscatter extends OpticalBackscatter {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$OpticalBackscatter([void updates(OpticalBackscatterBuilder b)]) =>
      (new OpticalBackscatterBuilder()..update(updates)).build();

  _$OpticalBackscatter._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  OpticalBackscatter rebuild(void updates(OpticalBackscatterBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  OpticalBackscatterBuilder toBuilder() => new OpticalBackscatterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is OpticalBackscatter &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('OpticalBackscatter')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Optical Backscattering Coefficient builder class
///
class OpticalBackscatterBuilder implements Builder<OpticalBackscatter, OpticalBackscatterBuilder>, ImcBuilderHeaderPart {
  _$OpticalBackscatter _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  OpticalBackscatterBuilder();

  OpticalBackscatterBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(OpticalBackscatter other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$OpticalBackscatter;
  }

  @override
  void update(void updates(OpticalBackscatterBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$OpticalBackscatter build() {
    final _$result = _$v ??
        new _$OpticalBackscatter._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Tachograph immutable class
///
class _$Tachograph extends Tachograph {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double timestampLastService;
  @override
  final double timeNextService;
  @override
  final double timeMotorNextService;
  @override
  final double timeIdleGround;
  @override
  final double timeIdleAir;
  @override
  final double timeIdleWater;
  @override
  final double timeIdleUnderwater;
  @override
  final double timeIdleUnknown;
  @override
  final double timeMotorGround;
  @override
  final double timeMotorAir;
  @override
  final double timeMotorWater;
  @override
  final double timeMotorUnderwater;
  @override
  final double timeMotorUnknown;
  @override
  final int rpmMin;
  @override
  final int rpmMax;
  @override
  final double depthMax;

  factory _$Tachograph([void updates(TachographBuilder b)]) =>
      (new TachographBuilder()..update(updates)).build();

  _$Tachograph._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.timestampLastService,
      this.timeNextService,
      this.timeMotorNextService,
      this.timeIdleGround,
      this.timeIdleAir,
      this.timeIdleWater,
      this.timeIdleUnderwater,
      this.timeIdleUnknown,
      this.timeMotorGround,
      this.timeMotorAir,
      this.timeMotorWater,
      this.timeMotorUnderwater,
      this.timeMotorUnknown,
      this.rpmMin,
      this.rpmMax,
      this.depthMax})
      : super._();

  @override
  Tachograph rebuild(void updates(TachographBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TachographBuilder toBuilder() => new TachographBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Tachograph &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timestampLastService == this.timestampLastService &&
        timeNextService == this.timeNextService &&
        timeMotorNextService == this.timeMotorNextService &&
        timeIdleGround == this.timeIdleGround &&
        timeIdleAir == this.timeIdleAir &&
        timeIdleWater == this.timeIdleWater &&
        timeIdleUnderwater == this.timeIdleUnderwater &&
        timeIdleUnknown == this.timeIdleUnknown &&
        timeMotorGround == this.timeMotorGround &&
        timeMotorAir == this.timeMotorAir &&
        timeMotorWater == this.timeMotorWater &&
        timeMotorUnderwater == this.timeMotorUnderwater &&
        timeMotorUnknown == this.timeMotorUnknown &&
        rpmMin == this.rpmMin &&
        rpmMax == this.rpmMax &&
        depthMax == this.depthMax;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        timestampLastService?.hashCode), 
        timeNextService?.hashCode), 
        timeMotorNextService?.hashCode), 
        timeIdleGround?.hashCode), 
        timeIdleAir?.hashCode), 
        timeIdleWater?.hashCode), 
        timeIdleUnderwater?.hashCode), 
        timeIdleUnknown?.hashCode), 
        timeMotorGround?.hashCode), 
        timeMotorAir?.hashCode), 
        timeMotorWater?.hashCode), 
        timeMotorUnderwater?.hashCode), 
        timeMotorUnknown?.hashCode), 
        rpmMin?.hashCode), 
        rpmMax?.hashCode), 
        depthMax?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Tachograph')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timestampLastService', timestampLastService)
          ..add('timeNextService', timeNextService)
          ..add('timeMotorNextService', timeMotorNextService)
          ..add('timeIdleGround', timeIdleGround)
          ..add('timeIdleAir', timeIdleAir)
          ..add('timeIdleWater', timeIdleWater)
          ..add('timeIdleUnderwater', timeIdleUnderwater)
          ..add('timeIdleUnknown', timeIdleUnknown)
          ..add('timeMotorGround', timeMotorGround)
          ..add('timeMotorAir', timeMotorAir)
          ..add('timeMotorWater', timeMotorWater)
          ..add('timeMotorUnderwater', timeMotorUnderwater)
          ..add('timeMotorUnknown', timeMotorUnknown)
          ..add('rpmMin', rpmMin)
          ..add('rpmMax', rpmMax)
          ..add('depthMax', depthMax))
        .toString();
  }
}

/// Tachograph builder class
///
class TachographBuilder implements Builder<Tachograph, TachographBuilder>, ImcBuilderHeaderPart {
  _$Tachograph _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _timestampLastService;
  double get timestampLastService => _$this._timestampLastService;
  set timestampLastService(double timestampLastService) => _$this._timestampLastService = timestampLastService;

  double _timeNextService;
  double get timeNextService => _$this._timeNextService;
  set timeNextService(double timeNextService) => _$this._timeNextService = timeNextService;

  double _timeMotorNextService;
  double get timeMotorNextService => _$this._timeMotorNextService;
  set timeMotorNextService(double timeMotorNextService) => _$this._timeMotorNextService = timeMotorNextService;

  double _timeIdleGround;
  double get timeIdleGround => _$this._timeIdleGround;
  set timeIdleGround(double timeIdleGround) => _$this._timeIdleGround = timeIdleGround;

  double _timeIdleAir;
  double get timeIdleAir => _$this._timeIdleAir;
  set timeIdleAir(double timeIdleAir) => _$this._timeIdleAir = timeIdleAir;

  double _timeIdleWater;
  double get timeIdleWater => _$this._timeIdleWater;
  set timeIdleWater(double timeIdleWater) => _$this._timeIdleWater = timeIdleWater;

  double _timeIdleUnderwater;
  double get timeIdleUnderwater => _$this._timeIdleUnderwater;
  set timeIdleUnderwater(double timeIdleUnderwater) => _$this._timeIdleUnderwater = timeIdleUnderwater;

  double _timeIdleUnknown;
  double get timeIdleUnknown => _$this._timeIdleUnknown;
  set timeIdleUnknown(double timeIdleUnknown) => _$this._timeIdleUnknown = timeIdleUnknown;

  double _timeMotorGround;
  double get timeMotorGround => _$this._timeMotorGround;
  set timeMotorGround(double timeMotorGround) => _$this._timeMotorGround = timeMotorGround;

  double _timeMotorAir;
  double get timeMotorAir => _$this._timeMotorAir;
  set timeMotorAir(double timeMotorAir) => _$this._timeMotorAir = timeMotorAir;

  double _timeMotorWater;
  double get timeMotorWater => _$this._timeMotorWater;
  set timeMotorWater(double timeMotorWater) => _$this._timeMotorWater = timeMotorWater;

  double _timeMotorUnderwater;
  double get timeMotorUnderwater => _$this._timeMotorUnderwater;
  set timeMotorUnderwater(double timeMotorUnderwater) => _$this._timeMotorUnderwater = timeMotorUnderwater;

  double _timeMotorUnknown;
  double get timeMotorUnknown => _$this._timeMotorUnknown;
  set timeMotorUnknown(double timeMotorUnknown) => _$this._timeMotorUnknown = timeMotorUnknown;

  int _rpmMin;
  int get rpmMin => _$this._rpmMin;
  set rpmMin(int rpmMin) => _$this._rpmMin = rpmMin;

  int _rpmMax;
  int get rpmMax => _$this._rpmMax;
  set rpmMax(int rpmMax) => _$this._rpmMax = rpmMax;

  double _depthMax;
  double get depthMax => _$this._depthMax;
  set depthMax(double depthMax) => _$this._depthMax = depthMax;

  TachographBuilder();

  TachographBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timestampLastService = _$v.timestampLastService;
      _timeNextService = _$v.timeNextService;
      _timeMotorNextService = _$v.timeMotorNextService;
      _timeIdleGround = _$v.timeIdleGround;
      _timeIdleAir = _$v.timeIdleAir;
      _timeIdleWater = _$v.timeIdleWater;
      _timeIdleUnderwater = _$v.timeIdleUnderwater;
      _timeIdleUnknown = _$v.timeIdleUnknown;
      _timeMotorGround = _$v.timeMotorGround;
      _timeMotorAir = _$v.timeMotorAir;
      _timeMotorWater = _$v.timeMotorWater;
      _timeMotorUnderwater = _$v.timeMotorUnderwater;
      _timeMotorUnknown = _$v.timeMotorUnknown;
      _rpmMin = _$v.rpmMin;
      _rpmMax = _$v.rpmMax;
      _depthMax = _$v.depthMax;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Tachograph other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$Tachograph;
  }

  @override
  void update(void updates(TachographBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$Tachograph build() {
    final _$result = _$v ??
        new _$Tachograph._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timestampLastService: timestampLastService ?? 0,
            timeNextService: timeNextService ?? 0,
            timeMotorNextService: timeMotorNextService ?? 0,
            timeIdleGround: timeIdleGround ?? 0,
            timeIdleAir: timeIdleAir ?? 0,
            timeIdleWater: timeIdleWater ?? 0,
            timeIdleUnderwater: timeIdleUnderwater ?? 0,
            timeIdleUnknown: timeIdleUnknown ?? 0,
            timeMotorGround: timeMotorGround ?? 0,
            timeMotorAir: timeMotorAir ?? 0,
            timeMotorWater: timeMotorWater ?? 0,
            timeMotorUnderwater: timeMotorUnderwater ?? 0,
            timeMotorUnknown: timeMotorUnknown ?? 0,
            rpmMin: rpmMin ?? 0,
            rpmMax: rpmMax ?? 0,
            depthMax: depthMax ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// APM Status immutable class
///
class _$ApmStatus extends ApmStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ApmStatusEnumSeverity severity;
  @override
  final String text;

  factory _$ApmStatus([void updates(ApmStatusBuilder b)]) =>
      (new ApmStatusBuilder()..update(updates)).build();

  _$ApmStatus._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.severity,
      this.text})
      : super._();

  @override
  ApmStatus rebuild(void updates(ApmStatusBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  ApmStatusBuilder toBuilder() => new ApmStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ApmStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        severity == this.severity &&
        text == this.text;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        severity?.hashCode), 
        text?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ApmStatus')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('severity', severity)
          ..add('text', text))
        .toString();
  }
}

/// APM Status builder class
///
class ApmStatusBuilder implements Builder<ApmStatus, ApmStatusBuilder>, ImcBuilderHeaderPart {
  _$ApmStatus _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ApmStatusEnumSeverity _severity;
  ApmStatusEnumSeverity get severity => _$this._severity;
  set severity(ApmStatusEnumSeverity severity) => _$this._severity = severity;

  String _text;
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  ApmStatusBuilder();

  ApmStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _severity = _$v.severity;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ApmStatus other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$ApmStatus;
  }

  @override
  void update(void updates(ApmStatusBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$ApmStatus build() {
    final _$result = _$v ??
        new _$ApmStatus._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            severity: severity ?? ApmStatusEnumSeverity(0),
            text: text ?? '');
    replace(_$result);
    return _$result;
  }
}

/// SADC Readings immutable class
///
class _$SadcReadings extends SadcReadings {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int channel;
  @override
  final int value;
  @override
  final SadcReadingsEnumGain gain;

  factory _$SadcReadings([void updates(SadcReadingsBuilder b)]) =>
      (new SadcReadingsBuilder()..update(updates)).build();

  _$SadcReadings._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.channel,
      this.value,
      this.gain})
      : super._();

  @override
  SadcReadings rebuild(void updates(SadcReadingsBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  SadcReadingsBuilder toBuilder() => new SadcReadingsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SadcReadings &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        channel == this.channel &&
        value == this.value &&
        gain == this.gain;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        channel?.hashCode), 
        value?.hashCode), 
        gain?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SadcReadings')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('channel', channel)
          ..add('value', value)
          ..add('gain', gain))
        .toString();
  }
}

/// SADC Readings builder class
///
class SadcReadingsBuilder implements Builder<SadcReadings, SadcReadingsBuilder>, ImcBuilderHeaderPart {
  _$SadcReadings _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _channel;
  int get channel => _$this._channel;
  set channel(int channel) => _$this._channel = channel;

  int _value;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  SadcReadingsEnumGain _gain;
  SadcReadingsEnumGain get gain => _$this._gain;
  set gain(SadcReadingsEnumGain gain) => _$this._gain = gain;

  SadcReadingsBuilder();

  SadcReadingsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _channel = _$v.channel;
      _value = _$v.value;
      _gain = _$v.gain;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SadcReadings other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$SadcReadings;
  }

  @override
  void update(void updates(SadcReadingsBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$SadcReadings build() {
    final _$result = _$v ??
        new _$SadcReadings._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            channel: channel ?? 0,
            value: value ?? 0,
            gain: gain ?? SadcReadingsEnumGain(0));
    replace(_$result);
    return _$result;
  }
}

/// DMS Detection immutable class
///
class _$DmsDetection extends DmsDetection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double ch01;
  @override
  final double ch02;
  @override
  final double ch03;
  @override
  final double ch04;
  @override
  final double ch05;
  @override
  final double ch06;
  @override
  final double ch07;
  @override
  final double ch08;
  @override
  final double ch09;
  @override
  final double ch10;
  @override
  final double ch11;
  @override
  final double ch12;
  @override
  final double ch13;
  @override
  final double ch14;
  @override
  final double ch15;
  @override
  final double ch16;

  factory _$DmsDetection([void updates(DmsDetectionBuilder b)]) =>
      (new DmsDetectionBuilder()..update(updates)).build();

  _$DmsDetection._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.ch01,
      this.ch02,
      this.ch03,
      this.ch04,
      this.ch05,
      this.ch06,
      this.ch07,
      this.ch08,
      this.ch09,
      this.ch10,
      this.ch11,
      this.ch12,
      this.ch13,
      this.ch14,
      this.ch15,
      this.ch16})
      : super._();

  @override
  DmsDetection rebuild(void updates(DmsDetectionBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  DmsDetectionBuilder toBuilder() => new DmsDetectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DmsDetection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        ch01 == this.ch01 &&
        ch02 == this.ch02 &&
        ch03 == this.ch03 &&
        ch04 == this.ch04 &&
        ch05 == this.ch05 &&
        ch06 == this.ch06 &&
        ch07 == this.ch07 &&
        ch08 == this.ch08 &&
        ch09 == this.ch09 &&
        ch10 == this.ch10 &&
        ch11 == this.ch11 &&
        ch12 == this.ch12 &&
        ch13 == this.ch13 &&
        ch14 == this.ch14 &&
        ch15 == this.ch15 &&
        ch16 == this.ch16;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        ch01?.hashCode), 
        ch02?.hashCode), 
        ch03?.hashCode), 
        ch04?.hashCode), 
        ch05?.hashCode), 
        ch06?.hashCode), 
        ch07?.hashCode), 
        ch08?.hashCode), 
        ch09?.hashCode), 
        ch10?.hashCode), 
        ch11?.hashCode), 
        ch12?.hashCode), 
        ch13?.hashCode), 
        ch14?.hashCode), 
        ch15?.hashCode), 
        ch16?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DmsDetection')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('ch01', ch01)
          ..add('ch02', ch02)
          ..add('ch03', ch03)
          ..add('ch04', ch04)
          ..add('ch05', ch05)
          ..add('ch06', ch06)
          ..add('ch07', ch07)
          ..add('ch08', ch08)
          ..add('ch09', ch09)
          ..add('ch10', ch10)
          ..add('ch11', ch11)
          ..add('ch12', ch12)
          ..add('ch13', ch13)
          ..add('ch14', ch14)
          ..add('ch15', ch15)
          ..add('ch16', ch16))
        .toString();
  }
}

/// DMS Detection builder class
///
class DmsDetectionBuilder implements Builder<DmsDetection, DmsDetectionBuilder>, ImcBuilderHeaderPart {
  _$DmsDetection _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _ch01;
  double get ch01 => _$this._ch01;
  set ch01(double ch01) => _$this._ch01 = ch01;

  double _ch02;
  double get ch02 => _$this._ch02;
  set ch02(double ch02) => _$this._ch02 = ch02;

  double _ch03;
  double get ch03 => _$this._ch03;
  set ch03(double ch03) => _$this._ch03 = ch03;

  double _ch04;
  double get ch04 => _$this._ch04;
  set ch04(double ch04) => _$this._ch04 = ch04;

  double _ch05;
  double get ch05 => _$this._ch05;
  set ch05(double ch05) => _$this._ch05 = ch05;

  double _ch06;
  double get ch06 => _$this._ch06;
  set ch06(double ch06) => _$this._ch06 = ch06;

  double _ch07;
  double get ch07 => _$this._ch07;
  set ch07(double ch07) => _$this._ch07 = ch07;

  double _ch08;
  double get ch08 => _$this._ch08;
  set ch08(double ch08) => _$this._ch08 = ch08;

  double _ch09;
  double get ch09 => _$this._ch09;
  set ch09(double ch09) => _$this._ch09 = ch09;

  double _ch10;
  double get ch10 => _$this._ch10;
  set ch10(double ch10) => _$this._ch10 = ch10;

  double _ch11;
  double get ch11 => _$this._ch11;
  set ch11(double ch11) => _$this._ch11 = ch11;

  double _ch12;
  double get ch12 => _$this._ch12;
  set ch12(double ch12) => _$this._ch12 = ch12;

  double _ch13;
  double get ch13 => _$this._ch13;
  set ch13(double ch13) => _$this._ch13 = ch13;

  double _ch14;
  double get ch14 => _$this._ch14;
  set ch14(double ch14) => _$this._ch14 = ch14;

  double _ch15;
  double get ch15 => _$this._ch15;
  set ch15(double ch15) => _$this._ch15 = ch15;

  double _ch16;
  double get ch16 => _$this._ch16;
  set ch16(double ch16) => _$this._ch16 = ch16;

  DmsDetectionBuilder();

  DmsDetectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _ch01 = _$v.ch01;
      _ch02 = _$v.ch02;
      _ch03 = _$v.ch03;
      _ch04 = _$v.ch04;
      _ch05 = _$v.ch05;
      _ch06 = _$v.ch06;
      _ch07 = _$v.ch07;
      _ch08 = _$v.ch08;
      _ch09 = _$v.ch09;
      _ch10 = _$v.ch10;
      _ch11 = _$v.ch11;
      _ch12 = _$v.ch12;
      _ch13 = _$v.ch13;
      _ch14 = _$v.ch14;
      _ch15 = _$v.ch15;
      _ch16 = _$v.ch16;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DmsDetection other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$DmsDetection;
  }

  @override
  void update(void updates(DmsDetectionBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$DmsDetection build() {
    final _$result = _$v ??
        new _$DmsDetection._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            ch01: ch01 ?? 0,
            ch02: ch02 ?? 0,
            ch03: ch03 ?? 0,
            ch04: ch04 ?? 0,
            ch05: ch05 ?? 0,
            ch06: ch06 ?? 0,
            ch07: ch07 ?? 0,
            ch08: ch08 ?? 0,
            ch09: ch09 ?? 0,
            ch10: ch10 ?? 0,
            ch11: ch11 ?? 0,
            ch12: ch12 ?? 0,
            ch13: ch13 ?? 0,
            ch14: ch14 ?? 0,
            ch15: ch15 ?? 0,
            ch16: ch16 ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Total Magnetic Field Intensity immutable class
///
class _$TotalMagIntensity extends TotalMagIntensity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$TotalMagIntensity([void updates(TotalMagIntensityBuilder b)]) =>
      (new TotalMagIntensityBuilder()..update(updates)).build();

  _$TotalMagIntensity._(
      {this.timestamp,
      this.src: ImcId.nullId,
      this.srcEnt: ImcEntityId.nullId,
      this.dst: ImcId.nullId,
      this.dstEnt: ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  TotalMagIntensity rebuild(void updates(TotalMagIntensityBuilder b)) =>
      (toBuilder()..update(updates)).build();

  @override
  TotalMagIntensityBuilder toBuilder() => new TotalMagIntensityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TotalMagIntensity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == this.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc($jc($jc($jc(0, 
        timestamp?.hashCode), 
        src?.hashCode), 
        srcEnt?.hashCode), 
        dst?.hashCode), 
        dstEnt?.hashCode), 
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TotalMagIntensity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', value))
        .toString();
  }
}

/// Total Magnetic Field Intensity builder class
///
class TotalMagIntensityBuilder implements Builder<TotalMagIntensity, TotalMagIntensityBuilder>, ImcBuilderHeaderPart {
  _$TotalMagIntensity _$v;

  @override
  DateTime _timestamp;
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  @override
  int _src;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  @override
  int _srcEnt;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  @override
  int _dst;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  @override
  int _dstEnt;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  TotalMagIntensityBuilder();

  TotalMagIntensityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TotalMagIntensity other) {
    if (other == null) {
      throw new ArgumentError.notNull('other');
    }
    _$v = other as _$TotalMagIntensity;
  }

  @override
  void update(void updates(TotalMagIntensityBuilder b)) {
    if (updates != null) updates(this);
  }

  @override
  _$TotalMagIntensity build() {
    final _$result = _$v ??
        new _$TotalMagIntensity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

