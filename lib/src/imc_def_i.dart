// GENERATED CODE - DO NOT MODIFY BY HAND

// **************************************************************************
// IMC Code Generator
// **************************************************************************

part of 'imc_def_gen.dart';

/// Entity State immutable class
///
class _$EntityState extends EntityState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EntityStateEnumState state;
  @override
  final EntityStateBitfieldFlags flags;
  @override
  final String description;

  factory _$EntityState([void Function(EntityStateBuilder b) updates]) =>
      (EntityStateBuilder()..update(updates)).build();

  _$EntityState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.state,
      this.flags,
      this.description})
      : super._();

  @override
  EntityState rebuild(void Function(EntityStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityStateBuilder toBuilder() => EntityStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == other.state &&
        flags == other.flags &&
        description == other.description;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                state?.hashCode),
            flags?.hashCode),
        description?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', '$state (Enumerated)')
          ..add('flags', '$flags (Bitfield)')
          ..add('description', '$description'))
        .toString();
  }
}

/// Entity State builder class
///
class EntityStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<EntityState, EntityStateBuilder> {
  _$EntityState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EntityStateEnumState _state = EntityStateEnumState(0);
  EntityStateEnumState get state => _$this._state;
  set state(EntityStateEnumState state) => _$this._state = state;

  EntityStateBitfieldFlags _flags = EntityStateBitfieldFlags(0);
  EntityStateBitfieldFlags get flags => _$this._flags;
  set flags(EntityStateBitfieldFlags flags) => _$this._flags = flags;

  String _description = '';
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  EntityStateBuilder();

  EntityStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  EntityStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      EntityStateBuilder()..copyFromHeader(headerFrom);

  EntityStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _flags = _$v.flags;
      _description = _$v.description;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$EntityState;
  }

  @override
  void update(void Function(EntityStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityState build() {
    final _$result = _$v ??
        _$EntityState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? EntityStateEnumState(0),
            flags: flags ?? EntityStateBitfieldFlags(0),
            description: description ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Query Entity State immutable class
///
class _$QueryEntityState extends QueryEntityState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  factory _$QueryEntityState(
          [void Function(QueryEntityStateBuilder b) updates]) =>
      (QueryEntityStateBuilder()..update(updates)).build();

  _$QueryEntityState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId})
      : super._();

  @override
  QueryEntityState rebuild(void Function(QueryEntityStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryEntityStateBuilder toBuilder() =>
      QueryEntityStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryEntityState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                srcEnt?.hashCode),
            dst?.hashCode),
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryEntityState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Query Entity State builder class
///
class QueryEntityStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<QueryEntityState, QueryEntityStateBuilder> {
  _$QueryEntityState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  QueryEntityStateBuilder();

  QueryEntityStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  QueryEntityStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      QueryEntityStateBuilder()..copyFromHeader(headerFrom);

  QueryEntityStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryEntityState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$QueryEntityState;
  }

  @override
  void update(void Function(QueryEntityStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryEntityState build() {
    final _$result = _$v ??
        _$QueryEntityState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Entity Information immutable class
///
class _$EntityInfo extends EntityInfo {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final String label;
  @override
  final String component;
  @override
  final int actTime;
  @override
  final int deactTime;

  factory _$EntityInfo([void Function(EntityInfoBuilder b) updates]) =>
      (EntityInfoBuilder()..update(updates)).build();

  _$EntityInfo._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.id,
      this.label,
      this.component,
      this.actTime,
      this.deactTime})
      : super._();

  @override
  EntityInfo rebuild(void Function(EntityInfoBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityInfoBuilder toBuilder() => EntityInfoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityInfo &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == other.id &&
        label == other.label &&
        component == other.component &&
        actTime == other.actTime &&
        deactTime == other.deactTime;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, timestamp?.hashCode),
                                        src?.hashCode),
                                    srcEnt?.hashCode),
                                dst?.hashCode),
                            dstEnt?.hashCode),
                        id?.hashCode),
                    label?.hashCode),
                component?.hashCode),
            actTime?.hashCode),
        deactTime?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityInfo')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', '$id')
          ..add('label', '$label')
          ..add('component', '$component')
          ..add('actTime', '$actTime (s)')
          ..add('deactTime', '$deactTime (s)'))
        .toString();
  }
}

/// Entity Information builder class
///
class EntityInfoBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<EntityInfo, EntityInfoBuilder> {
  _$EntityInfo _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id = 0;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  String _label = '';
  String get label => _$this._label;
  set label(String label) => _$this._label = label;

  String _component = '';
  String get component => _$this._component;
  set component(String component) => _$this._component = component;

  int _actTime = 0;
  int get actTime => _$this._actTime;
  set actTime(int actTime) => _$this._actTime = actTime;

  int _deactTime = 0;
  int get deactTime => _$this._deactTime;
  set deactTime(int deactTime) => _$this._deactTime = deactTime;

  EntityInfoBuilder();

  EntityInfoBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  EntityInfoBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      EntityInfoBuilder()..copyFromHeader(headerFrom);

  EntityInfoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _label = _$v.label;
      _component = _$v.component;
      _actTime = _$v.actTime;
      _deactTime = _$v.deactTime;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityInfo other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$EntityInfo;
  }

  @override
  void update(void Function(EntityInfoBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityInfo build() {
    final _$result = _$v ??
        _$EntityInfo._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            label: label ?? '',
            component: component ?? '',
            actTime: actTime ?? 0,
            deactTime: deactTime ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Query Entity Information immutable class
///
class _$QueryEntityInfo extends QueryEntityInfo {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;

  factory _$QueryEntityInfo(
          [void Function(QueryEntityInfoBuilder b) updates]) =>
      (QueryEntityInfoBuilder()..update(updates)).build();

  _$QueryEntityInfo._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.id})
      : super._();

  @override
  QueryEntityInfo rebuild(void Function(QueryEntityInfoBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryEntityInfoBuilder toBuilder() => QueryEntityInfoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryEntityInfo &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == other.id;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        id?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryEntityInfo')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', '$id'))
        .toString();
  }
}

/// Query Entity Information builder class
///
class QueryEntityInfoBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<QueryEntityInfo, QueryEntityInfoBuilder> {
  _$QueryEntityInfo _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id = 0;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  QueryEntityInfoBuilder();

  QueryEntityInfoBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  QueryEntityInfoBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      QueryEntityInfoBuilder()..copyFromHeader(headerFrom);

  QueryEntityInfoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryEntityInfo other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$QueryEntityInfo;
  }

  @override
  void update(void Function(QueryEntityInfoBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryEntityInfo build() {
    final _$result = _$v ??
        _$QueryEntityInfo._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Entity List immutable class
///
class _$EntityList extends EntityList {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EntityListEnumOp op;
  @override
  final String list;

  factory _$EntityList([void Function(EntityListBuilder b) updates]) =>
      (EntityListBuilder()..update(updates)).build();

  _$EntityList._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.list})
      : super._();

  @override
  EntityList rebuild(void Function(EntityListBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityListBuilder toBuilder() => EntityListBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityList &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        list == other.list;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            op?.hashCode),
        list?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityList')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('list', '$list (TupleList)'))
        .toString();
  }
}

/// Entity List builder class
///
class EntityListBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<EntityList, EntityListBuilder> {
  _$EntityList _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EntityListEnumOp _op = EntityListEnumOp(0);
  EntityListEnumOp get op => _$this._op;
  set op(EntityListEnumOp op) => _$this._op = op;

  String _list = '';
  String get list => _$this._list;
  set list(String list) => _$this._list = list;

  EntityListBuilder();

  EntityListBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  EntityListBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      EntityListBuilder()..copyFromHeader(headerFrom);

  EntityListBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _list = _$v.list;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityList other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$EntityList;
  }

  @override
  void update(void Function(EntityListBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityList build() {
    final _$result = _$v ??
        _$EntityList._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? EntityListEnumOp(0),
            list: list ?? '');
    replace(_$result);
    return _$result;
  }
}

/// CPU Usage immutable class
///
class _$CpuUsage extends CpuUsage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int value;

  factory _$CpuUsage([void Function(CpuUsageBuilder b) updates]) =>
      (CpuUsageBuilder()..update(updates)).build();

  _$CpuUsage._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  CpuUsage rebuild(void Function(CpuUsageBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CpuUsageBuilder toBuilder() => CpuUsageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CpuUsage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CpuUsage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (%)'))
        .toString();
  }
}

/// CPU Usage builder class
///
class CpuUsageBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<CpuUsage, CpuUsageBuilder> {
  _$CpuUsage _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _value = 0;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  CpuUsageBuilder();

  CpuUsageBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CpuUsageBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CpuUsageBuilder()..copyFromHeader(headerFrom);

  CpuUsageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CpuUsage other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$CpuUsage;
  }

  @override
  void update(void Function(CpuUsageBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$CpuUsage build() {
    final _$result = _$v ??
        _$CpuUsage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Transport Bindings immutable class
///
class _$TransportBindings extends TransportBindings {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String consumer;
  @override
  final int messageId;

  factory _$TransportBindings(
          [void Function(TransportBindingsBuilder b) updates]) =>
      (TransportBindingsBuilder()..update(updates)).build();

  _$TransportBindings._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.consumer,
      this.messageId})
      : super._();

  @override
  TransportBindings rebuild(
          void Function(TransportBindingsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TransportBindingsBuilder toBuilder() =>
      TransportBindingsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TransportBindings &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        consumer == other.consumer &&
        messageId == other.messageId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            consumer?.hashCode),
        messageId?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TransportBindings')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('consumer', '$consumer')
          ..add('messageId', '$messageId'))
        .toString();
  }
}

/// Transport Bindings builder class
///
class TransportBindingsBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<TransportBindings, TransportBindingsBuilder> {
  _$TransportBindings _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _consumer = '';
  String get consumer => _$this._consumer;
  set consumer(String consumer) => _$this._consumer = consumer;

  int _messageId = 0;
  int get messageId => _$this._messageId;
  set messageId(int messageId) => _$this._messageId = messageId;

  TransportBindingsBuilder();

  TransportBindingsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TransportBindingsBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TransportBindingsBuilder()..copyFromHeader(headerFrom);

  TransportBindingsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _consumer = _$v.consumer;
      _messageId = _$v.messageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TransportBindings other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TransportBindings;
  }

  @override
  void update(void Function(TransportBindingsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TransportBindings build() {
    final _$result = _$v ??
        _$TransportBindings._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            consumer: consumer ?? '',
            messageId: messageId ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Restart System immutable class
///
class _$RestartSystem extends RestartSystem {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final RestartSystemEnumType type;

  factory _$RestartSystem([void Function(RestartSystemBuilder b) updates]) =>
      (RestartSystemBuilder()..update(updates)).build();

  _$RestartSystem._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type})
      : super._();

  @override
  RestartSystem rebuild(void Function(RestartSystemBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RestartSystemBuilder toBuilder() => RestartSystemBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RestartSystem &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        type?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RestartSystem')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Enumerated)'))
        .toString();
  }
}

/// Restart System builder class
///
class RestartSystemBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<RestartSystem, RestartSystemBuilder> {
  _$RestartSystem _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  RestartSystemEnumType _type = RestartSystemEnumType(0);
  RestartSystemEnumType get type => _$this._type;
  set type(RestartSystemEnumType type) => _$this._type = type;

  RestartSystemBuilder();

  RestartSystemBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RestartSystemBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RestartSystemBuilder()..copyFromHeader(headerFrom);

  RestartSystemBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RestartSystem other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$RestartSystem;
  }

  @override
  void update(void Function(RestartSystemBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$RestartSystem build() {
    final _$result = _$v ??
        _$RestartSystem._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? RestartSystemEnumType(0));
    replace(_$result);
    return _$result;
  }
}

/// Device Calibration Control immutable class
///
class _$DevCalibrationControl extends DevCalibrationControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DevCalibrationControlEnumOp op;

  factory _$DevCalibrationControl(
          [void Function(DevCalibrationControlBuilder b) updates]) =>
      (DevCalibrationControlBuilder()..update(updates)).build();

  _$DevCalibrationControl._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op})
      : super._();

  @override
  DevCalibrationControl rebuild(
          void Function(DevCalibrationControlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DevCalibrationControlBuilder toBuilder() =>
      DevCalibrationControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DevCalibrationControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        op?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DevCalibrationControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)'))
        .toString();
  }
}

/// Device Calibration Control builder class
///
class DevCalibrationControlBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<DevCalibrationControl,
            DevCalibrationControlBuilder> {
  _$DevCalibrationControl _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DevCalibrationControlEnumOp _op = DevCalibrationControlEnumOp(0);
  DevCalibrationControlEnumOp get op => _$this._op;
  set op(DevCalibrationControlEnumOp op) => _$this._op = op;

  DevCalibrationControlBuilder();

  DevCalibrationControlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DevCalibrationControlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DevCalibrationControlBuilder()..copyFromHeader(headerFrom);

  DevCalibrationControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DevCalibrationControl other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DevCalibrationControl;
  }

  @override
  void update(void Function(DevCalibrationControlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DevCalibrationControl build() {
    final _$result = _$v ??
        _$DevCalibrationControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? DevCalibrationControlEnumOp(0));
    replace(_$result);
    return _$result;
  }
}

/// Device Calibration State immutable class
///
class _$DevCalibrationState extends DevCalibrationState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int totalSteps;
  @override
  final int stepNumber;
  @override
  final String step;
  @override
  final DevCalibrationStateBitfieldFlags flags;

  factory _$DevCalibrationState(
          [void Function(DevCalibrationStateBuilder b) updates]) =>
      (DevCalibrationStateBuilder()..update(updates)).build();

  _$DevCalibrationState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.totalSteps,
      this.stepNumber,
      this.step,
      this.flags})
      : super._();

  @override
  DevCalibrationState rebuild(
          void Function(DevCalibrationStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DevCalibrationStateBuilder toBuilder() =>
      DevCalibrationStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DevCalibrationState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        totalSteps == other.totalSteps &&
        stepNumber == other.stepNumber &&
        step == other.step &&
        flags == other.flags;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    totalSteps?.hashCode),
                stepNumber?.hashCode),
            step?.hashCode),
        flags?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DevCalibrationState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('totalSteps', '$totalSteps')
          ..add('stepNumber', '$stepNumber')
          ..add('step', '$step')
          ..add('flags', '$flags (Bitfield)'))
        .toString();
  }
}

/// Device Calibration State builder class
///
class DevCalibrationStateBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<DevCalibrationState,
            DevCalibrationStateBuilder> {
  _$DevCalibrationState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _totalSteps = 0;
  int get totalSteps => _$this._totalSteps;
  set totalSteps(int totalSteps) => _$this._totalSteps = totalSteps;

  int _stepNumber = 0;
  int get stepNumber => _$this._stepNumber;
  set stepNumber(int stepNumber) => _$this._stepNumber = stepNumber;

  String _step = '';
  String get step => _$this._step;
  set step(String step) => _$this._step = step;

  DevCalibrationStateBitfieldFlags _flags = DevCalibrationStateBitfieldFlags(0);
  DevCalibrationStateBitfieldFlags get flags => _$this._flags;
  set flags(DevCalibrationStateBitfieldFlags flags) => _$this._flags = flags;

  DevCalibrationStateBuilder();

  DevCalibrationStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DevCalibrationStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DevCalibrationStateBuilder()..copyFromHeader(headerFrom);

  DevCalibrationStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _totalSteps = _$v.totalSteps;
      _stepNumber = _$v.stepNumber;
      _step = _$v.step;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DevCalibrationState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DevCalibrationState;
  }

  @override
  void update(void Function(DevCalibrationStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DevCalibrationState build() {
    final _$result = _$v ??
        _$DevCalibrationState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            totalSteps: totalSteps ?? 0,
            stepNumber: stepNumber ?? 0,
            step: step ?? '',
            flags: flags ?? DevCalibrationStateBitfieldFlags(0));
    replace(_$result);
    return _$result;
  }
}

/// Entity Activation State immutable class
///
class _$EntityActivationState extends EntityActivationState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EntityActivationStateEnumState state;
  @override
  final String error;

  factory _$EntityActivationState(
          [void Function(EntityActivationStateBuilder b) updates]) =>
      (EntityActivationStateBuilder()..update(updates)).build();

  _$EntityActivationState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.state,
      this.error})
      : super._();

  @override
  EntityActivationState rebuild(
          void Function(EntityActivationStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityActivationStateBuilder toBuilder() =>
      EntityActivationStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityActivationState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == other.state &&
        error == other.error;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            state?.hashCode),
        error?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityActivationState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', '$state (Enumerated)')
          ..add('error', '$error'))
        .toString();
  }
}

/// Entity Activation State builder class
///
class EntityActivationStateBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<EntityActivationState,
            EntityActivationStateBuilder> {
  _$EntityActivationState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EntityActivationStateEnumState _state = EntityActivationStateEnumState(0);
  EntityActivationStateEnumState get state => _$this._state;
  set state(EntityActivationStateEnumState state) => _$this._state = state;

  String _error = '';
  String get error => _$this._error;
  set error(String error) => _$this._error = error;

  EntityActivationStateBuilder();

  EntityActivationStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  EntityActivationStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      EntityActivationStateBuilder()..copyFromHeader(headerFrom);

  EntityActivationStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _error = _$v.error;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityActivationState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$EntityActivationState;
  }

  @override
  void update(void Function(EntityActivationStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityActivationState build() {
    final _$result = _$v ??
        _$EntityActivationState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? EntityActivationStateEnumState(0),
            error: error ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Query Entity Activation State immutable class
///
class _$QueryEntityActivationState extends QueryEntityActivationState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  factory _$QueryEntityActivationState(
          [void Function(QueryEntityActivationStateBuilder b) updates]) =>
      (QueryEntityActivationStateBuilder()..update(updates)).build();

  _$QueryEntityActivationState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId})
      : super._();

  @override
  QueryEntityActivationState rebuild(
          void Function(QueryEntityActivationStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryEntityActivationStateBuilder toBuilder() =>
      QueryEntityActivationStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryEntityActivationState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                srcEnt?.hashCode),
            dst?.hashCode),
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryEntityActivationState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Query Entity Activation State builder class
///
class QueryEntityActivationStateBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<QueryEntityActivationState,
            QueryEntityActivationStateBuilder> {
  _$QueryEntityActivationState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  QueryEntityActivationStateBuilder();

  QueryEntityActivationStateBuilder.fromHeader(
      ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  QueryEntityActivationStateBuilder newInstance(
          [ImcBuilderHeaderPart headerFrom]) =>
      QueryEntityActivationStateBuilder()..copyFromHeader(headerFrom);

  QueryEntityActivationStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryEntityActivationState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$QueryEntityActivationState;
  }

  @override
  void update(void Function(QueryEntityActivationStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryEntityActivationState build() {
    final _$result = _$v ??
        _$QueryEntityActivationState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Operational Limits immutable class
///
class _$VehicleOperationalLimits extends VehicleOperationalLimits {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VehicleOperationalLimitsEnumOp op;
  @override
  final double speedMin;
  @override
  final double speedMax;
  @override
  final double longAccel;
  @override
  final double altMaxMsl;
  @override
  final double diveFractionMax;
  @override
  final double climbFractionMax;
  @override
  final double bankMax;
  @override
  final double pMax;
  @override
  final double pitchMin;
  @override
  final double pitchMax;
  @override
  final double qMax;
  @override
  final double gMin;
  @override
  final double gMax;
  @override
  final double gLatMax;
  @override
  final double rpmMin;
  @override
  final double rpmMax;
  @override
  final double rpmRateMax;

  factory _$VehicleOperationalLimits(
          [void Function(VehicleOperationalLimitsBuilder b) updates]) =>
      (VehicleOperationalLimitsBuilder()..update(updates)).build();

  _$VehicleOperationalLimits._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.speedMin,
      this.speedMax,
      this.longAccel,
      this.altMaxMsl,
      this.diveFractionMax,
      this.climbFractionMax,
      this.bankMax,
      this.pMax,
      this.pitchMin,
      this.pitchMax,
      this.qMax,
      this.gMin,
      this.gMax,
      this.gLatMax,
      this.rpmMin,
      this.rpmMax,
      this.rpmRateMax})
      : super._();

  @override
  VehicleOperationalLimits rebuild(
          void Function(VehicleOperationalLimitsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleOperationalLimitsBuilder toBuilder() =>
      VehicleOperationalLimitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleOperationalLimits &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        (speedMin == other.speedMin || speedMin - other.speedMin <= 1E-7) &&
        (speedMax == other.speedMax || speedMax - other.speedMax <= 1E-7) &&
        (longAccel == other.longAccel || longAccel - other.longAccel <= 1E-7) &&
        (altMaxMsl == other.altMaxMsl || altMaxMsl - other.altMaxMsl <= 1E-7) &&
        (diveFractionMax == other.diveFractionMax ||
            diveFractionMax - other.diveFractionMax <= 1E-7) &&
        (climbFractionMax == other.climbFractionMax ||
            climbFractionMax - other.climbFractionMax <= 1E-7) &&
        (bankMax == other.bankMax || bankMax - other.bankMax <= 1E-7) &&
        (pMax == other.pMax || pMax - other.pMax <= 1E-7) &&
        (pitchMin == other.pitchMin || pitchMin - other.pitchMin <= 1E-7) &&
        (pitchMax == other.pitchMax || pitchMax - other.pitchMax <= 1E-7) &&
        (qMax == other.qMax || qMax - other.qMax <= 1E-7) &&
        (gMin == other.gMin || gMin - other.gMin <= 1E-7) &&
        (gMax == other.gMax || gMax - other.gMax <= 1E-7) &&
        (gLatMax == other.gLatMax || gLatMax - other.gLatMax <= 1E-7) &&
        (rpmMin == other.rpmMin || rpmMin - other.rpmMin <= 1E-7) &&
        (rpmMax == other.rpmMax || rpmMax - other.rpmMax <= 1E-7) &&
        (rpmRateMax == other.rpmRateMax ||
            rpmRateMax - other.rpmRateMax <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc(0, timestamp?.hashCode), src?.hashCode), srcEnt?.hashCode), dst?.hashCode),
                                                                                dstEnt?.hashCode),
                                                                            op?.hashCode),
                                                                        speedMin?.hashCode),
                                                                    speedMax?.hashCode),
                                                                longAccel?.hashCode),
                                                            altMaxMsl?.hashCode),
                                                        diveFractionMax?.hashCode),
                                                    climbFractionMax?.hashCode),
                                                bankMax?.hashCode),
                                            pMax?.hashCode),
                                        pitchMin?.hashCode),
                                    pitchMax?.hashCode),
                                qMax?.hashCode),
                            gMin?.hashCode),
                        gMax?.hashCode),
                    gLatMax?.hashCode),
                rpmMin?.hashCode),
            rpmMax?.hashCode),
        rpmRateMax?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleOperationalLimits')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('speedMin', '$speedMin (m/s)')
          ..add('speedMax', '$speedMax (m/s)')
          ..add('longAccel', '$longAccel (m/s/s)')
          ..add('altMaxMsl', '$altMaxMsl (m)')
          ..add('diveFractionMax', '$diveFractionMax')
          ..add('climbFractionMax', '$climbFractionMax')
          ..add('bankMax',
              '$bankMax (rad)${bankMax != null ? ' [${bankMax * 180.0 / math.pi} (deg)]' : ''}')
          ..add('pMax',
              '$pMax (rad/s)${pMax != null ? ' [${pMax * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('pitchMin',
              '$pitchMin (rad)${pitchMin != null ? ' [${pitchMin * 180.0 / math.pi} (deg)]' : ''}')
          ..add('pitchMax',
              '$pitchMax (rad)${pitchMax != null ? ' [${pitchMax * 180.0 / math.pi} (deg)]' : ''}')
          ..add('qMax',
              '$qMax (rad/s)${qMax != null ? ' [${qMax * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('gMin', '$gMin (g)')
          ..add('gMax', '$gMax (g)')
          ..add('gLatMax', '$gLatMax (g)')
          ..add('rpmMin', '$rpmMin (rpm)')
          ..add('rpmMax', '$rpmMax (rpm)')
          ..add('rpmRateMax', '$rpmRateMax (rpm/s)'))
        .toString();
  }
}

/// Vehicle Operational Limits builder class
///
class VehicleOperationalLimitsBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<VehicleOperationalLimits,
            VehicleOperationalLimitsBuilder> {
  _$VehicleOperationalLimits _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VehicleOperationalLimitsEnumOp _op = VehicleOperationalLimitsEnumOp(0);
  VehicleOperationalLimitsEnumOp get op => _$this._op;
  set op(VehicleOperationalLimitsEnumOp op) => _$this._op = op;

  double _speedMin = 0;
  double get speedMin => _$this._speedMin;
  set speedMin(double speedMin) => _$this._speedMin = speedMin;

  double _speedMax = 0;
  double get speedMax => _$this._speedMax;
  set speedMax(double speedMax) => _$this._speedMax = speedMax;

  double _longAccel = 0;
  double get longAccel => _$this._longAccel;
  set longAccel(double longAccel) => _$this._longAccel = longAccel;

  double _altMaxMsl = 0;
  double get altMaxMsl => _$this._altMaxMsl;
  set altMaxMsl(double altMaxMsl) => _$this._altMaxMsl = altMaxMsl;

  double _diveFractionMax = 0;
  double get diveFractionMax => _$this._diveFractionMax;
  set diveFractionMax(double diveFractionMax) =>
      _$this._diveFractionMax = diveFractionMax;

  double _climbFractionMax = 0;
  double get climbFractionMax => _$this._climbFractionMax;
  set climbFractionMax(double climbFractionMax) =>
      _$this._climbFractionMax = climbFractionMax;

  double _bankMax = 0;
  double get bankMax => _$this._bankMax;
  set bankMax(double bankMax) => _$this._bankMax = bankMax;

  double _pMax = 0;
  double get pMax => _$this._pMax;
  set pMax(double pMax) => _$this._pMax = pMax;

  double _pitchMin = 0;
  double get pitchMin => _$this._pitchMin;
  set pitchMin(double pitchMin) => _$this._pitchMin = pitchMin;

  double _pitchMax = 0;
  double get pitchMax => _$this._pitchMax;
  set pitchMax(double pitchMax) => _$this._pitchMax = pitchMax;

  double _qMax = 0;
  double get qMax => _$this._qMax;
  set qMax(double qMax) => _$this._qMax = qMax;

  double _gMin = 0;
  double get gMin => _$this._gMin;
  set gMin(double gMin) => _$this._gMin = gMin;

  double _gMax = 0;
  double get gMax => _$this._gMax;
  set gMax(double gMax) => _$this._gMax = gMax;

  double _gLatMax = 0;
  double get gLatMax => _$this._gLatMax;
  set gLatMax(double gLatMax) => _$this._gLatMax = gLatMax;

  double _rpmMin = 0;
  double get rpmMin => _$this._rpmMin;
  set rpmMin(double rpmMin) => _$this._rpmMin = rpmMin;

  double _rpmMax = 0;
  double get rpmMax => _$this._rpmMax;
  set rpmMax(double rpmMax) => _$this._rpmMax = rpmMax;

  double _rpmRateMax = 0;
  double get rpmRateMax => _$this._rpmRateMax;
  set rpmRateMax(double rpmRateMax) => _$this._rpmRateMax = rpmRateMax;

  VehicleOperationalLimitsBuilder();

  VehicleOperationalLimitsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  VehicleOperationalLimitsBuilder newInstance(
          [ImcBuilderHeaderPart headerFrom]) =>
      VehicleOperationalLimitsBuilder()..copyFromHeader(headerFrom);

  VehicleOperationalLimitsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _speedMin = _$v.speedMin;
      _speedMax = _$v.speedMax;
      _longAccel = _$v.longAccel;
      _altMaxMsl = _$v.altMaxMsl;
      _diveFractionMax = _$v.diveFractionMax;
      _climbFractionMax = _$v.climbFractionMax;
      _bankMax = _$v.bankMax;
      _pMax = _$v.pMax;
      _pitchMin = _$v.pitchMin;
      _pitchMax = _$v.pitchMax;
      _qMax = _$v.qMax;
      _gMin = _$v.gMin;
      _gMax = _$v.gMax;
      _gLatMax = _$v.gLatMax;
      _rpmMin = _$v.rpmMin;
      _rpmMax = _$v.rpmMax;
      _rpmRateMax = _$v.rpmRateMax;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleOperationalLimits other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleOperationalLimits;
  }

  @override
  void update(void Function(VehicleOperationalLimitsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleOperationalLimits build() {
    final _$result = _$v ??
        _$VehicleOperationalLimits._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? VehicleOperationalLimitsEnumOp(0),
            speedMin: speedMin ?? 0,
            speedMax: speedMax ?? 0,
            longAccel: longAccel ?? 0,
            altMaxMsl: altMaxMsl ?? 0,
            diveFractionMax: diveFractionMax ?? 0,
            climbFractionMax: climbFractionMax ?? 0,
            bankMax: bankMax ?? 0,
            pMax: pMax ?? 0,
            pitchMin: pitchMin ?? 0,
            pitchMax: pitchMax ?? 0,
            qMax: qMax ?? 0,
            gMin: gMin ?? 0,
            gMax: gMax ?? 0,
            gLatMax: gLatMax ?? 0,
            rpmMin: rpmMin ?? 0,
            rpmMax: rpmMax ?? 0,
            rpmRateMax: rpmRateMax ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Message List immutable class
///
class _$MsgList extends MsgList {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final List<ImcMessage> msgs;

  factory _$MsgList([void Function(MsgListBuilder b) updates]) =>
      (MsgListBuilder()..update(updates)).build();

  _$MsgList._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.msgs})
      : super._();

  @override
  MsgList rebuild(void Function(MsgListBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  MsgListBuilder toBuilder() => MsgListBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MsgList &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        DeepCollectionEquality().equals(msgs, other.msgs);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        msgs?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MsgList')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('msgs', '$msgs'))
        .toString();
  }
}

/// Message List builder class
///
class MsgListBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<MsgList, MsgListBuilder> {
  _$MsgList _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  List<ImcMessage> _msgs = <ImcMessage>[];
  List<ImcMessage> get msgs => _$this._msgs;
  set msgs(List<ImcMessage> msgs) => _$this._msgs = msgs;

  MsgListBuilder();

  MsgListBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  MsgListBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      MsgListBuilder()..copyFromHeader(headerFrom);

  MsgListBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _msgs = _$v.msgs;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MsgList other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$MsgList;
  }

  @override
  void update(void Function(MsgListBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$MsgList build() {
    final _$result = _$v ??
        _$MsgList._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            msgs: msgs ?? <ImcMessage>[]);
    replace(_$result);
    return _$result;
  }
}

/// Simulated State immutable class
///
class _$SimulatedState extends SimulatedState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double u;
  @override
  final double v;
  @override
  final double w;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final double svx;
  @override
  final double svy;
  @override
  final double svz;

  factory _$SimulatedState([void Function(SimulatedStateBuilder b) updates]) =>
      (SimulatedStateBuilder()..update(updates)).build();

  _$SimulatedState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.height,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi,
      this.u,
      this.v,
      this.w,
      this.p,
      this.q,
      this.r,
      this.svx,
      this.svy,
      this.svz})
      : super._();

  @override
  SimulatedState rebuild(void Function(SimulatedStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SimulatedStateBuilder toBuilder() => SimulatedStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SimulatedState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (height == other.height || height - other.height <= 1E-7) &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        (phi == other.phi || phi - other.phi <= 1E-7) &&
        (theta == other.theta || theta - other.theta <= 1E-7) &&
        (psi == other.psi || psi - other.psi <= 1E-7) &&
        (u == other.u || u - other.u <= 1E-7) &&
        (v == other.v || v - other.v <= 1E-7) &&
        (w == other.w || w - other.w <= 1E-7) &&
        (p == other.p || p - other.p <= 1E-7) &&
        (q == other.q || q - other.q <= 1E-7) &&
        (r == other.r || r - other.r <= 1E-7) &&
        (svx == other.svx || svx - other.svx <= 1E-7) &&
        (svy == other.svy || svy - other.svy <= 1E-7) &&
        (svz == other.svz || svz - other.svz <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc(0, timestamp?.hashCode), src?.hashCode), srcEnt?.hashCode), dst?.hashCode),
                                                                                dstEnt?.hashCode),
                                                                            lat?.hashCode),
                                                                        lon?.hashCode),
                                                                    height?.hashCode),
                                                                x?.hashCode),
                                                            y?.hashCode),
                                                        z?.hashCode),
                                                    phi?.hashCode),
                                                theta?.hashCode),
                                            psi?.hashCode),
                                        u?.hashCode),
                                    v?.hashCode),
                                w?.hashCode),
                            p?.hashCode),
                        q?.hashCode),
                    r?.hashCode),
                svx?.hashCode),
            svy?.hashCode),
        svz?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SimulatedState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('height', '$height (m)')
          ..add('x', '$x (m)')
          ..add('y', '$y (m)')
          ..add('z', '$z (m)')
          ..add('phi',
              '$phi (rad)${phi != null ? ' [${phi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('theta',
              '$theta (rad)${theta != null ? ' [${theta * 180.0 / math.pi} (deg)]' : ''}')
          ..add('psi',
              '$psi (rad)${psi != null ? ' [${psi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('u', '$u (m/s)')
          ..add('v', '$v (m/s)')
          ..add('w', '$w (m/s)')
          ..add('p',
              '$p (rad/s)${p != null ? ' [${p * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('q',
              '$q (rad/s)${q != null ? ' [${q * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('r',
              '$r (rad/s)${r != null ? ' [${r * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('svx', '$svx (m/s)')
          ..add('svy', '$svy (m/s)')
          ..add('svz', '$svz (m/s)'))
        .toString();
  }
}

/// Simulated State builder class
///
class SimulatedStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SimulatedState, SimulatedStateBuilder> {
  _$SimulatedState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height = 0;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi = 0;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta = 0;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi = 0;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _u = 0;
  double get u => _$this._u;
  set u(double u) => _$this._u = u;

  double _v = 0;
  double get v => _$this._v;
  set v(double v) => _$this._v = v;

  double _w = 0;
  double get w => _$this._w;
  set w(double w) => _$this._w = w;

  double _p = 0;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q = 0;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r = 0;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  double _svx = 0;
  double get svx => _$this._svx;
  set svx(double svx) => _$this._svx = svx;

  double _svy = 0;
  double get svy => _$this._svy;
  set svy(double svy) => _$this._svy = svy;

  double _svz = 0;
  double get svz => _$this._svz;
  set svz(double svz) => _$this._svz = svz;

  SimulatedStateBuilder();

  SimulatedStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SimulatedStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SimulatedStateBuilder()..copyFromHeader(headerFrom);

  SimulatedStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _u = _$v.u;
      _v = _$v.v;
      _w = _$v.w;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _svx = _$v.svx;
      _svy = _$v.svy;
      _svz = _$v.svz;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SimulatedState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SimulatedState;
  }

  @override
  void update(void Function(SimulatedStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SimulatedState build() {
    final _$result = _$v ??
        _$SimulatedState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            height: height ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0,
            u: u ?? 0,
            v: v ?? 0,
            w: w ?? 0,
            p: p ?? 0,
            q: q ?? 0,
            r: r ?? 0,
            svx: svx ?? 0,
            svy: svy ?? 0,
            svz: svz ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Leak Simulation immutable class
///
class _$LeakSimulation extends LeakSimulation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LeakSimulationEnumOp op;
  @override
  final String entities;

  factory _$LeakSimulation([void Function(LeakSimulationBuilder b) updates]) =>
      (LeakSimulationBuilder()..update(updates)).build();

  _$LeakSimulation._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.entities})
      : super._();

  @override
  LeakSimulation rebuild(void Function(LeakSimulationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LeakSimulationBuilder toBuilder() => LeakSimulationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LeakSimulation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        entities == other.entities;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            op?.hashCode),
        entities?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LeakSimulation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('entities', '$entities'))
        .toString();
  }
}

/// Leak Simulation builder class
///
class LeakSimulationBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<LeakSimulation, LeakSimulationBuilder> {
  _$LeakSimulation _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LeakSimulationEnumOp _op = LeakSimulationEnumOp(0);
  LeakSimulationEnumOp get op => _$this._op;
  set op(LeakSimulationEnumOp op) => _$this._op = op;

  String _entities = '';
  String get entities => _$this._entities;
  set entities(String entities) => _$this._entities = entities;

  LeakSimulationBuilder();

  LeakSimulationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LeakSimulationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LeakSimulationBuilder()..copyFromHeader(headerFrom);

  LeakSimulationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _entities = _$v.entities;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LeakSimulation other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LeakSimulation;
  }

  @override
  void update(void Function(LeakSimulationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LeakSimulation build() {
    final _$result = _$v ??
        _$LeakSimulation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? LeakSimulationEnumOp(0),
            entities: entities ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Underwater Acoustics Simulation immutable class
///
class _$UASimulation extends UASimulation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final UASimulationEnumType type;
  @override
  final int speed;
  @override
  final List<int> data;

  factory _$UASimulation([void Function(UASimulationBuilder b) updates]) =>
      (UASimulationBuilder()..update(updates)).build();

  _$UASimulation._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type,
      this.speed,
      this.data})
      : super._();

  @override
  UASimulation rebuild(void Function(UASimulationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  UASimulationBuilder toBuilder() => UASimulationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UASimulation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type &&
        speed == other.speed &&
        ListEquality().equals(data, other.data);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                type?.hashCode),
            speed?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UASimulation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Enumerated)')
          ..add('speed', '$speed (bps)')
          ..add('data', '$data'))
        .toString();
  }
}

/// Underwater Acoustics Simulation builder class
///
class UASimulationBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<UASimulation, UASimulationBuilder> {
  _$UASimulation _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  UASimulationEnumType _type = UASimulationEnumType(0);
  UASimulationEnumType get type => _$this._type;
  set type(UASimulationEnumType type) => _$this._type = type;

  int _speed = 0;
  int get speed => _$this._speed;
  set speed(int speed) => _$this._speed = speed;

  List<int> _data = <int>[];
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  UASimulationBuilder();

  UASimulationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  UASimulationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      UASimulationBuilder()..copyFromHeader(headerFrom);

  UASimulationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _speed = _$v.speed;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UASimulation other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$UASimulation;
  }

  @override
  void update(void Function(UASimulationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$UASimulation build() {
    final _$result = _$v ??
        _$UASimulation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? UASimulationEnumType(0),
            speed: speed ?? 0,
            data: data ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// Dynamics Simulation Parameters immutable class
///
class _$DynamicsSimParam extends DynamicsSimParam {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DynamicsSimParamEnumOp op;
  @override
  final double tas2accPgain;
  @override
  final double bank2pPgain;

  factory _$DynamicsSimParam(
          [void Function(DynamicsSimParamBuilder b) updates]) =>
      (DynamicsSimParamBuilder()..update(updates)).build();

  _$DynamicsSimParam._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.tas2accPgain,
      this.bank2pPgain})
      : super._();

  @override
  DynamicsSimParam rebuild(void Function(DynamicsSimParamBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DynamicsSimParamBuilder toBuilder() =>
      DynamicsSimParamBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DynamicsSimParam &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        (tas2accPgain == other.tas2accPgain ||
            tas2accPgain - other.tas2accPgain <= 1E-7) &&
        (bank2pPgain == other.bank2pPgain ||
            bank2pPgain - other.bank2pPgain <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                op?.hashCode),
            tas2accPgain?.hashCode),
        bank2pPgain?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DynamicsSimParam')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('tas2accPgain', '$tas2accPgain')
          ..add('bank2pPgain', '$bank2pPgain'))
        .toString();
  }
}

/// Dynamics Simulation Parameters builder class
///
class DynamicsSimParamBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<DynamicsSimParam, DynamicsSimParamBuilder> {
  _$DynamicsSimParam _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DynamicsSimParamEnumOp _op = DynamicsSimParamEnumOp(0);
  DynamicsSimParamEnumOp get op => _$this._op;
  set op(DynamicsSimParamEnumOp op) => _$this._op = op;

  double _tas2accPgain = 0;
  double get tas2accPgain => _$this._tas2accPgain;
  set tas2accPgain(double tas2accPgain) => _$this._tas2accPgain = tas2accPgain;

  double _bank2pPgain = 0;
  double get bank2pPgain => _$this._bank2pPgain;
  set bank2pPgain(double bank2pPgain) => _$this._bank2pPgain = bank2pPgain;

  DynamicsSimParamBuilder();

  DynamicsSimParamBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DynamicsSimParamBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DynamicsSimParamBuilder()..copyFromHeader(headerFrom);

  DynamicsSimParamBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _tas2accPgain = _$v.tas2accPgain;
      _bank2pPgain = _$v.bank2pPgain;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DynamicsSimParam other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DynamicsSimParam;
  }

  @override
  void update(void Function(DynamicsSimParamBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DynamicsSimParam build() {
    final _$result = _$v ??
        _$DynamicsSimParam._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? DynamicsSimParamEnumOp(0),
            tas2accPgain: tas2accPgain ?? 0,
            bank2pPgain: bank2pPgain ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Storage Usage immutable class
///
class _$StorageUsage extends StorageUsage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int available;
  @override
  final int value;

  factory _$StorageUsage([void Function(StorageUsageBuilder b) updates]) =>
      (StorageUsageBuilder()..update(updates)).build();

  _$StorageUsage._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.available,
      this.value})
      : super._();

  @override
  StorageUsage rebuild(void Function(StorageUsageBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  StorageUsageBuilder toBuilder() => StorageUsageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StorageUsage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        available == other.available &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            available?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StorageUsage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('available', '$available (MiB)')
          ..add('value', '$value (%)'))
        .toString();
  }
}

/// Storage Usage builder class
///
class StorageUsageBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<StorageUsage, StorageUsageBuilder> {
  _$StorageUsage _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _available = 0;
  int get available => _$this._available;
  set available(int available) => _$this._available = available;

  int _value = 0;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  StorageUsageBuilder();

  StorageUsageBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  StorageUsageBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      StorageUsageBuilder()..copyFromHeader(headerFrom);

  StorageUsageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _available = _$v.available;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StorageUsage other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$StorageUsage;
  }

  @override
  void update(void Function(StorageUsageBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$StorageUsage build() {
    final _$result = _$v ??
        _$StorageUsage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            available: available ?? 0,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Cache Control immutable class
///
class _$CacheControl extends CacheControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final CacheControlEnumOp op;
  @override
  final String snapshot;
  @override
  final ImcMessage message;

  factory _$CacheControl([void Function(CacheControlBuilder b) updates]) =>
      (CacheControlBuilder()..update(updates)).build();

  _$CacheControl._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.snapshot,
      this.message})
      : super._();

  @override
  CacheControl rebuild(void Function(CacheControlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CacheControlBuilder toBuilder() => CacheControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CacheControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        snapshot == other.snapshot &&
        message == other.message;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                op?.hashCode),
            snapshot?.hashCode),
        message?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CacheControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('snapshot', '$snapshot')
          ..add('message', '$message'))
        .toString();
  }
}

/// Cache Control builder class
///
class CacheControlBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<CacheControl, CacheControlBuilder> {
  _$CacheControl _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  CacheControlEnumOp _op = CacheControlEnumOp(0);
  CacheControlEnumOp get op => _$this._op;
  set op(CacheControlEnumOp op) => _$this._op = op;

  String _snapshot = '';
  String get snapshot => _$this._snapshot;
  set snapshot(String snapshot) => _$this._snapshot = snapshot;

  ImcMessage _message;
  ImcMessage get message => _$this._message;
  set message(ImcMessage message) => _$this._message = message;

  CacheControlBuilder();

  CacheControlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CacheControlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CacheControlBuilder()..copyFromHeader(headerFrom);

  CacheControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _snapshot = _$v.snapshot;
      _message = _$v.message;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CacheControl other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$CacheControl;
  }

  @override
  void update(void Function(CacheControlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$CacheControl build() {
    final _$result = _$v ??
        _$CacheControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? CacheControlEnumOp(0),
            snapshot: snapshot ?? '',
            message: message);
    replace(_$result);
    return _$result;
  }
}

/// Logging Control immutable class
///
class _$LoggingControl extends LoggingControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LoggingControlEnumOp op;
  @override
  final String name;

  factory _$LoggingControl([void Function(LoggingControlBuilder b) updates]) =>
      (LoggingControlBuilder()..update(updates)).build();

  _$LoggingControl._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.name})
      : super._();

  @override
  LoggingControl rebuild(void Function(LoggingControlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LoggingControlBuilder toBuilder() => LoggingControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LoggingControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            op?.hashCode),
        name?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LoggingControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('name', '$name'))
        .toString();
  }
}

/// Logging Control builder class
///
class LoggingControlBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<LoggingControl, LoggingControlBuilder> {
  _$LoggingControl _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LoggingControlEnumOp _op = LoggingControlEnumOp(0);
  LoggingControlEnumOp get op => _$this._op;
  set op(LoggingControlEnumOp op) => _$this._op = op;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  LoggingControlBuilder();

  LoggingControlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LoggingControlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LoggingControlBuilder()..copyFromHeader(headerFrom);

  LoggingControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LoggingControl other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LoggingControl;
  }

  @override
  void update(void Function(LoggingControlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LoggingControl build() {
    final _$result = _$v ??
        _$LoggingControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? LoggingControlEnumOp(0),
            name: name ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Log Book Entry immutable class
///
class _$LogBookEntry extends LogBookEntry {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LogBookEntryEnumType type;
  @override
  final double htime;
  @override
  final String context;
  @override
  final String text;

  factory _$LogBookEntry([void Function(LogBookEntryBuilder b) updates]) =>
      (LogBookEntryBuilder()..update(updates)).build();

  _$LogBookEntry._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type,
      this.htime,
      this.context,
      this.text})
      : super._();

  @override
  LogBookEntry rebuild(void Function(LogBookEntryBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LogBookEntryBuilder toBuilder() => LogBookEntryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LogBookEntry &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type &&
        (htime == other.htime || htime - other.htime <= 1E-7) &&
        context == other.context &&
        text == other.text;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    type?.hashCode),
                htime?.hashCode),
            context?.hashCode),
        text?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LogBookEntry')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Enumerated)')
          ..add('htime', '$htime (s)')
          ..add('context', '$context')
          ..add('text', '$text'))
        .toString();
  }
}

/// Log Book Entry builder class
///
class LogBookEntryBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<LogBookEntry, LogBookEntryBuilder> {
  _$LogBookEntry _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LogBookEntryEnumType _type = LogBookEntryEnumType(0);
  LogBookEntryEnumType get type => _$this._type;
  set type(LogBookEntryEnumType type) => _$this._type = type;

  double _htime = 0;
  double get htime => _$this._htime;
  set htime(double htime) => _$this._htime = htime;

  String _context = '';
  String get context => _$this._context;
  set context(String context) => _$this._context = context;

  String _text = '';
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  LogBookEntryBuilder();

  LogBookEntryBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LogBookEntryBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LogBookEntryBuilder()..copyFromHeader(headerFrom);

  LogBookEntryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _htime = _$v.htime;
      _context = _$v.context;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LogBookEntry other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LogBookEntry;
  }

  @override
  void update(void Function(LogBookEntryBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LogBookEntry build() {
    final _$result = _$v ??
        _$LogBookEntry._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? LogBookEntryEnumType(0),
            htime: htime ?? 0,
            context: context ?? '',
            text: text ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Log Book Control immutable class
///
class _$LogBookControl extends LogBookControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LogBookControlEnumCommand command;
  @override
  final double htime;
  @override
  final List<LogBookEntry> msg;

  factory _$LogBookControl([void Function(LogBookControlBuilder b) updates]) =>
      (LogBookControlBuilder()..update(updates)).build();

  _$LogBookControl._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.command,
      this.htime,
      this.msg})
      : super._();

  @override
  LogBookControl rebuild(void Function(LogBookControlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LogBookControlBuilder toBuilder() => LogBookControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LogBookControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        command == other.command &&
        (htime == other.htime || htime - other.htime <= 1E-7) &&
        DeepCollectionEquality().equals(msg, other.msg);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                command?.hashCode),
            htime?.hashCode),
        msg?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LogBookControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('command', '$command (Enumerated)')
          ..add('htime', '$htime (s)')
          ..add('msg', '$msg'))
        .toString();
  }
}

/// Log Book Control builder class
///
class LogBookControlBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<LogBookControl, LogBookControlBuilder> {
  _$LogBookControl _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LogBookControlEnumCommand _command = LogBookControlEnumCommand(0);
  LogBookControlEnumCommand get command => _$this._command;
  set command(LogBookControlEnumCommand command) => _$this._command = command;

  double _htime = 0;
  double get htime => _$this._htime;
  set htime(double htime) => _$this._htime = htime;

  List<LogBookEntry> _msg = <LogBookEntry>[];
  List<LogBookEntry> get msg => _$this._msg;
  set msg(List<LogBookEntry> msg) => _$this._msg = msg;

  LogBookControlBuilder();

  LogBookControlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LogBookControlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LogBookControlBuilder()..copyFromHeader(headerFrom);

  LogBookControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _command = _$v.command;
      _htime = _$v.htime;
      _msg = _$v.msg;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LogBookControl other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LogBookControl;
  }

  @override
  void update(void Function(LogBookControlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LogBookControl build() {
    final _$result = _$v ??
        _$LogBookControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            command: command ?? LogBookControlEnumCommand(0),
            htime: htime ?? 0,
            msg: msg ?? <LogBookEntry>[]);
    replace(_$result);
    return _$result;
  }
}

/// Replay Control immutable class
///
class _$ReplayControl extends ReplayControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ReplayControlEnumOp op;
  @override
  final String file;

  factory _$ReplayControl([void Function(ReplayControlBuilder b) updates]) =>
      (ReplayControlBuilder()..update(updates)).build();

  _$ReplayControl._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.file})
      : super._();

  @override
  ReplayControl rebuild(void Function(ReplayControlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ReplayControlBuilder toBuilder() => ReplayControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ReplayControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        file == other.file;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            op?.hashCode),
        file?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ReplayControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('file', '$file'))
        .toString();
  }
}

/// Replay Control builder class
///
class ReplayControlBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ReplayControl, ReplayControlBuilder> {
  _$ReplayControl _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ReplayControlEnumOp _op = ReplayControlEnumOp(0);
  ReplayControlEnumOp get op => _$this._op;
  set op(ReplayControlEnumOp op) => _$this._op = op;

  String _file = '';
  String get file => _$this._file;
  set file(String file) => _$this._file = file;

  ReplayControlBuilder();

  ReplayControlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ReplayControlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ReplayControlBuilder()..copyFromHeader(headerFrom);

  ReplayControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _file = _$v.file;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ReplayControl other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ReplayControl;
  }

  @override
  void update(void Function(ReplayControlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ReplayControl build() {
    final _$result = _$v ??
        _$ReplayControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? ReplayControlEnumOp(0),
            file: file ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Clock Control immutable class
///
class _$ClockControl extends ClockControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ClockControlEnumOp op;
  @override
  final double clock;
  @override
  final int tz;

  factory _$ClockControl([void Function(ClockControlBuilder b) updates]) =>
      (ClockControlBuilder()..update(updates)).build();

  _$ClockControl._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.clock,
      this.tz})
      : super._();

  @override
  ClockControl rebuild(void Function(ClockControlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ClockControlBuilder toBuilder() => ClockControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ClockControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        (clock == other.clock || clock - other.clock <= 1E-7) &&
        tz == other.tz;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                op?.hashCode),
            clock?.hashCode),
        tz?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ClockControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('clock', '$clock (s)')
          ..add('tz', '$tz'))
        .toString();
  }
}

/// Clock Control builder class
///
class ClockControlBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ClockControl, ClockControlBuilder> {
  _$ClockControl _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ClockControlEnumOp _op = ClockControlEnumOp(0);
  ClockControlEnumOp get op => _$this._op;
  set op(ClockControlEnumOp op) => _$this._op = op;

  double _clock = 0;
  double get clock => _$this._clock;
  set clock(double clock) => _$this._clock = clock;

  int _tz = 0;
  int get tz => _$this._tz;
  set tz(int tz) => _$this._tz = tz;

  ClockControlBuilder();

  ClockControlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ClockControlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ClockControlBuilder()..copyFromHeader(headerFrom);

  ClockControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _clock = _$v.clock;
      _tz = _$v.tz;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ClockControl other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ClockControl;
  }

  @override
  void update(void Function(ClockControlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ClockControl build() {
    final _$result = _$v ??
        _$ClockControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? ClockControlEnumOp(0),
            clock: clock ?? 0,
            tz: tz ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Historic CTD immutable class
///
class _$HistoricCTD extends HistoricCTD {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double conductivity;
  @override
  final double temperature;
  @override
  final double depth;

  factory _$HistoricCTD([void Function(HistoricCTDBuilder b) updates]) =>
      (HistoricCTDBuilder()..update(updates)).build();

  _$HistoricCTD._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.conductivity,
      this.temperature,
      this.depth})
      : super._();

  @override
  HistoricCTD rebuild(void Function(HistoricCTDBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricCTDBuilder toBuilder() => HistoricCTDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricCTD &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (conductivity == other.conductivity ||
            conductivity - other.conductivity <= 1E-7) &&
        (temperature == other.temperature ||
            temperature - other.temperature <= 1E-7) &&
        (depth == other.depth || depth - other.depth <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                conductivity?.hashCode),
            temperature?.hashCode),
        depth?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricCTD')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('conductivity', '$conductivity (S/m)')
          ..add('temperature', '$temperature (°C)')
          ..add('depth', '$depth (m)'))
        .toString();
  }
}

/// Historic CTD builder class
///
class HistoricCTDBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<HistoricCTD, HistoricCTDBuilder> {
  _$HistoricCTD _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _conductivity = 0;
  double get conductivity => _$this._conductivity;
  set conductivity(double conductivity) => _$this._conductivity = conductivity;

  double _temperature = 0;
  double get temperature => _$this._temperature;
  set temperature(double temperature) => _$this._temperature = temperature;

  double _depth = 0;
  double get depth => _$this._depth;
  set depth(double depth) => _$this._depth = depth;

  HistoricCTDBuilder();

  HistoricCTDBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  HistoricCTDBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      HistoricCTDBuilder()..copyFromHeader(headerFrom);

  HistoricCTDBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _conductivity = _$v.conductivity;
      _temperature = _$v.temperature;
      _depth = _$v.depth;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricCTD other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricCTD;
  }

  @override
  void update(void Function(HistoricCTDBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricCTD build() {
    final _$result = _$v ??
        _$HistoricCTD._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            conductivity: conductivity ?? 0,
            temperature: temperature ?? 0,
            depth: depth ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Historic Telemetry immutable class
///
class _$HistoricTelemetry extends HistoricTelemetry {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double altitude;
  @override
  final int roll;
  @override
  final int pitch;
  @override
  final int yaw;
  @override
  final int speed;

  factory _$HistoricTelemetry(
          [void Function(HistoricTelemetryBuilder b) updates]) =>
      (HistoricTelemetryBuilder()..update(updates)).build();

  _$HistoricTelemetry._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.altitude,
      this.roll,
      this.pitch,
      this.yaw,
      this.speed})
      : super._();

  @override
  HistoricTelemetry rebuild(
          void Function(HistoricTelemetryBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricTelemetryBuilder toBuilder() =>
      HistoricTelemetryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricTelemetry &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (altitude == other.altitude || altitude - other.altitude <= 1E-7) &&
        roll == other.roll &&
        pitch == other.pitch &&
        yaw == other.yaw &&
        speed == other.speed;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, timestamp?.hashCode),
                                        src?.hashCode),
                                    srcEnt?.hashCode),
                                dst?.hashCode),
                            dstEnt?.hashCode),
                        altitude?.hashCode),
                    roll?.hashCode),
                pitch?.hashCode),
            yaw?.hashCode),
        speed?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricTelemetry')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('altitude', '$altitude (m)')
          ..add('roll', '$roll')
          ..add('pitch', '$pitch')
          ..add('yaw', '$yaw')
          ..add('speed', '$speed (dm)'))
        .toString();
  }
}

/// Historic Telemetry builder class
///
class HistoricTelemetryBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<HistoricTelemetry, HistoricTelemetryBuilder> {
  _$HistoricTelemetry _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _altitude = 0;
  double get altitude => _$this._altitude;
  set altitude(double altitude) => _$this._altitude = altitude;

  int _roll = 0;
  int get roll => _$this._roll;
  set roll(int roll) => _$this._roll = roll;

  int _pitch = 0;
  int get pitch => _$this._pitch;
  set pitch(int pitch) => _$this._pitch = pitch;

  int _yaw = 0;
  int get yaw => _$this._yaw;
  set yaw(int yaw) => _$this._yaw = yaw;

  int _speed = 0;
  int get speed => _$this._speed;
  set speed(int speed) => _$this._speed = speed;

  HistoricTelemetryBuilder();

  HistoricTelemetryBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  HistoricTelemetryBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      HistoricTelemetryBuilder()..copyFromHeader(headerFrom);

  HistoricTelemetryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _altitude = _$v.altitude;
      _roll = _$v.roll;
      _pitch = _$v.pitch;
      _yaw = _$v.yaw;
      _speed = _$v.speed;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricTelemetry other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricTelemetry;
  }

  @override
  void update(void Function(HistoricTelemetryBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricTelemetry build() {
    final _$result = _$v ??
        _$HistoricTelemetry._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            altitude: altitude ?? 0,
            roll: roll ?? 0,
            pitch: pitch ?? 0,
            yaw: yaw ?? 0,
            speed: speed ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Historic Sonar Data immutable class
///
class _$HistoricSonarData extends HistoricSonarData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double altitude;
  @override
  final double width;
  @override
  final double length;
  @override
  final double bearing;
  @override
  final int pxl;
  @override
  final HistoricSonarDataEnumEncoding encoding;
  @override
  final List<int> sonarData;

  factory _$HistoricSonarData(
          [void Function(HistoricSonarDataBuilder b) updates]) =>
      (HistoricSonarDataBuilder()..update(updates)).build();

  _$HistoricSonarData._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.altitude,
      this.width,
      this.length,
      this.bearing,
      this.pxl,
      this.encoding,
      this.sonarData})
      : super._();

  @override
  HistoricSonarData rebuild(
          void Function(HistoricSonarDataBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricSonarDataBuilder toBuilder() =>
      HistoricSonarDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricSonarData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (altitude == other.altitude || altitude - other.altitude <= 1E-7) &&
        (width == other.width || width - other.width <= 1E-7) &&
        (length == other.length || length - other.length <= 1E-7) &&
        (bearing == other.bearing || bearing - other.bearing <= 1E-7) &&
        pxl == other.pxl &&
        encoding == other.encoding &&
        ListEquality().equals(sonarData, other.sonarData);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, timestamp?.hashCode),
                                                src?.hashCode),
                                            srcEnt?.hashCode),
                                        dst?.hashCode),
                                    dstEnt?.hashCode),
                                altitude?.hashCode),
                            width?.hashCode),
                        length?.hashCode),
                    bearing?.hashCode),
                pxl?.hashCode),
            encoding?.hashCode),
        sonarData?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricSonarData')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('altitude', '$altitude (m)')
          ..add('width', '$width (m)')
          ..add('length', '$length (m)')
          ..add('bearing', '$bearing')
          ..add('pxl', '$pxl')
          ..add('encoding', '$encoding (Enumerated)')
          ..add('sonarData', '$sonarData'))
        .toString();
  }
}

/// Historic Sonar Data builder class
///
class HistoricSonarDataBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<HistoricSonarData, HistoricSonarDataBuilder> {
  _$HistoricSonarData _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _altitude = 0;
  double get altitude => _$this._altitude;
  set altitude(double altitude) => _$this._altitude = altitude;

  double _width = 0;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  double _length = 0;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  double _bearing = 0;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  int _pxl = 0;
  int get pxl => _$this._pxl;
  set pxl(int pxl) => _$this._pxl = pxl;

  HistoricSonarDataEnumEncoding _encoding = HistoricSonarDataEnumEncoding(0);
  HistoricSonarDataEnumEncoding get encoding => _$this._encoding;
  set encoding(HistoricSonarDataEnumEncoding encoding) =>
      _$this._encoding = encoding;

  List<int> _sonarData = <int>[];
  List<int> get sonarData => _$this._sonarData;
  set sonarData(List<int> sonarData) => _$this._sonarData = sonarData;

  HistoricSonarDataBuilder();

  HistoricSonarDataBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  HistoricSonarDataBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      HistoricSonarDataBuilder()..copyFromHeader(headerFrom);

  HistoricSonarDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _altitude = _$v.altitude;
      _width = _$v.width;
      _length = _$v.length;
      _bearing = _$v.bearing;
      _pxl = _$v.pxl;
      _encoding = _$v.encoding;
      _sonarData = _$v.sonarData;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricSonarData other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricSonarData;
  }

  @override
  void update(void Function(HistoricSonarDataBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricSonarData build() {
    final _$result = _$v ??
        _$HistoricSonarData._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            altitude: altitude ?? 0,
            width: width ?? 0,
            length: length ?? 0,
            bearing: bearing ?? 0,
            pxl: pxl ?? 0,
            encoding: encoding ?? HistoricSonarDataEnumEncoding(0),
            sonarData: sonarData ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// Historic Event immutable class
///
class _$HistoricEvent extends HistoricEvent {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String text;
  @override
  final HistoricEventEnumType type;

  factory _$HistoricEvent([void Function(HistoricEventBuilder b) updates]) =>
      (HistoricEventBuilder()..update(updates)).build();

  _$HistoricEvent._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.text,
      this.type})
      : super._();

  @override
  HistoricEvent rebuild(void Function(HistoricEventBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricEventBuilder toBuilder() => HistoricEventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricEvent &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        text == other.text &&
        type == other.type;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            text?.hashCode),
        type?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricEvent')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('text', '$text')
          ..add('type', '$type (Enumerated)'))
        .toString();
  }
}

/// Historic Event builder class
///
class HistoricEventBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<HistoricEvent, HistoricEventBuilder> {
  _$HistoricEvent _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _text = '';
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  HistoricEventEnumType _type = HistoricEventEnumType(0);
  HistoricEventEnumType get type => _$this._type;
  set type(HistoricEventEnumType type) => _$this._type = type;

  HistoricEventBuilder();

  HistoricEventBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  HistoricEventBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      HistoricEventBuilder()..copyFromHeader(headerFrom);

  HistoricEventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _text = _$v.text;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricEvent other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricEvent;
  }

  @override
  void update(void Function(HistoricEventBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricEvent build() {
    final _$result = _$v ??
        _$HistoricEvent._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            text: text ?? '',
            type: type ?? HistoricEventEnumType(0));
    replace(_$result);
    return _$result;
  }
}

/// Vertical Profile immutable class
///
class _$VerticalProfile extends VerticalProfile {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VerticalProfileEnumParameter parameter;
  @override
  final int numSamples;
  @override
  final List<ProfileSample> samples;
  @override
  final double lat;
  @override
  final double lon;

  factory _$VerticalProfile(
          [void Function(VerticalProfileBuilder b) updates]) =>
      (VerticalProfileBuilder()..update(updates)).build();

  _$VerticalProfile._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.parameter,
      this.numSamples,
      this.samples,
      this.lat,
      this.lon})
      : super._();

  @override
  VerticalProfile rebuild(void Function(VerticalProfileBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  VerticalProfileBuilder toBuilder() => VerticalProfileBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VerticalProfile &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        parameter == other.parameter &&
        numSamples == other.numSamples &&
        DeepCollectionEquality().equals(samples, other.samples) &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, timestamp?.hashCode),
                                        src?.hashCode),
                                    srcEnt?.hashCode),
                                dst?.hashCode),
                            dstEnt?.hashCode),
                        parameter?.hashCode),
                    numSamples?.hashCode),
                samples?.hashCode),
            lat?.hashCode),
        lon?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VerticalProfile')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('parameter', '$parameter (Enumerated)')
          ..add('numSamples', '$numSamples')
          ..add('samples', '$samples')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// Vertical Profile builder class
///
class VerticalProfileBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<VerticalProfile, VerticalProfileBuilder> {
  _$VerticalProfile _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VerticalProfileEnumParameter _parameter = VerticalProfileEnumParameter(0);
  VerticalProfileEnumParameter get parameter => _$this._parameter;
  set parameter(VerticalProfileEnumParameter parameter) =>
      _$this._parameter = parameter;

  int _numSamples = 0;
  int get numSamples => _$this._numSamples;
  set numSamples(int numSamples) => _$this._numSamples = numSamples;

  List<ProfileSample> _samples = <ProfileSample>[];
  List<ProfileSample> get samples => _$this._samples;
  set samples(List<ProfileSample> samples) => _$this._samples = samples;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  VerticalProfileBuilder();

  VerticalProfileBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  VerticalProfileBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      VerticalProfileBuilder()..copyFromHeader(headerFrom);

  VerticalProfileBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _parameter = _$v.parameter;
      _numSamples = _$v.numSamples;
      _samples = _$v.samples;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VerticalProfile other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$VerticalProfile;
  }

  @override
  void update(void Function(VerticalProfileBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$VerticalProfile build() {
    final _$result = _$v ??
        _$VerticalProfile._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            parameter: parameter ?? VerticalProfileEnumParameter(0),
            numSamples: numSamples ?? 0,
            samples: samples ?? <ProfileSample>[],
            lat: lat ?? 0,
            lon: lon ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Profile Sample immutable class
///
class _$ProfileSample extends ProfileSample {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int depth;
  @override
  final double avg;

  factory _$ProfileSample([void Function(ProfileSampleBuilder b) updates]) =>
      (ProfileSampleBuilder()..update(updates)).build();

  _$ProfileSample._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.depth,
      this.avg})
      : super._();

  @override
  ProfileSample rebuild(void Function(ProfileSampleBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ProfileSampleBuilder toBuilder() => ProfileSampleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ProfileSample &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        depth == other.depth &&
        (avg == other.avg || avg - other.avg <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            depth?.hashCode),
        avg?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ProfileSample')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('depth', '$depth (dm)')
          ..add('avg', '$avg'))
        .toString();
  }
}

/// Profile Sample builder class
///
class ProfileSampleBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ProfileSample, ProfileSampleBuilder> {
  _$ProfileSample _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _depth = 0;
  int get depth => _$this._depth;
  set depth(int depth) => _$this._depth = depth;

  double _avg = 0;
  double get avg => _$this._avg;
  set avg(double avg) => _$this._avg = avg;

  ProfileSampleBuilder();

  ProfileSampleBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ProfileSampleBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ProfileSampleBuilder()..copyFromHeader(headerFrom);

  ProfileSampleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _depth = _$v.depth;
      _avg = _$v.avg;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ProfileSample other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ProfileSample;
  }

  @override
  void update(void Function(ProfileSampleBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ProfileSample build() {
    final _$result = _$v ??
        _$ProfileSample._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            depth: depth ?? 0,
            avg: avg ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Heartbeat immutable class
///
class _$Heartbeat extends Heartbeat {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  factory _$Heartbeat([void Function(HeartbeatBuilder b) updates]) =>
      (HeartbeatBuilder()..update(updates)).build();

  _$Heartbeat._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId})
      : super._();

  @override
  Heartbeat rebuild(void Function(HeartbeatBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  HeartbeatBuilder toBuilder() => HeartbeatBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Heartbeat &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                srcEnt?.hashCode),
            dst?.hashCode),
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Heartbeat')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Heartbeat builder class
///
class HeartbeatBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Heartbeat, HeartbeatBuilder> {
  _$Heartbeat _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  HeartbeatBuilder();

  HeartbeatBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  HeartbeatBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      HeartbeatBuilder()..copyFromHeader(headerFrom);

  HeartbeatBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Heartbeat other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Heartbeat;
  }

  @override
  void update(void Function(HeartbeatBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Heartbeat build() {
    final _$result = _$v ??
        _$Heartbeat._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Announce immutable class
///
class _$Announce extends Announce {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String sysName;
  @override
  final SystemTypeEnum sysType;
  @override
  final int owner;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final String services;

  factory _$Announce([void Function(AnnounceBuilder b) updates]) =>
      (AnnounceBuilder()..update(updates)).build();

  _$Announce._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.sysName,
      this.sysType,
      this.owner,
      this.lat,
      this.lon,
      this.height,
      this.services})
      : super._();

  @override
  Announce rebuild(void Function(AnnounceBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AnnounceBuilder toBuilder() => AnnounceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Announce &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sysName == other.sysName &&
        sysType == other.sysType &&
        owner == other.owner &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (height == other.height || height - other.height <= 1E-7) &&
        services == other.services;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, timestamp?.hashCode),
                                                src?.hashCode),
                                            srcEnt?.hashCode),
                                        dst?.hashCode),
                                    dstEnt?.hashCode),
                                sysName?.hashCode),
                            sysType?.hashCode),
                        owner?.hashCode),
                    lat?.hashCode),
                lon?.hashCode),
            height?.hashCode),
        services?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Announce')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sysName', '$sysName')
          ..add('sysType', '$sysType (Enumerated)')
          ..add('owner', '$owner')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('height', '$height (m)')
          ..add('services', '$services'))
        .toString();
  }
}

/// Announce builder class
///
class AnnounceBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Announce, AnnounceBuilder> {
  _$Announce _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _sysName = '';
  String get sysName => _$this._sysName;
  set sysName(String sysName) => _$this._sysName = sysName;

  SystemTypeEnum _sysType = SystemTypeEnum(0);
  SystemTypeEnum get sysType => _$this._sysType;
  set sysType(SystemTypeEnum sysType) => _$this._sysType = sysType;

  int _owner = 0;
  int get owner => _$this._owner;
  set owner(int owner) => _$this._owner = owner;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height = 0;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  String _services = '';
  String get services => _$this._services;
  set services(String services) => _$this._services = services;

  AnnounceBuilder();

  AnnounceBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AnnounceBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AnnounceBuilder()..copyFromHeader(headerFrom);

  AnnounceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sysName = _$v.sysName;
      _sysType = _$v.sysType;
      _owner = _$v.owner;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _services = _$v.services;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Announce other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Announce;
  }

  @override
  void update(void Function(AnnounceBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Announce build() {
    final _$result = _$v ??
        _$Announce._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sysName: sysName ?? '',
            sysType: sysType ?? SystemTypeEnum(0),
            owner: owner ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            height: height ?? 0,
            services: services ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Announce Service immutable class
///
class _$AnnounceService extends AnnounceService {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String service;
  @override
  final AnnounceServiceBitfieldServiceType serviceType;

  factory _$AnnounceService(
          [void Function(AnnounceServiceBuilder b) updates]) =>
      (AnnounceServiceBuilder()..update(updates)).build();

  _$AnnounceService._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.service,
      this.serviceType})
      : super._();

  @override
  AnnounceService rebuild(void Function(AnnounceServiceBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AnnounceServiceBuilder toBuilder() => AnnounceServiceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AnnounceService &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        service == other.service &&
        serviceType == other.serviceType;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            service?.hashCode),
        serviceType?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AnnounceService')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('service', '$service')
          ..add('serviceType', '$serviceType (Bitfield)'))
        .toString();
  }
}

/// Announce Service builder class
///
class AnnounceServiceBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<AnnounceService, AnnounceServiceBuilder> {
  _$AnnounceService _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _service = '';
  String get service => _$this._service;
  set service(String service) => _$this._service = service;

  AnnounceServiceBitfieldServiceType _serviceType =
      AnnounceServiceBitfieldServiceType(0);
  AnnounceServiceBitfieldServiceType get serviceType => _$this._serviceType;
  set serviceType(AnnounceServiceBitfieldServiceType serviceType) =>
      _$this._serviceType = serviceType;

  AnnounceServiceBuilder();

  AnnounceServiceBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AnnounceServiceBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AnnounceServiceBuilder()..copyFromHeader(headerFrom);

  AnnounceServiceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _service = _$v.service;
      _serviceType = _$v.serviceType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AnnounceService other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$AnnounceService;
  }

  @override
  void update(void Function(AnnounceServiceBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$AnnounceService build() {
    final _$result = _$v ??
        _$AnnounceService._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            service: service ?? '',
            serviceType: serviceType ?? AnnounceServiceBitfieldServiceType(0));
    replace(_$result);
    return _$result;
  }
}

/// Receive Signal Strength Information immutable class
///
class _$RSSI extends RSSI {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$RSSI([void Function(RSSIBuilder b) updates]) =>
      (RSSIBuilder()..update(updates)).build();

  _$RSSI._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  RSSI rebuild(void Function(RSSIBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RSSIBuilder toBuilder() => RSSIBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RSSI &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RSSI')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (%)'))
        .toString();
  }
}

/// Receive Signal Strength Information builder class
///
class RSSIBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<RSSI, RSSIBuilder> {
  _$RSSI _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RSSIBuilder();

  RSSIBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RSSIBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RSSIBuilder()..copyFromHeader(headerFrom);

  RSSIBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RSSI other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$RSSI;
  }

  @override
  void update(void Function(RSSIBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$RSSI build() {
    final _$result = _$v ??
        _$RSSI._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Voltage Standing Wave Ratio immutable class
///
class _$VSWR extends VSWR {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$VSWR([void Function(VSWRBuilder b) updates]) =>
      (VSWRBuilder()..update(updates)).build();

  _$VSWR._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  VSWR rebuild(void Function(VSWRBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  VSWRBuilder toBuilder() => VSWRBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VSWR &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VSWR')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value'))
        .toString();
  }
}

/// Voltage Standing Wave Ratio builder class
///
class VSWRBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<VSWR, VSWRBuilder> {
  _$VSWR _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  VSWRBuilder();

  VSWRBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  VSWRBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      VSWRBuilder()..copyFromHeader(headerFrom);

  VSWRBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VSWR other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$VSWR;
  }

  @override
  void update(void Function(VSWRBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$VSWR build() {
    final _$result = _$v ??
        _$VSWR._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Link Level immutable class
///
class _$LinkLevel extends LinkLevel {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$LinkLevel([void Function(LinkLevelBuilder b) updates]) =>
      (LinkLevelBuilder()..update(updates)).build();

  _$LinkLevel._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  LinkLevel rebuild(void Function(LinkLevelBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LinkLevelBuilder toBuilder() => LinkLevelBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LinkLevel &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LinkLevel')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value'))
        .toString();
  }
}

/// Link Level builder class
///
class LinkLevelBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<LinkLevel, LinkLevelBuilder> {
  _$LinkLevel _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  LinkLevelBuilder();

  LinkLevelBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LinkLevelBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LinkLevelBuilder()..copyFromHeader(headerFrom);

  LinkLevelBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LinkLevel other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LinkLevel;
  }

  @override
  void update(void Function(LinkLevelBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LinkLevel build() {
    final _$result = _$v ??
        _$LinkLevel._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// SMS immutable class
///
class _$Sms extends Sms {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String number;
  @override
  final int timeout;
  @override
  final String contents;

  factory _$Sms([void Function(SmsBuilder b) updates]) =>
      (SmsBuilder()..update(updates)).build();

  _$Sms._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.number,
      this.timeout,
      this.contents})
      : super._();

  @override
  Sms rebuild(void Function(SmsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsBuilder toBuilder() => SmsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Sms &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        number == other.number &&
        timeout == other.timeout &&
        contents == other.contents;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                number?.hashCode),
            timeout?.hashCode),
        contents?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Sms')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('number', '$number')
          ..add('timeout', '$timeout')
          ..add('contents', '$contents'))
        .toString();
  }
}

/// SMS builder class
///
class SmsBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Sms, SmsBuilder> {
  _$Sms _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _number = '';
  String get number => _$this._number;
  set number(String number) => _$this._number = number;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  String _contents = '';
  String get contents => _$this._contents;
  set contents(String contents) => _$this._contents = contents;

  SmsBuilder();

  SmsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SmsBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SmsBuilder()..copyFromHeader(headerFrom);

  SmsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _number = _$v.number;
      _timeout = _$v.timeout;
      _contents = _$v.contents;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Sms other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Sms;
  }

  @override
  void update(void Function(SmsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Sms build() {
    final _$result = _$v ??
        _$Sms._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            number: number ?? '',
            timeout: timeout ?? 0,
            contents: contents ?? '');
    replace(_$result);
    return _$result;
  }
}

/// SMS Transmit immutable class
///
class _$SmsTx extends SmsTx {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final String destination;
  @override
  final int timeout;
  @override
  final List<int> data;

  factory _$SmsTx([void Function(SmsTxBuilder b) updates]) =>
      (SmsTxBuilder()..update(updates)).build();

  _$SmsTx._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.seq,
      this.destination,
      this.timeout,
      this.data})
      : super._();

  @override
  SmsTx rebuild(void Function(SmsTxBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsTxBuilder toBuilder() => SmsTxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsTx &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == other.seq &&
        destination == other.destination &&
        timeout == other.timeout &&
        ListEquality().equals(data, other.data);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    seq?.hashCode),
                destination?.hashCode),
            timeout?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsTx')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('seq', '$seq')
          ..add('destination', '$destination')
          ..add('timeout', '$timeout (s)')
          ..add('data', '$data'))
        .toString();
  }
}

/// SMS Transmit builder class
///
class SmsTxBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SmsTx, SmsTxBuilder> {
  _$SmsTx _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq = 0;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  String _destination = '';
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  List<int> _data = <int>[];
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  SmsTxBuilder();

  SmsTxBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SmsTxBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SmsTxBuilder()..copyFromHeader(headerFrom);

  SmsTxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _destination = _$v.destination;
      _timeout = _$v.timeout;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsTx other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SmsTx;
  }

  @override
  void update(void Function(SmsTxBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsTx build() {
    final _$result = _$v ??
        _$SmsTx._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            seq: seq ?? 0,
            destination: destination ?? '',
            timeout: timeout ?? 0,
            data: data ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// SMS Receive immutable class
///
class _$SmsRx extends SmsRx {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String source;
  @override
  final List<int> data;

  factory _$SmsRx([void Function(SmsRxBuilder b) updates]) =>
      (SmsRxBuilder()..update(updates)).build();

  _$SmsRx._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.source,
      this.data})
      : super._();

  @override
  SmsRx rebuild(void Function(SmsRxBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsRxBuilder toBuilder() => SmsRxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsRx &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        source == other.source &&
        ListEquality().equals(data, other.data);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            source?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsRx')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('source', '$source')
          ..add('data', '$data'))
        .toString();
  }
}

/// SMS Receive builder class
///
class SmsRxBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SmsRx, SmsRxBuilder> {
  _$SmsRx _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _source = '';
  String get source => _$this._source;
  set source(String source) => _$this._source = source;

  List<int> _data = <int>[];
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  SmsRxBuilder();

  SmsRxBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SmsRxBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SmsRxBuilder()..copyFromHeader(headerFrom);

  SmsRxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _source = _$v.source;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsRx other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SmsRx;
  }

  @override
  void update(void Function(SmsRxBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsRx build() {
    final _$result = _$v ??
        _$SmsRx._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            source: source ?? '',
            data: data ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// SMS State immutable class
///
class _$SmsState extends SmsState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final SmsStateEnumState state;
  @override
  final String error;

  factory _$SmsState([void Function(SmsStateBuilder b) updates]) =>
      (SmsStateBuilder()..update(updates)).build();

  _$SmsState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.seq,
      this.state,
      this.error})
      : super._();

  @override
  SmsState rebuild(void Function(SmsStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsStateBuilder toBuilder() => SmsStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == other.seq &&
        state == other.state &&
        error == other.error;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                seq?.hashCode),
            state?.hashCode),
        error?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('seq', '$seq')
          ..add('state', '$state (Enumerated)')
          ..add('error', '$error'))
        .toString();
  }
}

/// SMS State builder class
///
class SmsStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SmsState, SmsStateBuilder> {
  _$SmsState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq = 0;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  SmsStateEnumState _state = SmsStateEnumState(0);
  SmsStateEnumState get state => _$this._state;
  set state(SmsStateEnumState state) => _$this._state = state;

  String _error = '';
  String get error => _$this._error;
  set error(String error) => _$this._error = error;

  SmsStateBuilder();

  SmsStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SmsStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SmsStateBuilder()..copyFromHeader(headerFrom);

  SmsStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _state = _$v.state;
      _error = _$v.error;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SmsState;
  }

  @override
  void update(void Function(SmsStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsState build() {
    final _$result = _$v ??
        _$SmsState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            seq: seq ?? 0,
            state: state ?? SmsStateEnumState(0),
            error: error ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Text Message immutable class
///
class _$TextMessage extends TextMessage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String origin;
  @override
  final String text;

  factory _$TextMessage([void Function(TextMessageBuilder b) updates]) =>
      (TextMessageBuilder()..update(updates)).build();

  _$TextMessage._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.origin,
      this.text})
      : super._();

  @override
  TextMessage rebuild(void Function(TextMessageBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TextMessageBuilder toBuilder() => TextMessageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TextMessage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        origin == other.origin &&
        text == other.text;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            origin?.hashCode),
        text?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TextMessage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('origin', '$origin')
          ..add('text', '$text'))
        .toString();
  }
}

/// Text Message builder class
///
class TextMessageBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<TextMessage, TextMessageBuilder> {
  _$TextMessage _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _origin = '';
  String get origin => _$this._origin;
  set origin(String origin) => _$this._origin = origin;

  String _text = '';
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  TextMessageBuilder();

  TextMessageBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TextMessageBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TextMessageBuilder()..copyFromHeader(headerFrom);

  TextMessageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _origin = _$v.origin;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TextMessage other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TextMessage;
  }

  @override
  void update(void Function(TextMessageBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TextMessage build() {
    final _$result = _$v ??
        _$TextMessage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            origin: origin ?? '',
            text: text ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Received Iridium Message immutable class
///
class _$IridiumMsgRx extends IridiumMsgRx {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String origin;
  @override
  final double htime;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final List<int> data;

  factory _$IridiumMsgRx([void Function(IridiumMsgRxBuilder b) updates]) =>
      (IridiumMsgRxBuilder()..update(updates)).build();

  _$IridiumMsgRx._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.origin,
      this.htime,
      this.lat,
      this.lon,
      this.data})
      : super._();

  @override
  IridiumMsgRx rebuild(void Function(IridiumMsgRxBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  IridiumMsgRxBuilder toBuilder() => IridiumMsgRxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IridiumMsgRx &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        origin == other.origin &&
        (htime == other.htime || htime - other.htime <= 1E-7) &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        ListEquality().equals(data, other.data);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, timestamp?.hashCode),
                                        src?.hashCode),
                                    srcEnt?.hashCode),
                                dst?.hashCode),
                            dstEnt?.hashCode),
                        origin?.hashCode),
                    htime?.hashCode),
                lat?.hashCode),
            lon?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IridiumMsgRx')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('origin', '$origin')
          ..add('htime', '$htime (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('data', '$data'))
        .toString();
  }
}

/// Received Iridium Message builder class
///
class IridiumMsgRxBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<IridiumMsgRx, IridiumMsgRxBuilder> {
  _$IridiumMsgRx _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _origin = '';
  String get origin => _$this._origin;
  set origin(String origin) => _$this._origin = origin;

  double _htime = 0;
  double get htime => _$this._htime;
  set htime(double htime) => _$this._htime = htime;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  List<int> _data = <int>[];
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  IridiumMsgRxBuilder();

  IridiumMsgRxBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  IridiumMsgRxBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      IridiumMsgRxBuilder()..copyFromHeader(headerFrom);

  IridiumMsgRxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _origin = _$v.origin;
      _htime = _$v.htime;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IridiumMsgRx other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$IridiumMsgRx;
  }

  @override
  void update(void Function(IridiumMsgRxBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$IridiumMsgRx build() {
    final _$result = _$v ??
        _$IridiumMsgRx._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            origin: origin ?? '',
            htime: htime ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            data: data ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// Transmit Iridium Message immutable class
///
class _$IridiumMsgTx extends IridiumMsgTx {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final int ttl;
  @override
  final String destination;
  @override
  final List<int> data;

  factory _$IridiumMsgTx([void Function(IridiumMsgTxBuilder b) updates]) =>
      (IridiumMsgTxBuilder()..update(updates)).build();

  _$IridiumMsgTx._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.reqId,
      this.ttl,
      this.destination,
      this.data})
      : super._();

  @override
  IridiumMsgTx rebuild(void Function(IridiumMsgTxBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  IridiumMsgTxBuilder toBuilder() => IridiumMsgTxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IridiumMsgTx &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == other.reqId &&
        ttl == other.ttl &&
        destination == other.destination &&
        ListEquality().equals(data, other.data);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    reqId?.hashCode),
                ttl?.hashCode),
            destination?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IridiumMsgTx')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', '$reqId')
          ..add('ttl', '$ttl (s)')
          ..add('destination', '$destination')
          ..add('data', '$data'))
        .toString();
  }
}

/// Transmit Iridium Message builder class
///
class IridiumMsgTxBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<IridiumMsgTx, IridiumMsgTxBuilder> {
  _$IridiumMsgTx _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId = 0;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  int _ttl = 0;
  int get ttl => _$this._ttl;
  set ttl(int ttl) => _$this._ttl = ttl;

  String _destination = '';
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  List<int> _data = <int>[];
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  IridiumMsgTxBuilder();

  IridiumMsgTxBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  IridiumMsgTxBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      IridiumMsgTxBuilder()..copyFromHeader(headerFrom);

  IridiumMsgTxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _ttl = _$v.ttl;
      _destination = _$v.destination;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IridiumMsgTx other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$IridiumMsgTx;
  }

  @override
  void update(void Function(IridiumMsgTxBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$IridiumMsgTx build() {
    final _$result = _$v ??
        _$IridiumMsgTx._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            ttl: ttl ?? 0,
            destination: destination ?? '',
            data: data ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// Iridium Transmission Status immutable class
///
class _$IridiumTxStatus extends IridiumTxStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final IridiumTxStatusEnumStatus status;
  @override
  final String text;

  factory _$IridiumTxStatus(
          [void Function(IridiumTxStatusBuilder b) updates]) =>
      (IridiumTxStatusBuilder()..update(updates)).build();

  _$IridiumTxStatus._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.reqId,
      this.status,
      this.text})
      : super._();

  @override
  IridiumTxStatus rebuild(void Function(IridiumTxStatusBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  IridiumTxStatusBuilder toBuilder() => IridiumTxStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IridiumTxStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == other.reqId &&
        status == other.status &&
        text == other.text;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                reqId?.hashCode),
            status?.hashCode),
        text?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IridiumTxStatus')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', '$reqId')
          ..add('status', '$status (Enumerated)')
          ..add('text', '$text'))
        .toString();
  }
}

/// Iridium Transmission Status builder class
///
class IridiumTxStatusBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<IridiumTxStatus, IridiumTxStatusBuilder> {
  _$IridiumTxStatus _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId = 0;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  IridiumTxStatusEnumStatus _status = IridiumTxStatusEnumStatus(0);
  IridiumTxStatusEnumStatus get status => _$this._status;
  set status(IridiumTxStatusEnumStatus status) => _$this._status = status;

  String _text = '';
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  IridiumTxStatusBuilder();

  IridiumTxStatusBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  IridiumTxStatusBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      IridiumTxStatusBuilder()..copyFromHeader(headerFrom);

  IridiumTxStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _status = _$v.status;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IridiumTxStatus other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$IridiumTxStatus;
  }

  @override
  void update(void Function(IridiumTxStatusBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$IridiumTxStatus build() {
    final _$result = _$v ??
        _$IridiumTxStatus._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            status: status ?? IridiumTxStatusEnumStatus(0),
            text: text ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Group Membership State immutable class
///
class _$GroupMembershipState extends GroupMembershipState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String groupName;
  @override
  final int links;

  factory _$GroupMembershipState(
          [void Function(GroupMembershipStateBuilder b) updates]) =>
      (GroupMembershipStateBuilder()..update(updates)).build();

  _$GroupMembershipState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.groupName,
      this.links})
      : super._();

  @override
  GroupMembershipState rebuild(
          void Function(GroupMembershipStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GroupMembershipStateBuilder toBuilder() =>
      GroupMembershipStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GroupMembershipState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        groupName == other.groupName &&
        links == other.links;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            groupName?.hashCode),
        links?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GroupMembershipState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('groupName', '$groupName')
          ..add('links', '$links'))
        .toString();
  }
}

/// Group Membership State builder class
///
class GroupMembershipStateBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<GroupMembershipState,
            GroupMembershipStateBuilder> {
  _$GroupMembershipState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _groupName = '';
  String get groupName => _$this._groupName;
  set groupName(String groupName) => _$this._groupName = groupName;

  int _links = 0;
  int get links => _$this._links;
  set links(int links) => _$this._links = links;

  GroupMembershipStateBuilder();

  GroupMembershipStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  GroupMembershipStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      GroupMembershipStateBuilder()..copyFromHeader(headerFrom);

  GroupMembershipStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _groupName = _$v.groupName;
      _links = _$v.links;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GroupMembershipState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$GroupMembershipState;
  }

  @override
  void update(void Function(GroupMembershipStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GroupMembershipState build() {
    final _$result = _$v ??
        _$GroupMembershipState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            groupName: groupName ?? '',
            links: links ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// System Group immutable class
///
class _$SystemGroup extends SystemGroup {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String groupName;
  @override
  final SystemGroupEnumAction action;
  @override
  final String groupList;

  factory _$SystemGroup([void Function(SystemGroupBuilder b) updates]) =>
      (SystemGroupBuilder()..update(updates)).build();

  _$SystemGroup._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.groupName,
      this.action,
      this.groupList})
      : super._();

  @override
  SystemGroup rebuild(void Function(SystemGroupBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SystemGroupBuilder toBuilder() => SystemGroupBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SystemGroup &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        groupName == other.groupName &&
        action == other.action &&
        groupList == other.groupList;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                groupName?.hashCode),
            action?.hashCode),
        groupList?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SystemGroup')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('groupName', '$groupName')
          ..add('action', '$action (Enumerated)')
          ..add('groupList', '$groupList'))
        .toString();
  }
}

/// System Group builder class
///
class SystemGroupBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SystemGroup, SystemGroupBuilder> {
  _$SystemGroup _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _groupName = '';
  String get groupName => _$this._groupName;
  set groupName(String groupName) => _$this._groupName = groupName;

  SystemGroupEnumAction _action = SystemGroupEnumAction(0);
  SystemGroupEnumAction get action => _$this._action;
  set action(SystemGroupEnumAction action) => _$this._action = action;

  String _groupList = '';
  String get groupList => _$this._groupList;
  set groupList(String groupList) => _$this._groupList = groupList;

  SystemGroupBuilder();

  SystemGroupBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SystemGroupBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SystemGroupBuilder()..copyFromHeader(headerFrom);

  SystemGroupBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _groupName = _$v.groupName;
      _action = _$v.action;
      _groupList = _$v.groupList;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SystemGroup other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SystemGroup;
  }

  @override
  void update(void Function(SystemGroupBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SystemGroup build() {
    final _$result = _$v ??
        _$SystemGroup._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            groupName: groupName ?? '',
            action: action ?? SystemGroupEnumAction(0),
            groupList: groupList ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Link Latency immutable class
///
class _$LinkLatency extends LinkLatency {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final int sysSrc;

  factory _$LinkLatency([void Function(LinkLatencyBuilder b) updates]) =>
      (LinkLatencyBuilder()..update(updates)).build();

  _$LinkLatency._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value,
      this.sysSrc})
      : super._();

  @override
  LinkLatency rebuild(void Function(LinkLatencyBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LinkLatencyBuilder toBuilder() => LinkLatencyBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LinkLatency &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7) &&
        sysSrc == other.sysSrc;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            value?.hashCode),
        sysSrc?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LinkLatency')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (s)')
          ..add('sysSrc', '$sysSrc'))
        .toString();
  }
}

/// Link Latency builder class
///
class LinkLatencyBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<LinkLatency, LinkLatencyBuilder> {
  _$LinkLatency _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  int _sysSrc = 0;
  int get sysSrc => _$this._sysSrc;
  set sysSrc(int sysSrc) => _$this._sysSrc = sysSrc;

  LinkLatencyBuilder();

  LinkLatencyBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LinkLatencyBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LinkLatencyBuilder()..copyFromHeader(headerFrom);

  LinkLatencyBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _sysSrc = _$v.sysSrc;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LinkLatency other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LinkLatency;
  }

  @override
  void update(void Function(LinkLatencyBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LinkLatency build() {
    final _$result = _$v ??
        _$LinkLatency._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0,
            sysSrc: sysSrc ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Extended Receive Signal Strength Information immutable class
///
class _$ExtendedRSSI extends ExtendedRSSI {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final RSSIUnitsEnum units;

  factory _$ExtendedRSSI([void Function(ExtendedRSSIBuilder b) updates]) =>
      (ExtendedRSSIBuilder()..update(updates)).build();

  _$ExtendedRSSI._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value,
      this.units})
      : super._();

  @override
  ExtendedRSSI rebuild(void Function(ExtendedRSSIBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ExtendedRSSIBuilder toBuilder() => ExtendedRSSIBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ExtendedRSSI &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7) &&
        units == other.units;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            value?.hashCode),
        units?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ExtendedRSSI')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value')
          ..add('units', '$units (Enumerated)'))
        .toString();
  }
}

/// Extended Receive Signal Strength Information builder class
///
class ExtendedRSSIBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ExtendedRSSI, ExtendedRSSIBuilder> {
  _$ExtendedRSSI _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RSSIUnitsEnum _units = RSSIUnitsEnum(0);
  RSSIUnitsEnum get units => _$this._units;
  set units(RSSIUnitsEnum units) => _$this._units = units;

  ExtendedRSSIBuilder();

  ExtendedRSSIBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ExtendedRSSIBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ExtendedRSSIBuilder()..copyFromHeader(headerFrom);

  ExtendedRSSIBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _units = _$v.units;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ExtendedRSSI other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ExtendedRSSI;
  }

  @override
  void update(void Function(ExtendedRSSIBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ExtendedRSSI build() {
    final _$result = _$v ??
        _$ExtendedRSSI._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0,
            units: units ?? RSSIUnitsEnum(0));
    replace(_$result);
    return _$result;
  }
}

/// Historic Data Series immutable class
///
class _$HistoricData extends HistoricData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double baseLat;
  @override
  final double baseLon;
  @override
  final double baseTime;
  @override
  final List<RemoteData> data;

  factory _$HistoricData([void Function(HistoricDataBuilder b) updates]) =>
      (HistoricDataBuilder()..update(updates)).build();

  _$HistoricData._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.baseLat,
      this.baseLon,
      this.baseTime,
      this.data})
      : super._();

  @override
  HistoricData rebuild(void Function(HistoricDataBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricDataBuilder toBuilder() => HistoricDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (baseLat == other.baseLat || baseLat - other.baseLat <= 1E-7) &&
        (baseLon == other.baseLon || baseLon - other.baseLon <= 1E-7) &&
        (baseTime == other.baseTime || baseTime - other.baseTime <= 1E-7) &&
        DeepCollectionEquality().equals(data, other.data);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    baseLat?.hashCode),
                baseLon?.hashCode),
            baseTime?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricData')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('baseLat', '$baseLat (°)')
          ..add('baseLon', '$baseLon (°)')
          ..add('baseTime', '$baseTime (s)')
          ..add('data', '$data'))
        .toString();
  }
}

/// Historic Data Series builder class
///
class HistoricDataBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<HistoricData, HistoricDataBuilder> {
  _$HistoricData _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _baseLat = 0;
  double get baseLat => _$this._baseLat;
  set baseLat(double baseLat) => _$this._baseLat = baseLat;

  double _baseLon = 0;
  double get baseLon => _$this._baseLon;
  set baseLon(double baseLon) => _$this._baseLon = baseLon;

  double _baseTime = 0;
  double get baseTime => _$this._baseTime;
  set baseTime(double baseTime) => _$this._baseTime = baseTime;

  List<RemoteData> _data = <RemoteData>[];
  List<RemoteData> get data => _$this._data;
  set data(List<RemoteData> data) => _$this._data = data;

  HistoricDataBuilder();

  HistoricDataBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  HistoricDataBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      HistoricDataBuilder()..copyFromHeader(headerFrom);

  HistoricDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _baseLat = _$v.baseLat;
      _baseLon = _$v.baseLon;
      _baseTime = _$v.baseTime;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricData other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricData;
  }

  @override
  void update(void Function(HistoricDataBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricData build() {
    final _$result = _$v ??
        _$HistoricData._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            baseLat: baseLat ?? 0,
            baseLon: baseLon ?? 0,
            baseTime: baseTime ?? 0,
            data: data ?? <RemoteData>[]);
    replace(_$result);
    return _$result;
  }
}

/// Compressed Historic Data Series immutable class
///
class _$CompressedHistory extends CompressedHistory {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double baseLat;
  @override
  final double baseLon;
  @override
  final double baseTime;
  @override
  final List<int> data;

  factory _$CompressedHistory(
          [void Function(CompressedHistoryBuilder b) updates]) =>
      (CompressedHistoryBuilder()..update(updates)).build();

  _$CompressedHistory._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.baseLat,
      this.baseLon,
      this.baseTime,
      this.data})
      : super._();

  @override
  CompressedHistory rebuild(
          void Function(CompressedHistoryBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CompressedHistoryBuilder toBuilder() =>
      CompressedHistoryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CompressedHistory &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (baseLat == other.baseLat || baseLat - other.baseLat <= 1E-7) &&
        (baseLon == other.baseLon || baseLon - other.baseLon <= 1E-7) &&
        (baseTime == other.baseTime || baseTime - other.baseTime <= 1E-7) &&
        ListEquality().equals(data, other.data);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    baseLat?.hashCode),
                baseLon?.hashCode),
            baseTime?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CompressedHistory')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('baseLat', '$baseLat (°)')
          ..add('baseLon', '$baseLon (°)')
          ..add('baseTime', '$baseTime (s)')
          ..add('data', '$data'))
        .toString();
  }
}

/// Compressed Historic Data Series builder class
///
class CompressedHistoryBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<CompressedHistory, CompressedHistoryBuilder> {
  _$CompressedHistory _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _baseLat = 0;
  double get baseLat => _$this._baseLat;
  set baseLat(double baseLat) => _$this._baseLat = baseLat;

  double _baseLon = 0;
  double get baseLon => _$this._baseLon;
  set baseLon(double baseLon) => _$this._baseLon = baseLon;

  double _baseTime = 0;
  double get baseTime => _$this._baseTime;
  set baseTime(double baseTime) => _$this._baseTime = baseTime;

  List<int> _data = <int>[];
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  CompressedHistoryBuilder();

  CompressedHistoryBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CompressedHistoryBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CompressedHistoryBuilder()..copyFromHeader(headerFrom);

  CompressedHistoryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _baseLat = _$v.baseLat;
      _baseLon = _$v.baseLon;
      _baseTime = _$v.baseTime;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CompressedHistory other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$CompressedHistory;
  }

  @override
  void update(void Function(CompressedHistoryBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$CompressedHistory build() {
    final _$result = _$v ??
        _$CompressedHistory._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            baseLat: baseLat ?? 0,
            baseLon: baseLon ?? 0,
            baseTime: baseTime ?? 0,
            data: data ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// Historic Data Sample immutable class
///
class _$HistoricSample extends HistoricSample {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sysId;
  @override
  final int priority;
  @override
  final int x;
  @override
  final int y;
  @override
  final int z;
  @override
  final int t;
  @override
  final ImcMessage sample;

  factory _$HistoricSample([void Function(HistoricSampleBuilder b) updates]) =>
      (HistoricSampleBuilder()..update(updates)).build();

  _$HistoricSample._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.sysId,
      this.priority,
      this.x,
      this.y,
      this.z,
      this.t,
      this.sample})
      : super._();

  @override
  HistoricSample rebuild(void Function(HistoricSampleBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricSampleBuilder toBuilder() => HistoricSampleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricSample &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sysId == other.sysId &&
        priority == other.priority &&
        x == other.x &&
        y == other.y &&
        z == other.z &&
        t == other.t &&
        sample == other.sample;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, timestamp?.hashCode),
                                                src?.hashCode),
                                            srcEnt?.hashCode),
                                        dst?.hashCode),
                                    dstEnt?.hashCode),
                                sysId?.hashCode),
                            priority?.hashCode),
                        x?.hashCode),
                    y?.hashCode),
                z?.hashCode),
            t?.hashCode),
        sample?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricSample')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sysId', '$sysId')
          ..add('priority', '$priority')
          ..add('x', '$x (m)')
          ..add('y', '$y (m)')
          ..add('z', '$z (dm)')
          ..add('t', '$t (s)')
          ..add('sample', '$sample'))
        .toString();
  }
}

/// Historic Data Sample builder class
///
class HistoricSampleBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<HistoricSample, HistoricSampleBuilder> {
  _$HistoricSample _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sysId = 0;
  int get sysId => _$this._sysId;
  set sysId(int sysId) => _$this._sysId = sysId;

  int _priority = 0;
  int get priority => _$this._priority;
  set priority(int priority) => _$this._priority = priority;

  int _x = 0;
  int get x => _$this._x;
  set x(int x) => _$this._x = x;

  int _y = 0;
  int get y => _$this._y;
  set y(int y) => _$this._y = y;

  int _z = 0;
  int get z => _$this._z;
  set z(int z) => _$this._z = z;

  int _t = 0;
  int get t => _$this._t;
  set t(int t) => _$this._t = t;

  ImcMessage _sample;
  ImcMessage get sample => _$this._sample;
  set sample(ImcMessage sample) => _$this._sample = sample;

  HistoricSampleBuilder();

  HistoricSampleBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  HistoricSampleBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      HistoricSampleBuilder()..copyFromHeader(headerFrom);

  HistoricSampleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sysId = _$v.sysId;
      _priority = _$v.priority;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _t = _$v.t;
      _sample = _$v.sample;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricSample other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricSample;
  }

  @override
  void update(void Function(HistoricSampleBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricSample build() {
    final _$result = _$v ??
        _$HistoricSample._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sysId: sysId ?? 0,
            priority: priority ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            t: t ?? 0,
            sample: sample);
    replace(_$result);
    return _$result;
  }
}

/// Historic Data Query immutable class
///
class _$HistoricDataQuery extends HistoricDataQuery {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final HistoricDataQueryEnumType type;
  @override
  final int maxSize;
  @override
  final HistoricData data;

  factory _$HistoricDataQuery(
          [void Function(HistoricDataQueryBuilder b) updates]) =>
      (HistoricDataQueryBuilder()..update(updates)).build();

  _$HistoricDataQuery._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.reqId,
      this.type,
      this.maxSize,
      this.data})
      : super._();

  @override
  HistoricDataQuery rebuild(
          void Function(HistoricDataQueryBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  HistoricDataQueryBuilder toBuilder() =>
      HistoricDataQueryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HistoricDataQuery &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == other.reqId &&
        type == other.type &&
        maxSize == other.maxSize &&
        data == other.data;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    reqId?.hashCode),
                type?.hashCode),
            maxSize?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HistoricDataQuery')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', '$reqId')
          ..add('type', '$type (Enumerated)')
          ..add('maxSize', '$maxSize')
          ..add('data', '$data'))
        .toString();
  }
}

/// Historic Data Query builder class
///
class HistoricDataQueryBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<HistoricDataQuery, HistoricDataQueryBuilder> {
  _$HistoricDataQuery _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId = 0;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  HistoricDataQueryEnumType _type = HistoricDataQueryEnumType(0);
  HistoricDataQueryEnumType get type => _$this._type;
  set type(HistoricDataQueryEnumType type) => _$this._type = type;

  int _maxSize = 0;
  int get maxSize => _$this._maxSize;
  set maxSize(int maxSize) => _$this._maxSize = maxSize;

  HistoricData _data;
  HistoricData get data => _$this._data;
  set data(HistoricData data) => _$this._data = data;

  HistoricDataQueryBuilder();

  HistoricDataQueryBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  HistoricDataQueryBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      HistoricDataQueryBuilder()..copyFromHeader(headerFrom);

  HistoricDataQueryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _type = _$v.type;
      _maxSize = _$v.maxSize;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HistoricDataQuery other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$HistoricDataQuery;
  }

  @override
  void update(void Function(HistoricDataQueryBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$HistoricDataQuery build() {
    final _$result = _$v ??
        _$HistoricDataQuery._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            type: type ?? HistoricDataQueryEnumType(0),
            maxSize: maxSize ?? 0,
            data: data);
    replace(_$result);
    return _$result;
  }
}

/// Remote Command immutable class
///
class _$RemoteCommand extends RemoteCommand {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int originalSource;
  @override
  final int destination;
  @override
  final double timeout;
  @override
  final ImcMessage cmd;

  factory _$RemoteCommand([void Function(RemoteCommandBuilder b) updates]) =>
      (RemoteCommandBuilder()..update(updates)).build();

  _$RemoteCommand._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.originalSource,
      this.destination,
      this.timeout,
      this.cmd})
      : super._();

  @override
  RemoteCommand rebuild(void Function(RemoteCommandBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteCommandBuilder toBuilder() => RemoteCommandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteCommand &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        originalSource == other.originalSource &&
        destination == other.destination &&
        (timeout == other.timeout || timeout - other.timeout <= 1E-7) &&
        cmd == other.cmd;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    originalSource?.hashCode),
                destination?.hashCode),
            timeout?.hashCode),
        cmd?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteCommand')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('originalSource', '$originalSource')
          ..add('destination', '$destination')
          ..add('timeout', '$timeout (s)')
          ..add('cmd', '$cmd'))
        .toString();
  }
}

/// Remote Command builder class
///
class RemoteCommandBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<RemoteCommand, RemoteCommandBuilder> {
  _$RemoteCommand _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _originalSource = 0;
  int get originalSource => _$this._originalSource;
  set originalSource(int originalSource) =>
      _$this._originalSource = originalSource;

  int _destination = 0;
  int get destination => _$this._destination;
  set destination(int destination) => _$this._destination = destination;

  double _timeout = 0;
  double get timeout => _$this._timeout;
  set timeout(double timeout) => _$this._timeout = timeout;

  ImcMessage _cmd;
  ImcMessage get cmd => _$this._cmd;
  set cmd(ImcMessage cmd) => _$this._cmd = cmd;

  RemoteCommandBuilder();

  RemoteCommandBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RemoteCommandBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RemoteCommandBuilder()..copyFromHeader(headerFrom);

  RemoteCommandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _originalSource = _$v.originalSource;
      _destination = _$v.destination;
      _timeout = _$v.timeout;
      _cmd = _$v.cmd;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteCommand other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteCommand;
  }

  @override
  void update(void Function(RemoteCommandBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteCommand build() {
    final _$result = _$v ??
        _$RemoteCommand._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            originalSource: originalSource ?? 0,
            destination: destination ?? 0,
            timeout: timeout ?? 0,
            cmd: cmd);
    replace(_$result);
    return _$result;
  }
}

/// Communication Systems Query immutable class
///
class _$CommSystemsQuery extends CommSystemsQuery {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final CommSystemsQueryBitfieldType type;
  @override
  final CommSystemsQueryBitfieldCommInterface commInterface;
  @override
  final CommSystemsQueryEnumModel model;
  @override
  final String list;

  factory _$CommSystemsQuery(
          [void Function(CommSystemsQueryBuilder b) updates]) =>
      (CommSystemsQueryBuilder()..update(updates)).build();

  _$CommSystemsQuery._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type,
      this.commInterface,
      this.model,
      this.list})
      : super._();

  @override
  CommSystemsQuery rebuild(void Function(CommSystemsQueryBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CommSystemsQueryBuilder toBuilder() =>
      CommSystemsQueryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CommSystemsQuery &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type &&
        commInterface == other.commInterface &&
        model == other.model &&
        list == other.list;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    type?.hashCode),
                commInterface?.hashCode),
            model?.hashCode),
        list?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CommSystemsQuery')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Bitfield)')
          ..add('commInterface', '$commInterface (Bitfield)')
          ..add('model', '$model (Enumerated)')
          ..add('list', '$list (List)'))
        .toString();
  }
}

/// Communication Systems Query builder class
///
class CommSystemsQueryBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<CommSystemsQuery, CommSystemsQueryBuilder> {
  _$CommSystemsQuery _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  CommSystemsQueryBitfieldType _type = CommSystemsQueryBitfieldType(0);
  CommSystemsQueryBitfieldType get type => _$this._type;
  set type(CommSystemsQueryBitfieldType type) => _$this._type = type;

  CommSystemsQueryBitfieldCommInterface _commInterface =
      CommSystemsQueryBitfieldCommInterface(0);
  CommSystemsQueryBitfieldCommInterface get commInterface =>
      _$this._commInterface;
  set commInterface(CommSystemsQueryBitfieldCommInterface commInterface) =>
      _$this._commInterface = commInterface;

  CommSystemsQueryEnumModel _model = CommSystemsQueryEnumModel(0);
  CommSystemsQueryEnumModel get model => _$this._model;
  set model(CommSystemsQueryEnumModel model) => _$this._model = model;

  String _list = '';
  String get list => _$this._list;
  set list(String list) => _$this._list = list;

  CommSystemsQueryBuilder();

  CommSystemsQueryBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CommSystemsQueryBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CommSystemsQueryBuilder()..copyFromHeader(headerFrom);

  CommSystemsQueryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _commInterface = _$v.commInterface;
      _model = _$v.model;
      _list = _$v.list;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CommSystemsQuery other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$CommSystemsQuery;
  }

  @override
  void update(void Function(CommSystemsQueryBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$CommSystemsQuery build() {
    final _$result = _$v ??
        _$CommSystemsQuery._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? CommSystemsQueryBitfieldType(0),
            commInterface:
                commInterface ?? CommSystemsQueryBitfieldCommInterface(0),
            model: model ?? CommSystemsQueryEnumModel(0),
            list: list ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Telemetry Message immutable class
///
class _$TelemetryMsg extends TelemetryMsg {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final TelemetryMsgEnumType type;
  @override
  final int reqId;
  @override
  final int ttl;
  @override
  final TelemetryMsgEnumCode code;
  @override
  final String destination;
  @override
  final String source;
  @override
  final TelemetryMsgBitfieldAcknowledge acknowledge;
  @override
  final TelemetryMsgEnumStatus status;
  @override
  final List<int> data;

  factory _$TelemetryMsg([void Function(TelemetryMsgBuilder b) updates]) =>
      (TelemetryMsgBuilder()..update(updates)).build();

  _$TelemetryMsg._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type,
      this.reqId,
      this.ttl,
      this.code,
      this.destination,
      this.source,
      this.acknowledge,
      this.status,
      this.data})
      : super._();

  @override
  TelemetryMsg rebuild(void Function(TelemetryMsgBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TelemetryMsgBuilder toBuilder() => TelemetryMsgBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TelemetryMsg &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type &&
        reqId == other.reqId &&
        ttl == other.ttl &&
        code == other.code &&
        destination == other.destination &&
        source == other.source &&
        acknowledge == other.acknowledge &&
        status == other.status &&
        ListEquality().equals(data, other.data);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            0,
                                                            timestamp
                                                                ?.hashCode),
                                                        src?.hashCode),
                                                    srcEnt?.hashCode),
                                                dst?.hashCode),
                                            dstEnt?.hashCode),
                                        type?.hashCode),
                                    reqId?.hashCode),
                                ttl?.hashCode),
                            code?.hashCode),
                        destination?.hashCode),
                    source?.hashCode),
                acknowledge?.hashCode),
            status?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TelemetryMsg')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Enumerated)')
          ..add('reqId', '$reqId')
          ..add('ttl', '$ttl (s)')
          ..add('code', '$code (Enumerated)')
          ..add('destination', '$destination')
          ..add('source', '$source')
          ..add('acknowledge', '$acknowledge (Bitfield)')
          ..add('status', '$status (Enumerated)')
          ..add('data', '$data'))
        .toString();
  }
}

/// Telemetry Message builder class
///
class TelemetryMsgBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<TelemetryMsg, TelemetryMsgBuilder> {
  _$TelemetryMsg _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  TelemetryMsgEnumType _type = TelemetryMsgEnumType(0);
  TelemetryMsgEnumType get type => _$this._type;
  set type(TelemetryMsgEnumType type) => _$this._type = type;

  int _reqId = 0;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  int _ttl = 0;
  int get ttl => _$this._ttl;
  set ttl(int ttl) => _$this._ttl = ttl;

  TelemetryMsgEnumCode _code = TelemetryMsgEnumCode(0);
  TelemetryMsgEnumCode get code => _$this._code;
  set code(TelemetryMsgEnumCode code) => _$this._code = code;

  String _destination = '';
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  String _source = '';
  String get source => _$this._source;
  set source(String source) => _$this._source = source;

  TelemetryMsgBitfieldAcknowledge _acknowledge =
      TelemetryMsgBitfieldAcknowledge(0);
  TelemetryMsgBitfieldAcknowledge get acknowledge => _$this._acknowledge;
  set acknowledge(TelemetryMsgBitfieldAcknowledge acknowledge) =>
      _$this._acknowledge = acknowledge;

  TelemetryMsgEnumStatus _status = TelemetryMsgEnumStatus(0);
  TelemetryMsgEnumStatus get status => _$this._status;
  set status(TelemetryMsgEnumStatus status) => _$this._status = status;

  List<int> _data = <int>[];
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  TelemetryMsgBuilder();

  TelemetryMsgBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TelemetryMsgBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TelemetryMsgBuilder()..copyFromHeader(headerFrom);

  TelemetryMsgBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _reqId = _$v.reqId;
      _ttl = _$v.ttl;
      _code = _$v.code;
      _destination = _$v.destination;
      _source = _$v.source;
      _acknowledge = _$v.acknowledge;
      _status = _$v.status;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TelemetryMsg other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TelemetryMsg;
  }

  @override
  void update(void Function(TelemetryMsgBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TelemetryMsg build() {
    final _$result = _$v ??
        _$TelemetryMsg._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? TelemetryMsgEnumType(0),
            reqId: reqId ?? 0,
            ttl: ttl ?? 0,
            code: code ?? TelemetryMsgEnumCode(0),
            destination: destination ?? '',
            source: source ?? '',
            acknowledge: acknowledge ?? TelemetryMsgBitfieldAcknowledge(0),
            status: status ?? TelemetryMsgEnumStatus(0),
            data: data ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// LBL Range immutable class
///
class _$LblRange extends LblRange {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double range;

  factory _$LblRange([void Function(LblRangeBuilder b) updates]) =>
      (LblRangeBuilder()..update(updates)).build();

  _$LblRange._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.id,
      this.range})
      : super._();

  @override
  LblRange rebuild(void Function(LblRangeBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LblRangeBuilder toBuilder() => LblRangeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblRange &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == other.id &&
        (range == other.range || range - other.range <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            id?.hashCode),
        range?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblRange')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', '$id')
          ..add('range', '$range (m)'))
        .toString();
  }
}

/// LBL Range builder class
///
class LblRangeBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<LblRange, LblRangeBuilder> {
  _$LblRange _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id = 0;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _range = 0;
  double get range => _$this._range;
  set range(double range) => _$this._range = range;

  LblRangeBuilder();

  LblRangeBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LblRangeBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LblRangeBuilder()..copyFromHeader(headerFrom);

  LblRangeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _range = _$v.range;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblRange other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LblRange;
  }

  @override
  void update(void Function(LblRangeBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LblRange build() {
    final _$result = _$v ??
        _$LblRange._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            range: range ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// LBL Beacon Configuration immutable class
///
class _$LblBeacon extends LblBeacon {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String beacon;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double depth;
  @override
  final int queryChannel;
  @override
  final int replyChannel;
  @override
  final int transponderDelay;

  factory _$LblBeacon([void Function(LblBeaconBuilder b) updates]) =>
      (LblBeaconBuilder()..update(updates)).build();

  _$LblBeacon._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.beacon,
      this.lat,
      this.lon,
      this.depth,
      this.queryChannel,
      this.replyChannel,
      this.transponderDelay})
      : super._();

  @override
  LblBeacon rebuild(void Function(LblBeaconBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LblBeaconBuilder toBuilder() => LblBeaconBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblBeacon &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        beacon == other.beacon &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (depth == other.depth || depth - other.depth <= 1E-7) &&
        queryChannel == other.queryChannel &&
        replyChannel == other.replyChannel &&
        transponderDelay == other.transponderDelay;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, timestamp?.hashCode),
                                                src?.hashCode),
                                            srcEnt?.hashCode),
                                        dst?.hashCode),
                                    dstEnt?.hashCode),
                                beacon?.hashCode),
                            lat?.hashCode),
                        lon?.hashCode),
                    depth?.hashCode),
                queryChannel?.hashCode),
            replyChannel?.hashCode),
        transponderDelay?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblBeacon')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('beacon', '$beacon')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('depth', '$depth (m)')
          ..add('queryChannel', '$queryChannel')
          ..add('replyChannel', '$replyChannel')
          ..add('transponderDelay', '$transponderDelay (ms)'))
        .toString();
  }
}

/// LBL Beacon Configuration builder class
///
class LblBeaconBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<LblBeacon, LblBeaconBuilder> {
  _$LblBeacon _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _beacon = '';
  String get beacon => _$this._beacon;
  set beacon(String beacon) => _$this._beacon = beacon;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _depth = 0;
  double get depth => _$this._depth;
  set depth(double depth) => _$this._depth = depth;

  int _queryChannel = 0;
  int get queryChannel => _$this._queryChannel;
  set queryChannel(int queryChannel) => _$this._queryChannel = queryChannel;

  int _replyChannel = 0;
  int get replyChannel => _$this._replyChannel;
  set replyChannel(int replyChannel) => _$this._replyChannel = replyChannel;

  int _transponderDelay = 0;
  int get transponderDelay => _$this._transponderDelay;
  set transponderDelay(int transponderDelay) =>
      _$this._transponderDelay = transponderDelay;

  LblBeaconBuilder();

  LblBeaconBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LblBeaconBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LblBeaconBuilder()..copyFromHeader(headerFrom);

  LblBeaconBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _beacon = _$v.beacon;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _depth = _$v.depth;
      _queryChannel = _$v.queryChannel;
      _replyChannel = _$v.replyChannel;
      _transponderDelay = _$v.transponderDelay;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblBeacon other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LblBeacon;
  }

  @override
  void update(void Function(LblBeaconBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LblBeacon build() {
    final _$result = _$v ??
        _$LblBeacon._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            beacon: beacon ?? '',
            lat: lat ?? 0,
            lon: lon ?? 0,
            depth: depth ?? 0,
            queryChannel: queryChannel ?? 0,
            replyChannel: replyChannel ?? 0,
            transponderDelay: transponderDelay ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// LBL Configuration immutable class
///
class _$LblConfig extends LblConfig {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LblConfigEnumOp op;
  @override
  final List<LblBeacon> beacons;

  factory _$LblConfig([void Function(LblConfigBuilder b) updates]) =>
      (LblConfigBuilder()..update(updates)).build();

  _$LblConfig._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.beacons})
      : super._();

  @override
  LblConfig rebuild(void Function(LblConfigBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LblConfigBuilder toBuilder() => LblConfigBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblConfig &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        DeepCollectionEquality().equals(beacons, other.beacons);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            op?.hashCode),
        beacons?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblConfig')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('beacons', '$beacons'))
        .toString();
  }
}

/// LBL Configuration builder class
///
class LblConfigBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<LblConfig, LblConfigBuilder> {
  _$LblConfig _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LblConfigEnumOp _op = LblConfigEnumOp(0);
  LblConfigEnumOp get op => _$this._op;
  set op(LblConfigEnumOp op) => _$this._op = op;

  List<LblBeacon> _beacons = <LblBeacon>[];
  List<LblBeacon> get beacons => _$this._beacons;
  set beacons(List<LblBeacon> beacons) => _$this._beacons = beacons;

  LblConfigBuilder();

  LblConfigBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LblConfigBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LblConfigBuilder()..copyFromHeader(headerFrom);

  LblConfigBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _beacons = _$v.beacons;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblConfig other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LblConfig;
  }

  @override
  void update(void Function(LblConfigBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LblConfig build() {
    final _$result = _$v ??
        _$LblConfig._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? LblConfigEnumOp(0),
            beacons: beacons ?? <LblBeacon>[]);
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Message immutable class
///
class _$AcousticMessage extends AcousticMessage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ImcMessage message;

  factory _$AcousticMessage(
          [void Function(AcousticMessageBuilder b) updates]) =>
      (AcousticMessageBuilder()..update(updates)).build();

  _$AcousticMessage._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.message})
      : super._();

  @override
  AcousticMessage rebuild(void Function(AcousticMessageBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticMessageBuilder toBuilder() => AcousticMessageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticMessage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        message == other.message;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        message?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticMessage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('message', '$message'))
        .toString();
  }
}

/// Acoustic Message builder class
///
class AcousticMessageBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<AcousticMessage, AcousticMessageBuilder> {
  _$AcousticMessage _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ImcMessage _message;
  ImcMessage get message => _$this._message;
  set message(ImcMessage message) => _$this._message = message;

  AcousticMessageBuilder();

  AcousticMessageBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AcousticMessageBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AcousticMessageBuilder()..copyFromHeader(headerFrom);

  AcousticMessageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _message = _$v.message;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticMessage other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticMessage;
  }

  @override
  void update(void Function(AcousticMessageBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticMessage build() {
    final _$result = _$v ??
        _$AcousticMessage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            message: message);
    replace(_$result);
    return _$result;
  }
}

/// Simulated Acoustic Message immutable class
///
class _$SimAcousticMessage extends SimAcousticMessage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double depth;
  @override
  final String sentence;
  @override
  final double txtime;
  @override
  final String modemType;
  @override
  final String sysSrc;
  @override
  final int seq;
  @override
  final String sysDst;
  @override
  final SimAcousticMessageBitfieldFlags flags;
  @override
  final List<int> data;

  factory _$SimAcousticMessage(
          [void Function(SimAcousticMessageBuilder b) updates]) =>
      (SimAcousticMessageBuilder()..update(updates)).build();

  _$SimAcousticMessage._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.depth,
      this.sentence,
      this.txtime,
      this.modemType,
      this.sysSrc,
      this.seq,
      this.sysDst,
      this.flags,
      this.data})
      : super._();

  @override
  SimAcousticMessage rebuild(
          void Function(SimAcousticMessageBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SimAcousticMessageBuilder toBuilder() =>
      SimAcousticMessageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SimAcousticMessage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (depth == other.depth || depth - other.depth <= 1E-7) &&
        sentence == other.sentence &&
        (txtime == other.txtime || txtime - other.txtime <= 1E-7) &&
        modemType == other.modemType &&
        sysSrc == other.sysSrc &&
        seq == other.seq &&
        sysDst == other.sysDst &&
        flags == other.flags &&
        ListEquality().equals(data, other.data);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    0,
                                                                    timestamp
                                                                        ?.hashCode),
                                                                src?.hashCode),
                                                            srcEnt?.hashCode),
                                                        dst?.hashCode),
                                                    dstEnt?.hashCode),
                                                lat?.hashCode),
                                            lon?.hashCode),
                                        depth?.hashCode),
                                    sentence?.hashCode),
                                txtime?.hashCode),
                            modemType?.hashCode),
                        sysSrc?.hashCode),
                    seq?.hashCode),
                sysDst?.hashCode),
            flags?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SimAcousticMessage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', '$lat')
          ..add('lon', '$lon')
          ..add('depth', '$depth')
          ..add('sentence', '$sentence')
          ..add('txtime', '$txtime (s)')
          ..add('modemType', '$modemType')
          ..add('sysSrc', '$sysSrc')
          ..add('seq', '$seq')
          ..add('sysDst', '$sysDst')
          ..add('flags', '$flags (Bitfield)')
          ..add('data', '$data'))
        .toString();
  }
}

/// Simulated Acoustic Message builder class
///
class SimAcousticMessageBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<SimAcousticMessage, SimAcousticMessageBuilder> {
  _$SimAcousticMessage _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _depth = 0;
  double get depth => _$this._depth;
  set depth(double depth) => _$this._depth = depth;

  String _sentence = '';
  String get sentence => _$this._sentence;
  set sentence(String sentence) => _$this._sentence = sentence;

  double _txtime = 0;
  double get txtime => _$this._txtime;
  set txtime(double txtime) => _$this._txtime = txtime;

  String _modemType = '';
  String get modemType => _$this._modemType;
  set modemType(String modemType) => _$this._modemType = modemType;

  String _sysSrc = '';
  String get sysSrc => _$this._sysSrc;
  set sysSrc(String sysSrc) => _$this._sysSrc = sysSrc;

  int _seq = 0;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  String _sysDst = '';
  String get sysDst => _$this._sysDst;
  set sysDst(String sysDst) => _$this._sysDst = sysDst;

  SimAcousticMessageBitfieldFlags _flags = SimAcousticMessageBitfieldFlags(0);
  SimAcousticMessageBitfieldFlags get flags => _$this._flags;
  set flags(SimAcousticMessageBitfieldFlags flags) => _$this._flags = flags;

  List<int> _data = <int>[];
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  SimAcousticMessageBuilder();

  SimAcousticMessageBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SimAcousticMessageBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SimAcousticMessageBuilder()..copyFromHeader(headerFrom);

  SimAcousticMessageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _depth = _$v.depth;
      _sentence = _$v.sentence;
      _txtime = _$v.txtime;
      _modemType = _$v.modemType;
      _sysSrc = _$v.sysSrc;
      _seq = _$v.seq;
      _sysDst = _$v.sysDst;
      _flags = _$v.flags;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SimAcousticMessage other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SimAcousticMessage;
  }

  @override
  void update(void Function(SimAcousticMessageBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SimAcousticMessage build() {
    final _$result = _$v ??
        _$SimAcousticMessage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            depth: depth ?? 0,
            sentence: sentence ?? '',
            txtime: txtime ?? 0,
            modemType: modemType ?? '',
            sysSrc: sysSrc ?? '',
            seq: seq ?? 0,
            sysDst: sysDst ?? '',
            flags: flags ?? SimAcousticMessageBitfieldFlags(0),
            data: data ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Operation immutable class
///
class _$AcousticOperation extends AcousticOperation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final AcousticOperationEnumOp op;
  @override
  final String system;
  @override
  final double range;
  @override
  final ImcMessage msg;

  factory _$AcousticOperation(
          [void Function(AcousticOperationBuilder b) updates]) =>
      (AcousticOperationBuilder()..update(updates)).build();

  _$AcousticOperation._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.system,
      this.range,
      this.msg})
      : super._();

  @override
  AcousticOperation rebuild(
          void Function(AcousticOperationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticOperationBuilder toBuilder() =>
      AcousticOperationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticOperation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        system == other.system &&
        (range == other.range || range - other.range <= 1E-7) &&
        msg == other.msg;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    op?.hashCode),
                system?.hashCode),
            range?.hashCode),
        msg?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticOperation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('system', '$system')
          ..add('range', '$range (m)')
          ..add('msg', '$msg'))
        .toString();
  }
}

/// Acoustic Operation builder class
///
class AcousticOperationBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<AcousticOperation, AcousticOperationBuilder> {
  _$AcousticOperation _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AcousticOperationEnumOp _op = AcousticOperationEnumOp(0);
  AcousticOperationEnumOp get op => _$this._op;
  set op(AcousticOperationEnumOp op) => _$this._op = op;

  String _system = '';
  String get system => _$this._system;
  set system(String system) => _$this._system = system;

  double _range = 0;
  double get range => _$this._range;
  set range(double range) => _$this._range = range;

  ImcMessage _msg;
  ImcMessage get msg => _$this._msg;
  set msg(ImcMessage msg) => _$this._msg = msg;

  AcousticOperationBuilder();

  AcousticOperationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AcousticOperationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AcousticOperationBuilder()..copyFromHeader(headerFrom);

  AcousticOperationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _system = _$v.system;
      _range = _$v.range;
      _msg = _$v.msg;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticOperation other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticOperation;
  }

  @override
  void update(void Function(AcousticOperationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticOperation build() {
    final _$result = _$v ??
        _$AcousticOperation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? AcousticOperationEnumOp(0),
            system: system ?? '',
            range: range ?? 0,
            msg: msg);
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Systems Query immutable class
///
class _$AcousticSystemsQuery extends AcousticSystemsQuery {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  factory _$AcousticSystemsQuery(
          [void Function(AcousticSystemsQueryBuilder b) updates]) =>
      (AcousticSystemsQueryBuilder()..update(updates)).build();

  _$AcousticSystemsQuery._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId})
      : super._();

  @override
  AcousticSystemsQuery rebuild(
          void Function(AcousticSystemsQueryBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticSystemsQueryBuilder toBuilder() =>
      AcousticSystemsQueryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticSystemsQuery &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                srcEnt?.hashCode),
            dst?.hashCode),
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticSystemsQuery')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Acoustic Systems Query builder class
///
class AcousticSystemsQueryBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<AcousticSystemsQuery,
            AcousticSystemsQueryBuilder> {
  _$AcousticSystemsQuery _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AcousticSystemsQueryBuilder();

  AcousticSystemsQueryBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AcousticSystemsQueryBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AcousticSystemsQueryBuilder()..copyFromHeader(headerFrom);

  AcousticSystemsQueryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticSystemsQuery other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticSystemsQuery;
  }

  @override
  void update(void Function(AcousticSystemsQueryBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticSystemsQuery build() {
    final _$result = _$v ??
        _$AcousticSystemsQuery._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Systems immutable class
///
class _$AcousticSystems extends AcousticSystems {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String list;

  factory _$AcousticSystems(
          [void Function(AcousticSystemsBuilder b) updates]) =>
      (AcousticSystemsBuilder()..update(updates)).build();

  _$AcousticSystems._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.list})
      : super._();

  @override
  AcousticSystems rebuild(void Function(AcousticSystemsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticSystemsBuilder toBuilder() => AcousticSystemsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticSystems &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        list == other.list;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        list?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticSystems')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('list', '$list (List)'))
        .toString();
  }
}

/// Acoustic Systems builder class
///
class AcousticSystemsBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<AcousticSystems, AcousticSystemsBuilder> {
  _$AcousticSystems _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _list = '';
  String get list => _$this._list;
  set list(String list) => _$this._list = list;

  AcousticSystemsBuilder();

  AcousticSystemsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AcousticSystemsBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AcousticSystemsBuilder()..copyFromHeader(headerFrom);

  AcousticSystemsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _list = _$v.list;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticSystems other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticSystems;
  }

  @override
  void update(void Function(AcousticSystemsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticSystems build() {
    final _$result = _$v ??
        _$AcousticSystems._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            list: list ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Link Quality immutable class
///
class _$AcousticLink extends AcousticLink {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String peer;
  @override
  final double rssi;
  @override
  final int integrity;

  factory _$AcousticLink([void Function(AcousticLinkBuilder b) updates]) =>
      (AcousticLinkBuilder()..update(updates)).build();

  _$AcousticLink._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.peer,
      this.rssi,
      this.integrity})
      : super._();

  @override
  AcousticLink rebuild(void Function(AcousticLinkBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticLinkBuilder toBuilder() => AcousticLinkBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticLink &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        peer == other.peer &&
        (rssi == other.rssi || rssi - other.rssi <= 1E-7) &&
        integrity == other.integrity;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                peer?.hashCode),
            rssi?.hashCode),
        integrity?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticLink')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('peer', '$peer')
          ..add('rssi', '$rssi (dB)')
          ..add('integrity', '$integrity'))
        .toString();
  }
}

/// Acoustic Link Quality builder class
///
class AcousticLinkBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<AcousticLink, AcousticLinkBuilder> {
  _$AcousticLink _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _peer = '';
  String get peer => _$this._peer;
  set peer(String peer) => _$this._peer = peer;

  double _rssi = 0;
  double get rssi => _$this._rssi;
  set rssi(double rssi) => _$this._rssi = rssi;

  int _integrity = 0;
  int get integrity => _$this._integrity;
  set integrity(int integrity) => _$this._integrity = integrity;

  AcousticLinkBuilder();

  AcousticLinkBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AcousticLinkBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AcousticLinkBuilder()..copyFromHeader(headerFrom);

  AcousticLinkBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _peer = _$v.peer;
      _rssi = _$v.rssi;
      _integrity = _$v.integrity;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticLink other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticLink;
  }

  @override
  void update(void Function(AcousticLinkBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticLink build() {
    final _$result = _$v ??
        _$AcousticLink._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            peer: peer ?? '',
            rssi: rssi ?? 0,
            integrity: integrity ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Transmission Request immutable class
///
class _$AcousticRequest extends AcousticRequest {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final String destination;
  @override
  final double timeout;
  @override
  final double range;
  @override
  final AcousticRequestEnumType type;
  @override
  final ImcMessage msg;

  factory _$AcousticRequest(
          [void Function(AcousticRequestBuilder b) updates]) =>
      (AcousticRequestBuilder()..update(updates)).build();

  _$AcousticRequest._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.reqId,
      this.destination,
      this.timeout,
      this.range,
      this.type,
      this.msg})
      : super._();

  @override
  AcousticRequest rebuild(void Function(AcousticRequestBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticRequestBuilder toBuilder() => AcousticRequestBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticRequest &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == other.reqId &&
        destination == other.destination &&
        (timeout == other.timeout || timeout - other.timeout <= 1E-7) &&
        (range == other.range || range - other.range <= 1E-7) &&
        type == other.type &&
        msg == other.msg;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, timestamp?.hashCode),
                                            src?.hashCode),
                                        srcEnt?.hashCode),
                                    dst?.hashCode),
                                dstEnt?.hashCode),
                            reqId?.hashCode),
                        destination?.hashCode),
                    timeout?.hashCode),
                range?.hashCode),
            type?.hashCode),
        msg?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticRequest')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', '$reqId')
          ..add('destination', '$destination')
          ..add('timeout', '$timeout (s)')
          ..add('range', '$range (m)')
          ..add('type', '$type (Enumerated)')
          ..add('msg', '$msg'))
        .toString();
  }
}

/// Acoustic Transmission Request builder class
///
class AcousticRequestBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<AcousticRequest, AcousticRequestBuilder> {
  _$AcousticRequest _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId = 0;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  String _destination = '';
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  double _timeout = 0;
  double get timeout => _$this._timeout;
  set timeout(double timeout) => _$this._timeout = timeout;

  double _range = 0;
  double get range => _$this._range;
  set range(double range) => _$this._range = range;

  AcousticRequestEnumType _type = AcousticRequestEnumType(0);
  AcousticRequestEnumType get type => _$this._type;
  set type(AcousticRequestEnumType type) => _$this._type = type;

  ImcMessage _msg;
  ImcMessage get msg => _$this._msg;
  set msg(ImcMessage msg) => _$this._msg = msg;

  AcousticRequestBuilder();

  AcousticRequestBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AcousticRequestBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AcousticRequestBuilder()..copyFromHeader(headerFrom);

  AcousticRequestBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _destination = _$v.destination;
      _timeout = _$v.timeout;
      _range = _$v.range;
      _type = _$v.type;
      _msg = _$v.msg;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticRequest other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticRequest;
  }

  @override
  void update(void Function(AcousticRequestBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticRequest build() {
    final _$result = _$v ??
        _$AcousticRequest._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            destination: destination ?? '',
            timeout: timeout ?? 0,
            range: range ?? 0,
            type: type ?? AcousticRequestEnumType(0),
            msg: msg);
    replace(_$result);
    return _$result;
  }
}

/// Acoustic Transmission Status immutable class
///
class _$AcousticStatus extends AcousticStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final AcousticStatusEnumType type;
  @override
  final AcousticStatusEnumStatus status;
  @override
  final String info;
  @override
  final double range;

  factory _$AcousticStatus([void Function(AcousticStatusBuilder b) updates]) =>
      (AcousticStatusBuilder()..update(updates)).build();

  _$AcousticStatus._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.reqId,
      this.type,
      this.status,
      this.info,
      this.range})
      : super._();

  @override
  AcousticStatus rebuild(void Function(AcousticStatusBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AcousticStatusBuilder toBuilder() => AcousticStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AcousticStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == other.reqId &&
        type == other.type &&
        status == other.status &&
        info == other.info &&
        (range == other.range || range - other.range <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, timestamp?.hashCode),
                                        src?.hashCode),
                                    srcEnt?.hashCode),
                                dst?.hashCode),
                            dstEnt?.hashCode),
                        reqId?.hashCode),
                    type?.hashCode),
                status?.hashCode),
            info?.hashCode),
        range?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AcousticStatus')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', '$reqId')
          ..add('type', '$type (Enumerated)')
          ..add('status', '$status (Enumerated)')
          ..add('info', '$info')
          ..add('range', '$range (m)'))
        .toString();
  }
}

/// Acoustic Transmission Status builder class
///
class AcousticStatusBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<AcousticStatus, AcousticStatusBuilder> {
  _$AcousticStatus _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId = 0;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  AcousticStatusEnumType _type = AcousticStatusEnumType(0);
  AcousticStatusEnumType get type => _$this._type;
  set type(AcousticStatusEnumType type) => _$this._type = type;

  AcousticStatusEnumStatus _status = AcousticStatusEnumStatus(0);
  AcousticStatusEnumStatus get status => _$this._status;
  set status(AcousticStatusEnumStatus status) => _$this._status = status;

  String _info = '';
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  double _range = 0;
  double get range => _$this._range;
  set range(double range) => _$this._range = range;

  AcousticStatusBuilder();

  AcousticStatusBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AcousticStatusBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AcousticStatusBuilder()..copyFromHeader(headerFrom);

  AcousticStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _type = _$v.type;
      _status = _$v.status;
      _info = _$v.info;
      _range = _$v.range;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AcousticStatus other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$AcousticStatus;
  }

  @override
  void update(void Function(AcousticStatusBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$AcousticStatus build() {
    final _$result = _$v ??
        _$AcousticStatus._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            type: type ?? AcousticStatusEnumType(0),
            status: status ?? AcousticStatusEnumStatus(0),
            info: info ?? '',
            range: range ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Revolutions Per Minute immutable class
///
class _$Rpm extends Rpm {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int value;

  factory _$Rpm([void Function(RpmBuilder b) updates]) =>
      (RpmBuilder()..update(updates)).build();

  _$Rpm._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Rpm rebuild(void Function(RpmBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RpmBuilder toBuilder() => RpmBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Rpm &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Rpm')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (rpm)'))
        .toString();
  }
}

/// Revolutions Per Minute builder class
///
class RpmBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Rpm, RpmBuilder> {
  _$Rpm _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _value = 0;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  RpmBuilder();

  RpmBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RpmBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RpmBuilder()..copyFromHeader(headerFrom);

  RpmBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Rpm other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Rpm;
  }

  @override
  void update(void Function(RpmBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Rpm build() {
    final _$result = _$v ??
        _$Rpm._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Voltage immutable class
///
class _$Voltage extends Voltage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Voltage([void Function(VoltageBuilder b) updates]) =>
      (VoltageBuilder()..update(updates)).build();

  _$Voltage._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Voltage rebuild(void Function(VoltageBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  VoltageBuilder toBuilder() => VoltageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Voltage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Voltage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (V)'))
        .toString();
  }
}

/// Voltage builder class
///
class VoltageBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Voltage, VoltageBuilder> {
  _$Voltage _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  VoltageBuilder();

  VoltageBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  VoltageBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      VoltageBuilder()..copyFromHeader(headerFrom);

  VoltageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Voltage other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Voltage;
  }

  @override
  void update(void Function(VoltageBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Voltage build() {
    final _$result = _$v ??
        _$Voltage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Current immutable class
///
class _$Current extends Current {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Current([void Function(CurrentBuilder b) updates]) =>
      (CurrentBuilder()..update(updates)).build();

  _$Current._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Current rebuild(void Function(CurrentBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CurrentBuilder toBuilder() => CurrentBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Current &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Current')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (A)'))
        .toString();
  }
}

/// Current builder class
///
class CurrentBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Current, CurrentBuilder> {
  _$Current _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  CurrentBuilder();

  CurrentBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CurrentBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CurrentBuilder()..copyFromHeader(headerFrom);

  CurrentBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Current other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Current;
  }

  @override
  void update(void Function(CurrentBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Current build() {
    final _$result = _$v ??
        _$Current._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// GPS Fix immutable class
///
class _$GpsFix extends GpsFix {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final GpsFixBitfieldValidity validity;
  @override
  final GpsFixEnumType type;
  @override
  final int utcYear;
  @override
  final int utcMonth;
  @override
  final int utcDay;
  @override
  final double utcTime;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final int satellites;
  @override
  final double cog;
  @override
  final double sog;
  @override
  final double hdop;
  @override
  final double vdop;
  @override
  final double hacc;
  @override
  final double vacc;

  factory _$GpsFix([void Function(GpsFixBuilder b) updates]) =>
      (GpsFixBuilder()..update(updates)).build();

  _$GpsFix._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.validity,
      this.type,
      this.utcYear,
      this.utcMonth,
      this.utcDay,
      this.utcTime,
      this.lat,
      this.lon,
      this.height,
      this.satellites,
      this.cog,
      this.sog,
      this.hdop,
      this.vdop,
      this.hacc,
      this.vacc})
      : super._();

  @override
  GpsFix rebuild(void Function(GpsFixBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GpsFixBuilder toBuilder() => GpsFixBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GpsFix &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == other.validity &&
        type == other.type &&
        utcYear == other.utcYear &&
        utcMonth == other.utcMonth &&
        utcDay == other.utcDay &&
        (utcTime == other.utcTime || utcTime - other.utcTime <= 1E-7) &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (height == other.height || height - other.height <= 1E-7) &&
        satellites == other.satellites &&
        (cog == other.cog || cog - other.cog <= 1E-7) &&
        (sog == other.sog || sog - other.sog <= 1E-7) &&
        (hdop == other.hdop || hdop - other.hdop <= 1E-7) &&
        (vdop == other.vdop || vdop - other.vdop <= 1E-7) &&
        (hacc == other.hacc || hacc - other.hacc <= 1E-7) &&
        (vacc == other.vacc || vacc - other.vacc <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                                                                srcEnt?.hashCode),
                                                                            dst?.hashCode),
                                                                        dstEnt?.hashCode),
                                                                    validity?.hashCode),
                                                                type?.hashCode),
                                                            utcYear?.hashCode),
                                                        utcMonth?.hashCode),
                                                    utcDay?.hashCode),
                                                utcTime?.hashCode),
                                            lat?.hashCode),
                                        lon?.hashCode),
                                    height?.hashCode),
                                satellites?.hashCode),
                            cog?.hashCode),
                        sog?.hashCode),
                    hdop?.hashCode),
                vdop?.hashCode),
            hacc?.hashCode),
        vacc?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GpsFix')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('validity', '$validity (Bitfield)')
          ..add('type', '$type (Enumerated)')
          ..add('utcYear', '$utcYear')
          ..add('utcMonth', '$utcMonth')
          ..add('utcDay', '$utcDay')
          ..add('utcTime', '$utcTime (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('height', '$height (m)')
          ..add('satellites', '$satellites')
          ..add('cog',
              '$cog (rad)${cog != null ? ' [${cog * 180.0 / math.pi} (deg)]' : ''}')
          ..add('sog', '$sog (m/s)')
          ..add('hdop', '$hdop')
          ..add('vdop', '$vdop')
          ..add('hacc', '$hacc (m)')
          ..add('vacc', '$vacc (m)'))
        .toString();
  }
}

/// GPS Fix builder class
///
class GpsFixBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<GpsFix, GpsFixBuilder> {
  _$GpsFix _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GpsFixBitfieldValidity _validity = GpsFixBitfieldValidity(0);
  GpsFixBitfieldValidity get validity => _$this._validity;
  set validity(GpsFixBitfieldValidity validity) => _$this._validity = validity;

  GpsFixEnumType _type = GpsFixEnumType(0);
  GpsFixEnumType get type => _$this._type;
  set type(GpsFixEnumType type) => _$this._type = type;

  int _utcYear = 0;
  int get utcYear => _$this._utcYear;
  set utcYear(int utcYear) => _$this._utcYear = utcYear;

  int _utcMonth = 0;
  int get utcMonth => _$this._utcMonth;
  set utcMonth(int utcMonth) => _$this._utcMonth = utcMonth;

  int _utcDay = 0;
  int get utcDay => _$this._utcDay;
  set utcDay(int utcDay) => _$this._utcDay = utcDay;

  double _utcTime = 0;
  double get utcTime => _$this._utcTime;
  set utcTime(double utcTime) => _$this._utcTime = utcTime;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height = 0;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  int _satellites = 0;
  int get satellites => _$this._satellites;
  set satellites(int satellites) => _$this._satellites = satellites;

  double _cog = 0;
  double get cog => _$this._cog;
  set cog(double cog) => _$this._cog = cog;

  double _sog = 0;
  double get sog => _$this._sog;
  set sog(double sog) => _$this._sog = sog;

  double _hdop = 0;
  double get hdop => _$this._hdop;
  set hdop(double hdop) => _$this._hdop = hdop;

  double _vdop = 0;
  double get vdop => _$this._vdop;
  set vdop(double vdop) => _$this._vdop = vdop;

  double _hacc = 0;
  double get hacc => _$this._hacc;
  set hacc(double hacc) => _$this._hacc = hacc;

  double _vacc = 0;
  double get vacc => _$this._vacc;
  set vacc(double vacc) => _$this._vacc = vacc;

  GpsFixBuilder();

  GpsFixBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  GpsFixBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      GpsFixBuilder()..copyFromHeader(headerFrom);

  GpsFixBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _type = _$v.type;
      _utcYear = _$v.utcYear;
      _utcMonth = _$v.utcMonth;
      _utcDay = _$v.utcDay;
      _utcTime = _$v.utcTime;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _satellites = _$v.satellites;
      _cog = _$v.cog;
      _sog = _$v.sog;
      _hdop = _$v.hdop;
      _vdop = _$v.vdop;
      _hacc = _$v.hacc;
      _vacc = _$v.vacc;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GpsFix other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$GpsFix;
  }

  @override
  void update(void Function(GpsFixBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GpsFix build() {
    final _$result = _$v ??
        _$GpsFix._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            validity: validity ?? GpsFixBitfieldValidity(0),
            type: type ?? GpsFixEnumType(0),
            utcYear: utcYear ?? 0,
            utcMonth: utcMonth ?? 0,
            utcDay: utcDay ?? 0,
            utcTime: utcTime ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            height: height ?? 0,
            satellites: satellites ?? 0,
            cog: cog ?? 0,
            sog: sog ?? 0,
            hdop: hdop ?? 0,
            vdop: vdop ?? 0,
            hacc: hacc ?? 0,
            vacc: vacc ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Euler Angles immutable class
///
class _$EulerAngles extends EulerAngles {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double psiMagnetic;

  factory _$EulerAngles([void Function(EulerAnglesBuilder b) updates]) =>
      (EulerAnglesBuilder()..update(updates)).build();

  _$EulerAngles._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.time,
      this.phi,
      this.theta,
      this.psi,
      this.psiMagnetic})
      : super._();

  @override
  EulerAngles rebuild(void Function(EulerAnglesBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  EulerAnglesBuilder toBuilder() => EulerAnglesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EulerAngles &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (time == other.time || time - other.time <= 1E-7) &&
        (phi == other.phi || phi - other.phi <= 1E-7) &&
        (theta == other.theta || theta - other.theta <= 1E-7) &&
        (psi == other.psi || psi - other.psi <= 1E-7) &&
        (psiMagnetic == other.psiMagnetic ||
            psiMagnetic - other.psiMagnetic <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, timestamp?.hashCode),
                                        src?.hashCode),
                                    srcEnt?.hashCode),
                                dst?.hashCode),
                            dstEnt?.hashCode),
                        time?.hashCode),
                    phi?.hashCode),
                theta?.hashCode),
            psi?.hashCode),
        psiMagnetic?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EulerAngles')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('time', '$time (s)')
          ..add('phi',
              '$phi (rad)${phi != null ? ' [${phi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('theta',
              '$theta (rad)${theta != null ? ' [${theta * 180.0 / math.pi} (deg)]' : ''}')
          ..add('psi',
              '$psi (rad)${psi != null ? ' [${psi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('psiMagnetic',
              '$psiMagnetic (rad)${psiMagnetic != null ? ' [${psiMagnetic * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// Euler Angles builder class
///
class EulerAnglesBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<EulerAngles, EulerAnglesBuilder> {
  _$EulerAngles _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time = 0;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _phi = 0;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta = 0;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi = 0;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _psiMagnetic = 0;
  double get psiMagnetic => _$this._psiMagnetic;
  set psiMagnetic(double psiMagnetic) => _$this._psiMagnetic = psiMagnetic;

  EulerAnglesBuilder();

  EulerAnglesBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  EulerAnglesBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      EulerAnglesBuilder()..copyFromHeader(headerFrom);

  EulerAnglesBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _psiMagnetic = _$v.psiMagnetic;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EulerAngles other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$EulerAngles;
  }

  @override
  void update(void Function(EulerAnglesBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$EulerAngles build() {
    final _$result = _$v ??
        _$EulerAngles._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            time: time ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0,
            psiMagnetic: psiMagnetic ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Euler Angles Delta immutable class
///
class _$EulerAnglesDelta extends EulerAnglesDelta {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double timestep;

  factory _$EulerAnglesDelta(
          [void Function(EulerAnglesDeltaBuilder b) updates]) =>
      (EulerAnglesDeltaBuilder()..update(updates)).build();

  _$EulerAnglesDelta._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z,
      this.timestep})
      : super._();

  @override
  EulerAnglesDelta rebuild(void Function(EulerAnglesDeltaBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  EulerAnglesDeltaBuilder toBuilder() =>
      EulerAnglesDeltaBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EulerAnglesDelta &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (time == other.time || time - other.time <= 1E-7) &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        (timestep == other.timestep || timestep - other.timestep <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, timestamp?.hashCode),
                                        src?.hashCode),
                                    srcEnt?.hashCode),
                                dst?.hashCode),
                            dstEnt?.hashCode),
                        time?.hashCode),
                    x?.hashCode),
                y?.hashCode),
            z?.hashCode),
        timestep?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EulerAnglesDelta')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('time', '$time (s)')
          ..add('x',
              '$x (rad)${x != null ? ' [${x * 180.0 / math.pi} (deg)]' : ''}')
          ..add('y',
              '$y (rad)${y != null ? ' [${y * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z',
              '$z (rad)${z != null ? ' [${z * 180.0 / math.pi} (deg)]' : ''}')
          ..add('timestep', '$timestep (s)'))
        .toString();
  }
}

/// Euler Angles Delta builder class
///
class EulerAnglesDeltaBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<EulerAnglesDelta, EulerAnglesDeltaBuilder> {
  _$EulerAnglesDelta _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time = 0;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _timestep = 0;
  double get timestep => _$this._timestep;
  set timestep(double timestep) => _$this._timestep = timestep;

  EulerAnglesDeltaBuilder();

  EulerAnglesDeltaBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  EulerAnglesDeltaBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      EulerAnglesDeltaBuilder()..copyFromHeader(headerFrom);

  EulerAnglesDeltaBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _timestep = _$v.timestep;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EulerAnglesDelta other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$EulerAnglesDelta;
  }

  @override
  void update(void Function(EulerAnglesDeltaBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$EulerAnglesDelta build() {
    final _$result = _$v ??
        _$EulerAnglesDelta._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            time: time ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            timestep: timestep ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Angular Velocity immutable class
///
class _$AngularVelocity extends AngularVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$AngularVelocity(
          [void Function(AngularVelocityBuilder b) updates]) =>
      (AngularVelocityBuilder()..update(updates)).build();

  _$AngularVelocity._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  AngularVelocity rebuild(void Function(AngularVelocityBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AngularVelocityBuilder toBuilder() => AngularVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AngularVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (time == other.time || time - other.time <= 1E-7) &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    time?.hashCode),
                x?.hashCode),
            y?.hashCode),
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AngularVelocity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('time', '$time (s)')
          ..add('x',
              '$x (rad/s)${x != null ? ' [${x * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('y',
              '$y (rad/s)${y != null ? ' [${y * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('z',
              '$z (rad/s)${z != null ? ' [${z * 180.0 / math.pi} (deg/s)]' : ''}'))
        .toString();
  }
}

/// Angular Velocity builder class
///
class AngularVelocityBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<AngularVelocity, AngularVelocityBuilder> {
  _$AngularVelocity _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time = 0;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  AngularVelocityBuilder();

  AngularVelocityBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AngularVelocityBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AngularVelocityBuilder()..copyFromHeader(headerFrom);

  AngularVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AngularVelocity other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$AngularVelocity;
  }

  @override
  void update(void Function(AngularVelocityBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$AngularVelocity build() {
    final _$result = _$v ??
        _$AngularVelocity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            time: time ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Acceleration immutable class
///
class _$Acceleration extends Acceleration {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$Acceleration([void Function(AccelerationBuilder b) updates]) =>
      (AccelerationBuilder()..update(updates)).build();

  _$Acceleration._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  Acceleration rebuild(void Function(AccelerationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AccelerationBuilder toBuilder() => AccelerationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Acceleration &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (time == other.time || time - other.time <= 1E-7) &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    time?.hashCode),
                x?.hashCode),
            y?.hashCode),
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Acceleration')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('time', '$time (s)')
          ..add('x', '$x (m/s/s)')
          ..add('y', '$y (m/s/s)')
          ..add('z', '$z (m/s/s)'))
        .toString();
  }
}

/// Acceleration builder class
///
class AccelerationBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Acceleration, AccelerationBuilder> {
  _$Acceleration _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time = 0;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  AccelerationBuilder();

  AccelerationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AccelerationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AccelerationBuilder()..copyFromHeader(headerFrom);

  AccelerationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Acceleration other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Acceleration;
  }

  @override
  void update(void Function(AccelerationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Acceleration build() {
    final _$result = _$v ??
        _$Acceleration._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            time: time ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Magnetic Field immutable class
///
class _$MagneticField extends MagneticField {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$MagneticField([void Function(MagneticFieldBuilder b) updates]) =>
      (MagneticFieldBuilder()..update(updates)).build();

  _$MagneticField._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  MagneticField rebuild(void Function(MagneticFieldBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  MagneticFieldBuilder toBuilder() => MagneticFieldBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MagneticField &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (time == other.time || time - other.time <= 1E-7) &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    time?.hashCode),
                x?.hashCode),
            y?.hashCode),
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MagneticField')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('time', '$time (s)')
          ..add('x', '$x (G)')
          ..add('y', '$y (G)')
          ..add('z', '$z (G)'))
        .toString();
  }
}

/// Magnetic Field builder class
///
class MagneticFieldBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<MagneticField, MagneticFieldBuilder> {
  _$MagneticField _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time = 0;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  MagneticFieldBuilder();

  MagneticFieldBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  MagneticFieldBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      MagneticFieldBuilder()..copyFromHeader(headerFrom);

  MagneticFieldBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MagneticField other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$MagneticField;
  }

  @override
  void update(void Function(MagneticFieldBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$MagneticField build() {
    final _$result = _$v ??
        _$MagneticField._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            time: time ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Ground Velocity immutable class
///
class _$GroundVelocity extends GroundVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final GroundVelocityBitfieldValidity validity;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$GroundVelocity([void Function(GroundVelocityBuilder b) updates]) =>
      (GroundVelocityBuilder()..update(updates)).build();

  _$GroundVelocity._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.validity,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  GroundVelocity rebuild(void Function(GroundVelocityBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GroundVelocityBuilder toBuilder() => GroundVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GroundVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == other.validity &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    validity?.hashCode),
                x?.hashCode),
            y?.hashCode),
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GroundVelocity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('validity', '$validity (Bitfield)')
          ..add('x', '$x (m/s)')
          ..add('y', '$y (m/s)')
          ..add('z', '$z (m/s)'))
        .toString();
  }
}

/// Ground Velocity builder class
///
class GroundVelocityBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<GroundVelocity, GroundVelocityBuilder> {
  _$GroundVelocity _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GroundVelocityBitfieldValidity _validity = GroundVelocityBitfieldValidity(0);
  GroundVelocityBitfieldValidity get validity => _$this._validity;
  set validity(GroundVelocityBitfieldValidity validity) =>
      _$this._validity = validity;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  GroundVelocityBuilder();

  GroundVelocityBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  GroundVelocityBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      GroundVelocityBuilder()..copyFromHeader(headerFrom);

  GroundVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GroundVelocity other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$GroundVelocity;
  }

  @override
  void update(void Function(GroundVelocityBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GroundVelocity build() {
    final _$result = _$v ??
        _$GroundVelocity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            validity: validity ?? GroundVelocityBitfieldValidity(0),
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Water Velocity immutable class
///
class _$WaterVelocity extends WaterVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final WaterVelocityBitfieldValidity validity;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$WaterVelocity([void Function(WaterVelocityBuilder b) updates]) =>
      (WaterVelocityBuilder()..update(updates)).build();

  _$WaterVelocity._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.validity,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  WaterVelocity rebuild(void Function(WaterVelocityBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  WaterVelocityBuilder toBuilder() => WaterVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is WaterVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == other.validity &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    validity?.hashCode),
                x?.hashCode),
            y?.hashCode),
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('WaterVelocity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('validity', '$validity (Bitfield)')
          ..add('x', '$x (m/s)')
          ..add('y', '$y (m/s)')
          ..add('z', '$z (m/s)'))
        .toString();
  }
}

/// Water Velocity builder class
///
class WaterVelocityBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<WaterVelocity, WaterVelocityBuilder> {
  _$WaterVelocity _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  WaterVelocityBitfieldValidity _validity = WaterVelocityBitfieldValidity(0);
  WaterVelocityBitfieldValidity get validity => _$this._validity;
  set validity(WaterVelocityBitfieldValidity validity) =>
      _$this._validity = validity;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  WaterVelocityBuilder();

  WaterVelocityBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  WaterVelocityBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      WaterVelocityBuilder()..copyFromHeader(headerFrom);

  WaterVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(WaterVelocity other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$WaterVelocity;
  }

  @override
  void update(void Function(WaterVelocityBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$WaterVelocity build() {
    final _$result = _$v ??
        _$WaterVelocity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            validity: validity ?? WaterVelocityBitfieldValidity(0),
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Velocity Delta immutable class
///
class _$VelocityDelta extends VelocityDelta {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double time;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$VelocityDelta([void Function(VelocityDeltaBuilder b) updates]) =>
      (VelocityDeltaBuilder()..update(updates)).build();

  _$VelocityDelta._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.time,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  VelocityDelta rebuild(void Function(VelocityDeltaBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  VelocityDeltaBuilder toBuilder() => VelocityDeltaBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VelocityDelta &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (time == other.time || time - other.time <= 1E-7) &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    time?.hashCode),
                x?.hashCode),
            y?.hashCode),
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VelocityDelta')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('time', '$time (s)')
          ..add('x', '$x (m/s)')
          ..add('y', '$y (m/s)')
          ..add('z', '$z (m/s)'))
        .toString();
  }
}

/// Velocity Delta builder class
///
class VelocityDeltaBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<VelocityDelta, VelocityDeltaBuilder> {
  _$VelocityDelta _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _time = 0;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  VelocityDeltaBuilder();

  VelocityDeltaBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  VelocityDeltaBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      VelocityDeltaBuilder()..copyFromHeader(headerFrom);

  VelocityDeltaBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _time = _$v.time;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VelocityDelta other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$VelocityDelta;
  }

  @override
  void update(void Function(VelocityDeltaBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$VelocityDelta build() {
    final _$result = _$v ??
        _$VelocityDelta._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            time: time ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Distance immutable class
///
class _$Distance extends Distance {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DistanceEnumValidity validity;
  @override
  final List<DeviceState> location;
  @override
  final List<BeamConfig> beamConfig;
  @override
  final double value;

  factory _$Distance([void Function(DistanceBuilder b) updates]) =>
      (DistanceBuilder()..update(updates)).build();

  _$Distance._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.validity,
      this.location,
      this.beamConfig,
      this.value})
      : super._();

  @override
  Distance rebuild(void Function(DistanceBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DistanceBuilder toBuilder() => DistanceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Distance &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == other.validity &&
        DeepCollectionEquality().equals(location, other.location) &&
        DeepCollectionEquality().equals(beamConfig, other.beamConfig) &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    validity?.hashCode),
                location?.hashCode),
            beamConfig?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Distance')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('validity', '$validity (Enumerated)')
          ..add('location', '$location')
          ..add('beamConfig', '$beamConfig')
          ..add('value', '$value (m)'))
        .toString();
  }
}

/// Distance builder class
///
class DistanceBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Distance, DistanceBuilder> {
  _$Distance _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DistanceEnumValidity _validity = DistanceEnumValidity(0);
  DistanceEnumValidity get validity => _$this._validity;
  set validity(DistanceEnumValidity validity) => _$this._validity = validity;

  List<DeviceState> _location = <DeviceState>[];
  List<DeviceState> get location => _$this._location;
  set location(List<DeviceState> location) => _$this._location = location;

  List<BeamConfig> _beamConfig = <BeamConfig>[];
  List<BeamConfig> get beamConfig => _$this._beamConfig;
  set beamConfig(List<BeamConfig> beamConfig) =>
      _$this._beamConfig = beamConfig;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DistanceBuilder();

  DistanceBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DistanceBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DistanceBuilder()..copyFromHeader(headerFrom);

  DistanceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _location = _$v.location;
      _beamConfig = _$v.beamConfig;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Distance other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Distance;
  }

  @override
  void update(void Function(DistanceBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Distance build() {
    final _$result = _$v ??
        _$Distance._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            validity: validity ?? DistanceEnumValidity(0),
            location: location ?? <DeviceState>[],
            beamConfig: beamConfig ?? <BeamConfig>[],
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Temperature immutable class
///
class _$Temperature extends Temperature {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Temperature([void Function(TemperatureBuilder b) updates]) =>
      (TemperatureBuilder()..update(updates)).build();

  _$Temperature._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Temperature rebuild(void Function(TemperatureBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TemperatureBuilder toBuilder() => TemperatureBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Temperature &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Temperature')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (°C)'))
        .toString();
  }
}

/// Temperature builder class
///
class TemperatureBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Temperature, TemperatureBuilder> {
  _$Temperature _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  TemperatureBuilder();

  TemperatureBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TemperatureBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TemperatureBuilder()..copyFromHeader(headerFrom);

  TemperatureBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Temperature other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Temperature;
  }

  @override
  void update(void Function(TemperatureBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Temperature build() {
    final _$result = _$v ??
        _$Temperature._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Pressure immutable class
///
class _$Pressure extends Pressure {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Pressure([void Function(PressureBuilder b) updates]) =>
      (PressureBuilder()..update(updates)).build();

  _$Pressure._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Pressure rebuild(void Function(PressureBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PressureBuilder toBuilder() => PressureBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Pressure &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Pressure')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (hPa)'))
        .toString();
  }
}

/// Pressure builder class
///
class PressureBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Pressure, PressureBuilder> {
  _$Pressure _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  PressureBuilder();

  PressureBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PressureBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PressureBuilder()..copyFromHeader(headerFrom);

  PressureBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Pressure other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Pressure;
  }

  @override
  void update(void Function(PressureBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Pressure build() {
    final _$result = _$v ??
        _$Pressure._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Depth immutable class
///
class _$Depth extends Depth {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Depth([void Function(DepthBuilder b) updates]) =>
      (DepthBuilder()..update(updates)).build();

  _$Depth._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Depth rebuild(void Function(DepthBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DepthBuilder toBuilder() => DepthBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Depth &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Depth')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (m)'))
        .toString();
  }
}

/// Depth builder class
///
class DepthBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Depth, DepthBuilder> {
  _$Depth _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DepthBuilder();

  DepthBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DepthBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DepthBuilder()..copyFromHeader(headerFrom);

  DepthBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Depth other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Depth;
  }

  @override
  void update(void Function(DepthBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Depth build() {
    final _$result = _$v ??
        _$Depth._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Depth Offset immutable class
///
class _$DepthOffset extends DepthOffset {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DepthOffset([void Function(DepthOffsetBuilder b) updates]) =>
      (DepthOffsetBuilder()..update(updates)).build();

  _$DepthOffset._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DepthOffset rebuild(void Function(DepthOffsetBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DepthOffsetBuilder toBuilder() => DepthOffsetBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DepthOffset &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DepthOffset')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (m)'))
        .toString();
  }
}

/// Depth Offset builder class
///
class DepthOffsetBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<DepthOffset, DepthOffsetBuilder> {
  _$DepthOffset _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DepthOffsetBuilder();

  DepthOffsetBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DepthOffsetBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DepthOffsetBuilder()..copyFromHeader(headerFrom);

  DepthOffsetBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DepthOffset other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DepthOffset;
  }

  @override
  void update(void Function(DepthOffsetBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DepthOffset build() {
    final _$result = _$v ??
        _$DepthOffset._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Sound Speed immutable class
///
class _$SoundSpeed extends SoundSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$SoundSpeed([void Function(SoundSpeedBuilder b) updates]) =>
      (SoundSpeedBuilder()..update(updates)).build();

  _$SoundSpeed._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  SoundSpeed rebuild(void Function(SoundSpeedBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SoundSpeedBuilder toBuilder() => SoundSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoundSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoundSpeed')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (m/s)'))
        .toString();
  }
}

/// Sound Speed builder class
///
class SoundSpeedBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SoundSpeed, SoundSpeedBuilder> {
  _$SoundSpeed _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SoundSpeedBuilder();

  SoundSpeedBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SoundSpeedBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SoundSpeedBuilder()..copyFromHeader(headerFrom);

  SoundSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoundSpeed other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SoundSpeed;
  }

  @override
  void update(void Function(SoundSpeedBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SoundSpeed build() {
    final _$result = _$v ??
        _$SoundSpeed._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Water Density immutable class
///
class _$WaterDensity extends WaterDensity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$WaterDensity([void Function(WaterDensityBuilder b) updates]) =>
      (WaterDensityBuilder()..update(updates)).build();

  _$WaterDensity._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  WaterDensity rebuild(void Function(WaterDensityBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  WaterDensityBuilder toBuilder() => WaterDensityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is WaterDensity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('WaterDensity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (kg/m/m/m)'))
        .toString();
  }
}

/// Water Density builder class
///
class WaterDensityBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<WaterDensity, WaterDensityBuilder> {
  _$WaterDensity _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  WaterDensityBuilder();

  WaterDensityBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  WaterDensityBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      WaterDensityBuilder()..copyFromHeader(headerFrom);

  WaterDensityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(WaterDensity other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$WaterDensity;
  }

  @override
  void update(void Function(WaterDensityBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$WaterDensity build() {
    final _$result = _$v ??
        _$WaterDensity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Conductivity immutable class
///
class _$Conductivity extends Conductivity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Conductivity([void Function(ConductivityBuilder b) updates]) =>
      (ConductivityBuilder()..update(updates)).build();

  _$Conductivity._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Conductivity rebuild(void Function(ConductivityBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ConductivityBuilder toBuilder() => ConductivityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Conductivity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Conductivity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (S/m)'))
        .toString();
  }
}

/// Conductivity builder class
///
class ConductivityBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Conductivity, ConductivityBuilder> {
  _$Conductivity _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ConductivityBuilder();

  ConductivityBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ConductivityBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ConductivityBuilder()..copyFromHeader(headerFrom);

  ConductivityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Conductivity other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Conductivity;
  }

  @override
  void update(void Function(ConductivityBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Conductivity build() {
    final _$result = _$v ??
        _$Conductivity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Salinity immutable class
///
class _$Salinity extends Salinity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Salinity([void Function(SalinityBuilder b) updates]) =>
      (SalinityBuilder()..update(updates)).build();

  _$Salinity._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Salinity rebuild(void Function(SalinityBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SalinityBuilder toBuilder() => SalinityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Salinity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Salinity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value'))
        .toString();
  }
}

/// Salinity builder class
///
class SalinityBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Salinity, SalinityBuilder> {
  _$Salinity _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SalinityBuilder();

  SalinityBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SalinityBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SalinityBuilder()..copyFromHeader(headerFrom);

  SalinityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Salinity other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Salinity;
  }

  @override
  void update(void Function(SalinityBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Salinity build() {
    final _$result = _$v ??
        _$Salinity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Wind Speed immutable class
///
class _$WindSpeed extends WindSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double direction;
  @override
  final double speed;
  @override
  final double turbulence;

  factory _$WindSpeed([void Function(WindSpeedBuilder b) updates]) =>
      (WindSpeedBuilder()..update(updates)).build();

  _$WindSpeed._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.direction,
      this.speed,
      this.turbulence})
      : super._();

  @override
  WindSpeed rebuild(void Function(WindSpeedBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  WindSpeedBuilder toBuilder() => WindSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is WindSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (direction == other.direction || direction - other.direction <= 1E-7) &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        (turbulence == other.turbulence ||
            turbulence - other.turbulence <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                direction?.hashCode),
            speed?.hashCode),
        turbulence?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('WindSpeed')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('direction',
              '$direction (rad)${direction != null ? ' [${direction * 180.0 / math.pi} (deg)]' : ''}')
          ..add('speed', '$speed (m/s)')
          ..add('turbulence', '$turbulence (m/s)'))
        .toString();
  }
}

/// Wind Speed builder class
///
class WindSpeedBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<WindSpeed, WindSpeedBuilder> {
  _$WindSpeed _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _direction = 0;
  double get direction => _$this._direction;
  set direction(double direction) => _$this._direction = direction;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  double _turbulence = 0;
  double get turbulence => _$this._turbulence;
  set turbulence(double turbulence) => _$this._turbulence = turbulence;

  WindSpeedBuilder();

  WindSpeedBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  WindSpeedBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      WindSpeedBuilder()..copyFromHeader(headerFrom);

  WindSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _direction = _$v.direction;
      _speed = _$v.speed;
      _turbulence = _$v.turbulence;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(WindSpeed other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$WindSpeed;
  }

  @override
  void update(void Function(WindSpeedBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$WindSpeed build() {
    final _$result = _$v ??
        _$WindSpeed._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            direction: direction ?? 0,
            speed: speed ?? 0,
            turbulence: turbulence ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Relative Humidity immutable class
///
class _$RelativeHumidity extends RelativeHumidity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$RelativeHumidity(
          [void Function(RelativeHumidityBuilder b) updates]) =>
      (RelativeHumidityBuilder()..update(updates)).build();

  _$RelativeHumidity._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  RelativeHumidity rebuild(void Function(RelativeHumidityBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RelativeHumidityBuilder toBuilder() =>
      RelativeHumidityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RelativeHumidity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RelativeHumidity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value'))
        .toString();
  }
}

/// Relative Humidity builder class
///
class RelativeHumidityBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<RelativeHumidity, RelativeHumidityBuilder> {
  _$RelativeHumidity _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RelativeHumidityBuilder();

  RelativeHumidityBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RelativeHumidityBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RelativeHumidityBuilder()..copyFromHeader(headerFrom);

  RelativeHumidityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RelativeHumidity other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$RelativeHumidity;
  }

  @override
  void update(void Function(RelativeHumidityBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$RelativeHumidity build() {
    final _$result = _$v ??
        _$RelativeHumidity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Device Data (Text) immutable class
///
class _$DevDataText extends DevDataText {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String value;

  factory _$DevDataText([void Function(DevDataTextBuilder b) updates]) =>
      (DevDataTextBuilder()..update(updates)).build();

  _$DevDataText._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DevDataText rebuild(void Function(DevDataTextBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DevDataTextBuilder toBuilder() => DevDataTextBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DevDataText &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DevDataText')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value'))
        .toString();
  }
}

/// Device Data (Text) builder class
///
class DevDataTextBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<DevDataText, DevDataTextBuilder> {
  _$DevDataText _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _value = '';
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  DevDataTextBuilder();

  DevDataTextBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DevDataTextBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DevDataTextBuilder()..copyFromHeader(headerFrom);

  DevDataTextBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DevDataText other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DevDataText;
  }

  @override
  void update(void Function(DevDataTextBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DevDataText build() {
    final _$result = _$v ??
        _$DevDataText._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Device Data (Binary) immutable class
///
class _$DevDataBinary extends DevDataBinary {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final List<int> value;

  factory _$DevDataBinary([void Function(DevDataBinaryBuilder b) updates]) =>
      (DevDataBinaryBuilder()..update(updates)).build();

  _$DevDataBinary._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DevDataBinary rebuild(void Function(DevDataBinaryBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DevDataBinaryBuilder toBuilder() => DevDataBinaryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DevDataBinary &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        ListEquality().equals(value, other.value);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DevDataBinary')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value'))
        .toString();
  }
}

/// Device Data (Binary) builder class
///
class DevDataBinaryBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<DevDataBinary, DevDataBinaryBuilder> {
  _$DevDataBinary _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  List<int> _value = <int>[];
  List<int> get value => _$this._value;
  set value(List<int> value) => _$this._value = value;

  DevDataBinaryBuilder();

  DevDataBinaryBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DevDataBinaryBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DevDataBinaryBuilder()..copyFromHeader(headerFrom);

  DevDataBinaryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DevDataBinary other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DevDataBinary;
  }

  @override
  void update(void Function(DevDataBinaryBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DevDataBinary build() {
    final _$result = _$v ??
        _$DevDataBinary._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// Force immutable class
///
class _$Force extends Force {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Force([void Function(ForceBuilder b) updates]) =>
      (ForceBuilder()..update(updates)).build();

  _$Force._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Force rebuild(void Function(ForceBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ForceBuilder toBuilder() => ForceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Force &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Force')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (N)'))
        .toString();
  }
}

/// Force builder class
///
class ForceBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Force, ForceBuilder> {
  _$Force _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ForceBuilder();

  ForceBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ForceBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ForceBuilder()..copyFromHeader(headerFrom);

  ForceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Force other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Force;
  }

  @override
  void update(void Function(ForceBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Force build() {
    final _$result = _$v ??
        _$Force._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Sonar Data immutable class
///
class _$SonarData extends SonarData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final SonarDataEnumType type;
  @override
  final int frequency;
  @override
  final int minRange;
  @override
  final int maxRange;
  @override
  final int bitsPerPoint;
  @override
  final double scaleFactor;
  @override
  final List<BeamConfig> beamConfig;
  @override
  final List<int> data;

  factory _$SonarData([void Function(SonarDataBuilder b) updates]) =>
      (SonarDataBuilder()..update(updates)).build();

  _$SonarData._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type,
      this.frequency,
      this.minRange,
      this.maxRange,
      this.bitsPerPoint,
      this.scaleFactor,
      this.beamConfig,
      this.data})
      : super._();

  @override
  SonarData rebuild(void Function(SonarDataBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SonarDataBuilder toBuilder() => SonarDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SonarData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type &&
        frequency == other.frequency &&
        minRange == other.minRange &&
        maxRange == other.maxRange &&
        bitsPerPoint == other.bitsPerPoint &&
        (scaleFactor == other.scaleFactor ||
            scaleFactor - other.scaleFactor <= 1E-7) &&
        DeepCollectionEquality().equals(beamConfig, other.beamConfig) &&
        ListEquality().equals(data, other.data);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, timestamp?.hashCode),
                                                    src?.hashCode),
                                                srcEnt?.hashCode),
                                            dst?.hashCode),
                                        dstEnt?.hashCode),
                                    type?.hashCode),
                                frequency?.hashCode),
                            minRange?.hashCode),
                        maxRange?.hashCode),
                    bitsPerPoint?.hashCode),
                scaleFactor?.hashCode),
            beamConfig?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SonarData')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Enumerated)')
          ..add('frequency', '$frequency (Hz)')
          ..add('minRange', '$minRange (m)')
          ..add('maxRange', '$maxRange (m)')
          ..add('bitsPerPoint', '$bitsPerPoint (bit)')
          ..add('scaleFactor', '$scaleFactor')
          ..add('beamConfig', '$beamConfig')
          ..add('data', '$data'))
        .toString();
  }
}

/// Sonar Data builder class
///
class SonarDataBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SonarData, SonarDataBuilder> {
  _$SonarData _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  SonarDataEnumType _type = SonarDataEnumType(0);
  SonarDataEnumType get type => _$this._type;
  set type(SonarDataEnumType type) => _$this._type = type;

  int _frequency = 0;
  int get frequency => _$this._frequency;
  set frequency(int frequency) => _$this._frequency = frequency;

  int _minRange = 0;
  int get minRange => _$this._minRange;
  set minRange(int minRange) => _$this._minRange = minRange;

  int _maxRange = 0;
  int get maxRange => _$this._maxRange;
  set maxRange(int maxRange) => _$this._maxRange = maxRange;

  int _bitsPerPoint = 0;
  int get bitsPerPoint => _$this._bitsPerPoint;
  set bitsPerPoint(int bitsPerPoint) => _$this._bitsPerPoint = bitsPerPoint;

  double _scaleFactor = 0;
  double get scaleFactor => _$this._scaleFactor;
  set scaleFactor(double scaleFactor) => _$this._scaleFactor = scaleFactor;

  List<BeamConfig> _beamConfig = <BeamConfig>[];
  List<BeamConfig> get beamConfig => _$this._beamConfig;
  set beamConfig(List<BeamConfig> beamConfig) =>
      _$this._beamConfig = beamConfig;

  List<int> _data = <int>[];
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  SonarDataBuilder();

  SonarDataBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SonarDataBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SonarDataBuilder()..copyFromHeader(headerFrom);

  SonarDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _frequency = _$v.frequency;
      _minRange = _$v.minRange;
      _maxRange = _$v.maxRange;
      _bitsPerPoint = _$v.bitsPerPoint;
      _scaleFactor = _$v.scaleFactor;
      _beamConfig = _$v.beamConfig;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SonarData other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SonarData;
  }

  @override
  void update(void Function(SonarDataBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SonarData build() {
    final _$result = _$v ??
        _$SonarData._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? SonarDataEnumType(0),
            frequency: frequency ?? 0,
            minRange: minRange ?? 0,
            maxRange: maxRange ?? 0,
            bitsPerPoint: bitsPerPoint ?? 0,
            scaleFactor: scaleFactor ?? 0,
            beamConfig: beamConfig ?? <BeamConfig>[],
            data: data ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// Pulse immutable class
///
class _$Pulse extends Pulse {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  factory _$Pulse([void Function(PulseBuilder b) updates]) =>
      (PulseBuilder()..update(updates)).build();

  _$Pulse._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId})
      : super._();

  @override
  Pulse rebuild(void Function(PulseBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PulseBuilder toBuilder() => PulseBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Pulse &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                srcEnt?.hashCode),
            dst?.hashCode),
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Pulse')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Pulse builder class
///
class PulseBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Pulse, PulseBuilder> {
  _$Pulse _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PulseBuilder();

  PulseBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PulseBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PulseBuilder()..copyFromHeader(headerFrom);

  PulseBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Pulse other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Pulse;
  }

  @override
  void update(void Function(PulseBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Pulse build() {
    final _$result = _$v ??
        _$Pulse._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Pulse Detection Control immutable class
///
class _$PulseDetectionControl extends PulseDetectionControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PulseDetectionControlEnumOp op;

  factory _$PulseDetectionControl(
          [void Function(PulseDetectionControlBuilder b) updates]) =>
      (PulseDetectionControlBuilder()..update(updates)).build();

  _$PulseDetectionControl._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op})
      : super._();

  @override
  PulseDetectionControl rebuild(
          void Function(PulseDetectionControlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PulseDetectionControlBuilder toBuilder() =>
      PulseDetectionControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PulseDetectionControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        op?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PulseDetectionControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)'))
        .toString();
  }
}

/// Pulse Detection Control builder class
///
class PulseDetectionControlBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<PulseDetectionControl,
            PulseDetectionControlBuilder> {
  _$PulseDetectionControl _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PulseDetectionControlEnumOp _op = PulseDetectionControlEnumOp(0);
  PulseDetectionControlEnumOp get op => _$this._op;
  set op(PulseDetectionControlEnumOp op) => _$this._op = op;

  PulseDetectionControlBuilder();

  PulseDetectionControlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PulseDetectionControlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PulseDetectionControlBuilder()..copyFromHeader(headerFrom);

  PulseDetectionControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PulseDetectionControl other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PulseDetectionControl;
  }

  @override
  void update(void Function(PulseDetectionControlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PulseDetectionControl build() {
    final _$result = _$v ??
        _$PulseDetectionControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? PulseDetectionControlEnumOp(0));
    replace(_$result);
    return _$result;
  }
}

/// Fuel Level immutable class
///
class _$FuelLevel extends FuelLevel {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final double confidence;
  @override
  final String opmodes;

  factory _$FuelLevel([void Function(FuelLevelBuilder b) updates]) =>
      (FuelLevelBuilder()..update(updates)).build();

  _$FuelLevel._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value,
      this.confidence,
      this.opmodes})
      : super._();

  @override
  FuelLevel rebuild(void Function(FuelLevelBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FuelLevelBuilder toBuilder() => FuelLevelBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FuelLevel &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7) &&
        (confidence == other.confidence ||
            confidence - other.confidence <= 1E-7) &&
        opmodes == other.opmodes;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                value?.hashCode),
            confidence?.hashCode),
        opmodes?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FuelLevel')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (%)')
          ..add('confidence', '$confidence (%)')
          ..add('opmodes', '$opmodes (TupleList)'))
        .toString();
  }
}

/// Fuel Level builder class
///
class FuelLevelBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<FuelLevel, FuelLevelBuilder> {
  _$FuelLevel _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  double _confidence = 0;
  double get confidence => _$this._confidence;
  set confidence(double confidence) => _$this._confidence = confidence;

  String _opmodes = '';
  String get opmodes => _$this._opmodes;
  set opmodes(String opmodes) => _$this._opmodes = opmodes;

  FuelLevelBuilder();

  FuelLevelBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FuelLevelBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FuelLevelBuilder()..copyFromHeader(headerFrom);

  FuelLevelBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _confidence = _$v.confidence;
      _opmodes = _$v.opmodes;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FuelLevel other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FuelLevel;
  }

  @override
  void update(void Function(FuelLevelBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FuelLevel build() {
    final _$result = _$v ??
        _$FuelLevel._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0,
            confidence: confidence ?? 0,
            opmodes: opmodes ?? '');
    replace(_$result);
    return _$result;
  }
}

/// GPS Navigation Data immutable class
///
class _$GpsNavData extends GpsNavData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int itow;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double heightEll;
  @override
  final double heightSea;
  @override
  final double hacc;
  @override
  final double vacc;
  @override
  final double velN;
  @override
  final double velE;
  @override
  final double velD;
  @override
  final double speed;
  @override
  final double gspeed;
  @override
  final double heading;
  @override
  final double sacc;
  @override
  final double cacc;

  factory _$GpsNavData([void Function(GpsNavDataBuilder b) updates]) =>
      (GpsNavDataBuilder()..update(updates)).build();

  _$GpsNavData._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.itow,
      this.lat,
      this.lon,
      this.heightEll,
      this.heightSea,
      this.hacc,
      this.vacc,
      this.velN,
      this.velE,
      this.velD,
      this.speed,
      this.gspeed,
      this.heading,
      this.sacc,
      this.cacc})
      : super._();

  @override
  GpsNavData rebuild(void Function(GpsNavDataBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GpsNavDataBuilder toBuilder() => GpsNavDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GpsNavData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        itow == other.itow &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (heightEll == other.heightEll || heightEll - other.heightEll <= 1E-7) &&
        (heightSea == other.heightSea || heightSea - other.heightSea <= 1E-7) &&
        (hacc == other.hacc || hacc - other.hacc <= 1E-7) &&
        (vacc == other.vacc || vacc - other.vacc <= 1E-7) &&
        (velN == other.velN || velN - other.velN <= 1E-7) &&
        (velE == other.velE || velE - other.velE <= 1E-7) &&
        (velD == other.velD || velD - other.velD <= 1E-7) &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        (gspeed == other.gspeed || gspeed - other.gspeed <= 1E-7) &&
        (heading == other.heading || heading - other.heading <= 1E-7) &&
        (sacc == other.sacc || sacc - other.sacc <= 1E-7) &&
        (cacc == other.cacc || cacc - other.cacc <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc(0, timestamp?.hashCode),
                                                                                src?.hashCode),
                                                                            srcEnt?.hashCode),
                                                                        dst?.hashCode),
                                                                    dstEnt?.hashCode),
                                                                itow?.hashCode),
                                                            lat?.hashCode),
                                                        lon?.hashCode),
                                                    heightEll?.hashCode),
                                                heightSea?.hashCode),
                                            hacc?.hashCode),
                                        vacc?.hashCode),
                                    velN?.hashCode),
                                velE?.hashCode),
                            velD?.hashCode),
                        speed?.hashCode),
                    gspeed?.hashCode),
                heading?.hashCode),
            sacc?.hashCode),
        cacc?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GpsNavData')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('itow', '$itow (ms)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('heightEll', '$heightEll (m)')
          ..add('heightSea', '$heightSea (m)')
          ..add('hacc', '$hacc (m)')
          ..add('vacc', '$vacc (m)')
          ..add('velN', '$velN (m/s)')
          ..add('velE', '$velE (m/s)')
          ..add('velD', '$velD (m/s)')
          ..add('speed', '$speed (m/s)')
          ..add('gspeed', '$gspeed (m/s)')
          ..add('heading',
              '$heading (rad)${heading != null ? ' [${heading * 180.0 / math.pi} (deg)]' : ''}')
          ..add('sacc', '$sacc (m/s)')
          ..add('cacc',
              '$cacc (rad)${cacc != null ? ' [${cacc * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// GPS Navigation Data builder class
///
class GpsNavDataBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<GpsNavData, GpsNavDataBuilder> {
  _$GpsNavData _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _itow = 0;
  int get itow => _$this._itow;
  set itow(int itow) => _$this._itow = itow;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _heightEll = 0;
  double get heightEll => _$this._heightEll;
  set heightEll(double heightEll) => _$this._heightEll = heightEll;

  double _heightSea = 0;
  double get heightSea => _$this._heightSea;
  set heightSea(double heightSea) => _$this._heightSea = heightSea;

  double _hacc = 0;
  double get hacc => _$this._hacc;
  set hacc(double hacc) => _$this._hacc = hacc;

  double _vacc = 0;
  double get vacc => _$this._vacc;
  set vacc(double vacc) => _$this._vacc = vacc;

  double _velN = 0;
  double get velN => _$this._velN;
  set velN(double velN) => _$this._velN = velN;

  double _velE = 0;
  double get velE => _$this._velE;
  set velE(double velE) => _$this._velE = velE;

  double _velD = 0;
  double get velD => _$this._velD;
  set velD(double velD) => _$this._velD = velD;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  double _gspeed = 0;
  double get gspeed => _$this._gspeed;
  set gspeed(double gspeed) => _$this._gspeed = gspeed;

  double _heading = 0;
  double get heading => _$this._heading;
  set heading(double heading) => _$this._heading = heading;

  double _sacc = 0;
  double get sacc => _$this._sacc;
  set sacc(double sacc) => _$this._sacc = sacc;

  double _cacc = 0;
  double get cacc => _$this._cacc;
  set cacc(double cacc) => _$this._cacc = cacc;

  GpsNavDataBuilder();

  GpsNavDataBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  GpsNavDataBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      GpsNavDataBuilder()..copyFromHeader(headerFrom);

  GpsNavDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _itow = _$v.itow;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _heightEll = _$v.heightEll;
      _heightSea = _$v.heightSea;
      _hacc = _$v.hacc;
      _vacc = _$v.vacc;
      _velN = _$v.velN;
      _velE = _$v.velE;
      _velD = _$v.velD;
      _speed = _$v.speed;
      _gspeed = _$v.gspeed;
      _heading = _$v.heading;
      _sacc = _$v.sacc;
      _cacc = _$v.cacc;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GpsNavData other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$GpsNavData;
  }

  @override
  void update(void Function(GpsNavDataBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GpsNavData build() {
    final _$result = _$v ??
        _$GpsNavData._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            itow: itow ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            heightEll: heightEll ?? 0,
            heightSea: heightSea ?? 0,
            hacc: hacc ?? 0,
            vacc: vacc ?? 0,
            velN: velN ?? 0,
            velE: velE ?? 0,
            velD: velD ?? 0,
            speed: speed ?? 0,
            gspeed: gspeed ?? 0,
            heading: heading ?? 0,
            sacc: sacc ?? 0,
            cacc: cacc ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Servo Position immutable class
///
class _$ServoPosition extends ServoPosition {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double value;

  factory _$ServoPosition([void Function(ServoPositionBuilder b) updates]) =>
      (ServoPositionBuilder()..update(updates)).build();

  _$ServoPosition._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.id,
      this.value})
      : super._();

  @override
  ServoPosition rebuild(void Function(ServoPositionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ServoPositionBuilder toBuilder() => ServoPositionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ServoPosition &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == other.id &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            id?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ServoPosition')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', '$id')
          ..add('value',
              '$value (rad)${value != null ? ' [${value * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// Servo Position builder class
///
class ServoPositionBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ServoPosition, ServoPositionBuilder> {
  _$ServoPosition _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id = 0;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ServoPositionBuilder();

  ServoPositionBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ServoPositionBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ServoPositionBuilder()..copyFromHeader(headerFrom);

  ServoPositionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ServoPosition other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ServoPosition;
  }

  @override
  void update(void Function(ServoPositionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ServoPosition build() {
    final _$result = _$v ??
        _$ServoPosition._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Device State immutable class
///
class _$DeviceState extends DeviceState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;

  factory _$DeviceState([void Function(DeviceStateBuilder b) updates]) =>
      (DeviceStateBuilder()..update(updates)).build();

  _$DeviceState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi})
      : super._();

  @override
  DeviceState rebuild(void Function(DeviceStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DeviceStateBuilder toBuilder() => DeviceStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DeviceState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        (phi == other.phi || phi - other.phi <= 1E-7) &&
        (theta == other.theta || theta - other.theta <= 1E-7) &&
        (psi == other.psi || psi - other.psi <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, timestamp?.hashCode),
                                            src?.hashCode),
                                        srcEnt?.hashCode),
                                    dst?.hashCode),
                                dstEnt?.hashCode),
                            x?.hashCode),
                        y?.hashCode),
                    z?.hashCode),
                phi?.hashCode),
            theta?.hashCode),
        psi?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DeviceState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', '$x (m)')
          ..add('y', '$y (m)')
          ..add('z', '$z (m)')
          ..add('phi',
              '$phi (rad)${phi != null ? ' [${phi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('theta',
              '$theta (rad)${theta != null ? ' [${theta * 180.0 / math.pi} (deg)]' : ''}')
          ..add('psi',
              '$psi (rad)${psi != null ? ' [${psi * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// Device State builder class
///
class DeviceStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<DeviceState, DeviceStateBuilder> {
  _$DeviceState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi = 0;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta = 0;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi = 0;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  DeviceStateBuilder();

  DeviceStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DeviceStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DeviceStateBuilder()..copyFromHeader(headerFrom);

  DeviceStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DeviceState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DeviceState;
  }

  @override
  void update(void Function(DeviceStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DeviceState build() {
    final _$result = _$v ??
        _$DeviceState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Beam Configuration immutable class
///
class _$BeamConfig extends BeamConfig {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double beamWidth;
  @override
  final double beamHeight;

  factory _$BeamConfig([void Function(BeamConfigBuilder b) updates]) =>
      (BeamConfigBuilder()..update(updates)).build();

  _$BeamConfig._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.beamWidth,
      this.beamHeight})
      : super._();

  @override
  BeamConfig rebuild(void Function(BeamConfigBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  BeamConfigBuilder toBuilder() => BeamConfigBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is BeamConfig &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (beamWidth == other.beamWidth || beamWidth - other.beamWidth <= 1E-7) &&
        (beamHeight == other.beamHeight ||
            beamHeight - other.beamHeight <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            beamWidth?.hashCode),
        beamHeight?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('BeamConfig')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('beamWidth',
              '$beamWidth (rad)${beamWidth != null ? ' [${beamWidth * 180.0 / math.pi} (deg)]' : ''}')
          ..add('beamHeight',
              '$beamHeight (rad)${beamHeight != null ? ' [${beamHeight * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// Beam Configuration builder class
///
class BeamConfigBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<BeamConfig, BeamConfigBuilder> {
  _$BeamConfig _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _beamWidth = 0;
  double get beamWidth => _$this._beamWidth;
  set beamWidth(double beamWidth) => _$this._beamWidth = beamWidth;

  double _beamHeight = 0;
  double get beamHeight => _$this._beamHeight;
  set beamHeight(double beamHeight) => _$this._beamHeight = beamHeight;

  BeamConfigBuilder();

  BeamConfigBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  BeamConfigBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      BeamConfigBuilder()..copyFromHeader(headerFrom);

  BeamConfigBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _beamWidth = _$v.beamWidth;
      _beamHeight = _$v.beamHeight;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(BeamConfig other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$BeamConfig;
  }

  @override
  void update(void Function(BeamConfigBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$BeamConfig build() {
    final _$result = _$v ??
        _$BeamConfig._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            beamWidth: beamWidth ?? 0,
            beamHeight: beamHeight ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Data Sanity immutable class
///
class _$DataSanity extends DataSanity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DataSanityEnumSane sane;

  factory _$DataSanity([void Function(DataSanityBuilder b) updates]) =>
      (DataSanityBuilder()..update(updates)).build();

  _$DataSanity._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.sane})
      : super._();

  @override
  DataSanity rebuild(void Function(DataSanityBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DataSanityBuilder toBuilder() => DataSanityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DataSanity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sane == other.sane;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        sane?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DataSanity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sane', '$sane (Enumerated)'))
        .toString();
  }
}

/// Data Sanity builder class
///
class DataSanityBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<DataSanity, DataSanityBuilder> {
  _$DataSanity _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DataSanityEnumSane _sane = DataSanityEnumSane(0);
  DataSanityEnumSane get sane => _$this._sane;
  set sane(DataSanityEnumSane sane) => _$this._sane = sane;

  DataSanityBuilder();

  DataSanityBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DataSanityBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DataSanityBuilder()..copyFromHeader(headerFrom);

  DataSanityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sane = _$v.sane;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DataSanity other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DataSanity;
  }

  @override
  void update(void Function(DataSanityBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DataSanity build() {
    final _$result = _$v ??
        _$DataSanity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sane: sane ?? DataSanityEnumSane(0));
    replace(_$result);
    return _$result;
  }
}

/// Rhodamine Dye immutable class
///
class _$RhodamineDye extends RhodamineDye {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$RhodamineDye([void Function(RhodamineDyeBuilder b) updates]) =>
      (RhodamineDyeBuilder()..update(updates)).build();

  _$RhodamineDye._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  RhodamineDye rebuild(void Function(RhodamineDyeBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RhodamineDyeBuilder toBuilder() => RhodamineDyeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RhodamineDye &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RhodamineDye')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (PPB)'))
        .toString();
  }
}

/// Rhodamine Dye builder class
///
class RhodamineDyeBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<RhodamineDye, RhodamineDyeBuilder> {
  _$RhodamineDye _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RhodamineDyeBuilder();

  RhodamineDyeBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RhodamineDyeBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RhodamineDyeBuilder()..copyFromHeader(headerFrom);

  RhodamineDyeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RhodamineDye other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$RhodamineDye;
  }

  @override
  void update(void Function(RhodamineDyeBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$RhodamineDye build() {
    final _$result = _$v ??
        _$RhodamineDye._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Crude Oil immutable class
///
class _$CrudeOil extends CrudeOil {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$CrudeOil([void Function(CrudeOilBuilder b) updates]) =>
      (CrudeOilBuilder()..update(updates)).build();

  _$CrudeOil._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  CrudeOil rebuild(void Function(CrudeOilBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CrudeOilBuilder toBuilder() => CrudeOilBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CrudeOil &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CrudeOil')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (PPB)'))
        .toString();
  }
}

/// Crude Oil builder class
///
class CrudeOilBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<CrudeOil, CrudeOilBuilder> {
  _$CrudeOil _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  CrudeOilBuilder();

  CrudeOilBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CrudeOilBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CrudeOilBuilder()..copyFromHeader(headerFrom);

  CrudeOilBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CrudeOil other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$CrudeOil;
  }

  @override
  void update(void Function(CrudeOilBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$CrudeOil build() {
    final _$result = _$v ??
        _$CrudeOil._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Fine Oil immutable class
///
class _$FineOil extends FineOil {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$FineOil([void Function(FineOilBuilder b) updates]) =>
      (FineOilBuilder()..update(updates)).build();

  _$FineOil._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  FineOil rebuild(void Function(FineOilBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FineOilBuilder toBuilder() => FineOilBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FineOil &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FineOil')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (PPB)'))
        .toString();
  }
}

/// Fine Oil builder class
///
class FineOilBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<FineOil, FineOilBuilder> {
  _$FineOil _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  FineOilBuilder();

  FineOilBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FineOilBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FineOilBuilder()..copyFromHeader(headerFrom);

  FineOilBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FineOil other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FineOil;
  }

  @override
  void update(void Function(FineOilBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FineOil build() {
    final _$result = _$v ??
        _$FineOil._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Turbidity immutable class
///
class _$Turbidity extends Turbidity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Turbidity([void Function(TurbidityBuilder b) updates]) =>
      (TurbidityBuilder()..update(updates)).build();

  _$Turbidity._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Turbidity rebuild(void Function(TurbidityBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TurbidityBuilder toBuilder() => TurbidityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Turbidity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Turbidity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (NTU)'))
        .toString();
  }
}

/// Turbidity builder class
///
class TurbidityBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Turbidity, TurbidityBuilder> {
  _$Turbidity _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  TurbidityBuilder();

  TurbidityBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TurbidityBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TurbidityBuilder()..copyFromHeader(headerFrom);

  TurbidityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Turbidity other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Turbidity;
  }

  @override
  void update(void Function(TurbidityBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Turbidity build() {
    final _$result = _$v ??
        _$Turbidity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Chlorophyll immutable class
///
class _$Chlorophyll extends Chlorophyll {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Chlorophyll([void Function(ChlorophyllBuilder b) updates]) =>
      (ChlorophyllBuilder()..update(updates)).build();

  _$Chlorophyll._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Chlorophyll rebuild(void Function(ChlorophyllBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ChlorophyllBuilder toBuilder() => ChlorophyllBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Chlorophyll &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Chlorophyll')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (µg/L)'))
        .toString();
  }
}

/// Chlorophyll builder class
///
class ChlorophyllBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Chlorophyll, ChlorophyllBuilder> {
  _$Chlorophyll _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ChlorophyllBuilder();

  ChlorophyllBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ChlorophyllBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ChlorophyllBuilder()..copyFromHeader(headerFrom);

  ChlorophyllBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Chlorophyll other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Chlorophyll;
  }

  @override
  void update(void Function(ChlorophyllBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Chlorophyll build() {
    final _$result = _$v ??
        _$Chlorophyll._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Fluorescein immutable class
///
class _$Fluorescein extends Fluorescein {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Fluorescein([void Function(FluoresceinBuilder b) updates]) =>
      (FluoresceinBuilder()..update(updates)).build();

  _$Fluorescein._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Fluorescein rebuild(void Function(FluoresceinBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FluoresceinBuilder toBuilder() => FluoresceinBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Fluorescein &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Fluorescein')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (PPB)'))
        .toString();
  }
}

/// Fluorescein builder class
///
class FluoresceinBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Fluorescein, FluoresceinBuilder> {
  _$Fluorescein _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  FluoresceinBuilder();

  FluoresceinBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FluoresceinBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FluoresceinBuilder()..copyFromHeader(headerFrom);

  FluoresceinBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Fluorescein other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Fluorescein;
  }

  @override
  void update(void Function(FluoresceinBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Fluorescein build() {
    final _$result = _$v ??
        _$Fluorescein._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Phycocyanin immutable class
///
class _$Phycocyanin extends Phycocyanin {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Phycocyanin([void Function(PhycocyaninBuilder b) updates]) =>
      (PhycocyaninBuilder()..update(updates)).build();

  _$Phycocyanin._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Phycocyanin rebuild(void Function(PhycocyaninBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PhycocyaninBuilder toBuilder() => PhycocyaninBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Phycocyanin &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Phycocyanin')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (PPB)'))
        .toString();
  }
}

/// Phycocyanin builder class
///
class PhycocyaninBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Phycocyanin, PhycocyaninBuilder> {
  _$Phycocyanin _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  PhycocyaninBuilder();

  PhycocyaninBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PhycocyaninBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PhycocyaninBuilder()..copyFromHeader(headerFrom);

  PhycocyaninBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Phycocyanin other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Phycocyanin;
  }

  @override
  void update(void Function(PhycocyaninBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Phycocyanin build() {
    final _$result = _$v ??
        _$Phycocyanin._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Phycoerythrin immutable class
///
class _$Phycoerythrin extends Phycoerythrin {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Phycoerythrin([void Function(PhycoerythrinBuilder b) updates]) =>
      (PhycoerythrinBuilder()..update(updates)).build();

  _$Phycoerythrin._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Phycoerythrin rebuild(void Function(PhycoerythrinBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PhycoerythrinBuilder toBuilder() => PhycoerythrinBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Phycoerythrin &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Phycoerythrin')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (PPB)'))
        .toString();
  }
}

/// Phycoerythrin builder class
///
class PhycoerythrinBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Phycoerythrin, PhycoerythrinBuilder> {
  _$Phycoerythrin _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  PhycoerythrinBuilder();

  PhycoerythrinBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PhycoerythrinBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PhycoerythrinBuilder()..copyFromHeader(headerFrom);

  PhycoerythrinBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Phycoerythrin other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Phycoerythrin;
  }

  @override
  void update(void Function(PhycoerythrinBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Phycoerythrin build() {
    final _$result = _$v ??
        _$Phycoerythrin._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// GPS Fix RTK immutable class
///
class _$GpsFixRtk extends GpsFixRtk {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final GpsFixRtkBitfieldValidity validity;
  @override
  final GpsFixRtkEnumType type;
  @override
  final int tow;
  @override
  final double baseLat;
  @override
  final double baseLon;
  @override
  final double baseHeight;
  @override
  final double n;
  @override
  final double e;
  @override
  final double d;
  @override
  final double vN;
  @override
  final double vE;
  @override
  final double vD;
  @override
  final int satellites;
  @override
  final int iarHyp;
  @override
  final double iarRatio;

  factory _$GpsFixRtk([void Function(GpsFixRtkBuilder b) updates]) =>
      (GpsFixRtkBuilder()..update(updates)).build();

  _$GpsFixRtk._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.validity,
      this.type,
      this.tow,
      this.baseLat,
      this.baseLon,
      this.baseHeight,
      this.n,
      this.e,
      this.d,
      this.vN,
      this.vE,
      this.vD,
      this.satellites,
      this.iarHyp,
      this.iarRatio})
      : super._();

  @override
  GpsFixRtk rebuild(void Function(GpsFixRtkBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GpsFixRtkBuilder toBuilder() => GpsFixRtkBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GpsFixRtk &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        validity == other.validity &&
        type == other.type &&
        tow == other.tow &&
        (baseLat == other.baseLat || baseLat - other.baseLat <= 1E-7) &&
        (baseLon == other.baseLon || baseLon - other.baseLon <= 1E-7) &&
        (baseHeight == other.baseHeight ||
            baseHeight - other.baseHeight <= 1E-7) &&
        (n == other.n || n - other.n <= 1E-7) &&
        (e == other.e || e - other.e <= 1E-7) &&
        (d == other.d || d - other.d <= 1E-7) &&
        (vN == other.vN || vN - other.vN <= 1E-7) &&
        (vE == other.vE || vE - other.vE <= 1E-7) &&
        (vD == other.vD || vD - other.vD <= 1E-7) &&
        satellites == other.satellites &&
        iarHyp == other.iarHyp &&
        (iarRatio == other.iarRatio || iarRatio - other.iarRatio <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc(0, timestamp?.hashCode),
                                                                                src?.hashCode),
                                                                            srcEnt?.hashCode),
                                                                        dst?.hashCode),
                                                                    dstEnt?.hashCode),
                                                                validity?.hashCode),
                                                            type?.hashCode),
                                                        tow?.hashCode),
                                                    baseLat?.hashCode),
                                                baseLon?.hashCode),
                                            baseHeight?.hashCode),
                                        n?.hashCode),
                                    e?.hashCode),
                                d?.hashCode),
                            vN?.hashCode),
                        vE?.hashCode),
                    vD?.hashCode),
                satellites?.hashCode),
            iarHyp?.hashCode),
        iarRatio?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GpsFixRtk')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('validity', '$validity (Bitfield)')
          ..add('type', '$type (Enumerated)')
          ..add('tow', '$tow')
          ..add('baseLat',
              '$baseLat (rad)${baseLat != null ? ' [${baseLat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('baseLon',
              '$baseLon (rad)${baseLon != null ? ' [${baseLon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('baseHeight', '$baseHeight (m)')
          ..add('n', '$n (m)')
          ..add('e', '$e (m)')
          ..add('d', '$d (m)')
          ..add('vN', '$vN (m/s)')
          ..add('vE', '$vE (m/s)')
          ..add('vD', '$vD (m/s)')
          ..add('satellites', '$satellites')
          ..add('iarHyp', '$iarHyp')
          ..add('iarRatio', '$iarRatio'))
        .toString();
  }
}

/// GPS Fix RTK builder class
///
class GpsFixRtkBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<GpsFixRtk, GpsFixRtkBuilder> {
  _$GpsFixRtk _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GpsFixRtkBitfieldValidity _validity = GpsFixRtkBitfieldValidity(0);
  GpsFixRtkBitfieldValidity get validity => _$this._validity;
  set validity(GpsFixRtkBitfieldValidity validity) =>
      _$this._validity = validity;

  GpsFixRtkEnumType _type = GpsFixRtkEnumType(0);
  GpsFixRtkEnumType get type => _$this._type;
  set type(GpsFixRtkEnumType type) => _$this._type = type;

  int _tow = 0;
  int get tow => _$this._tow;
  set tow(int tow) => _$this._tow = tow;

  double _baseLat = 0;
  double get baseLat => _$this._baseLat;
  set baseLat(double baseLat) => _$this._baseLat = baseLat;

  double _baseLon = 0;
  double get baseLon => _$this._baseLon;
  set baseLon(double baseLon) => _$this._baseLon = baseLon;

  double _baseHeight = 0;
  double get baseHeight => _$this._baseHeight;
  set baseHeight(double baseHeight) => _$this._baseHeight = baseHeight;

  double _n = 0;
  double get n => _$this._n;
  set n(double n) => _$this._n = n;

  double _e = 0;
  double get e => _$this._e;
  set e(double e) => _$this._e = e;

  double _d = 0;
  double get d => _$this._d;
  set d(double d) => _$this._d = d;

  double _vN = 0;
  double get vN => _$this._vN;
  set vN(double vN) => _$this._vN = vN;

  double _vE = 0;
  double get vE => _$this._vE;
  set vE(double vE) => _$this._vE = vE;

  double _vD = 0;
  double get vD => _$this._vD;
  set vD(double vD) => _$this._vD = vD;

  int _satellites = 0;
  int get satellites => _$this._satellites;
  set satellites(int satellites) => _$this._satellites = satellites;

  int _iarHyp = 0;
  int get iarHyp => _$this._iarHyp;
  set iarHyp(int iarHyp) => _$this._iarHyp = iarHyp;

  double _iarRatio = 0;
  double get iarRatio => _$this._iarRatio;
  set iarRatio(double iarRatio) => _$this._iarRatio = iarRatio;

  GpsFixRtkBuilder();

  GpsFixRtkBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  GpsFixRtkBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      GpsFixRtkBuilder()..copyFromHeader(headerFrom);

  GpsFixRtkBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _validity = _$v.validity;
      _type = _$v.type;
      _tow = _$v.tow;
      _baseLat = _$v.baseLat;
      _baseLon = _$v.baseLon;
      _baseHeight = _$v.baseHeight;
      _n = _$v.n;
      _e = _$v.e;
      _d = _$v.d;
      _vN = _$v.vN;
      _vE = _$v.vE;
      _vD = _$v.vD;
      _satellites = _$v.satellites;
      _iarHyp = _$v.iarHyp;
      _iarRatio = _$v.iarRatio;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GpsFixRtk other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$GpsFixRtk;
  }

  @override
  void update(void Function(GpsFixRtkBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GpsFixRtk build() {
    final _$result = _$v ??
        _$GpsFixRtk._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            validity: validity ?? GpsFixRtkBitfieldValidity(0),
            type: type ?? GpsFixRtkEnumType(0),
            tow: tow ?? 0,
            baseLat: baseLat ?? 0,
            baseLon: baseLon ?? 0,
            baseHeight: baseHeight ?? 0,
            n: n ?? 0,
            e: e ?? 0,
            d: d ?? 0,
            vN: vN ?? 0,
            vE: vE ?? 0,
            vD: vD ?? 0,
            satellites: satellites ?? 0,
            iarHyp: iarHyp ?? 0,
            iarRatio: iarRatio ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// External Navigation Data immutable class
///
class _$ExternalNavData extends ExternalNavData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EstimatedState state;
  @override
  final ExternalNavDataEnumType type;

  factory _$ExternalNavData(
          [void Function(ExternalNavDataBuilder b) updates]) =>
      (ExternalNavDataBuilder()..update(updates)).build();

  _$ExternalNavData._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.state,
      this.type})
      : super._();

  @override
  ExternalNavData rebuild(void Function(ExternalNavDataBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ExternalNavDataBuilder toBuilder() => ExternalNavDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ExternalNavData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == other.state &&
        type == other.type;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            state?.hashCode),
        type?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ExternalNavData')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', '$state')
          ..add('type', '$type (Enumerated)'))
        .toString();
  }
}

/// External Navigation Data builder class
///
class ExternalNavDataBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<ExternalNavData, ExternalNavDataBuilder> {
  _$ExternalNavData _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EstimatedState _state;
  EstimatedState get state => _$this._state;
  set state(EstimatedState state) => _$this._state = state;

  ExternalNavDataEnumType _type = ExternalNavDataEnumType(0);
  ExternalNavDataEnumType get type => _$this._type;
  set type(ExternalNavDataEnumType type) => _$this._type = type;

  ExternalNavDataBuilder();

  ExternalNavDataBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ExternalNavDataBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ExternalNavDataBuilder()..copyFromHeader(headerFrom);

  ExternalNavDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ExternalNavData other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ExternalNavData;
  }

  @override
  void update(void Function(ExternalNavDataBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ExternalNavData build() {
    final _$result = _$v ??
        _$ExternalNavData._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state,
            type: type ?? ExternalNavDataEnumType(0));
    replace(_$result);
    return _$result;
  }
}

/// Dissolved Oxygen immutable class
///
class _$DissolvedOxygen extends DissolvedOxygen {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DissolvedOxygen(
          [void Function(DissolvedOxygenBuilder b) updates]) =>
      (DissolvedOxygenBuilder()..update(updates)).build();

  _$DissolvedOxygen._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DissolvedOxygen rebuild(void Function(DissolvedOxygenBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DissolvedOxygenBuilder toBuilder() => DissolvedOxygenBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DissolvedOxygen &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DissolvedOxygen')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (µM)'))
        .toString();
  }
}

/// Dissolved Oxygen builder class
///
class DissolvedOxygenBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<DissolvedOxygen, DissolvedOxygenBuilder> {
  _$DissolvedOxygen _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DissolvedOxygenBuilder();

  DissolvedOxygenBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DissolvedOxygenBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DissolvedOxygenBuilder()..copyFromHeader(headerFrom);

  DissolvedOxygenBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DissolvedOxygen other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DissolvedOxygen;
  }

  @override
  void update(void Function(DissolvedOxygenBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DissolvedOxygen build() {
    final _$result = _$v ??
        _$DissolvedOxygen._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Air Saturation immutable class
///
class _$AirSaturation extends AirSaturation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$AirSaturation([void Function(AirSaturationBuilder b) updates]) =>
      (AirSaturationBuilder()..update(updates)).build();

  _$AirSaturation._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  AirSaturation rebuild(void Function(AirSaturationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AirSaturationBuilder toBuilder() => AirSaturationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AirSaturation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AirSaturation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (%)'))
        .toString();
  }
}

/// Air Saturation builder class
///
class AirSaturationBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<AirSaturation, AirSaturationBuilder> {
  _$AirSaturation _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  AirSaturationBuilder();

  AirSaturationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AirSaturationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AirSaturationBuilder()..copyFromHeader(headerFrom);

  AirSaturationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AirSaturation other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$AirSaturation;
  }

  @override
  void update(void Function(AirSaturationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$AirSaturation build() {
    final _$result = _$v ??
        _$AirSaturation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Throttle immutable class
///
class _$Throttle extends Throttle {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Throttle([void Function(ThrottleBuilder b) updates]) =>
      (ThrottleBuilder()..update(updates)).build();

  _$Throttle._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Throttle rebuild(void Function(ThrottleBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ThrottleBuilder toBuilder() => ThrottleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Throttle &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Throttle')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (%)'))
        .toString();
  }
}

/// Throttle builder class
///
class ThrottleBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Throttle, ThrottleBuilder> {
  _$Throttle _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ThrottleBuilder();

  ThrottleBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ThrottleBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ThrottleBuilder()..copyFromHeader(headerFrom);

  ThrottleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Throttle other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Throttle;
  }

  @override
  void update(void Function(ThrottleBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Throttle build() {
    final _$result = _$v ??
        _$Throttle._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// pH immutable class
///
class _$PH extends PH {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$PH([void Function(PHBuilder b) updates]) =>
      (PHBuilder()..update(updates)).build();

  _$PH._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  PH rebuild(void Function(PHBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PHBuilder toBuilder() => PHBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PH &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PH')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value'))
        .toString();
  }
}

/// pH builder class
///
class PHBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<PH, PHBuilder> {
  _$PH _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  PHBuilder();

  PHBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PHBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PHBuilder()..copyFromHeader(headerFrom);

  PHBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PH other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PH;
  }

  @override
  void update(void Function(PHBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PH build() {
    final _$result = _$v ??
        _$PH._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Redox Potential immutable class
///
class _$Redox extends Redox {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$Redox([void Function(RedoxBuilder b) updates]) =>
      (RedoxBuilder()..update(updates)).build();

  _$Redox._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  Redox rebuild(void Function(RedoxBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RedoxBuilder toBuilder() => RedoxBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Redox &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Redox')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (V)'))
        .toString();
  }
}

/// Redox Potential builder class
///
class RedoxBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Redox, RedoxBuilder> {
  _$Redox _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  RedoxBuilder();

  RedoxBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RedoxBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RedoxBuilder()..copyFromHeader(headerFrom);

  RedoxBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Redox other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Redox;
  }

  @override
  void update(void Function(RedoxBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Redox build() {
    final _$result = _$v ??
        _$Redox._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Camera Zoom immutable class
///
class _$CameraZoom extends CameraZoom {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final int zoom;
  @override
  final CameraZoomEnumAction action;

  factory _$CameraZoom([void Function(CameraZoomBuilder b) updates]) =>
      (CameraZoomBuilder()..update(updates)).build();

  _$CameraZoom._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.id,
      this.zoom,
      this.action})
      : super._();

  @override
  CameraZoom rebuild(void Function(CameraZoomBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CameraZoomBuilder toBuilder() => CameraZoomBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CameraZoom &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == other.id &&
        zoom == other.zoom &&
        action == other.action;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                id?.hashCode),
            zoom?.hashCode),
        action?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CameraZoom')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', '$id')
          ..add('zoom', '$zoom')
          ..add('action', '$action (Enumerated)'))
        .toString();
  }
}

/// Camera Zoom builder class
///
class CameraZoomBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<CameraZoom, CameraZoomBuilder> {
  _$CameraZoom _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id = 0;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  int _zoom = 0;
  int get zoom => _$this._zoom;
  set zoom(int zoom) => _$this._zoom = zoom;

  CameraZoomEnumAction _action = CameraZoomEnumAction(0);
  CameraZoomEnumAction get action => _$this._action;
  set action(CameraZoomEnumAction action) => _$this._action = action;

  CameraZoomBuilder();

  CameraZoomBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CameraZoomBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CameraZoomBuilder()..copyFromHeader(headerFrom);

  CameraZoomBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _zoom = _$v.zoom;
      _action = _$v.action;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CameraZoom other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$CameraZoom;
  }

  @override
  void update(void Function(CameraZoomBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$CameraZoom build() {
    final _$result = _$v ??
        _$CameraZoom._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            zoom: zoom ?? 0,
            action: action ?? CameraZoomEnumAction(0));
    replace(_$result);
    return _$result;
  }
}

/// Set Thruster Actuation immutable class
///
class _$SetThrusterActuation extends SetThrusterActuation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double value;

  factory _$SetThrusterActuation(
          [void Function(SetThrusterActuationBuilder b) updates]) =>
      (SetThrusterActuationBuilder()..update(updates)).build();

  _$SetThrusterActuation._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.id,
      this.value})
      : super._();

  @override
  SetThrusterActuation rebuild(
          void Function(SetThrusterActuationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SetThrusterActuationBuilder toBuilder() =>
      SetThrusterActuationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetThrusterActuation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == other.id &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            id?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetThrusterActuation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', '$id')
          ..add('value', '$value'))
        .toString();
  }
}

/// Set Thruster Actuation builder class
///
class SetThrusterActuationBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<SetThrusterActuation,
            SetThrusterActuationBuilder> {
  _$SetThrusterActuation _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id = 0;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SetThrusterActuationBuilder();

  SetThrusterActuationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SetThrusterActuationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SetThrusterActuationBuilder()..copyFromHeader(headerFrom);

  SetThrusterActuationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetThrusterActuation other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SetThrusterActuation;
  }

  @override
  void update(void Function(SetThrusterActuationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SetThrusterActuation build() {
    final _$result = _$v ??
        _$SetThrusterActuation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Set Servo Position immutable class
///
class _$SetServoPosition extends SetServoPosition {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double value;

  factory _$SetServoPosition(
          [void Function(SetServoPositionBuilder b) updates]) =>
      (SetServoPositionBuilder()..update(updates)).build();

  _$SetServoPosition._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.id,
      this.value})
      : super._();

  @override
  SetServoPosition rebuild(void Function(SetServoPositionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SetServoPositionBuilder toBuilder() =>
      SetServoPositionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetServoPosition &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == other.id &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            id?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetServoPosition')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', '$id')
          ..add('value',
              '$value (rad)${value != null ? ' [${value * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// Set Servo Position builder class
///
class SetServoPositionBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<SetServoPosition, SetServoPositionBuilder> {
  _$SetServoPosition _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id = 0;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SetServoPositionBuilder();

  SetServoPositionBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SetServoPositionBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SetServoPositionBuilder()..copyFromHeader(headerFrom);

  SetServoPositionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetServoPosition other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SetServoPosition;
  }

  @override
  void update(void Function(SetServoPositionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SetServoPosition build() {
    final _$result = _$v ??
        _$SetServoPosition._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Set Control Surface Deflection immutable class
///
class _$SetControlSurfaceDeflection extends SetControlSurfaceDeflection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double angle;

  factory _$SetControlSurfaceDeflection(
          [void Function(SetControlSurfaceDeflectionBuilder b) updates]) =>
      (SetControlSurfaceDeflectionBuilder()..update(updates)).build();

  _$SetControlSurfaceDeflection._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.id,
      this.angle})
      : super._();

  @override
  SetControlSurfaceDeflection rebuild(
          void Function(SetControlSurfaceDeflectionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SetControlSurfaceDeflectionBuilder toBuilder() =>
      SetControlSurfaceDeflectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetControlSurfaceDeflection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == other.id &&
        (angle == other.angle || angle - other.angle <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            id?.hashCode),
        angle?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetControlSurfaceDeflection')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', '$id')
          ..add('angle',
              '$angle (rad)${angle != null ? ' [${angle * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// Set Control Surface Deflection builder class
///
class SetControlSurfaceDeflectionBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<SetControlSurfaceDeflection,
            SetControlSurfaceDeflectionBuilder> {
  _$SetControlSurfaceDeflection _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id = 0;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _angle = 0;
  double get angle => _$this._angle;
  set angle(double angle) => _$this._angle = angle;

  SetControlSurfaceDeflectionBuilder();

  SetControlSurfaceDeflectionBuilder.fromHeader(
      ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SetControlSurfaceDeflectionBuilder newInstance(
          [ImcBuilderHeaderPart headerFrom]) =>
      SetControlSurfaceDeflectionBuilder()..copyFromHeader(headerFrom);

  SetControlSurfaceDeflectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _angle = _$v.angle;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetControlSurfaceDeflection other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SetControlSurfaceDeflection;
  }

  @override
  void update(void Function(SetControlSurfaceDeflectionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SetControlSurfaceDeflection build() {
    final _$result = _$v ??
        _$SetControlSurfaceDeflection._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            angle: angle ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Remote Actions Request immutable class
///
class _$RemoteActionsRequest extends RemoteActionsRequest {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final RemoteActionsRequestEnumOp op;
  @override
  final String actions;

  factory _$RemoteActionsRequest(
          [void Function(RemoteActionsRequestBuilder b) updates]) =>
      (RemoteActionsRequestBuilder()..update(updates)).build();

  _$RemoteActionsRequest._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.actions})
      : super._();

  @override
  RemoteActionsRequest rebuild(
          void Function(RemoteActionsRequestBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteActionsRequestBuilder toBuilder() =>
      RemoteActionsRequestBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteActionsRequest &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        actions == other.actions;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            op?.hashCode),
        actions?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteActionsRequest')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('actions', '$actions (TupleList)'))
        .toString();
  }
}

/// Remote Actions Request builder class
///
class RemoteActionsRequestBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<RemoteActionsRequest,
            RemoteActionsRequestBuilder> {
  _$RemoteActionsRequest _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  RemoteActionsRequestEnumOp _op = RemoteActionsRequestEnumOp(0);
  RemoteActionsRequestEnumOp get op => _$this._op;
  set op(RemoteActionsRequestEnumOp op) => _$this._op = op;

  String _actions = '';
  String get actions => _$this._actions;
  set actions(String actions) => _$this._actions = actions;

  RemoteActionsRequestBuilder();

  RemoteActionsRequestBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RemoteActionsRequestBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RemoteActionsRequestBuilder()..copyFromHeader(headerFrom);

  RemoteActionsRequestBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _actions = _$v.actions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteActionsRequest other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteActionsRequest;
  }

  @override
  void update(void Function(RemoteActionsRequestBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteActionsRequest build() {
    final _$result = _$v ??
        _$RemoteActionsRequest._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? RemoteActionsRequestEnumOp(0),
            actions: actions ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Remote Actions immutable class
///
class _$RemoteActions extends RemoteActions {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String actions;

  factory _$RemoteActions([void Function(RemoteActionsBuilder b) updates]) =>
      (RemoteActionsBuilder()..update(updates)).build();

  _$RemoteActions._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.actions})
      : super._();

  @override
  RemoteActions rebuild(void Function(RemoteActionsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteActionsBuilder toBuilder() => RemoteActionsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteActions &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        actions == other.actions;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        actions?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteActions')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('actions', '$actions (TupleList)'))
        .toString();
  }
}

/// Remote Actions builder class
///
class RemoteActionsBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<RemoteActions, RemoteActionsBuilder> {
  _$RemoteActions _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _actions = '';
  String get actions => _$this._actions;
  set actions(String actions) => _$this._actions = actions;

  RemoteActionsBuilder();

  RemoteActionsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RemoteActionsBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RemoteActionsBuilder()..copyFromHeader(headerFrom);

  RemoteActionsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _actions = _$v.actions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteActions other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteActions;
  }

  @override
  void update(void Function(RemoteActionsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteActions build() {
    final _$result = _$v ??
        _$RemoteActions._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            actions: actions ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Button Event immutable class
///
class _$ButtonEvent extends ButtonEvent {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int button;
  @override
  final int value;

  factory _$ButtonEvent([void Function(ButtonEventBuilder b) updates]) =>
      (ButtonEventBuilder()..update(updates)).build();

  _$ButtonEvent._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.button,
      this.value})
      : super._();

  @override
  ButtonEvent rebuild(void Function(ButtonEventBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ButtonEventBuilder toBuilder() => ButtonEventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ButtonEvent &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        button == other.button &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            button?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ButtonEvent')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('button', '$button')
          ..add('value', '$value'))
        .toString();
  }
}

/// Button Event builder class
///
class ButtonEventBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ButtonEvent, ButtonEventBuilder> {
  _$ButtonEvent _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _button = 0;
  int get button => _$this._button;
  set button(int button) => _$this._button = button;

  int _value = 0;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  ButtonEventBuilder();

  ButtonEventBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ButtonEventBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ButtonEventBuilder()..copyFromHeader(headerFrom);

  ButtonEventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _button = _$v.button;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ButtonEvent other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ButtonEvent;
  }

  @override
  void update(void Function(ButtonEventBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ButtonEvent build() {
    final _$result = _$v ??
        _$ButtonEvent._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            button: button ?? 0,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// LCD Control immutable class
///
class _$LcdControl extends LcdControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LcdControlEnumOp op;
  @override
  final String text;

  factory _$LcdControl([void Function(LcdControlBuilder b) updates]) =>
      (LcdControlBuilder()..update(updates)).build();

  _$LcdControl._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.text})
      : super._();

  @override
  LcdControl rebuild(void Function(LcdControlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LcdControlBuilder toBuilder() => LcdControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LcdControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        text == other.text;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            op?.hashCode),
        text?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LcdControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('text', '$text'))
        .toString();
  }
}

/// LCD Control builder class
///
class LcdControlBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<LcdControl, LcdControlBuilder> {
  _$LcdControl _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LcdControlEnumOp _op = LcdControlEnumOp(0);
  LcdControlEnumOp get op => _$this._op;
  set op(LcdControlEnumOp op) => _$this._op = op;

  String _text = '';
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  LcdControlBuilder();

  LcdControlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LcdControlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LcdControlBuilder()..copyFromHeader(headerFrom);

  LcdControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LcdControl other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LcdControl;
  }

  @override
  void update(void Function(LcdControlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LcdControl build() {
    final _$result = _$v ??
        _$LcdControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? LcdControlEnumOp(0),
            text: text ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Power Operation immutable class
///
class _$PowerOperation extends PowerOperation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PowerOperationEnumOp op;
  @override
  final double timeRemain;
  @override
  final double schedTime;

  factory _$PowerOperation([void Function(PowerOperationBuilder b) updates]) =>
      (PowerOperationBuilder()..update(updates)).build();

  _$PowerOperation._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.timeRemain,
      this.schedTime})
      : super._();

  @override
  PowerOperation rebuild(void Function(PowerOperationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PowerOperationBuilder toBuilder() => PowerOperationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PowerOperation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        (timeRemain == other.timeRemain ||
            timeRemain - other.timeRemain <= 1E-7) &&
        (schedTime == other.schedTime || schedTime - other.schedTime <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                op?.hashCode),
            timeRemain?.hashCode),
        schedTime?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PowerOperation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('timeRemain', '$timeRemain (s)')
          ..add('schedTime', '$schedTime (s)'))
        .toString();
  }
}

/// Power Operation builder class
///
class PowerOperationBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<PowerOperation, PowerOperationBuilder> {
  _$PowerOperation _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PowerOperationEnumOp _op = PowerOperationEnumOp(0);
  PowerOperationEnumOp get op => _$this._op;
  set op(PowerOperationEnumOp op) => _$this._op = op;

  double _timeRemain = 0;
  double get timeRemain => _$this._timeRemain;
  set timeRemain(double timeRemain) => _$this._timeRemain = timeRemain;

  double _schedTime = 0;
  double get schedTime => _$this._schedTime;
  set schedTime(double schedTime) => _$this._schedTime = schedTime;

  PowerOperationBuilder();

  PowerOperationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PowerOperationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PowerOperationBuilder()..copyFromHeader(headerFrom);

  PowerOperationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _timeRemain = _$v.timeRemain;
      _schedTime = _$v.schedTime;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PowerOperation other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PowerOperation;
  }

  @override
  void update(void Function(PowerOperationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PowerOperation build() {
    final _$result = _$v ??
        _$PowerOperation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? PowerOperationEnumOp(0),
            timeRemain: timeRemain ?? 0,
            schedTime: schedTime ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Power Channel Control immutable class
///
class _$PowerChannelControl extends PowerChannelControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final PowerChannelControlEnumOp op;
  @override
  final double schedTime;

  factory _$PowerChannelControl(
          [void Function(PowerChannelControlBuilder b) updates]) =>
      (PowerChannelControlBuilder()..update(updates)).build();

  _$PowerChannelControl._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name,
      this.op,
      this.schedTime})
      : super._();

  @override
  PowerChannelControl rebuild(
          void Function(PowerChannelControlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PowerChannelControlBuilder toBuilder() =>
      PowerChannelControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PowerChannelControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name &&
        op == other.op &&
        (schedTime == other.schedTime || schedTime - other.schedTime <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                name?.hashCode),
            op?.hashCode),
        schedTime?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PowerChannelControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name')
          ..add('op', '$op (Enumerated)')
          ..add('schedTime', '$schedTime (s)'))
        .toString();
  }
}

/// Power Channel Control builder class
///
class PowerChannelControlBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<PowerChannelControl,
            PowerChannelControlBuilder> {
  _$PowerChannelControl _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  PowerChannelControlEnumOp _op = PowerChannelControlEnumOp(0);
  PowerChannelControlEnumOp get op => _$this._op;
  set op(PowerChannelControlEnumOp op) => _$this._op = op;

  double _schedTime = 0;
  double get schedTime => _$this._schedTime;
  set schedTime(double schedTime) => _$this._schedTime = schedTime;

  PowerChannelControlBuilder();

  PowerChannelControlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PowerChannelControlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PowerChannelControlBuilder()..copyFromHeader(headerFrom);

  PowerChannelControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _op = _$v.op;
      _schedTime = _$v.schedTime;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PowerChannelControl other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PowerChannelControl;
  }

  @override
  void update(void Function(PowerChannelControlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PowerChannelControl build() {
    final _$result = _$v ??
        _$PowerChannelControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            op: op ?? PowerChannelControlEnumOp(0),
            schedTime: schedTime ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Query Power Channel State immutable class
///
class _$QueryPowerChannelState extends QueryPowerChannelState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  factory _$QueryPowerChannelState(
          [void Function(QueryPowerChannelStateBuilder b) updates]) =>
      (QueryPowerChannelStateBuilder()..update(updates)).build();

  _$QueryPowerChannelState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId})
      : super._();

  @override
  QueryPowerChannelState rebuild(
          void Function(QueryPowerChannelStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryPowerChannelStateBuilder toBuilder() =>
      QueryPowerChannelStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryPowerChannelState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                srcEnt?.hashCode),
            dst?.hashCode),
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryPowerChannelState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Query Power Channel State builder class
///
class QueryPowerChannelStateBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<QueryPowerChannelState,
            QueryPowerChannelStateBuilder> {
  _$QueryPowerChannelState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  QueryPowerChannelStateBuilder();

  QueryPowerChannelStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  QueryPowerChannelStateBuilder newInstance(
          [ImcBuilderHeaderPart headerFrom]) =>
      QueryPowerChannelStateBuilder()..copyFromHeader(headerFrom);

  QueryPowerChannelStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryPowerChannelState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$QueryPowerChannelState;
  }

  @override
  void update(void Function(QueryPowerChannelStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryPowerChannelState build() {
    final _$result = _$v ??
        _$QueryPowerChannelState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Power Channel State immutable class
///
class _$PowerChannelState extends PowerChannelState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final PowerChannelStateEnumState state;

  factory _$PowerChannelState(
          [void Function(PowerChannelStateBuilder b) updates]) =>
      (PowerChannelStateBuilder()..update(updates)).build();

  _$PowerChannelState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name,
      this.state})
      : super._();

  @override
  PowerChannelState rebuild(
          void Function(PowerChannelStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PowerChannelStateBuilder toBuilder() =>
      PowerChannelStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PowerChannelState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name &&
        state == other.state;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            name?.hashCode),
        state?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PowerChannelState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name')
          ..add('state', '$state (Enumerated)'))
        .toString();
  }
}

/// Power Channel State builder class
///
class PowerChannelStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<PowerChannelState, PowerChannelStateBuilder> {
  _$PowerChannelState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  PowerChannelStateEnumState _state = PowerChannelStateEnumState(0);
  PowerChannelStateEnumState get state => _$this._state;
  set state(PowerChannelStateEnumState state) => _$this._state = state;

  PowerChannelStateBuilder();

  PowerChannelStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PowerChannelStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PowerChannelStateBuilder()..copyFromHeader(headerFrom);

  PowerChannelStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _state = _$v.state;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PowerChannelState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PowerChannelState;
  }

  @override
  void update(void Function(PowerChannelStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PowerChannelState build() {
    final _$result = _$v ??
        _$PowerChannelState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            state: state ?? PowerChannelStateEnumState(0));
    replace(_$result);
    return _$result;
  }
}

/// LED Brightness immutable class
///
class _$LedBrightness extends LedBrightness {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final int value;

  factory _$LedBrightness([void Function(LedBrightnessBuilder b) updates]) =>
      (LedBrightnessBuilder()..update(updates)).build();

  _$LedBrightness._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name,
      this.value})
      : super._();

  @override
  LedBrightness rebuild(void Function(LedBrightnessBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LedBrightnessBuilder toBuilder() => LedBrightnessBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LedBrightness &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            name?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LedBrightness')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name')
          ..add('value', '$value'))
        .toString();
  }
}

/// LED Brightness builder class
///
class LedBrightnessBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<LedBrightness, LedBrightnessBuilder> {
  _$LedBrightness _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  int _value = 0;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  LedBrightnessBuilder();

  LedBrightnessBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LedBrightnessBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LedBrightnessBuilder()..copyFromHeader(headerFrom);

  LedBrightnessBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LedBrightness other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LedBrightness;
  }

  @override
  void update(void Function(LedBrightnessBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LedBrightness build() {
    final _$result = _$v ??
        _$LedBrightness._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Query LED Brightness immutable class
///
class _$QueryLedBrightness extends QueryLedBrightness {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;

  factory _$QueryLedBrightness(
          [void Function(QueryLedBrightnessBuilder b) updates]) =>
      (QueryLedBrightnessBuilder()..update(updates)).build();

  _$QueryLedBrightness._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name})
      : super._();

  @override
  QueryLedBrightness rebuild(
          void Function(QueryLedBrightnessBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryLedBrightnessBuilder toBuilder() =>
      QueryLedBrightnessBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryLedBrightness &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        name?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryLedBrightness')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name'))
        .toString();
  }
}

/// Query LED Brightness builder class
///
class QueryLedBrightnessBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<QueryLedBrightness, QueryLedBrightnessBuilder> {
  _$QueryLedBrightness _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  QueryLedBrightnessBuilder();

  QueryLedBrightnessBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  QueryLedBrightnessBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      QueryLedBrightnessBuilder()..copyFromHeader(headerFrom);

  QueryLedBrightnessBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryLedBrightness other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$QueryLedBrightness;
  }

  @override
  void update(void Function(QueryLedBrightnessBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryLedBrightness build() {
    final _$result = _$v ??
        _$QueryLedBrightness._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Set LED Brightness immutable class
///
class _$SetLedBrightness extends SetLedBrightness {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final int value;

  factory _$SetLedBrightness(
          [void Function(SetLedBrightnessBuilder b) updates]) =>
      (SetLedBrightnessBuilder()..update(updates)).build();

  _$SetLedBrightness._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name,
      this.value})
      : super._();

  @override
  SetLedBrightness rebuild(void Function(SetLedBrightnessBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SetLedBrightnessBuilder toBuilder() =>
      SetLedBrightnessBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetLedBrightness &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            name?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetLedBrightness')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name')
          ..add('value', '$value'))
        .toString();
  }
}

/// Set LED Brightness builder class
///
class SetLedBrightnessBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<SetLedBrightness, SetLedBrightnessBuilder> {
  _$SetLedBrightness _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  int _value = 0;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  SetLedBrightnessBuilder();

  SetLedBrightnessBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SetLedBrightnessBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SetLedBrightnessBuilder()..copyFromHeader(headerFrom);

  SetLedBrightnessBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetLedBrightness other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SetLedBrightness;
  }

  @override
  void update(void Function(SetLedBrightnessBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SetLedBrightness build() {
    final _$result = _$v ??
        _$SetLedBrightness._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Set PWM immutable class
///
class _$SetPWM extends SetPWM {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final int period;
  @override
  final int dutyCycle;

  factory _$SetPWM([void Function(SetPWMBuilder b) updates]) =>
      (SetPWMBuilder()..update(updates)).build();

  _$SetPWM._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.id,
      this.period,
      this.dutyCycle})
      : super._();

  @override
  SetPWM rebuild(void Function(SetPWMBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SetPWMBuilder toBuilder() => SetPWMBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetPWM &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == other.id &&
        period == other.period &&
        dutyCycle == other.dutyCycle;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                id?.hashCode),
            period?.hashCode),
        dutyCycle?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetPWM')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', '$id')
          ..add('period', '$period (µs)')
          ..add('dutyCycle', '$dutyCycle (µs)'))
        .toString();
  }
}

/// Set PWM builder class
///
class SetPWMBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SetPWM, SetPWMBuilder> {
  _$SetPWM _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id = 0;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  int _period = 0;
  int get period => _$this._period;
  set period(int period) => _$this._period = period;

  int _dutyCycle = 0;
  int get dutyCycle => _$this._dutyCycle;
  set dutyCycle(int dutyCycle) => _$this._dutyCycle = dutyCycle;

  SetPWMBuilder();

  SetPWMBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SetPWMBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SetPWMBuilder()..copyFromHeader(headerFrom);

  SetPWMBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _period = _$v.period;
      _dutyCycle = _$v.dutyCycle;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetPWM other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SetPWM;
  }

  @override
  void update(void Function(SetPWMBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SetPWM build() {
    final _$result = _$v ??
        _$SetPWM._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            period: period ?? 0,
            dutyCycle: dutyCycle ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// PWM immutable class
///
class _$PWM extends PWM {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final int period;
  @override
  final int dutyCycle;

  factory _$PWM([void Function(PWMBuilder b) updates]) =>
      (PWMBuilder()..update(updates)).build();

  _$PWM._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.id,
      this.period,
      this.dutyCycle})
      : super._();

  @override
  PWM rebuild(void Function(PWMBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PWMBuilder toBuilder() => PWMBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PWM &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == other.id &&
        period == other.period &&
        dutyCycle == other.dutyCycle;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                id?.hashCode),
            period?.hashCode),
        dutyCycle?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PWM')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', '$id')
          ..add('period', '$period (µs)')
          ..add('dutyCycle', '$dutyCycle (µs)'))
        .toString();
  }
}

/// PWM builder class
///
class PWMBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<PWM, PWMBuilder> {
  _$PWM _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id = 0;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  int _period = 0;
  int get period => _$this._period;
  set period(int period) => _$this._period = period;

  int _dutyCycle = 0;
  int get dutyCycle => _$this._dutyCycle;
  set dutyCycle(int dutyCycle) => _$this._dutyCycle = dutyCycle;

  PWMBuilder();

  PWMBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PWMBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PWMBuilder()..copyFromHeader(headerFrom);

  PWMBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _period = _$v.period;
      _dutyCycle = _$v.dutyCycle;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PWM other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PWM;
  }

  @override
  void update(void Function(PWMBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PWM build() {
    final _$result = _$v ??
        _$PWM._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            period: period ?? 0,
            dutyCycle: dutyCycle ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Estimated State immutable class
///
class _$EstimatedState extends EstimatedState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double u;
  @override
  final double v;
  @override
  final double w;
  @override
  final double vx;
  @override
  final double vy;
  @override
  final double vz;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final double depth;
  @override
  final double alt;

  factory _$EstimatedState([void Function(EstimatedStateBuilder b) updates]) =>
      (EstimatedStateBuilder()..update(updates)).build();

  _$EstimatedState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.height,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi,
      this.u,
      this.v,
      this.w,
      this.vx,
      this.vy,
      this.vz,
      this.p,
      this.q,
      this.r,
      this.depth,
      this.alt})
      : super._();

  @override
  EstimatedState rebuild(void Function(EstimatedStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  EstimatedStateBuilder toBuilder() => EstimatedStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EstimatedState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (height == other.height || height - other.height <= 1E-7) &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        (phi == other.phi || phi - other.phi <= 1E-7) &&
        (theta == other.theta || theta - other.theta <= 1E-7) &&
        (psi == other.psi || psi - other.psi <= 1E-7) &&
        (u == other.u || u - other.u <= 1E-7) &&
        (v == other.v || v - other.v <= 1E-7) &&
        (w == other.w || w - other.w <= 1E-7) &&
        (vx == other.vx || vx - other.vx <= 1E-7) &&
        (vy == other.vy || vy - other.vy <= 1E-7) &&
        (vz == other.vz || vz - other.vz <= 1E-7) &&
        (p == other.p || p - other.p <= 1E-7) &&
        (q == other.q || q - other.q <= 1E-7) &&
        (r == other.r || r - other.r <= 1E-7) &&
        (depth == other.depth || depth - other.depth <= 1E-7) &&
        (alt == other.alt || alt - other.alt <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc(0, timestamp?.hashCode), src?.hashCode), srcEnt?.hashCode), dst?.hashCode), dstEnt?.hashCode), lat?.hashCode),
                                                                                lon?.hashCode),
                                                                            height?.hashCode),
                                                                        x?.hashCode),
                                                                    y?.hashCode),
                                                                z?.hashCode),
                                                            phi?.hashCode),
                                                        theta?.hashCode),
                                                    psi?.hashCode),
                                                u?.hashCode),
                                            v?.hashCode),
                                        w?.hashCode),
                                    vx?.hashCode),
                                vy?.hashCode),
                            vz?.hashCode),
                        p?.hashCode),
                    q?.hashCode),
                r?.hashCode),
            depth?.hashCode),
        alt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EstimatedState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('height', '$height (m)')
          ..add('x', '$x (m)')
          ..add('y', '$y (m)')
          ..add('z', '$z (m)')
          ..add('phi',
              '$phi (rad)${phi != null ? ' [${phi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('theta',
              '$theta (rad)${theta != null ? ' [${theta * 180.0 / math.pi} (deg)]' : ''}')
          ..add('psi',
              '$psi (rad)${psi != null ? ' [${psi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('u', '$u (m/s)')
          ..add('v', '$v (m/s)')
          ..add('w', '$w (m/s)')
          ..add('vx', '$vx (m/s)')
          ..add('vy', '$vy (m/s)')
          ..add('vz', '$vz (m/s)')
          ..add('p',
              '$p (rad/s)${p != null ? ' [${p * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('q',
              '$q (rad/s)${q != null ? ' [${q * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('r',
              '$r (rad/s)${r != null ? ' [${r * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('depth', '$depth (m)')
          ..add('alt', '$alt (m)'))
        .toString();
  }
}

/// Estimated State builder class
///
class EstimatedStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<EstimatedState, EstimatedStateBuilder> {
  _$EstimatedState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height = 0;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi = 0;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta = 0;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi = 0;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _u = 0;
  double get u => _$this._u;
  set u(double u) => _$this._u = u;

  double _v = 0;
  double get v => _$this._v;
  set v(double v) => _$this._v = v;

  double _w = 0;
  double get w => _$this._w;
  set w(double w) => _$this._w = w;

  double _vx = 0;
  double get vx => _$this._vx;
  set vx(double vx) => _$this._vx = vx;

  double _vy = 0;
  double get vy => _$this._vy;
  set vy(double vy) => _$this._vy = vy;

  double _vz = 0;
  double get vz => _$this._vz;
  set vz(double vz) => _$this._vz = vz;

  double _p = 0;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q = 0;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r = 0;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  double _depth = 0;
  double get depth => _$this._depth;
  set depth(double depth) => _$this._depth = depth;

  double _alt = 0;
  double get alt => _$this._alt;
  set alt(double alt) => _$this._alt = alt;

  EstimatedStateBuilder();

  EstimatedStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  EstimatedStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      EstimatedStateBuilder()..copyFromHeader(headerFrom);

  EstimatedStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _u = _$v.u;
      _v = _$v.v;
      _w = _$v.w;
      _vx = _$v.vx;
      _vy = _$v.vy;
      _vz = _$v.vz;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _depth = _$v.depth;
      _alt = _$v.alt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EstimatedState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$EstimatedState;
  }

  @override
  void update(void Function(EstimatedStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$EstimatedState build() {
    final _$result = _$v ??
        _$EstimatedState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            height: height ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0,
            u: u ?? 0,
            v: v ?? 0,
            w: w ?? 0,
            vx: vx ?? 0,
            vy: vy ?? 0,
            vz: vz ?? 0,
            p: p ?? 0,
            q: q ?? 0,
            r: r ?? 0,
            depth: depth ?? 0,
            alt: alt ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Estimated Stream Velocity immutable class
///
class _$EstimatedStreamVelocity extends EstimatedStreamVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$EstimatedStreamVelocity(
          [void Function(EstimatedStreamVelocityBuilder b) updates]) =>
      (EstimatedStreamVelocityBuilder()..update(updates)).build();

  _$EstimatedStreamVelocity._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  EstimatedStreamVelocity rebuild(
          void Function(EstimatedStreamVelocityBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  EstimatedStreamVelocityBuilder toBuilder() =>
      EstimatedStreamVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EstimatedStreamVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                x?.hashCode),
            y?.hashCode),
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EstimatedStreamVelocity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', '$x (m/s)')
          ..add('y', '$y (m/s)')
          ..add('z', '$z (m/s)'))
        .toString();
  }
}

/// Estimated Stream Velocity builder class
///
class EstimatedStreamVelocityBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<EstimatedStreamVelocity,
            EstimatedStreamVelocityBuilder> {
  _$EstimatedStreamVelocity _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  EstimatedStreamVelocityBuilder();

  EstimatedStreamVelocityBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  EstimatedStreamVelocityBuilder newInstance(
          [ImcBuilderHeaderPart headerFrom]) =>
      EstimatedStreamVelocityBuilder()..copyFromHeader(headerFrom);

  EstimatedStreamVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EstimatedStreamVelocity other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$EstimatedStreamVelocity;
  }

  @override
  void update(void Function(EstimatedStreamVelocityBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$EstimatedStreamVelocity build() {
    final _$result = _$v ??
        _$EstimatedStreamVelocity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Indicated Speed immutable class
///
class _$IndicatedSpeed extends IndicatedSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$IndicatedSpeed([void Function(IndicatedSpeedBuilder b) updates]) =>
      (IndicatedSpeedBuilder()..update(updates)).build();

  _$IndicatedSpeed._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  IndicatedSpeed rebuild(void Function(IndicatedSpeedBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  IndicatedSpeedBuilder toBuilder() => IndicatedSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IndicatedSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IndicatedSpeed')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (m/s)'))
        .toString();
  }
}

/// Indicated Speed builder class
///
class IndicatedSpeedBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<IndicatedSpeed, IndicatedSpeedBuilder> {
  _$IndicatedSpeed _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  IndicatedSpeedBuilder();

  IndicatedSpeedBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  IndicatedSpeedBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      IndicatedSpeedBuilder()..copyFromHeader(headerFrom);

  IndicatedSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IndicatedSpeed other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$IndicatedSpeed;
  }

  @override
  void update(void Function(IndicatedSpeedBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$IndicatedSpeed build() {
    final _$result = _$v ??
        _$IndicatedSpeed._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// True Speed immutable class
///
class _$TrueSpeed extends TrueSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$TrueSpeed([void Function(TrueSpeedBuilder b) updates]) =>
      (TrueSpeedBuilder()..update(updates)).build();

  _$TrueSpeed._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  TrueSpeed rebuild(void Function(TrueSpeedBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TrueSpeedBuilder toBuilder() => TrueSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrueSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrueSpeed')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (m/s)'))
        .toString();
  }
}

/// True Speed builder class
///
class TrueSpeedBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<TrueSpeed, TrueSpeedBuilder> {
  _$TrueSpeed _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  TrueSpeedBuilder();

  TrueSpeedBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TrueSpeedBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TrueSpeedBuilder()..copyFromHeader(headerFrom);

  TrueSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrueSpeed other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TrueSpeed;
  }

  @override
  void update(void Function(TrueSpeedBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TrueSpeed build() {
    final _$result = _$v ??
        _$TrueSpeed._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Navigation Uncertainty immutable class
///
class _$NavigationUncertainty extends NavigationUncertainty {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final double u;
  @override
  final double v;
  @override
  final double w;
  @override
  final double biasPsi;
  @override
  final double biasR;

  factory _$NavigationUncertainty(
          [void Function(NavigationUncertaintyBuilder b) updates]) =>
      (NavigationUncertaintyBuilder()..update(updates)).build();

  _$NavigationUncertainty._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi,
      this.p,
      this.q,
      this.r,
      this.u,
      this.v,
      this.w,
      this.biasPsi,
      this.biasR})
      : super._();

  @override
  NavigationUncertainty rebuild(
          void Function(NavigationUncertaintyBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  NavigationUncertaintyBuilder toBuilder() =>
      NavigationUncertaintyBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is NavigationUncertainty &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        (phi == other.phi || phi - other.phi <= 1E-7) &&
        (theta == other.theta || theta - other.theta <= 1E-7) &&
        (psi == other.psi || psi - other.psi <= 1E-7) &&
        (p == other.p || p - other.p <= 1E-7) &&
        (q == other.q || q - other.q <= 1E-7) &&
        (r == other.r || r - other.r <= 1E-7) &&
        (u == other.u || u - other.u <= 1E-7) &&
        (v == other.v || v - other.v <= 1E-7) &&
        (w == other.w || w - other.w <= 1E-7) &&
        (biasPsi == other.biasPsi || biasPsi - other.biasPsi <= 1E-7) &&
        (biasR == other.biasR || biasR - other.biasR <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc(0,
                                                                                timestamp?.hashCode),
                                                                            src?.hashCode),
                                                                        srcEnt?.hashCode),
                                                                    dst?.hashCode),
                                                                dstEnt?.hashCode),
                                                            x?.hashCode),
                                                        y?.hashCode),
                                                    z?.hashCode),
                                                phi?.hashCode),
                                            theta?.hashCode),
                                        psi?.hashCode),
                                    p?.hashCode),
                                q?.hashCode),
                            r?.hashCode),
                        u?.hashCode),
                    v?.hashCode),
                w?.hashCode),
            biasPsi?.hashCode),
        biasR?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('NavigationUncertainty')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', '$x (m)')
          ..add('y', '$y (m)')
          ..add('z', '$z (m)')
          ..add('phi',
              '$phi (rad)${phi != null ? ' [${phi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('theta',
              '$theta (rad)${theta != null ? ' [${theta * 180.0 / math.pi} (deg)]' : ''}')
          ..add('psi',
              '$psi (rad)${psi != null ? ' [${psi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('p',
              '$p (rad/s)${p != null ? ' [${p * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('q',
              '$q (rad/s)${q != null ? ' [${q * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('r',
              '$r (rad/s)${r != null ? ' [${r * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('u', '$u (m/s)')
          ..add('v', '$v (m/s)')
          ..add('w', '$w (m/s)')
          ..add('biasPsi',
              '$biasPsi (rad)${biasPsi != null ? ' [${biasPsi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('biasR',
              '$biasR (rad/s)${biasR != null ? ' [${biasR * 180.0 / math.pi} (deg/s)]' : ''}'))
        .toString();
  }
}

/// Navigation Uncertainty builder class
///
class NavigationUncertaintyBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<NavigationUncertainty,
            NavigationUncertaintyBuilder> {
  _$NavigationUncertainty _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi = 0;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta = 0;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi = 0;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _p = 0;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q = 0;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r = 0;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  double _u = 0;
  double get u => _$this._u;
  set u(double u) => _$this._u = u;

  double _v = 0;
  double get v => _$this._v;
  set v(double v) => _$this._v = v;

  double _w = 0;
  double get w => _$this._w;
  set w(double w) => _$this._w = w;

  double _biasPsi = 0;
  double get biasPsi => _$this._biasPsi;
  set biasPsi(double biasPsi) => _$this._biasPsi = biasPsi;

  double _biasR = 0;
  double get biasR => _$this._biasR;
  set biasR(double biasR) => _$this._biasR = biasR;

  NavigationUncertaintyBuilder();

  NavigationUncertaintyBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  NavigationUncertaintyBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      NavigationUncertaintyBuilder()..copyFromHeader(headerFrom);

  NavigationUncertaintyBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _u = _$v.u;
      _v = _$v.v;
      _w = _$v.w;
      _biasPsi = _$v.biasPsi;
      _biasR = _$v.biasR;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(NavigationUncertainty other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$NavigationUncertainty;
  }

  @override
  void update(void Function(NavigationUncertaintyBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$NavigationUncertainty build() {
    final _$result = _$v ??
        _$NavigationUncertainty._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0,
            p: p ?? 0,
            q: q ?? 0,
            r: r ?? 0,
            u: u ?? 0,
            v: v ?? 0,
            w: w ?? 0,
            biasPsi: biasPsi ?? 0,
            biasR: biasR ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Navigation Data immutable class
///
class _$NavigationData extends NavigationData {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double biasPsi;
  @override
  final double biasR;
  @override
  final double cog;
  @override
  final double cyaw;
  @override
  final double lblRejLevel;
  @override
  final double gpsRejLevel;
  @override
  final double customX;
  @override
  final double customY;
  @override
  final double customZ;

  factory _$NavigationData([void Function(NavigationDataBuilder b) updates]) =>
      (NavigationDataBuilder()..update(updates)).build();

  _$NavigationData._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.biasPsi,
      this.biasR,
      this.cog,
      this.cyaw,
      this.lblRejLevel,
      this.gpsRejLevel,
      this.customX,
      this.customY,
      this.customZ})
      : super._();

  @override
  NavigationData rebuild(void Function(NavigationDataBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  NavigationDataBuilder toBuilder() => NavigationDataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is NavigationData &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (biasPsi == other.biasPsi || biasPsi - other.biasPsi <= 1E-7) &&
        (biasR == other.biasR || biasR - other.biasR <= 1E-7) &&
        (cog == other.cog || cog - other.cog <= 1E-7) &&
        (cyaw == other.cyaw || cyaw - other.cyaw <= 1E-7) &&
        (lblRejLevel == other.lblRejLevel ||
            lblRejLevel - other.lblRejLevel <= 1E-7) &&
        (gpsRejLevel == other.gpsRejLevel ||
            gpsRejLevel - other.gpsRejLevel <= 1E-7) &&
        (customX == other.customX || customX - other.customX <= 1E-7) &&
        (customY == other.customY || customY - other.customY <= 1E-7) &&
        (customZ == other.customZ || customZ - other.customZ <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            0,
                                                            timestamp
                                                                ?.hashCode),
                                                        src?.hashCode),
                                                    srcEnt?.hashCode),
                                                dst?.hashCode),
                                            dstEnt?.hashCode),
                                        biasPsi?.hashCode),
                                    biasR?.hashCode),
                                cog?.hashCode),
                            cyaw?.hashCode),
                        lblRejLevel?.hashCode),
                    gpsRejLevel?.hashCode),
                customX?.hashCode),
            customY?.hashCode),
        customZ?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('NavigationData')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('biasPsi',
              '$biasPsi (rad)${biasPsi != null ? ' [${biasPsi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('biasR',
              '$biasR (rad/s)${biasR != null ? ' [${biasR * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('cog',
              '$cog (rad)${cog != null ? ' [${cog * 180.0 / math.pi} (deg)]' : ''}')
          ..add('cyaw',
              '$cyaw (rad)${cyaw != null ? ' [${cyaw * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lblRejLevel', '$lblRejLevel')
          ..add('gpsRejLevel', '$gpsRejLevel')
          ..add('customX', '$customX')
          ..add('customY', '$customY')
          ..add('customZ', '$customZ'))
        .toString();
  }
}

/// Navigation Data builder class
///
class NavigationDataBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<NavigationData, NavigationDataBuilder> {
  _$NavigationData _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _biasPsi = 0;
  double get biasPsi => _$this._biasPsi;
  set biasPsi(double biasPsi) => _$this._biasPsi = biasPsi;

  double _biasR = 0;
  double get biasR => _$this._biasR;
  set biasR(double biasR) => _$this._biasR = biasR;

  double _cog = 0;
  double get cog => _$this._cog;
  set cog(double cog) => _$this._cog = cog;

  double _cyaw = 0;
  double get cyaw => _$this._cyaw;
  set cyaw(double cyaw) => _$this._cyaw = cyaw;

  double _lblRejLevel = 0;
  double get lblRejLevel => _$this._lblRejLevel;
  set lblRejLevel(double lblRejLevel) => _$this._lblRejLevel = lblRejLevel;

  double _gpsRejLevel = 0;
  double get gpsRejLevel => _$this._gpsRejLevel;
  set gpsRejLevel(double gpsRejLevel) => _$this._gpsRejLevel = gpsRejLevel;

  double _customX = 0;
  double get customX => _$this._customX;
  set customX(double customX) => _$this._customX = customX;

  double _customY = 0;
  double get customY => _$this._customY;
  set customY(double customY) => _$this._customY = customY;

  double _customZ = 0;
  double get customZ => _$this._customZ;
  set customZ(double customZ) => _$this._customZ = customZ;

  NavigationDataBuilder();

  NavigationDataBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  NavigationDataBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      NavigationDataBuilder()..copyFromHeader(headerFrom);

  NavigationDataBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _biasPsi = _$v.biasPsi;
      _biasR = _$v.biasR;
      _cog = _$v.cog;
      _cyaw = _$v.cyaw;
      _lblRejLevel = _$v.lblRejLevel;
      _gpsRejLevel = _$v.gpsRejLevel;
      _customX = _$v.customX;
      _customY = _$v.customY;
      _customZ = _$v.customZ;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(NavigationData other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$NavigationData;
  }

  @override
  void update(void Function(NavigationDataBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$NavigationData build() {
    final _$result = _$v ??
        _$NavigationData._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            biasPsi: biasPsi ?? 0,
            biasR: biasR ?? 0,
            cog: cog ?? 0,
            cyaw: cyaw ?? 0,
            lblRejLevel: lblRejLevel ?? 0,
            gpsRejLevel: gpsRejLevel ?? 0,
            customX: customX ?? 0,
            customY: customY ?? 0,
            customZ: customZ ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// GPS Fix Rejection immutable class
///
class _$GpsFixRejection extends GpsFixRejection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double utcTime;
  @override
  final GpsFixRejectionEnumReason reason;

  factory _$GpsFixRejection(
          [void Function(GpsFixRejectionBuilder b) updates]) =>
      (GpsFixRejectionBuilder()..update(updates)).build();

  _$GpsFixRejection._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.utcTime,
      this.reason})
      : super._();

  @override
  GpsFixRejection rebuild(void Function(GpsFixRejectionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GpsFixRejectionBuilder toBuilder() => GpsFixRejectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GpsFixRejection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (utcTime == other.utcTime || utcTime - other.utcTime <= 1E-7) &&
        reason == other.reason;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            utcTime?.hashCode),
        reason?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GpsFixRejection')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('utcTime', '$utcTime (s)')
          ..add('reason', '$reason (Enumerated)'))
        .toString();
  }
}

/// GPS Fix Rejection builder class
///
class GpsFixRejectionBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<GpsFixRejection, GpsFixRejectionBuilder> {
  _$GpsFixRejection _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _utcTime = 0;
  double get utcTime => _$this._utcTime;
  set utcTime(double utcTime) => _$this._utcTime = utcTime;

  GpsFixRejectionEnumReason _reason = GpsFixRejectionEnumReason(0);
  GpsFixRejectionEnumReason get reason => _$this._reason;
  set reason(GpsFixRejectionEnumReason reason) => _$this._reason = reason;

  GpsFixRejectionBuilder();

  GpsFixRejectionBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  GpsFixRejectionBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      GpsFixRejectionBuilder()..copyFromHeader(headerFrom);

  GpsFixRejectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _utcTime = _$v.utcTime;
      _reason = _$v.reason;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GpsFixRejection other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$GpsFixRejection;
  }

  @override
  void update(void Function(GpsFixRejectionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GpsFixRejection build() {
    final _$result = _$v ??
        _$GpsFixRejection._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            utcTime: utcTime ?? 0,
            reason: reason ?? GpsFixRejectionEnumReason(0));
    replace(_$result);
    return _$result;
  }
}

/// LBL Range Acceptance immutable class
///
class _$LblRangeAcceptance extends LblRangeAcceptance {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int id;
  @override
  final double range;
  @override
  final LblRangeAcceptanceEnumAcceptance acceptance;

  factory _$LblRangeAcceptance(
          [void Function(LblRangeAcceptanceBuilder b) updates]) =>
      (LblRangeAcceptanceBuilder()..update(updates)).build();

  _$LblRangeAcceptance._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.id,
      this.range,
      this.acceptance})
      : super._();

  @override
  LblRangeAcceptance rebuild(
          void Function(LblRangeAcceptanceBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LblRangeAcceptanceBuilder toBuilder() =>
      LblRangeAcceptanceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblRangeAcceptance &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == other.id &&
        (range == other.range || range - other.range <= 1E-7) &&
        acceptance == other.acceptance;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                id?.hashCode),
            range?.hashCode),
        acceptance?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblRangeAcceptance')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', '$id')
          ..add('range', '$range (m)')
          ..add('acceptance', '$acceptance (Enumerated)'))
        .toString();
  }
}

/// LBL Range Acceptance builder class
///
class LblRangeAcceptanceBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<LblRangeAcceptance, LblRangeAcceptanceBuilder> {
  _$LblRangeAcceptance _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _id = 0;
  int get id => _$this._id;
  set id(int id) => _$this._id = id;

  double _range = 0;
  double get range => _$this._range;
  set range(double range) => _$this._range = range;

  LblRangeAcceptanceEnumAcceptance _acceptance =
      LblRangeAcceptanceEnumAcceptance(0);
  LblRangeAcceptanceEnumAcceptance get acceptance => _$this._acceptance;
  set acceptance(LblRangeAcceptanceEnumAcceptance acceptance) =>
      _$this._acceptance = acceptance;

  LblRangeAcceptanceBuilder();

  LblRangeAcceptanceBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LblRangeAcceptanceBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LblRangeAcceptanceBuilder()..copyFromHeader(headerFrom);

  LblRangeAcceptanceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _range = _$v.range;
      _acceptance = _$v.acceptance;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblRangeAcceptance other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LblRangeAcceptance;
  }

  @override
  void update(void Function(LblRangeAcceptanceBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LblRangeAcceptance build() {
    final _$result = _$v ??
        _$LblRangeAcceptance._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? 0,
            range: range ?? 0,
            acceptance: acceptance ?? LblRangeAcceptanceEnumAcceptance(0));
    replace(_$result);
    return _$result;
  }
}

/// DVL Rejection immutable class
///
class _$DvlRejection extends DvlRejection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final DvlRejectionBitfieldType type;
  @override
  final DvlRejectionEnumReason reason;
  @override
  final double value;
  @override
  final double timestep;

  factory _$DvlRejection([void Function(DvlRejectionBuilder b) updates]) =>
      (DvlRejectionBuilder()..update(updates)).build();

  _$DvlRejection._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type,
      this.reason,
      this.value,
      this.timestep})
      : super._();

  @override
  DvlRejection rebuild(void Function(DvlRejectionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DvlRejectionBuilder toBuilder() => DvlRejectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DvlRejection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type &&
        reason == other.reason &&
        (value == other.value || value - other.value <= 1E-7) &&
        (timestep == other.timestep || timestep - other.timestep <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    type?.hashCode),
                reason?.hashCode),
            value?.hashCode),
        timestep?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DvlRejection')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Bitfield)')
          ..add('reason', '$reason (Enumerated)')
          ..add('value', '$value (m/s)')
          ..add('timestep', '$timestep (s)'))
        .toString();
  }
}

/// DVL Rejection builder class
///
class DvlRejectionBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<DvlRejection, DvlRejectionBuilder> {
  _$DvlRejection _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  DvlRejectionBitfieldType _type = DvlRejectionBitfieldType(0);
  DvlRejectionBitfieldType get type => _$this._type;
  set type(DvlRejectionBitfieldType type) => _$this._type = type;

  DvlRejectionEnumReason _reason = DvlRejectionEnumReason(0);
  DvlRejectionEnumReason get reason => _$this._reason;
  set reason(DvlRejectionEnumReason reason) => _$this._reason = reason;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  double _timestep = 0;
  double get timestep => _$this._timestep;
  set timestep(double timestep) => _$this._timestep = timestep;

  DvlRejectionBuilder();

  DvlRejectionBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DvlRejectionBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DvlRejectionBuilder()..copyFromHeader(headerFrom);

  DvlRejectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _reason = _$v.reason;
      _value = _$v.value;
      _timestep = _$v.timestep;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DvlRejection other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DvlRejection;
  }

  @override
  void update(void Function(DvlRejectionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DvlRejection build() {
    final _$result = _$v ??
        _$DvlRejection._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? DvlRejectionBitfieldType(0),
            reason: reason ?? DvlRejectionEnumReason(0),
            value: value ?? 0,
            timestep: timestep ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// LBL Beacon Position Estimate immutable class
///
class _$LblEstimate extends LblEstimate {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final LblBeacon beacon;
  @override
  final double x;
  @override
  final double y;
  @override
  final double varX;
  @override
  final double varY;
  @override
  final double distance;

  factory _$LblEstimate([void Function(LblEstimateBuilder b) updates]) =>
      (LblEstimateBuilder()..update(updates)).build();

  _$LblEstimate._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.beacon,
      this.x,
      this.y,
      this.varX,
      this.varY,
      this.distance})
      : super._();

  @override
  LblEstimate rebuild(void Function(LblEstimateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LblEstimateBuilder toBuilder() => LblEstimateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LblEstimate &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        beacon == other.beacon &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (varX == other.varX || varX - other.varX <= 1E-7) &&
        (varY == other.varY || varY - other.varY <= 1E-7) &&
        (distance == other.distance || distance - other.distance <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, timestamp?.hashCode),
                                            src?.hashCode),
                                        srcEnt?.hashCode),
                                    dst?.hashCode),
                                dstEnt?.hashCode),
                            beacon?.hashCode),
                        x?.hashCode),
                    y?.hashCode),
                varX?.hashCode),
            varY?.hashCode),
        distance?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LblEstimate')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('beacon', '$beacon')
          ..add('x', '$x (m)')
          ..add('y', '$y (m)')
          ..add('varX', '$varX (m)')
          ..add('varY', '$varY (m)')
          ..add('distance', '$distance (m)'))
        .toString();
  }
}

/// LBL Beacon Position Estimate builder class
///
class LblEstimateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<LblEstimate, LblEstimateBuilder> {
  _$LblEstimate _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  LblBeacon _beacon;
  LblBeacon get beacon => _$this._beacon;
  set beacon(LblBeacon beacon) => _$this._beacon = beacon;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _varX = 0;
  double get varX => _$this._varX;
  set varX(double varX) => _$this._varX = varX;

  double _varY = 0;
  double get varY => _$this._varY;
  set varY(double varY) => _$this._varY = varY;

  double _distance = 0;
  double get distance => _$this._distance;
  set distance(double distance) => _$this._distance = distance;

  LblEstimateBuilder();

  LblEstimateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LblEstimateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LblEstimateBuilder()..copyFromHeader(headerFrom);

  LblEstimateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _beacon = _$v.beacon;
      _x = _$v.x;
      _y = _$v.y;
      _varX = _$v.varX;
      _varY = _$v.varY;
      _distance = _$v.distance;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LblEstimate other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LblEstimate;
  }

  @override
  void update(void Function(LblEstimateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LblEstimate build() {
    final _$result = _$v ??
        _$LblEstimate._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            beacon: beacon,
            x: x ?? 0,
            y: y ?? 0,
            varX: varX ?? 0,
            varY: varY ?? 0,
            distance: distance ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Alignment State immutable class
///
class _$AlignmentState extends AlignmentState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final AlignmentStateEnumState state;

  factory _$AlignmentState([void Function(AlignmentStateBuilder b) updates]) =>
      (AlignmentStateBuilder()..update(updates)).build();

  _$AlignmentState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.state})
      : super._();

  @override
  AlignmentState rebuild(void Function(AlignmentStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AlignmentStateBuilder toBuilder() => AlignmentStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AlignmentState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == other.state;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        state?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AlignmentState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', '$state (Enumerated)'))
        .toString();
  }
}

/// Alignment State builder class
///
class AlignmentStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<AlignmentState, AlignmentStateBuilder> {
  _$AlignmentState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AlignmentStateEnumState _state = AlignmentStateEnumState(0);
  AlignmentStateEnumState get state => _$this._state;
  set state(AlignmentStateEnumState state) => _$this._state = state;

  AlignmentStateBuilder();

  AlignmentStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AlignmentStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AlignmentStateBuilder()..copyFromHeader(headerFrom);

  AlignmentStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AlignmentState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$AlignmentState;
  }

  @override
  void update(void Function(AlignmentStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$AlignmentState build() {
    final _$result = _$v ??
        _$AlignmentState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? AlignmentStateEnumState(0));
    replace(_$result);
    return _$result;
  }
}

/// GroupStreamVelocity immutable class
///
class _$GroupStreamVelocity extends GroupStreamVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$GroupStreamVelocity(
          [void Function(GroupStreamVelocityBuilder b) updates]) =>
      (GroupStreamVelocityBuilder()..update(updates)).build();

  _$GroupStreamVelocity._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  GroupStreamVelocity rebuild(
          void Function(GroupStreamVelocityBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GroupStreamVelocityBuilder toBuilder() =>
      GroupStreamVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GroupStreamVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                x?.hashCode),
            y?.hashCode),
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GroupStreamVelocity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', '$x (m/s)')
          ..add('y', '$y (m/s)')
          ..add('z', '$z (m/s)'))
        .toString();
  }
}

/// GroupStreamVelocity builder class
///
class GroupStreamVelocityBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<GroupStreamVelocity,
            GroupStreamVelocityBuilder> {
  _$GroupStreamVelocity _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  GroupStreamVelocityBuilder();

  GroupStreamVelocityBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  GroupStreamVelocityBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      GroupStreamVelocityBuilder()..copyFromHeader(headerFrom);

  GroupStreamVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GroupStreamVelocity other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$GroupStreamVelocity;
  }

  @override
  void update(void Function(GroupStreamVelocityBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GroupStreamVelocity build() {
    final _$result = _$v ??
        _$GroupStreamVelocity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Airflow immutable class
///
class _$Airflow extends Airflow {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double va;
  @override
  final double aoa;
  @override
  final double ssa;

  factory _$Airflow([void Function(AirflowBuilder b) updates]) =>
      (AirflowBuilder()..update(updates)).build();

  _$Airflow._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.va,
      this.aoa,
      this.ssa})
      : super._();

  @override
  Airflow rebuild(void Function(AirflowBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AirflowBuilder toBuilder() => AirflowBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Airflow &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (va == other.va || va - other.va <= 1E-7) &&
        (aoa == other.aoa || aoa - other.aoa <= 1E-7) &&
        (ssa == other.ssa || ssa - other.ssa <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                va?.hashCode),
            aoa?.hashCode),
        ssa?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Airflow')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('va', '$va (m/s)')
          ..add('aoa',
              '$aoa (rad)${aoa != null ? ' [${aoa * 180.0 / math.pi} (deg)]' : ''}')
          ..add('ssa',
              '$ssa (rad)${ssa != null ? ' [${ssa * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// Airflow builder class
///
class AirflowBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Airflow, AirflowBuilder> {
  _$Airflow _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _va = 0;
  double get va => _$this._va;
  set va(double va) => _$this._va = va;

  double _aoa = 0;
  double get aoa => _$this._aoa;
  set aoa(double aoa) => _$this._aoa = aoa;

  double _ssa = 0;
  double get ssa => _$this._ssa;
  set ssa(double ssa) => _$this._ssa = ssa;

  AirflowBuilder();

  AirflowBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AirflowBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AirflowBuilder()..copyFromHeader(headerFrom);

  AirflowBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _va = _$v.va;
      _aoa = _$v.aoa;
      _ssa = _$v.ssa;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Airflow other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Airflow;
  }

  @override
  void update(void Function(AirflowBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Airflow build() {
    final _$result = _$v ??
        _$Airflow._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            va: va ?? 0,
            aoa: aoa ?? 0,
            ssa: ssa ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Desired Heading immutable class
///
class _$DesiredHeading extends DesiredHeading {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredHeading([void Function(DesiredHeadingBuilder b) updates]) =>
      (DesiredHeadingBuilder()..update(updates)).build();

  _$DesiredHeading._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredHeading rebuild(void Function(DesiredHeadingBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredHeadingBuilder toBuilder() => DesiredHeadingBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredHeading &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredHeading')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value',
              '$value (rad)${value != null ? ' [${value * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// Desired Heading builder class
///
class DesiredHeadingBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<DesiredHeading, DesiredHeadingBuilder> {
  _$DesiredHeading _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredHeadingBuilder();

  DesiredHeadingBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DesiredHeadingBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DesiredHeadingBuilder()..copyFromHeader(headerFrom);

  DesiredHeadingBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredHeading other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredHeading;
  }

  @override
  void update(void Function(DesiredHeadingBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredHeading build() {
    final _$result = _$v ??
        _$DesiredHeading._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Desired Z immutable class
///
class _$DesiredZ extends DesiredZ {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final ZUnitsEnum zUnits;

  factory _$DesiredZ([void Function(DesiredZBuilder b) updates]) =>
      (DesiredZBuilder()..update(updates)).build();

  _$DesiredZ._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value,
      this.zUnits})
      : super._();

  @override
  DesiredZ rebuild(void Function(DesiredZBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredZBuilder toBuilder() => DesiredZBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredZ &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7) &&
        zUnits == other.zUnits;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            value?.hashCode),
        zUnits?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredZ')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (m)')
          ..add('zUnits', '$zUnits (Enumerated)'))
        .toString();
  }
}

/// Desired Z builder class
///
class DesiredZBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<DesiredZ, DesiredZBuilder> {
  _$DesiredZ _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  DesiredZBuilder();

  DesiredZBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DesiredZBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DesiredZBuilder()..copyFromHeader(headerFrom);

  DesiredZBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _zUnits = _$v.zUnits;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredZ other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredZ;
  }

  @override
  void update(void Function(DesiredZBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredZ build() {
    final _$result = _$v ??
        _$DesiredZ._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0));
    replace(_$result);
    return _$result;
  }
}

/// Desired Speed immutable class
///
class _$DesiredSpeed extends DesiredSpeed {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final SpeedUnitsEnum speedUnits;

  factory _$DesiredSpeed([void Function(DesiredSpeedBuilder b) updates]) =>
      (DesiredSpeedBuilder()..update(updates)).build();

  _$DesiredSpeed._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value,
      this.speedUnits})
      : super._();

  @override
  DesiredSpeed rebuild(void Function(DesiredSpeedBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredSpeedBuilder toBuilder() => DesiredSpeedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredSpeed &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7) &&
        speedUnits == other.speedUnits;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            value?.hashCode),
        speedUnits?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredSpeed')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value')
          ..add('speedUnits', '$speedUnits (Enumerated)'))
        .toString();
  }
}

/// Desired Speed builder class
///
class DesiredSpeedBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<DesiredSpeed, DesiredSpeedBuilder> {
  _$DesiredSpeed _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  DesiredSpeedBuilder();

  DesiredSpeedBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DesiredSpeedBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DesiredSpeedBuilder()..copyFromHeader(headerFrom);

  DesiredSpeedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _speedUnits = _$v.speedUnits;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredSpeed other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredSpeed;
  }

  @override
  void update(void Function(DesiredSpeedBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredSpeed build() {
    final _$result = _$v ??
        _$DesiredSpeed._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0));
    replace(_$result);
    return _$result;
  }
}

/// Desired Roll immutable class
///
class _$DesiredRoll extends DesiredRoll {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredRoll([void Function(DesiredRollBuilder b) updates]) =>
      (DesiredRollBuilder()..update(updates)).build();

  _$DesiredRoll._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredRoll rebuild(void Function(DesiredRollBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredRollBuilder toBuilder() => DesiredRollBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredRoll &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredRoll')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value',
              '$value (rad)${value != null ? ' [${value * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// Desired Roll builder class
///
class DesiredRollBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<DesiredRoll, DesiredRollBuilder> {
  _$DesiredRoll _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredRollBuilder();

  DesiredRollBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DesiredRollBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DesiredRollBuilder()..copyFromHeader(headerFrom);

  DesiredRollBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredRoll other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredRoll;
  }

  @override
  void update(void Function(DesiredRollBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredRoll build() {
    final _$result = _$v ??
        _$DesiredRoll._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Desired Pitch immutable class
///
class _$DesiredPitch extends DesiredPitch {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredPitch([void Function(DesiredPitchBuilder b) updates]) =>
      (DesiredPitchBuilder()..update(updates)).build();

  _$DesiredPitch._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredPitch rebuild(void Function(DesiredPitchBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredPitchBuilder toBuilder() => DesiredPitchBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredPitch &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredPitch')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value',
              '$value (rad)${value != null ? ' [${value * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// Desired Pitch builder class
///
class DesiredPitchBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<DesiredPitch, DesiredPitchBuilder> {
  _$DesiredPitch _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredPitchBuilder();

  DesiredPitchBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DesiredPitchBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DesiredPitchBuilder()..copyFromHeader(headerFrom);

  DesiredPitchBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredPitch other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredPitch;
  }

  @override
  void update(void Function(DesiredPitchBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredPitch build() {
    final _$result = _$v ??
        _$DesiredPitch._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Desired Vertical Rate immutable class
///
class _$DesiredVerticalRate extends DesiredVerticalRate {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredVerticalRate(
          [void Function(DesiredVerticalRateBuilder b) updates]) =>
      (DesiredVerticalRateBuilder()..update(updates)).build();

  _$DesiredVerticalRate._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredVerticalRate rebuild(
          void Function(DesiredVerticalRateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredVerticalRateBuilder toBuilder() =>
      DesiredVerticalRateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredVerticalRate &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredVerticalRate')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (m/s)'))
        .toString();
  }
}

/// Desired Vertical Rate builder class
///
class DesiredVerticalRateBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<DesiredVerticalRate,
            DesiredVerticalRateBuilder> {
  _$DesiredVerticalRate _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredVerticalRateBuilder();

  DesiredVerticalRateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DesiredVerticalRateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DesiredVerticalRateBuilder()..copyFromHeader(headerFrom);

  DesiredVerticalRateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredVerticalRate other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredVerticalRate;
  }

  @override
  void update(void Function(DesiredVerticalRateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredVerticalRate build() {
    final _$result = _$v ??
        _$DesiredVerticalRate._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Desired Path immutable class
///
class _$DesiredPath extends DesiredPath {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int pathRef;
  @override
  final double startLat;
  @override
  final double startLon;
  @override
  final double startZ;
  @override
  final ZUnitsEnum startZUnits;
  @override
  final double endLat;
  @override
  final double endLon;
  @override
  final double endZ;
  @override
  final ZUnitsEnum endZUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double lradius;
  @override
  final DesiredPathBitfieldFlags flags;

  factory _$DesiredPath([void Function(DesiredPathBuilder b) updates]) =>
      (DesiredPathBuilder()..update(updates)).build();

  _$DesiredPath._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.pathRef,
      this.startLat,
      this.startLon,
      this.startZ,
      this.startZUnits,
      this.endLat,
      this.endLon,
      this.endZ,
      this.endZUnits,
      this.speed,
      this.speedUnits,
      this.lradius,
      this.flags})
      : super._();

  @override
  DesiredPath rebuild(void Function(DesiredPathBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredPathBuilder toBuilder() => DesiredPathBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredPath &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        pathRef == other.pathRef &&
        (startLat == other.startLat || startLat - other.startLat <= 1E-7) &&
        (startLon == other.startLon || startLon - other.startLon <= 1E-7) &&
        (startZ == other.startZ || startZ - other.startZ <= 1E-7) &&
        startZUnits == other.startZUnits &&
        (endLat == other.endLat || endLat - other.endLat <= 1E-7) &&
        (endLon == other.endLon || endLon - other.endLon <= 1E-7) &&
        (endZ == other.endZ || endZ - other.endZ <= 1E-7) &&
        endZUnits == other.endZUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        (lradius == other.lradius || lradius - other.lradius <= 1E-7) &&
        flags == other.flags;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            0,
                                                                            timestamp
                                                                                ?.hashCode),
                                                                        src
                                                                            ?.hashCode),
                                                                    srcEnt
                                                                        ?.hashCode),
                                                                dst?.hashCode),
                                                            dstEnt?.hashCode),
                                                        pathRef?.hashCode),
                                                    startLat?.hashCode),
                                                startLon?.hashCode),
                                            startZ?.hashCode),
                                        startZUnits?.hashCode),
                                    endLat?.hashCode),
                                endLon?.hashCode),
                            endZ?.hashCode),
                        endZUnits?.hashCode),
                    speed?.hashCode),
                speedUnits?.hashCode),
            lradius?.hashCode),
        flags?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredPath')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('pathRef', '$pathRef')
          ..add('startLat',
              '$startLat (rad)${startLat != null ? ' [${startLat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('startLon',
              '$startLon (rad)${startLon != null ? ' [${startLon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('startZ', '$startZ (m)')
          ..add('startZUnits', '$startZUnits (Enumerated)')
          ..add('endLat',
              '$endLat (rad)${endLat != null ? ' [${endLat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('endLon',
              '$endLon (rad)${endLon != null ? ' [${endLon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('endZ', '$endZ (m)')
          ..add('endZUnits', '$endZUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('lradius', '$lradius (m)')
          ..add('flags', '$flags (Bitfield)'))
        .toString();
  }
}

/// Desired Path builder class
///
class DesiredPathBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<DesiredPath, DesiredPathBuilder> {
  _$DesiredPath _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _pathRef = 0;
  int get pathRef => _$this._pathRef;
  set pathRef(int pathRef) => _$this._pathRef = pathRef;

  double _startLat = 0;
  double get startLat => _$this._startLat;
  set startLat(double startLat) => _$this._startLat = startLat;

  double _startLon = 0;
  double get startLon => _$this._startLon;
  set startLon(double startLon) => _$this._startLon = startLon;

  double _startZ = 0;
  double get startZ => _$this._startZ;
  set startZ(double startZ) => _$this._startZ = startZ;

  ZUnitsEnum _startZUnits = ZUnitsEnum(0);
  ZUnitsEnum get startZUnits => _$this._startZUnits;
  set startZUnits(ZUnitsEnum startZUnits) => _$this._startZUnits = startZUnits;

  double _endLat = 0;
  double get endLat => _$this._endLat;
  set endLat(double endLat) => _$this._endLat = endLat;

  double _endLon = 0;
  double get endLon => _$this._endLon;
  set endLon(double endLon) => _$this._endLon = endLon;

  double _endZ = 0;
  double get endZ => _$this._endZ;
  set endZ(double endZ) => _$this._endZ = endZ;

  ZUnitsEnum _endZUnits = ZUnitsEnum(0);
  ZUnitsEnum get endZUnits => _$this._endZUnits;
  set endZUnits(ZUnitsEnum endZUnits) => _$this._endZUnits = endZUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _lradius = 0;
  double get lradius => _$this._lradius;
  set lradius(double lradius) => _$this._lradius = lradius;

  DesiredPathBitfieldFlags _flags = DesiredPathBitfieldFlags(0);
  DesiredPathBitfieldFlags get flags => _$this._flags;
  set flags(DesiredPathBitfieldFlags flags) => _$this._flags = flags;

  DesiredPathBuilder();

  DesiredPathBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DesiredPathBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DesiredPathBuilder()..copyFromHeader(headerFrom);

  DesiredPathBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _pathRef = _$v.pathRef;
      _startLat = _$v.startLat;
      _startLon = _$v.startLon;
      _startZ = _$v.startZ;
      _startZUnits = _$v.startZUnits;
      _endLat = _$v.endLat;
      _endLon = _$v.endLon;
      _endZ = _$v.endZ;
      _endZUnits = _$v.endZUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _lradius = _$v.lradius;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredPath other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredPath;
  }

  @override
  void update(void Function(DesiredPathBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredPath build() {
    final _$result = _$v ??
        _$DesiredPath._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            pathRef: pathRef ?? 0,
            startLat: startLat ?? 0,
            startLon: startLon ?? 0,
            startZ: startZ ?? 0,
            startZUnits: startZUnits ?? ZUnitsEnum(0),
            endLat: endLat ?? 0,
            endLon: endLon ?? 0,
            endZ: endZ ?? 0,
            endZUnits: endZUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            lradius: lradius ?? 0,
            flags: flags ?? DesiredPathBitfieldFlags(0));
    replace(_$result);
    return _$result;
  }
}

/// Desired Control immutable class
///
class _$DesiredControl extends DesiredControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double k;
  @override
  final double m;
  @override
  final double n;
  @override
  final DesiredControlBitfieldFlags flags;

  factory _$DesiredControl([void Function(DesiredControlBuilder b) updates]) =>
      (DesiredControlBuilder()..update(updates)).build();

  _$DesiredControl._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.k,
      this.m,
      this.n,
      this.flags})
      : super._();

  @override
  DesiredControl rebuild(void Function(DesiredControlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredControlBuilder toBuilder() => DesiredControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        (k == other.k || k - other.k <= 1E-7) &&
        (m == other.m || m - other.m <= 1E-7) &&
        (n == other.n || n - other.n <= 1E-7) &&
        flags == other.flags;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, timestamp?.hashCode),
                                                src?.hashCode),
                                            srcEnt?.hashCode),
                                        dst?.hashCode),
                                    dstEnt?.hashCode),
                                x?.hashCode),
                            y?.hashCode),
                        z?.hashCode),
                    k?.hashCode),
                m?.hashCode),
            n?.hashCode),
        flags?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', '$x (N)')
          ..add('y', '$y (N)')
          ..add('z', '$z (N)')
          ..add('k', '$k (Nm)')
          ..add('m', '$m (Nm)')
          ..add('n', '$n (Nm)')
          ..add('flags', '$flags (Bitfield)'))
        .toString();
  }
}

/// Desired Control builder class
///
class DesiredControlBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<DesiredControl, DesiredControlBuilder> {
  _$DesiredControl _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _k = 0;
  double get k => _$this._k;
  set k(double k) => _$this._k = k;

  double _m = 0;
  double get m => _$this._m;
  set m(double m) => _$this._m = m;

  double _n = 0;
  double get n => _$this._n;
  set n(double n) => _$this._n = n;

  DesiredControlBitfieldFlags _flags = DesiredControlBitfieldFlags(0);
  DesiredControlBitfieldFlags get flags => _$this._flags;
  set flags(DesiredControlBitfieldFlags flags) => _$this._flags = flags;

  DesiredControlBuilder();

  DesiredControlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DesiredControlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DesiredControlBuilder()..copyFromHeader(headerFrom);

  DesiredControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _k = _$v.k;
      _m = _$v.m;
      _n = _$v.n;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredControl other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredControl;
  }

  @override
  void update(void Function(DesiredControlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredControl build() {
    final _$result = _$v ??
        _$DesiredControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            k: k ?? 0,
            m: m ?? 0,
            n: n ?? 0,
            flags: flags ?? DesiredControlBitfieldFlags(0));
    replace(_$result);
    return _$result;
  }
}

/// Desired Heading Rate immutable class
///
class _$DesiredHeadingRate extends DesiredHeadingRate {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredHeadingRate(
          [void Function(DesiredHeadingRateBuilder b) updates]) =>
      (DesiredHeadingRateBuilder()..update(updates)).build();

  _$DesiredHeadingRate._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredHeadingRate rebuild(
          void Function(DesiredHeadingRateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredHeadingRateBuilder toBuilder() =>
      DesiredHeadingRateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredHeadingRate &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredHeadingRate')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value',
              '$value (rad/s)${value != null ? ' [${value * 180.0 / math.pi} (deg/s)]' : ''}'))
        .toString();
  }
}

/// Desired Heading Rate builder class
///
class DesiredHeadingRateBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<DesiredHeadingRate, DesiredHeadingRateBuilder> {
  _$DesiredHeadingRate _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredHeadingRateBuilder();

  DesiredHeadingRateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DesiredHeadingRateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DesiredHeadingRateBuilder()..copyFromHeader(headerFrom);

  DesiredHeadingRateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredHeadingRate other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredHeadingRate;
  }

  @override
  void update(void Function(DesiredHeadingRateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredHeadingRate build() {
    final _$result = _$v ??
        _$DesiredHeadingRate._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Desired Velocity immutable class
///
class _$DesiredVelocity extends DesiredVelocity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double u;
  @override
  final double v;
  @override
  final double w;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final DesiredVelocityBitfieldFlags flags;

  factory _$DesiredVelocity(
          [void Function(DesiredVelocityBuilder b) updates]) =>
      (DesiredVelocityBuilder()..update(updates)).build();

  _$DesiredVelocity._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.u,
      this.v,
      this.w,
      this.p,
      this.q,
      this.r,
      this.flags})
      : super._();

  @override
  DesiredVelocity rebuild(void Function(DesiredVelocityBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredVelocityBuilder toBuilder() => DesiredVelocityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredVelocity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (u == other.u || u - other.u <= 1E-7) &&
        (v == other.v || v - other.v <= 1E-7) &&
        (w == other.w || w - other.w <= 1E-7) &&
        (p == other.p || p - other.p <= 1E-7) &&
        (q == other.q || q - other.q <= 1E-7) &&
        (r == other.r || r - other.r <= 1E-7) &&
        flags == other.flags;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, timestamp?.hashCode),
                                                src?.hashCode),
                                            srcEnt?.hashCode),
                                        dst?.hashCode),
                                    dstEnt?.hashCode),
                                u?.hashCode),
                            v?.hashCode),
                        w?.hashCode),
                    p?.hashCode),
                q?.hashCode),
            r?.hashCode),
        flags?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredVelocity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('u', '$u (m/s)')
          ..add('v', '$v (m/s)')
          ..add('w', '$w (m/s)')
          ..add('p', '$p (m/s)')
          ..add('q', '$q (m/s)')
          ..add('r', '$r (m/s)')
          ..add('flags', '$flags (Bitfield)'))
        .toString();
  }
}

/// Desired Velocity builder class
///
class DesiredVelocityBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<DesiredVelocity, DesiredVelocityBuilder> {
  _$DesiredVelocity _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _u = 0;
  double get u => _$this._u;
  set u(double u) => _$this._u = u;

  double _v = 0;
  double get v => _$this._v;
  set v(double v) => _$this._v = v;

  double _w = 0;
  double get w => _$this._w;
  set w(double w) => _$this._w = w;

  double _p = 0;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q = 0;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r = 0;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  DesiredVelocityBitfieldFlags _flags = DesiredVelocityBitfieldFlags(0);
  DesiredVelocityBitfieldFlags get flags => _$this._flags;
  set flags(DesiredVelocityBitfieldFlags flags) => _$this._flags = flags;

  DesiredVelocityBuilder();

  DesiredVelocityBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DesiredVelocityBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DesiredVelocityBuilder()..copyFromHeader(headerFrom);

  DesiredVelocityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _u = _$v.u;
      _v = _$v.v;
      _w = _$v.w;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredVelocity other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredVelocity;
  }

  @override
  void update(void Function(DesiredVelocityBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredVelocity build() {
    final _$result = _$v ??
        _$DesiredVelocity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            u: u ?? 0,
            v: v ?? 0,
            w: w ?? 0,
            p: p ?? 0,
            q: q ?? 0,
            r: r ?? 0,
            flags: flags ?? DesiredVelocityBitfieldFlags(0));
    replace(_$result);
    return _$result;
  }
}

/// Path Control State immutable class
///
class _$PathControlState extends PathControlState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int pathRef;
  @override
  final double startLat;
  @override
  final double startLon;
  @override
  final double startZ;
  @override
  final ZUnitsEnum startZUnits;
  @override
  final double endLat;
  @override
  final double endLon;
  @override
  final double endZ;
  @override
  final ZUnitsEnum endZUnits;
  @override
  final double lradius;
  @override
  final PathControlStateBitfieldFlags flags;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double vx;
  @override
  final double vy;
  @override
  final double vz;
  @override
  final double courseError;
  @override
  final int eta;

  factory _$PathControlState(
          [void Function(PathControlStateBuilder b) updates]) =>
      (PathControlStateBuilder()..update(updates)).build();

  _$PathControlState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.pathRef,
      this.startLat,
      this.startLon,
      this.startZ,
      this.startZUnits,
      this.endLat,
      this.endLon,
      this.endZ,
      this.endZUnits,
      this.lradius,
      this.flags,
      this.x,
      this.y,
      this.z,
      this.vx,
      this.vy,
      this.vz,
      this.courseError,
      this.eta})
      : super._();

  @override
  PathControlState rebuild(void Function(PathControlStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PathControlStateBuilder toBuilder() =>
      PathControlStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PathControlState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        pathRef == other.pathRef &&
        (startLat == other.startLat || startLat - other.startLat <= 1E-7) &&
        (startLon == other.startLon || startLon - other.startLon <= 1E-7) &&
        (startZ == other.startZ || startZ - other.startZ <= 1E-7) &&
        startZUnits == other.startZUnits &&
        (endLat == other.endLat || endLat - other.endLat <= 1E-7) &&
        (endLon == other.endLon || endLon - other.endLon <= 1E-7) &&
        (endZ == other.endZ || endZ - other.endZ <= 1E-7) &&
        endZUnits == other.endZUnits &&
        (lradius == other.lradius || lradius - other.lradius <= 1E-7) &&
        flags == other.flags &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        (vx == other.vx || vx - other.vx <= 1E-7) &&
        (vy == other.vy || vy - other.vy <= 1E-7) &&
        (vz == other.vz || vz - other.vz <= 1E-7) &&
        (courseError == other.courseError ||
            courseError - other.courseError <= 1E-7) &&
        eta == other.eta;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc(0, timestamp?.hashCode), src?.hashCode), srcEnt?.hashCode), dst?.hashCode), dstEnt?.hashCode),
                                                                                pathRef?.hashCode),
                                                                            startLat?.hashCode),
                                                                        startLon?.hashCode),
                                                                    startZ?.hashCode),
                                                                startZUnits?.hashCode),
                                                            endLat?.hashCode),
                                                        endLon?.hashCode),
                                                    endZ?.hashCode),
                                                endZUnits?.hashCode),
                                            lradius?.hashCode),
                                        flags?.hashCode),
                                    x?.hashCode),
                                y?.hashCode),
                            z?.hashCode),
                        vx?.hashCode),
                    vy?.hashCode),
                vz?.hashCode),
            courseError?.hashCode),
        eta?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PathControlState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('pathRef', '$pathRef')
          ..add('startLat',
              '$startLat (rad)${startLat != null ? ' [${startLat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('startLon',
              '$startLon (rad)${startLon != null ? ' [${startLon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('startZ', '$startZ (m)')
          ..add('startZUnits', '$startZUnits (Enumerated)')
          ..add('endLat',
              '$endLat (rad)${endLat != null ? ' [${endLat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('endLon',
              '$endLon (rad)${endLon != null ? ' [${endLon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('endZ', '$endZ (m)')
          ..add('endZUnits', '$endZUnits (Enumerated)')
          ..add('lradius', '$lradius (m)')
          ..add('flags', '$flags (Bitfield)')
          ..add('x', '$x (m)')
          ..add('y', '$y (m)')
          ..add('z', '$z (m)')
          ..add('vx', '$vx (m/s)')
          ..add('vy', '$vy (m/s)')
          ..add('vz', '$vz (m/s)')
          ..add('courseError',
              '$courseError (rad)${courseError != null ? ' [${courseError * 180.0 / math.pi} (deg)]' : ''}')
          ..add('eta', '$eta (s)'))
        .toString();
  }
}

/// Path Control State builder class
///
class PathControlStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<PathControlState, PathControlStateBuilder> {
  _$PathControlState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _pathRef = 0;
  int get pathRef => _$this._pathRef;
  set pathRef(int pathRef) => _$this._pathRef = pathRef;

  double _startLat = 0;
  double get startLat => _$this._startLat;
  set startLat(double startLat) => _$this._startLat = startLat;

  double _startLon = 0;
  double get startLon => _$this._startLon;
  set startLon(double startLon) => _$this._startLon = startLon;

  double _startZ = 0;
  double get startZ => _$this._startZ;
  set startZ(double startZ) => _$this._startZ = startZ;

  ZUnitsEnum _startZUnits = ZUnitsEnum(0);
  ZUnitsEnum get startZUnits => _$this._startZUnits;
  set startZUnits(ZUnitsEnum startZUnits) => _$this._startZUnits = startZUnits;

  double _endLat = 0;
  double get endLat => _$this._endLat;
  set endLat(double endLat) => _$this._endLat = endLat;

  double _endLon = 0;
  double get endLon => _$this._endLon;
  set endLon(double endLon) => _$this._endLon = endLon;

  double _endZ = 0;
  double get endZ => _$this._endZ;
  set endZ(double endZ) => _$this._endZ = endZ;

  ZUnitsEnum _endZUnits = ZUnitsEnum(0);
  ZUnitsEnum get endZUnits => _$this._endZUnits;
  set endZUnits(ZUnitsEnum endZUnits) => _$this._endZUnits = endZUnits;

  double _lradius = 0;
  double get lradius => _$this._lradius;
  set lradius(double lradius) => _$this._lradius = lradius;

  PathControlStateBitfieldFlags _flags = PathControlStateBitfieldFlags(0);
  PathControlStateBitfieldFlags get flags => _$this._flags;
  set flags(PathControlStateBitfieldFlags flags) => _$this._flags = flags;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _vx = 0;
  double get vx => _$this._vx;
  set vx(double vx) => _$this._vx = vx;

  double _vy = 0;
  double get vy => _$this._vy;
  set vy(double vy) => _$this._vy = vy;

  double _vz = 0;
  double get vz => _$this._vz;
  set vz(double vz) => _$this._vz = vz;

  double _courseError = 0;
  double get courseError => _$this._courseError;
  set courseError(double courseError) => _$this._courseError = courseError;

  int _eta = 0;
  int get eta => _$this._eta;
  set eta(int eta) => _$this._eta = eta;

  PathControlStateBuilder();

  PathControlStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PathControlStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PathControlStateBuilder()..copyFromHeader(headerFrom);

  PathControlStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _pathRef = _$v.pathRef;
      _startLat = _$v.startLat;
      _startLon = _$v.startLon;
      _startZ = _$v.startZ;
      _startZUnits = _$v.startZUnits;
      _endLat = _$v.endLat;
      _endLon = _$v.endLon;
      _endZ = _$v.endZ;
      _endZUnits = _$v.endZUnits;
      _lradius = _$v.lradius;
      _flags = _$v.flags;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _vx = _$v.vx;
      _vy = _$v.vy;
      _vz = _$v.vz;
      _courseError = _$v.courseError;
      _eta = _$v.eta;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PathControlState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PathControlState;
  }

  @override
  void update(void Function(PathControlStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PathControlState build() {
    final _$result = _$v ??
        _$PathControlState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            pathRef: pathRef ?? 0,
            startLat: startLat ?? 0,
            startLon: startLon ?? 0,
            startZ: startZ ?? 0,
            startZUnits: startZUnits ?? ZUnitsEnum(0),
            endLat: endLat ?? 0,
            endLon: endLon ?? 0,
            endZ: endZ ?? 0,
            endZUnits: endZUnits ?? ZUnitsEnum(0),
            lradius: lradius ?? 0,
            flags: flags ?? PathControlStateBitfieldFlags(0),
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            vx: vx ?? 0,
            vy: vy ?? 0,
            vz: vz ?? 0,
            courseError: courseError ?? 0,
            eta: eta ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Allocated Control Torques immutable class
///
class _$AllocatedControlTorques extends AllocatedControlTorques {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double k;
  @override
  final double m;
  @override
  final double n;

  factory _$AllocatedControlTorques(
          [void Function(AllocatedControlTorquesBuilder b) updates]) =>
      (AllocatedControlTorquesBuilder()..update(updates)).build();

  _$AllocatedControlTorques._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.k,
      this.m,
      this.n})
      : super._();

  @override
  AllocatedControlTorques rebuild(
          void Function(AllocatedControlTorquesBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AllocatedControlTorquesBuilder toBuilder() =>
      AllocatedControlTorquesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AllocatedControlTorques &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (k == other.k || k - other.k <= 1E-7) &&
        (m == other.m || m - other.m <= 1E-7) &&
        (n == other.n || n - other.n <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                k?.hashCode),
            m?.hashCode),
        n?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AllocatedControlTorques')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('k', '$k (Nm)')
          ..add('m', '$m (Nm)')
          ..add('n', '$n (Nm)'))
        .toString();
  }
}

/// Allocated Control Torques builder class
///
class AllocatedControlTorquesBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<AllocatedControlTorques,
            AllocatedControlTorquesBuilder> {
  _$AllocatedControlTorques _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _k = 0;
  double get k => _$this._k;
  set k(double k) => _$this._k = k;

  double _m = 0;
  double get m => _$this._m;
  set m(double m) => _$this._m = m;

  double _n = 0;
  double get n => _$this._n;
  set n(double n) => _$this._n = n;

  AllocatedControlTorquesBuilder();

  AllocatedControlTorquesBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AllocatedControlTorquesBuilder newInstance(
          [ImcBuilderHeaderPart headerFrom]) =>
      AllocatedControlTorquesBuilder()..copyFromHeader(headerFrom);

  AllocatedControlTorquesBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _k = _$v.k;
      _m = _$v.m;
      _n = _$v.n;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AllocatedControlTorques other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$AllocatedControlTorques;
  }

  @override
  void update(void Function(AllocatedControlTorquesBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$AllocatedControlTorques build() {
    final _$result = _$v ??
        _$AllocatedControlTorques._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            k: k ?? 0,
            m: m ?? 0,
            n: n ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Control Parcel immutable class
///
class _$ControlParcel extends ControlParcel {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double p;
  @override
  final double i;
  @override
  final double d;
  @override
  final double a;

  factory _$ControlParcel([void Function(ControlParcelBuilder b) updates]) =>
      (ControlParcelBuilder()..update(updates)).build();

  _$ControlParcel._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.p,
      this.i,
      this.d,
      this.a})
      : super._();

  @override
  ControlParcel rebuild(void Function(ControlParcelBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ControlParcelBuilder toBuilder() => ControlParcelBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ControlParcel &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (p == other.p || p - other.p <= 1E-7) &&
        (i == other.i || i - other.i <= 1E-7) &&
        (d == other.d || d - other.d <= 1E-7) &&
        (a == other.a || a - other.a <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    p?.hashCode),
                i?.hashCode),
            d?.hashCode),
        a?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ControlParcel')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('p', '$p')
          ..add('i', '$i')
          ..add('d', '$d')
          ..add('a', '$a'))
        .toString();
  }
}

/// Control Parcel builder class
///
class ControlParcelBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ControlParcel, ControlParcelBuilder> {
  _$ControlParcel _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _p = 0;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _i = 0;
  double get i => _$this._i;
  set i(double i) => _$this._i = i;

  double _d = 0;
  double get d => _$this._d;
  set d(double d) => _$this._d = d;

  double _a = 0;
  double get a => _$this._a;
  set a(double a) => _$this._a = a;

  ControlParcelBuilder();

  ControlParcelBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ControlParcelBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ControlParcelBuilder()..copyFromHeader(headerFrom);

  ControlParcelBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _p = _$v.p;
      _i = _$v.i;
      _d = _$v.d;
      _a = _$v.a;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ControlParcel other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ControlParcel;
  }

  @override
  void update(void Function(ControlParcelBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ControlParcel build() {
    final _$result = _$v ??
        _$ControlParcel._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            p: p ?? 0,
            i: i ?? 0,
            d: d ?? 0,
            a: a ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Brake immutable class
///
class _$Brake extends Brake {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final BrakeEnumOp op;

  factory _$Brake([void Function(BrakeBuilder b) updates]) =>
      (BrakeBuilder()..update(updates)).build();

  _$Brake._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op})
      : super._();

  @override
  Brake rebuild(void Function(BrakeBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  BrakeBuilder toBuilder() => BrakeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Brake &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        op?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Brake')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)'))
        .toString();
  }
}

/// Brake builder class
///
class BrakeBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Brake, BrakeBuilder> {
  _$Brake _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  BrakeEnumOp _op = BrakeEnumOp(0);
  BrakeEnumOp get op => _$this._op;
  set op(BrakeEnumOp op) => _$this._op = op;

  BrakeBuilder();

  BrakeBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  BrakeBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      BrakeBuilder()..copyFromHeader(headerFrom);

  BrakeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Brake other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Brake;
  }

  @override
  void update(void Function(BrakeBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Brake build() {
    final _$result = _$v ??
        _$Brake._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? BrakeEnumOp(0));
    replace(_$result);
    return _$result;
  }
}

/// Desired Linear State immutable class
///
class _$DesiredLinearState extends DesiredLinearState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double vx;
  @override
  final double vy;
  @override
  final double vz;
  @override
  final double ax;
  @override
  final double ay;
  @override
  final double az;
  @override
  final DesiredLinearStateBitfieldFlags flags;

  factory _$DesiredLinearState(
          [void Function(DesiredLinearStateBuilder b) updates]) =>
      (DesiredLinearStateBuilder()..update(updates)).build();

  _$DesiredLinearState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.vx,
      this.vy,
      this.vz,
      this.ax,
      this.ay,
      this.az,
      this.flags})
      : super._();

  @override
  DesiredLinearState rebuild(
          void Function(DesiredLinearStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredLinearStateBuilder toBuilder() =>
      DesiredLinearStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredLinearState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        (vx == other.vx || vx - other.vx <= 1E-7) &&
        (vy == other.vy || vy - other.vy <= 1E-7) &&
        (vz == other.vz || vz - other.vz <= 1E-7) &&
        (ax == other.ax || ax - other.ax <= 1E-7) &&
        (ay == other.ay || ay - other.ay <= 1E-7) &&
        (az == other.az || az - other.az <= 1E-7) &&
        flags == other.flags;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                0,
                                                                timestamp
                                                                    ?.hashCode),
                                                            src?.hashCode),
                                                        srcEnt?.hashCode),
                                                    dst?.hashCode),
                                                dstEnt?.hashCode),
                                            x?.hashCode),
                                        y?.hashCode),
                                    z?.hashCode),
                                vx?.hashCode),
                            vy?.hashCode),
                        vz?.hashCode),
                    ax?.hashCode),
                ay?.hashCode),
            az?.hashCode),
        flags?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredLinearState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', '$x (m)')
          ..add('y', '$y (m)')
          ..add('z', '$z (m)')
          ..add('vx', '$vx (m/s)')
          ..add('vy', '$vy (m/s)')
          ..add('vz', '$vz (m/s)')
          ..add('ax', '$ax (m/s/s)')
          ..add('ay', '$ay (m/s/s)')
          ..add('az', '$az (m/s/s)')
          ..add('flags', '$flags (Bitfield)'))
        .toString();
  }
}

/// Desired Linear State builder class
///
class DesiredLinearStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<DesiredLinearState, DesiredLinearStateBuilder> {
  _$DesiredLinearState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _vx = 0;
  double get vx => _$this._vx;
  set vx(double vx) => _$this._vx = vx;

  double _vy = 0;
  double get vy => _$this._vy;
  set vy(double vy) => _$this._vy = vy;

  double _vz = 0;
  double get vz => _$this._vz;
  set vz(double vz) => _$this._vz = vz;

  double _ax = 0;
  double get ax => _$this._ax;
  set ax(double ax) => _$this._ax = ax;

  double _ay = 0;
  double get ay => _$this._ay;
  set ay(double ay) => _$this._ay = ay;

  double _az = 0;
  double get az => _$this._az;
  set az(double az) => _$this._az = az;

  DesiredLinearStateBitfieldFlags _flags = DesiredLinearStateBitfieldFlags(0);
  DesiredLinearStateBitfieldFlags get flags => _$this._flags;
  set flags(DesiredLinearStateBitfieldFlags flags) => _$this._flags = flags;

  DesiredLinearStateBuilder();

  DesiredLinearStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DesiredLinearStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DesiredLinearStateBuilder()..copyFromHeader(headerFrom);

  DesiredLinearStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _vx = _$v.vx;
      _vy = _$v.vy;
      _vz = _$v.vz;
      _ax = _$v.ax;
      _ay = _$v.ay;
      _az = _$v.az;
      _flags = _$v.flags;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredLinearState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredLinearState;
  }

  @override
  void update(void Function(DesiredLinearStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredLinearState build() {
    final _$result = _$v ??
        _$DesiredLinearState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            vx: vx ?? 0,
            vy: vy ?? 0,
            vz: vz ?? 0,
            ax: ax ?? 0,
            ay: ay ?? 0,
            az: az ?? 0,
            flags: flags ?? DesiredLinearStateBitfieldFlags(0));
    replace(_$result);
    return _$result;
  }
}

/// Desired Throttle immutable class
///
class _$DesiredThrottle extends DesiredThrottle {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$DesiredThrottle(
          [void Function(DesiredThrottleBuilder b) updates]) =>
      (DesiredThrottleBuilder()..update(updates)).build();

  _$DesiredThrottle._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  DesiredThrottle rebuild(void Function(DesiredThrottleBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DesiredThrottleBuilder toBuilder() => DesiredThrottleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DesiredThrottle &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DesiredThrottle')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (%)'))
        .toString();
  }
}

/// Desired Throttle builder class
///
class DesiredThrottleBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<DesiredThrottle, DesiredThrottleBuilder> {
  _$DesiredThrottle _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DesiredThrottleBuilder();

  DesiredThrottleBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DesiredThrottleBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DesiredThrottleBuilder()..copyFromHeader(headerFrom);

  DesiredThrottleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DesiredThrottle other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DesiredThrottle;
  }

  @override
  void update(void Function(DesiredThrottleBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DesiredThrottle build() {
    final _$result = _$v ??
        _$DesiredThrottle._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Goto Maneuver immutable class
///
class _$Goto extends Goto {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double roll;
  @override
  final double pitch;
  @override
  final double yaw;
  @override
  final String custom;

  factory _$Goto([void Function(GotoBuilder b) updates]) =>
      (GotoBuilder()..update(updates)).build();

  _$Goto._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.roll,
      this.pitch,
      this.yaw,
      this.custom})
      : super._();

  @override
  Goto rebuild(void Function(GotoBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GotoBuilder toBuilder() => GotoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Goto &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        (roll == other.roll || roll - other.roll <= 1E-7) &&
        (pitch == other.pitch || pitch - other.pitch <= 1E-7) &&
        (yaw == other.yaw || yaw - other.yaw <= 1E-7) &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    0,
                                                                    timestamp
                                                                        ?.hashCode),
                                                                src?.hashCode),
                                                            srcEnt?.hashCode),
                                                        dst?.hashCode),
                                                    dstEnt?.hashCode),
                                                timeout?.hashCode),
                                            lat?.hashCode),
                                        lon?.hashCode),
                                    z?.hashCode),
                                zUnits?.hashCode),
                            speed?.hashCode),
                        speedUnits?.hashCode),
                    roll?.hashCode),
                pitch?.hashCode),
            yaw?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Goto')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('roll',
              '$roll (rad)${roll != null ? ' [${roll * 180.0 / math.pi} (deg)]' : ''}')
          ..add('pitch',
              '$pitch (rad)${pitch != null ? ' [${pitch * 180.0 / math.pi} (deg)]' : ''}')
          ..add('yaw',
              '$yaw (rad)${yaw != null ? ' [${yaw * 180.0 / math.pi} (deg)]' : ''}')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Goto Maneuver builder class
///
class GotoBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Goto, GotoBuilder> {
  _$Goto _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _roll = 0;
  double get roll => _$this._roll;
  set roll(double roll) => _$this._roll = roll;

  double _pitch = 0;
  double get pitch => _$this._pitch;
  set pitch(double pitch) => _$this._pitch = pitch;

  double _yaw = 0;
  double get yaw => _$this._yaw;
  set yaw(double yaw) => _$this._yaw = yaw;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  GotoBuilder();

  GotoBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  GotoBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      GotoBuilder()..copyFromHeader(headerFrom);

  GotoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _roll = _$v.roll;
      _pitch = _$v.pitch;
      _yaw = _$v.yaw;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Goto other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Goto;
  }

  @override
  void update(void Function(GotoBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Goto build() {
    final _$result = _$v ??
        _$Goto._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            roll: roll ?? 0,
            pitch: pitch ?? 0,
            yaw: yaw ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// PopUp Maneuver immutable class
///
class _$PopUp extends PopUp {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final int duration;
  @override
  final double radius;
  @override
  final PopUpBitfieldFlags flags;
  @override
  final String custom;

  factory _$PopUp([void Function(PopUpBuilder b) updates]) =>
      (PopUpBuilder()..update(updates)).build();

  _$PopUp._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.duration,
      this.radius,
      this.flags,
      this.custom})
      : super._();

  @override
  PopUp rebuild(void Function(PopUpBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PopUpBuilder toBuilder() => PopUpBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PopUp &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        duration == other.duration &&
        (radius == other.radius || radius - other.radius <= 1E-7) &&
        flags == other.flags &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    0,
                                                                    timestamp
                                                                        ?.hashCode),
                                                                src?.hashCode),
                                                            srcEnt?.hashCode),
                                                        dst?.hashCode),
                                                    dstEnt?.hashCode),
                                                timeout?.hashCode),
                                            lat?.hashCode),
                                        lon?.hashCode),
                                    z?.hashCode),
                                zUnits?.hashCode),
                            speed?.hashCode),
                        speedUnits?.hashCode),
                    duration?.hashCode),
                radius?.hashCode),
            flags?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PopUp')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('duration', '$duration (s)')
          ..add('radius', '$radius (m)')
          ..add('flags', '$flags (Bitfield)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// PopUp Maneuver builder class
///
class PopUpBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<PopUp, PopUpBuilder> {
  _$PopUp _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  int _duration = 0;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _radius = 0;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  PopUpBitfieldFlags _flags = PopUpBitfieldFlags(0);
  PopUpBitfieldFlags get flags => _$this._flags;
  set flags(PopUpBitfieldFlags flags) => _$this._flags = flags;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  PopUpBuilder();

  PopUpBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PopUpBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PopUpBuilder()..copyFromHeader(headerFrom);

  PopUpBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _duration = _$v.duration;
      _radius = _$v.radius;
      _flags = _$v.flags;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PopUp other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PopUp;
  }

  @override
  void update(void Function(PopUpBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PopUp build() {
    final _$result = _$v ??
        _$PopUp._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            duration: duration ?? 0,
            radius: radius ?? 0,
            flags: flags ?? PopUpBitfieldFlags(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Teleoperation Maneuver immutable class
///
class _$Teleoperation extends Teleoperation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String custom;

  factory _$Teleoperation([void Function(TeleoperationBuilder b) updates]) =>
      (TeleoperationBuilder()..update(updates)).build();

  _$Teleoperation._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.custom})
      : super._();

  @override
  Teleoperation rebuild(void Function(TeleoperationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TeleoperationBuilder toBuilder() => TeleoperationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Teleoperation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Teleoperation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Teleoperation Maneuver builder class
///
class TeleoperationBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Teleoperation, TeleoperationBuilder> {
  _$Teleoperation _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  TeleoperationBuilder();

  TeleoperationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TeleoperationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TeleoperationBuilder()..copyFromHeader(headerFrom);

  TeleoperationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Teleoperation other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Teleoperation;
  }

  @override
  void update(void Function(TeleoperationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Teleoperation build() {
    final _$result = _$v ??
        _$Teleoperation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Loiter Maneuver immutable class
///
class _$Loiter extends Loiter {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final LoiterEnumType type;
  @override
  final double radius;
  @override
  final double length;
  @override
  final double bearing;
  @override
  final LoiterEnumDirection direction;
  @override
  final String custom;

  factory _$Loiter([void Function(LoiterBuilder b) updates]) =>
      (LoiterBuilder()..update(updates)).build();

  _$Loiter._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.duration,
      this.speed,
      this.speedUnits,
      this.type,
      this.radius,
      this.length,
      this.bearing,
      this.direction,
      this.custom})
      : super._();

  @override
  Loiter rebuild(void Function(LoiterBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LoiterBuilder toBuilder() => LoiterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Loiter &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        duration == other.duration &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        type == other.type &&
        (radius == other.radius || radius - other.radius <= 1E-7) &&
        (length == other.length || length - other.length <= 1E-7) &&
        (bearing == other.bearing || bearing - other.bearing <= 1E-7) &&
        direction == other.direction &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc(0,
                                                                                timestamp?.hashCode),
                                                                            src?.hashCode),
                                                                        srcEnt?.hashCode),
                                                                    dst?.hashCode),
                                                                dstEnt?.hashCode),
                                                            timeout?.hashCode),
                                                        lat?.hashCode),
                                                    lon?.hashCode),
                                                z?.hashCode),
                                            zUnits?.hashCode),
                                        duration?.hashCode),
                                    speed?.hashCode),
                                speedUnits?.hashCode),
                            type?.hashCode),
                        radius?.hashCode),
                    length?.hashCode),
                bearing?.hashCode),
            direction?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Loiter')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('duration', '$duration (s)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('type', '$type (Enumerated)')
          ..add('radius', '$radius (m)')
          ..add('length', '$length (m)')
          ..add('bearing',
              '$bearing (rad)${bearing != null ? ' [${bearing * 180.0 / math.pi} (deg)]' : ''}')
          ..add('direction', '$direction (Enumerated)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Loiter Maneuver builder class
///
class LoiterBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Loiter, LoiterBuilder> {
  _$Loiter _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  int _duration = 0;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  LoiterEnumType _type = LoiterEnumType(0);
  LoiterEnumType get type => _$this._type;
  set type(LoiterEnumType type) => _$this._type = type;

  double _radius = 0;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  double _length = 0;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  double _bearing = 0;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  LoiterEnumDirection _direction = LoiterEnumDirection(0);
  LoiterEnumDirection get direction => _$this._direction;
  set direction(LoiterEnumDirection direction) => _$this._direction = direction;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  LoiterBuilder();

  LoiterBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LoiterBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LoiterBuilder()..copyFromHeader(headerFrom);

  LoiterBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _type = _$v.type;
      _radius = _$v.radius;
      _length = _$v.length;
      _bearing = _$v.bearing;
      _direction = _$v.direction;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Loiter other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Loiter;
  }

  @override
  void update(void Function(LoiterBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Loiter build() {
    final _$result = _$v ??
        _$Loiter._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            duration: duration ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            type: type ?? LoiterEnumType(0),
            radius: radius ?? 0,
            length: length ?? 0,
            bearing: bearing ?? 0,
            direction: direction ?? LoiterEnumDirection(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Idle Maneuver immutable class
///
class _$IdleManeuver extends IdleManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int duration;
  @override
  final String custom;

  factory _$IdleManeuver([void Function(IdleManeuverBuilder b) updates]) =>
      (IdleManeuverBuilder()..update(updates)).build();

  _$IdleManeuver._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.duration,
      this.custom})
      : super._();

  @override
  IdleManeuver rebuild(void Function(IdleManeuverBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  IdleManeuverBuilder toBuilder() => IdleManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IdleManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        duration == other.duration &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            duration?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IdleManeuver')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('duration', '$duration (s)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Idle Maneuver builder class
///
class IdleManeuverBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<IdleManeuver, IdleManeuverBuilder> {
  _$IdleManeuver _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _duration = 0;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  IdleManeuverBuilder();

  IdleManeuverBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  IdleManeuverBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      IdleManeuverBuilder()..copyFromHeader(headerFrom);

  IdleManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _duration = _$v.duration;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IdleManeuver other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$IdleManeuver;
  }

  @override
  void update(void Function(IdleManeuverBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$IdleManeuver build() {
    final _$result = _$v ??
        _$IdleManeuver._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            duration: duration ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Low Level Control Maneuver immutable class
///
class _$LowLevelControl extends LowLevelControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ControlCommand control;
  @override
  final int duration;
  @override
  final String custom;

  factory _$LowLevelControl(
          [void Function(LowLevelControlBuilder b) updates]) =>
      (LowLevelControlBuilder()..update(updates)).build();

  _$LowLevelControl._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.control,
      this.duration,
      this.custom})
      : super._();

  @override
  LowLevelControl rebuild(void Function(LowLevelControlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LowLevelControlBuilder toBuilder() => LowLevelControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LowLevelControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        control == other.control &&
        duration == other.duration &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                control?.hashCode),
            duration?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LowLevelControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('control', '$control')
          ..add('duration', '$duration (s)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Low Level Control Maneuver builder class
///
class LowLevelControlBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<LowLevelControl, LowLevelControlBuilder> {
  _$LowLevelControl _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ControlCommand _control;
  ControlCommand get control => _$this._control;
  set control(ControlCommand control) => _$this._control = control;

  int _duration = 0;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  LowLevelControlBuilder();

  LowLevelControlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LowLevelControlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LowLevelControlBuilder()..copyFromHeader(headerFrom);

  LowLevelControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _control = _$v.control;
      _duration = _$v.duration;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LowLevelControl other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LowLevelControl;
  }

  @override
  void update(void Function(LowLevelControlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LowLevelControl build() {
    final _$result = _$v ??
        _$LowLevelControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            control: control,
            duration: duration ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Rows Maneuver immutable class
///
class _$Rows extends Rows {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double bearing;
  @override
  final double crossAngle;
  @override
  final double width;
  @override
  final double length;
  @override
  final double hstep;
  @override
  final int coff;
  @override
  final int alternation;
  @override
  final RowsBitfieldFlags flags;
  @override
  final String custom;

  factory _$Rows([void Function(RowsBuilder b) updates]) =>
      (RowsBuilder()..update(updates)).build();

  _$Rows._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.bearing,
      this.crossAngle,
      this.width,
      this.length,
      this.hstep,
      this.coff,
      this.alternation,
      this.flags,
      this.custom})
      : super._();

  @override
  Rows rebuild(void Function(RowsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RowsBuilder toBuilder() => RowsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Rows &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        (bearing == other.bearing || bearing - other.bearing <= 1E-7) &&
        (crossAngle == other.crossAngle ||
            crossAngle - other.crossAngle <= 1E-7) &&
        (width == other.width || width - other.width <= 1E-7) &&
        (length == other.length || length - other.length <= 1E-7) &&
        (hstep == other.hstep || hstep - other.hstep <= 1E-7) &&
        coff == other.coff &&
        alternation == other.alternation &&
        flags == other.flags &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                                                                srcEnt?.hashCode),
                                                                            dst?.hashCode),
                                                                        dstEnt?.hashCode),
                                                                    timeout?.hashCode),
                                                                lat?.hashCode),
                                                            lon?.hashCode),
                                                        z?.hashCode),
                                                    zUnits?.hashCode),
                                                speed?.hashCode),
                                            speedUnits?.hashCode),
                                        bearing?.hashCode),
                                    crossAngle?.hashCode),
                                width?.hashCode),
                            length?.hashCode),
                        hstep?.hashCode),
                    coff?.hashCode),
                alternation?.hashCode),
            flags?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Rows')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('bearing',
              '$bearing (rad)${bearing != null ? ' [${bearing * 180.0 / math.pi} (deg)]' : ''}')
          ..add('crossAngle',
              '$crossAngle (rad)${crossAngle != null ? ' [${crossAngle * 180.0 / math.pi} (deg)]' : ''}')
          ..add('width', '$width (m)')
          ..add('length', '$length (m)')
          ..add('hstep', '$hstep (m)')
          ..add('coff', '$coff (m)')
          ..add('alternation', '$alternation (%)')
          ..add('flags', '$flags (Bitfield)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Rows Maneuver builder class
///
class RowsBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Rows, RowsBuilder> {
  _$Rows _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _bearing = 0;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _crossAngle = 0;
  double get crossAngle => _$this._crossAngle;
  set crossAngle(double crossAngle) => _$this._crossAngle = crossAngle;

  double _width = 0;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  double _length = 0;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  double _hstep = 30;
  double get hstep => _$this._hstep;
  set hstep(double hstep) => _$this._hstep = hstep;

  int _coff = 0;
  int get coff => _$this._coff;
  set coff(int coff) => _$this._coff = coff;

  int _alternation = 50;
  int get alternation => _$this._alternation;
  set alternation(int alternation) => _$this._alternation = alternation;

  RowsBitfieldFlags _flags = RowsBitfieldFlags(0);
  RowsBitfieldFlags get flags => _$this._flags;
  set flags(RowsBitfieldFlags flags) => _$this._flags = flags;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  RowsBuilder();

  RowsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RowsBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RowsBuilder()..copyFromHeader(headerFrom);

  RowsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _bearing = _$v.bearing;
      _crossAngle = _$v.crossAngle;
      _width = _$v.width;
      _length = _$v.length;
      _hstep = _$v.hstep;
      _coff = _$v.coff;
      _alternation = _$v.alternation;
      _flags = _$v.flags;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Rows other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Rows;
  }

  @override
  void update(void Function(RowsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Rows build() {
    final _$result = _$v ??
        _$Rows._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            bearing: bearing ?? 0,
            crossAngle: crossAngle ?? 0,
            width: width ?? 0,
            length: length ?? 0,
            hstep: hstep ?? 30,
            coff: coff ?? 0,
            alternation: alternation ?? 50,
            flags: flags ?? RowsBitfieldFlags(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Follow Path Maneuver immutable class
///
class _$FollowPath extends FollowPath {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final List<PathPoint> points;
  @override
  final String custom;

  factory _$FollowPath([void Function(FollowPathBuilder b) updates]) =>
      (FollowPathBuilder()..update(updates)).build();

  _$FollowPath._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.points,
      this.custom})
      : super._();

  @override
  FollowPath rebuild(void Function(FollowPathBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowPathBuilder toBuilder() => FollowPathBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowPath &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        DeepCollectionEquality().equals(points, other.points) &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            0,
                                                            timestamp
                                                                ?.hashCode),
                                                        src?.hashCode),
                                                    srcEnt?.hashCode),
                                                dst?.hashCode),
                                            dstEnt?.hashCode),
                                        timeout?.hashCode),
                                    lat?.hashCode),
                                lon?.hashCode),
                            z?.hashCode),
                        zUnits?.hashCode),
                    speed?.hashCode),
                speedUnits?.hashCode),
            points?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowPath')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('points', '$points')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Follow Path Maneuver builder class
///
class FollowPathBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<FollowPath, FollowPathBuilder> {
  _$FollowPath _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  List<PathPoint> _points = <PathPoint>[];
  List<PathPoint> get points => _$this._points;
  set points(List<PathPoint> points) => _$this._points = points;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FollowPathBuilder();

  FollowPathBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FollowPathBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FollowPathBuilder()..copyFromHeader(headerFrom);

  FollowPathBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _points = _$v.points;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowPath other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FollowPath;
  }

  @override
  void update(void Function(FollowPathBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowPath build() {
    final _$result = _$v ??
        _$FollowPath._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            points: points ?? <PathPoint>[],
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Path Point immutable class
///
class _$PathPoint extends PathPoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$PathPoint([void Function(PathPointBuilder b) updates]) =>
      (PathPointBuilder()..update(updates)).build();

  _$PathPoint._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  PathPoint rebuild(void Function(PathPointBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PathPointBuilder toBuilder() => PathPointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PathPoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                x?.hashCode),
            y?.hashCode),
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PathPoint')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', '$x (m)')
          ..add('y', '$y (m)')
          ..add('z', '$z (m)'))
        .toString();
  }
}

/// Path Point builder class
///
class PathPointBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<PathPoint, PathPointBuilder> {
  _$PathPoint _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  PathPointBuilder();

  PathPointBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PathPointBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PathPointBuilder()..copyFromHeader(headerFrom);

  PathPointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PathPoint other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PathPoint;
  }

  @override
  void update(void Function(PathPointBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PathPoint build() {
    final _$result = _$v ??
        _$PathPoint._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Yo-Yo Maneuver immutable class
///
class _$YoYo extends YoYo {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double amplitude;
  @override
  final double pitch;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final String custom;

  factory _$YoYo([void Function(YoYoBuilder b) updates]) =>
      (YoYoBuilder()..update(updates)).build();

  _$YoYo._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.amplitude,
      this.pitch,
      this.speed,
      this.speedUnits,
      this.custom})
      : super._();

  @override
  YoYo rebuild(void Function(YoYoBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  YoYoBuilder toBuilder() => YoYoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is YoYo &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (amplitude == other.amplitude || amplitude - other.amplitude <= 1E-7) &&
        (pitch == other.pitch || pitch - other.pitch <= 1E-7) &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                0,
                                                                timestamp
                                                                    ?.hashCode),
                                                            src?.hashCode),
                                                        srcEnt?.hashCode),
                                                    dst?.hashCode),
                                                dstEnt?.hashCode),
                                            timeout?.hashCode),
                                        lat?.hashCode),
                                    lon?.hashCode),
                                z?.hashCode),
                            zUnits?.hashCode),
                        amplitude?.hashCode),
                    pitch?.hashCode),
                speed?.hashCode),
            speedUnits?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('YoYo')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('amplitude', '$amplitude (m)')
          ..add('pitch',
              '$pitch (rad)${pitch != null ? ' [${pitch * 180.0 / math.pi} (deg)]' : ''}')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Yo-Yo Maneuver builder class
///
class YoYoBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<YoYo, YoYoBuilder> {
  _$YoYo _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _amplitude = 0;
  double get amplitude => _$this._amplitude;
  set amplitude(double amplitude) => _$this._amplitude = amplitude;

  double _pitch = 0;
  double get pitch => _$this._pitch;
  set pitch(double pitch) => _$this._pitch = pitch;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  YoYoBuilder();

  YoYoBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  YoYoBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      YoYoBuilder()..copyFromHeader(headerFrom);

  YoYoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _amplitude = _$v.amplitude;
      _pitch = _$v.pitch;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(YoYo other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$YoYo;
  }

  @override
  void update(void Function(YoYoBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$YoYo build() {
    final _$result = _$v ??
        _$YoYo._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            amplitude: amplitude ?? 0,
            pitch: pitch ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Teleoperation Done immutable class
///
class _$TeleoperationDone extends TeleoperationDone {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  factory _$TeleoperationDone(
          [void Function(TeleoperationDoneBuilder b) updates]) =>
      (TeleoperationDoneBuilder()..update(updates)).build();

  _$TeleoperationDone._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId})
      : super._();

  @override
  TeleoperationDone rebuild(
          void Function(TeleoperationDoneBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TeleoperationDoneBuilder toBuilder() =>
      TeleoperationDoneBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TeleoperationDone &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                srcEnt?.hashCode),
            dst?.hashCode),
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TeleoperationDone')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Teleoperation Done builder class
///
class TeleoperationDoneBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<TeleoperationDone, TeleoperationDoneBuilder> {
  _$TeleoperationDone _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  TeleoperationDoneBuilder();

  TeleoperationDoneBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TeleoperationDoneBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TeleoperationDoneBuilder()..copyFromHeader(headerFrom);

  TeleoperationDoneBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TeleoperationDone other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TeleoperationDone;
  }

  @override
  void update(void Function(TeleoperationDoneBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TeleoperationDone build() {
    final _$result = _$v ??
        _$TeleoperationDone._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Station Keeping immutable class
///
class _$StationKeeping extends StationKeeping {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double radius;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final String custom;

  factory _$StationKeeping([void Function(StationKeepingBuilder b) updates]) =>
      (StationKeepingBuilder()..update(updates)).build();

  _$StationKeeping._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.radius,
      this.duration,
      this.speed,
      this.speedUnits,
      this.custom})
      : super._();

  @override
  StationKeeping rebuild(void Function(StationKeepingBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  StationKeepingBuilder toBuilder() => StationKeepingBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StationKeeping &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (radius == other.radius || radius - other.radius <= 1E-7) &&
        duration == other.duration &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            0,
                                                            timestamp
                                                                ?.hashCode),
                                                        src?.hashCode),
                                                    srcEnt?.hashCode),
                                                dst?.hashCode),
                                            dstEnt?.hashCode),
                                        lat?.hashCode),
                                    lon?.hashCode),
                                z?.hashCode),
                            zUnits?.hashCode),
                        radius?.hashCode),
                    duration?.hashCode),
                speed?.hashCode),
            speedUnits?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StationKeeping')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('radius', '$radius (m)')
          ..add('duration', '$duration (s)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Station Keeping builder class
///
class StationKeepingBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<StationKeeping, StationKeepingBuilder> {
  _$StationKeeping _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _radius = 0;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  int _duration = 0;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  StationKeepingBuilder();

  StationKeepingBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  StationKeepingBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      StationKeepingBuilder()..copyFromHeader(headerFrom);

  StationKeepingBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _radius = _$v.radius;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StationKeeping other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$StationKeeping;
  }

  @override
  void update(void Function(StationKeepingBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$StationKeeping build() {
    final _$result = _$v ??
        _$StationKeeping._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            radius: radius ?? 0,
            duration: duration ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Elevator Maneuver immutable class
///
class _$Elevator extends Elevator {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final ElevatorBitfieldFlags flags;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double startZ;
  @override
  final ZUnitsEnum startZUnits;
  @override
  final double endZ;
  @override
  final ZUnitsEnum endZUnits;
  @override
  final double radius;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final String custom;

  factory _$Elevator([void Function(ElevatorBuilder b) updates]) =>
      (ElevatorBuilder()..update(updates)).build();

  _$Elevator._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.flags,
      this.lat,
      this.lon,
      this.startZ,
      this.startZUnits,
      this.endZ,
      this.endZUnits,
      this.radius,
      this.speed,
      this.speedUnits,
      this.custom})
      : super._();

  @override
  Elevator rebuild(void Function(ElevatorBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ElevatorBuilder toBuilder() => ElevatorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Elevator &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        flags == other.flags &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (startZ == other.startZ || startZ - other.startZ <= 1E-7) &&
        startZUnits == other.startZUnits &&
        (endZ == other.endZ || endZ - other.endZ <= 1E-7) &&
        endZUnits == other.endZUnits &&
        (radius == other.radius || radius - other.radius <= 1E-7) &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        0,
                                                                        timestamp
                                                                            ?.hashCode),
                                                                    src
                                                                        ?.hashCode),
                                                                srcEnt
                                                                    ?.hashCode),
                                                            dst?.hashCode),
                                                        dstEnt?.hashCode),
                                                    timeout?.hashCode),
                                                flags?.hashCode),
                                            lat?.hashCode),
                                        lon?.hashCode),
                                    startZ?.hashCode),
                                startZUnits?.hashCode),
                            endZ?.hashCode),
                        endZUnits?.hashCode),
                    radius?.hashCode),
                speed?.hashCode),
            speedUnits?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Elevator')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('flags', '$flags (Bitfield)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('startZ', '$startZ (m)')
          ..add('startZUnits', '$startZUnits (Enumerated)')
          ..add('endZ', '$endZ (m)')
          ..add('endZUnits', '$endZUnits (Enumerated)')
          ..add('radius', '$radius (m)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Elevator Maneuver builder class
///
class ElevatorBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Elevator, ElevatorBuilder> {
  _$Elevator _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  ElevatorBitfieldFlags _flags = ElevatorBitfieldFlags(0);
  ElevatorBitfieldFlags get flags => _$this._flags;
  set flags(ElevatorBitfieldFlags flags) => _$this._flags = flags;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _startZ = 0;
  double get startZ => _$this._startZ;
  set startZ(double startZ) => _$this._startZ = startZ;

  ZUnitsEnum _startZUnits = ZUnitsEnum(0);
  ZUnitsEnum get startZUnits => _$this._startZUnits;
  set startZUnits(ZUnitsEnum startZUnits) => _$this._startZUnits = startZUnits;

  double _endZ = 0;
  double get endZ => _$this._endZ;
  set endZ(double endZ) => _$this._endZ = endZ;

  ZUnitsEnum _endZUnits = ZUnitsEnum(0);
  ZUnitsEnum get endZUnits => _$this._endZUnits;
  set endZUnits(ZUnitsEnum endZUnits) => _$this._endZUnits = endZUnits;

  double _radius = 0;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  ElevatorBuilder();

  ElevatorBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ElevatorBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ElevatorBuilder()..copyFromHeader(headerFrom);

  ElevatorBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _flags = _$v.flags;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _startZ = _$v.startZ;
      _startZUnits = _$v.startZUnits;
      _endZ = _$v.endZ;
      _endZUnits = _$v.endZUnits;
      _radius = _$v.radius;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Elevator other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Elevator;
  }

  @override
  void update(void Function(ElevatorBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Elevator build() {
    final _$result = _$v ??
        _$Elevator._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            flags: flags ?? ElevatorBitfieldFlags(0),
            lat: lat ?? 0,
            lon: lon ?? 0,
            startZ: startZ ?? 0,
            startZUnits: startZUnits ?? ZUnitsEnum(0),
            endZ: endZ ?? 0,
            endZUnits: endZUnits ?? ZUnitsEnum(0),
            radius: radius ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Follow Trajectory immutable class
///
class _$FollowTrajectory extends FollowTrajectory {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final List<TrajectoryPoint> points;
  @override
  final String custom;

  factory _$FollowTrajectory(
          [void Function(FollowTrajectoryBuilder b) updates]) =>
      (FollowTrajectoryBuilder()..update(updates)).build();

  _$FollowTrajectory._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.points,
      this.custom})
      : super._();

  @override
  FollowTrajectory rebuild(void Function(FollowTrajectoryBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowTrajectoryBuilder toBuilder() =>
      FollowTrajectoryBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowTrajectory &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        DeepCollectionEquality().equals(points, other.points) &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            0,
                                                            timestamp
                                                                ?.hashCode),
                                                        src?.hashCode),
                                                    srcEnt?.hashCode),
                                                dst?.hashCode),
                                            dstEnt?.hashCode),
                                        timeout?.hashCode),
                                    lat?.hashCode),
                                lon?.hashCode),
                            z?.hashCode),
                        zUnits?.hashCode),
                    speed?.hashCode),
                speedUnits?.hashCode),
            points?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowTrajectory')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('points', '$points')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Follow Trajectory builder class
///
class FollowTrajectoryBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<FollowTrajectory, FollowTrajectoryBuilder> {
  _$FollowTrajectory _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  List<TrajectoryPoint> _points = <TrajectoryPoint>[];
  List<TrajectoryPoint> get points => _$this._points;
  set points(List<TrajectoryPoint> points) => _$this._points = points;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FollowTrajectoryBuilder();

  FollowTrajectoryBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FollowTrajectoryBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FollowTrajectoryBuilder()..copyFromHeader(headerFrom);

  FollowTrajectoryBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _points = _$v.points;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowTrajectory other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FollowTrajectory;
  }

  @override
  void update(void Function(FollowTrajectoryBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowTrajectory build() {
    final _$result = _$v ??
        _$FollowTrajectory._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            points: points ?? <TrajectoryPoint>[],
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Trajectory Point immutable class
///
class _$TrajectoryPoint extends TrajectoryPoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double t;

  factory _$TrajectoryPoint(
          [void Function(TrajectoryPointBuilder b) updates]) =>
      (TrajectoryPointBuilder()..update(updates)).build();

  _$TrajectoryPoint._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.x,
      this.y,
      this.z,
      this.t})
      : super._();

  @override
  TrajectoryPoint rebuild(void Function(TrajectoryPointBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TrajectoryPointBuilder toBuilder() => TrajectoryPointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrajectoryPoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        (t == other.t || t - other.t <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    x?.hashCode),
                y?.hashCode),
            z?.hashCode),
        t?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrajectoryPoint')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('x', '$x (m)')
          ..add('y', '$y (m)')
          ..add('z', '$z (m)')
          ..add('t', '$t (s)'))
        .toString();
  }
}

/// Trajectory Point builder class
///
class TrajectoryPointBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<TrajectoryPoint, TrajectoryPointBuilder> {
  _$TrajectoryPoint _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _t = 0;
  double get t => _$this._t;
  set t(double t) => _$this._t = t;

  TrajectoryPointBuilder();

  TrajectoryPointBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TrajectoryPointBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TrajectoryPointBuilder()..copyFromHeader(headerFrom);

  TrajectoryPointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _t = _$v.t;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrajectoryPoint other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TrajectoryPoint;
  }

  @override
  void update(void Function(TrajectoryPointBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TrajectoryPoint build() {
    final _$result = _$v ??
        _$TrajectoryPoint._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            t: t ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Custom Maneuver immutable class
///
class _$CustomManeuver extends CustomManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final String name;
  @override
  final String custom;

  factory _$CustomManeuver([void Function(CustomManeuverBuilder b) updates]) =>
      (CustomManeuverBuilder()..update(updates)).build();

  _$CustomManeuver._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.name,
      this.custom})
      : super._();

  @override
  CustomManeuver rebuild(void Function(CustomManeuverBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CustomManeuverBuilder toBuilder() => CustomManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CustomManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        name == other.name &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                timeout?.hashCode),
            name?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CustomManeuver')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('name', '$name')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Custom Maneuver builder class
///
class CustomManeuverBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<CustomManeuver, CustomManeuverBuilder> {
  _$CustomManeuver _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  CustomManeuverBuilder();

  CustomManeuverBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CustomManeuverBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CustomManeuverBuilder()..copyFromHeader(headerFrom);

  CustomManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _name = _$v.name;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CustomManeuver other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$CustomManeuver;
  }

  @override
  void update(void Function(CustomManeuverBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$CustomManeuver build() {
    final _$result = _$v ??
        _$CustomManeuver._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            name: name ?? '',
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Formation immutable class
///
class _$VehicleFormation extends VehicleFormation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final List<TrajectoryPoint> points;
  @override
  final List<VehicleFormationParticipant> participants;
  @override
  final double startTime;
  @override
  final String custom;

  factory _$VehicleFormation(
          [void Function(VehicleFormationBuilder b) updates]) =>
      (VehicleFormationBuilder()..update(updates)).build();

  _$VehicleFormation._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.points,
      this.participants,
      this.startTime,
      this.custom})
      : super._();

  @override
  VehicleFormation rebuild(void Function(VehicleFormationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleFormationBuilder toBuilder() =>
      VehicleFormationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleFormation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        DeepCollectionEquality().equals(points, other.points) &&
        DeepCollectionEquality().equals(participants, other.participants) &&
        (startTime == other.startTime || startTime - other.startTime <= 1E-7) &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                0,
                                                                timestamp
                                                                    ?.hashCode),
                                                            src?.hashCode),
                                                        srcEnt?.hashCode),
                                                    dst?.hashCode),
                                                dstEnt?.hashCode),
                                            lat?.hashCode),
                                        lon?.hashCode),
                                    z?.hashCode),
                                zUnits?.hashCode),
                            speed?.hashCode),
                        speedUnits?.hashCode),
                    points?.hashCode),
                participants?.hashCode),
            startTime?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleFormation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('points', '$points')
          ..add('participants', '$participants')
          ..add('startTime', '$startTime (s)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Vehicle Formation builder class
///
class VehicleFormationBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<VehicleFormation, VehicleFormationBuilder> {
  _$VehicleFormation _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  List<TrajectoryPoint> _points = <TrajectoryPoint>[];
  List<TrajectoryPoint> get points => _$this._points;
  set points(List<TrajectoryPoint> points) => _$this._points = points;

  List<VehicleFormationParticipant> _participants =
      <VehicleFormationParticipant>[];
  List<VehicleFormationParticipant> get participants => _$this._participants;
  set participants(List<VehicleFormationParticipant> participants) =>
      _$this._participants = participants;

  double _startTime = 0;
  double get startTime => _$this._startTime;
  set startTime(double startTime) => _$this._startTime = startTime;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  VehicleFormationBuilder();

  VehicleFormationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  VehicleFormationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      VehicleFormationBuilder()..copyFromHeader(headerFrom);

  VehicleFormationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _points = _$v.points;
      _participants = _$v.participants;
      _startTime = _$v.startTime;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleFormation other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleFormation;
  }

  @override
  void update(void Function(VehicleFormationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleFormation build() {
    final _$result = _$v ??
        _$VehicleFormation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            points: points ?? <TrajectoryPoint>[],
            participants: participants ?? <VehicleFormationParticipant>[],
            startTime: startTime ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Formation Participant immutable class
///
class _$VehicleFormationParticipant extends VehicleFormationParticipant {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int vid;
  @override
  final double offX;
  @override
  final double offY;
  @override
  final double offZ;

  factory _$VehicleFormationParticipant(
          [void Function(VehicleFormationParticipantBuilder b) updates]) =>
      (VehicleFormationParticipantBuilder()..update(updates)).build();

  _$VehicleFormationParticipant._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.vid,
      this.offX,
      this.offY,
      this.offZ})
      : super._();

  @override
  VehicleFormationParticipant rebuild(
          void Function(VehicleFormationParticipantBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleFormationParticipantBuilder toBuilder() =>
      VehicleFormationParticipantBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleFormationParticipant &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        vid == other.vid &&
        (offX == other.offX || offX - other.offX <= 1E-7) &&
        (offY == other.offY || offY - other.offY <= 1E-7) &&
        (offZ == other.offZ || offZ - other.offZ <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    vid?.hashCode),
                offX?.hashCode),
            offY?.hashCode),
        offZ?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleFormationParticipant')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('vid', '$vid')
          ..add('offX', '$offX (m)')
          ..add('offY', '$offY (m)')
          ..add('offZ', '$offZ (m)'))
        .toString();
  }
}

/// Vehicle Formation Participant builder class
///
class VehicleFormationParticipantBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<VehicleFormationParticipant,
            VehicleFormationParticipantBuilder> {
  _$VehicleFormationParticipant _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _vid = 0;
  int get vid => _$this._vid;
  set vid(int vid) => _$this._vid = vid;

  double _offX = 0;
  double get offX => _$this._offX;
  set offX(double offX) => _$this._offX = offX;

  double _offY = 0;
  double get offY => _$this._offY;
  set offY(double offY) => _$this._offY = offY;

  double _offZ = 0;
  double get offZ => _$this._offZ;
  set offZ(double offZ) => _$this._offZ = offZ;

  VehicleFormationParticipantBuilder();

  VehicleFormationParticipantBuilder.fromHeader(
      ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  VehicleFormationParticipantBuilder newInstance(
          [ImcBuilderHeaderPart headerFrom]) =>
      VehicleFormationParticipantBuilder()..copyFromHeader(headerFrom);

  VehicleFormationParticipantBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _vid = _$v.vid;
      _offX = _$v.offX;
      _offY = _$v.offY;
      _offZ = _$v.offZ;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleFormationParticipant other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleFormationParticipant;
  }

  @override
  void update(void Function(VehicleFormationParticipantBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleFormationParticipant build() {
    final _$result = _$v ??
        _$VehicleFormationParticipant._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            vid: vid ?? 0,
            offX: offX ?? 0,
            offY: offY ?? 0,
            offZ: offZ ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Stop Maneuver immutable class
///
class _$StopManeuver extends StopManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  factory _$StopManeuver([void Function(StopManeuverBuilder b) updates]) =>
      (StopManeuverBuilder()..update(updates)).build();

  _$StopManeuver._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId})
      : super._();

  @override
  StopManeuver rebuild(void Function(StopManeuverBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  StopManeuverBuilder toBuilder() => StopManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StopManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                srcEnt?.hashCode),
            dst?.hashCode),
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StopManeuver')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Stop Maneuver builder class
///
class StopManeuverBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<StopManeuver, StopManeuverBuilder> {
  _$StopManeuver _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  StopManeuverBuilder();

  StopManeuverBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  StopManeuverBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      StopManeuverBuilder()..copyFromHeader(headerFrom);

  StopManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StopManeuver other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$StopManeuver;
  }

  @override
  void update(void Function(StopManeuverBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$StopManeuver build() {
    final _$result = _$v ??
        _$StopManeuver._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Register Maneuver immutable class
///
class _$RegisterManeuver extends RegisterManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int mid;

  factory _$RegisterManeuver(
          [void Function(RegisterManeuverBuilder b) updates]) =>
      (RegisterManeuverBuilder()..update(updates)).build();

  _$RegisterManeuver._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.mid})
      : super._();

  @override
  RegisterManeuver rebuild(void Function(RegisterManeuverBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RegisterManeuverBuilder toBuilder() =>
      RegisterManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RegisterManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        mid == other.mid;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        mid?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RegisterManeuver')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('mid', '$mid'))
        .toString();
  }
}

/// Register Maneuver builder class
///
class RegisterManeuverBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<RegisterManeuver, RegisterManeuverBuilder> {
  _$RegisterManeuver _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _mid = 0;
  int get mid => _$this._mid;
  set mid(int mid) => _$this._mid = mid;

  RegisterManeuverBuilder();

  RegisterManeuverBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RegisterManeuverBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RegisterManeuverBuilder()..copyFromHeader(headerFrom);

  RegisterManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _mid = _$v.mid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RegisterManeuver other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$RegisterManeuver;
  }

  @override
  void update(void Function(RegisterManeuverBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$RegisterManeuver build() {
    final _$result = _$v ??
        _$RegisterManeuver._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            mid: mid ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Maneuver Control State immutable class
///
class _$ManeuverControlState extends ManeuverControlState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ManeuverControlStateEnumState state;
  @override
  final int eta;
  @override
  final String info;

  factory _$ManeuverControlState(
          [void Function(ManeuverControlStateBuilder b) updates]) =>
      (ManeuverControlStateBuilder()..update(updates)).build();

  _$ManeuverControlState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.state,
      this.eta,
      this.info})
      : super._();

  @override
  ManeuverControlState rebuild(
          void Function(ManeuverControlStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ManeuverControlStateBuilder toBuilder() =>
      ManeuverControlStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ManeuverControlState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == other.state &&
        eta == other.eta &&
        info == other.info;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                state?.hashCode),
            eta?.hashCode),
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ManeuverControlState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', '$state (Enumerated)')
          ..add('eta', '$eta (s)')
          ..add('info', '$info'))
        .toString();
  }
}

/// Maneuver Control State builder class
///
class ManeuverControlStateBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<ManeuverControlState,
            ManeuverControlStateBuilder> {
  _$ManeuverControlState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ManeuverControlStateEnumState _state = ManeuverControlStateEnumState(0);
  ManeuverControlStateEnumState get state => _$this._state;
  set state(ManeuverControlStateEnumState state) => _$this._state = state;

  int _eta = 0;
  int get eta => _$this._eta;
  set eta(int eta) => _$this._eta = eta;

  String _info = '';
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  ManeuverControlStateBuilder();

  ManeuverControlStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ManeuverControlStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ManeuverControlStateBuilder()..copyFromHeader(headerFrom);

  ManeuverControlStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _eta = _$v.eta;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ManeuverControlState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ManeuverControlState;
  }

  @override
  void update(void Function(ManeuverControlStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ManeuverControlState build() {
    final _$result = _$v ??
        _$ManeuverControlState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? ManeuverControlStateEnumState(0),
            eta: eta ?? 0,
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Follow System immutable class
///
class _$FollowSystem extends FollowSystem {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int system;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;

  factory _$FollowSystem([void Function(FollowSystemBuilder b) updates]) =>
      (FollowSystemBuilder()..update(updates)).build();

  _$FollowSystem._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.system,
      this.duration,
      this.speed,
      this.speedUnits,
      this.x,
      this.y,
      this.z,
      this.zUnits})
      : super._();

  @override
  FollowSystem rebuild(void Function(FollowSystemBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowSystemBuilder toBuilder() => FollowSystemBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowSystem &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        system == other.system &&
        duration == other.duration &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, timestamp?.hashCode),
                                                    src?.hashCode),
                                                srcEnt?.hashCode),
                                            dst?.hashCode),
                                        dstEnt?.hashCode),
                                    system?.hashCode),
                                duration?.hashCode),
                            speed?.hashCode),
                        speedUnits?.hashCode),
                    x?.hashCode),
                y?.hashCode),
            z?.hashCode),
        zUnits?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowSystem')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('system', '$system')
          ..add('duration', '$duration (s)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('x', '$x')
          ..add('y', '$y')
          ..add('z', '$z')
          ..add('zUnits', '$zUnits (Enumerated)'))
        .toString();
  }
}

/// Follow System builder class
///
class FollowSystemBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<FollowSystem, FollowSystemBuilder> {
  _$FollowSystem _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _system = 0;
  int get system => _$this._system;
  set system(int system) => _$this._system = system;

  int _duration = 0;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  FollowSystemBuilder();

  FollowSystemBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FollowSystemBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FollowSystemBuilder()..copyFromHeader(headerFrom);

  FollowSystemBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _system = _$v.system;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowSystem other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FollowSystem;
  }

  @override
  void update(void Function(FollowSystemBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowSystem build() {
    final _$result = _$v ??
        _$FollowSystem._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            system: system ?? 0,
            duration: duration ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0));
    replace(_$result);
    return _$result;
  }
}

/// Communications Relay immutable class
///
class _$CommsRelay extends CommsRelay {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final int duration;
  @override
  final int sysA;
  @override
  final int sysB;
  @override
  final double moveThreshold;

  factory _$CommsRelay([void Function(CommsRelayBuilder b) updates]) =>
      (CommsRelayBuilder()..update(updates)).build();

  _$CommsRelay._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.speed,
      this.speedUnits,
      this.duration,
      this.sysA,
      this.sysB,
      this.moveThreshold})
      : super._();

  @override
  CommsRelay rebuild(void Function(CommsRelayBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CommsRelayBuilder toBuilder() => CommsRelayBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CommsRelay &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        duration == other.duration &&
        sysA == other.sysA &&
        sysB == other.sysB &&
        (moveThreshold == other.moveThreshold ||
            moveThreshold - other.moveThreshold <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, timestamp?.hashCode),
                                                    src?.hashCode),
                                                srcEnt?.hashCode),
                                            dst?.hashCode),
                                        dstEnt?.hashCode),
                                    lat?.hashCode),
                                lon?.hashCode),
                            speed?.hashCode),
                        speedUnits?.hashCode),
                    duration?.hashCode),
                sysA?.hashCode),
            sysB?.hashCode),
        moveThreshold?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CommsRelay')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('duration', '$duration (s)')
          ..add('sysA', '$sysA')
          ..add('sysB', '$sysB')
          ..add('moveThreshold', '$moveThreshold (m)'))
        .toString();
  }
}

/// Communications Relay builder class
///
class CommsRelayBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<CommsRelay, CommsRelayBuilder> {
  _$CommsRelay _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  int _duration = 0;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  int _sysA = 0;
  int get sysA => _$this._sysA;
  set sysA(int sysA) => _$this._sysA = sysA;

  int _sysB = 0;
  int get sysB => _$this._sysB;
  set sysB(int sysB) => _$this._sysB = sysB;

  double _moveThreshold = 0;
  double get moveThreshold => _$this._moveThreshold;
  set moveThreshold(double moveThreshold) =>
      _$this._moveThreshold = moveThreshold;

  CommsRelayBuilder();

  CommsRelayBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CommsRelayBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CommsRelayBuilder()..copyFromHeader(headerFrom);

  CommsRelayBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _duration = _$v.duration;
      _sysA = _$v.sysA;
      _sysB = _$v.sysB;
      _moveThreshold = _$v.moveThreshold;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CommsRelay other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$CommsRelay;
  }

  @override
  void update(void Function(CommsRelayBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$CommsRelay build() {
    final _$result = _$v ??
        _$CommsRelay._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            duration: duration ?? 0,
            sysA: sysA ?? 0,
            sysB: sysB ?? 0,
            moveThreshold: moveThreshold ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Cover Area immutable class
///
class _$CoverArea extends CoverArea {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final List<PolygonVertex> polygon;
  @override
  final String custom;

  factory _$CoverArea([void Function(CoverAreaBuilder b) updates]) =>
      (CoverAreaBuilder()..update(updates)).build();

  _$CoverArea._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.polygon,
      this.custom})
      : super._();

  @override
  CoverArea rebuild(void Function(CoverAreaBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CoverAreaBuilder toBuilder() => CoverAreaBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CoverArea &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        DeepCollectionEquality().equals(polygon, other.polygon) &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, timestamp?.hashCode),
                                                    src?.hashCode),
                                                srcEnt?.hashCode),
                                            dst?.hashCode),
                                        dstEnt?.hashCode),
                                    lat?.hashCode),
                                lon?.hashCode),
                            z?.hashCode),
                        zUnits?.hashCode),
                    speed?.hashCode),
                speedUnits?.hashCode),
            polygon?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CoverArea')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('polygon', '$polygon')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Cover Area builder class
///
class CoverAreaBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<CoverArea, CoverAreaBuilder> {
  _$CoverArea _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  List<PolygonVertex> _polygon = <PolygonVertex>[];
  List<PolygonVertex> get polygon => _$this._polygon;
  set polygon(List<PolygonVertex> polygon) => _$this._polygon = polygon;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  CoverAreaBuilder();

  CoverAreaBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CoverAreaBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CoverAreaBuilder()..copyFromHeader(headerFrom);

  CoverAreaBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _polygon = _$v.polygon;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CoverArea other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$CoverArea;
  }

  @override
  void update(void Function(CoverAreaBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$CoverArea build() {
    final _$result = _$v ??
        _$CoverArea._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            polygon: polygon ?? <PolygonVertex>[],
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Polygon Vertex immutable class
///
class _$PolygonVertex extends PolygonVertex {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;

  factory _$PolygonVertex([void Function(PolygonVertexBuilder b) updates]) =>
      (PolygonVertexBuilder()..update(updates)).build();

  _$PolygonVertex._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon})
      : super._();

  @override
  PolygonVertex rebuild(void Function(PolygonVertexBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PolygonVertexBuilder toBuilder() => PolygonVertexBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PolygonVertex &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            lat?.hashCode),
        lon?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PolygonVertex')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// Polygon Vertex builder class
///
class PolygonVertexBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<PolygonVertex, PolygonVertexBuilder> {
  _$PolygonVertex _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  PolygonVertexBuilder();

  PolygonVertexBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PolygonVertexBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PolygonVertexBuilder()..copyFromHeader(headerFrom);

  PolygonVertexBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PolygonVertex other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PolygonVertex;
  }

  @override
  void update(void Function(PolygonVertexBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PolygonVertex build() {
    final _$result = _$v ??
        _$PolygonVertex._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Compass Calibration Maneuver immutable class
///
class _$CompassCalibration extends CompassCalibration {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double pitch;
  @override
  final double amplitude;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double radius;
  @override
  final CompassCalibrationEnumDirection direction;
  @override
  final String custom;

  factory _$CompassCalibration(
          [void Function(CompassCalibrationBuilder b) updates]) =>
      (CompassCalibrationBuilder()..update(updates)).build();

  _$CompassCalibration._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.pitch,
      this.amplitude,
      this.duration,
      this.speed,
      this.speedUnits,
      this.radius,
      this.direction,
      this.custom})
      : super._();

  @override
  CompassCalibration rebuild(
          void Function(CompassCalibrationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CompassCalibrationBuilder toBuilder() =>
      CompassCalibrationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CompassCalibration &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (pitch == other.pitch || pitch - other.pitch <= 1E-7) &&
        (amplitude == other.amplitude || amplitude - other.amplitude <= 1E-7) &&
        duration == other.duration &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        (radius == other.radius || radius - other.radius <= 1E-7) &&
        direction == other.direction &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            0,
                                                                            timestamp
                                                                                ?.hashCode),
                                                                        src
                                                                            ?.hashCode),
                                                                    srcEnt
                                                                        ?.hashCode),
                                                                dst?.hashCode),
                                                            dstEnt?.hashCode),
                                                        timeout?.hashCode),
                                                    lat?.hashCode),
                                                lon?.hashCode),
                                            z?.hashCode),
                                        zUnits?.hashCode),
                                    pitch?.hashCode),
                                amplitude?.hashCode),
                            duration?.hashCode),
                        speed?.hashCode),
                    speedUnits?.hashCode),
                radius?.hashCode),
            direction?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CompassCalibration')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('pitch',
              '$pitch (rad)${pitch != null ? ' [${pitch * 180.0 / math.pi} (deg)]' : ''}')
          ..add('amplitude', '$amplitude (m)')
          ..add('duration', '$duration (s)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('radius', '$radius (m)')
          ..add('direction', '$direction (Enumerated)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Compass Calibration Maneuver builder class
///
class CompassCalibrationBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<CompassCalibration, CompassCalibrationBuilder> {
  _$CompassCalibration _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _pitch = 0;
  double get pitch => _$this._pitch;
  set pitch(double pitch) => _$this._pitch = pitch;

  double _amplitude = 0;
  double get amplitude => _$this._amplitude;
  set amplitude(double amplitude) => _$this._amplitude = amplitude;

  int _duration = 0;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _radius = 0;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  CompassCalibrationEnumDirection _direction =
      CompassCalibrationEnumDirection(0);
  CompassCalibrationEnumDirection get direction => _$this._direction;
  set direction(CompassCalibrationEnumDirection direction) =>
      _$this._direction = direction;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  CompassCalibrationBuilder();

  CompassCalibrationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CompassCalibrationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CompassCalibrationBuilder()..copyFromHeader(headerFrom);

  CompassCalibrationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _pitch = _$v.pitch;
      _amplitude = _$v.amplitude;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _radius = _$v.radius;
      _direction = _$v.direction;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CompassCalibration other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$CompassCalibration;
  }

  @override
  void update(void Function(CompassCalibrationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$CompassCalibration build() {
    final _$result = _$v ??
        _$CompassCalibration._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            pitch: pitch ?? 0,
            amplitude: amplitude ?? 0,
            duration: duration ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            radius: radius ?? 0,
            direction: direction ?? CompassCalibrationEnumDirection(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Formation Parameters immutable class
///
class _$FormationParameters extends FormationParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String formationName;
  @override
  final FormationParametersEnumReferenceFrame referenceFrame;
  @override
  final List<VehicleFormationParticipant> participants;
  @override
  final String custom;

  factory _$FormationParameters(
          [void Function(FormationParametersBuilder b) updates]) =>
      (FormationParametersBuilder()..update(updates)).build();

  _$FormationParameters._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.formationName,
      this.referenceFrame,
      this.participants,
      this.custom})
      : super._();

  @override
  FormationParameters rebuild(
          void Function(FormationParametersBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationParametersBuilder toBuilder() =>
      FormationParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        formationName == other.formationName &&
        referenceFrame == other.referenceFrame &&
        DeepCollectionEquality().equals(participants, other.participants) &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    formationName?.hashCode),
                referenceFrame?.hashCode),
            participants?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationParameters')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('formationName', '$formationName')
          ..add('referenceFrame', '$referenceFrame (Enumerated)')
          ..add('participants', '$participants')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Formation Parameters builder class
///
class FormationParametersBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<FormationParameters,
            FormationParametersBuilder> {
  _$FormationParameters _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _formationName = '';
  String get formationName => _$this._formationName;
  set formationName(String formationName) =>
      _$this._formationName = formationName;

  FormationParametersEnumReferenceFrame _referenceFrame =
      FormationParametersEnumReferenceFrame(0);
  FormationParametersEnumReferenceFrame get referenceFrame =>
      _$this._referenceFrame;
  set referenceFrame(FormationParametersEnumReferenceFrame referenceFrame) =>
      _$this._referenceFrame = referenceFrame;

  List<VehicleFormationParticipant> _participants =
      <VehicleFormationParticipant>[];
  List<VehicleFormationParticipant> get participants => _$this._participants;
  set participants(List<VehicleFormationParticipant> participants) =>
      _$this._participants = participants;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FormationParametersBuilder();

  FormationParametersBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FormationParametersBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FormationParametersBuilder()..copyFromHeader(headerFrom);

  FormationParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _formationName = _$v.formationName;
      _referenceFrame = _$v.referenceFrame;
      _participants = _$v.participants;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationParameters other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FormationParameters;
  }

  @override
  void update(void Function(FormationParametersBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationParameters build() {
    final _$result = _$v ??
        _$FormationParameters._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            formationName: formationName ?? '',
            referenceFrame:
                referenceFrame ?? FormationParametersEnumReferenceFrame(0),
            participants: participants ?? <VehicleFormationParticipant>[],
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Formation Plan Execution immutable class
///
class _$FormationPlanExecution extends FormationPlanExecution {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String groupName;
  @override
  final String formationName;
  @override
  final String planId;
  @override
  final String description;
  @override
  final double leaderSpeed;
  @override
  final double leaderBankLim;
  @override
  final double posSimErrLim;
  @override
  final double posSimErrWrn;
  @override
  final int posSimErrTimeout;
  @override
  final double convergMax;
  @override
  final int convergTimeout;
  @override
  final int commsTimeout;
  @override
  final double turbLim;
  @override
  final String custom;

  factory _$FormationPlanExecution(
          [void Function(FormationPlanExecutionBuilder b) updates]) =>
      (FormationPlanExecutionBuilder()..update(updates)).build();

  _$FormationPlanExecution._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.groupName,
      this.formationName,
      this.planId,
      this.description,
      this.leaderSpeed,
      this.leaderBankLim,
      this.posSimErrLim,
      this.posSimErrWrn,
      this.posSimErrTimeout,
      this.convergMax,
      this.convergTimeout,
      this.commsTimeout,
      this.turbLim,
      this.custom})
      : super._();

  @override
  FormationPlanExecution rebuild(
          void Function(FormationPlanExecutionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationPlanExecutionBuilder toBuilder() =>
      FormationPlanExecutionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationPlanExecution &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        groupName == other.groupName &&
        formationName == other.formationName &&
        planId == other.planId &&
        description == other.description &&
        (leaderSpeed == other.leaderSpeed ||
            leaderSpeed - other.leaderSpeed <= 1E-7) &&
        (leaderBankLim == other.leaderBankLim ||
            leaderBankLim - other.leaderBankLim <= 1E-7) &&
        (posSimErrLim == other.posSimErrLim ||
            posSimErrLim - other.posSimErrLim <= 1E-7) &&
        (posSimErrWrn == other.posSimErrWrn ||
            posSimErrWrn - other.posSimErrWrn <= 1E-7) &&
        posSimErrTimeout == other.posSimErrTimeout &&
        (convergMax == other.convergMax ||
            convergMax - other.convergMax <= 1E-7) &&
        convergTimeout == other.convergTimeout &&
        commsTimeout == other.commsTimeout &&
        (turbLim == other.turbLim || turbLim - other.turbLim <= 1E-7) &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc(0,
                                                                                timestamp?.hashCode),
                                                                            src?.hashCode),
                                                                        srcEnt?.hashCode),
                                                                    dst?.hashCode),
                                                                dstEnt?.hashCode),
                                                            groupName?.hashCode),
                                                        formationName?.hashCode),
                                                    planId?.hashCode),
                                                description?.hashCode),
                                            leaderSpeed?.hashCode),
                                        leaderBankLim?.hashCode),
                                    posSimErrLim?.hashCode),
                                posSimErrWrn?.hashCode),
                            posSimErrTimeout?.hashCode),
                        convergMax?.hashCode),
                    convergTimeout?.hashCode),
                commsTimeout?.hashCode),
            turbLim?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationPlanExecution')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('groupName', '$groupName')
          ..add('formationName', '$formationName')
          ..add('planId', '$planId')
          ..add('description', '$description')
          ..add('leaderSpeed', '$leaderSpeed (m/s)')
          ..add('leaderBankLim', '$leaderBankLim (m/s)')
          ..add('posSimErrLim', '$posSimErrLim (m)')
          ..add('posSimErrWrn', '$posSimErrWrn (m)')
          ..add('posSimErrTimeout', '$posSimErrTimeout (s)')
          ..add('convergMax', '$convergMax (m)')
          ..add('convergTimeout', '$convergTimeout (s)')
          ..add('commsTimeout', '$commsTimeout (s)')
          ..add('turbLim', '$turbLim (m/s)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Formation Plan Execution builder class
///
class FormationPlanExecutionBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<FormationPlanExecution,
            FormationPlanExecutionBuilder> {
  _$FormationPlanExecution _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _groupName = '';
  String get groupName => _$this._groupName;
  set groupName(String groupName) => _$this._groupName = groupName;

  String _formationName = '';
  String get formationName => _$this._formationName;
  set formationName(String formationName) =>
      _$this._formationName = formationName;

  String _planId = '';
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  String _description = '';
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  double _leaderSpeed = 0;
  double get leaderSpeed => _$this._leaderSpeed;
  set leaderSpeed(double leaderSpeed) => _$this._leaderSpeed = leaderSpeed;

  double _leaderBankLim = 0;
  double get leaderBankLim => _$this._leaderBankLim;
  set leaderBankLim(double leaderBankLim) =>
      _$this._leaderBankLim = leaderBankLim;

  double _posSimErrLim = 0;
  double get posSimErrLim => _$this._posSimErrLim;
  set posSimErrLim(double posSimErrLim) => _$this._posSimErrLim = posSimErrLim;

  double _posSimErrWrn = 0;
  double get posSimErrWrn => _$this._posSimErrWrn;
  set posSimErrWrn(double posSimErrWrn) => _$this._posSimErrWrn = posSimErrWrn;

  int _posSimErrTimeout = 0;
  int get posSimErrTimeout => _$this._posSimErrTimeout;
  set posSimErrTimeout(int posSimErrTimeout) =>
      _$this._posSimErrTimeout = posSimErrTimeout;

  double _convergMax = 0;
  double get convergMax => _$this._convergMax;
  set convergMax(double convergMax) => _$this._convergMax = convergMax;

  int _convergTimeout = 0;
  int get convergTimeout => _$this._convergTimeout;
  set convergTimeout(int convergTimeout) =>
      _$this._convergTimeout = convergTimeout;

  int _commsTimeout = 0;
  int get commsTimeout => _$this._commsTimeout;
  set commsTimeout(int commsTimeout) => _$this._commsTimeout = commsTimeout;

  double _turbLim = 0;
  double get turbLim => _$this._turbLim;
  set turbLim(double turbLim) => _$this._turbLim = turbLim;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FormationPlanExecutionBuilder();

  FormationPlanExecutionBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FormationPlanExecutionBuilder newInstance(
          [ImcBuilderHeaderPart headerFrom]) =>
      FormationPlanExecutionBuilder()..copyFromHeader(headerFrom);

  FormationPlanExecutionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _groupName = _$v.groupName;
      _formationName = _$v.formationName;
      _planId = _$v.planId;
      _description = _$v.description;
      _leaderSpeed = _$v.leaderSpeed;
      _leaderBankLim = _$v.leaderBankLim;
      _posSimErrLim = _$v.posSimErrLim;
      _posSimErrWrn = _$v.posSimErrWrn;
      _posSimErrTimeout = _$v.posSimErrTimeout;
      _convergMax = _$v.convergMax;
      _convergTimeout = _$v.convergTimeout;
      _commsTimeout = _$v.commsTimeout;
      _turbLim = _$v.turbLim;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationPlanExecution other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FormationPlanExecution;
  }

  @override
  void update(void Function(FormationPlanExecutionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationPlanExecution build() {
    final _$result = _$v ??
        _$FormationPlanExecution._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            groupName: groupName ?? '',
            formationName: formationName ?? '',
            planId: planId ?? '',
            description: description ?? '',
            leaderSpeed: leaderSpeed ?? 0,
            leaderBankLim: leaderBankLim ?? 0,
            posSimErrLim: posSimErrLim ?? 0,
            posSimErrWrn: posSimErrWrn ?? 0,
            posSimErrTimeout: posSimErrTimeout ?? 0,
            convergMax: convergMax ?? 0,
            convergTimeout: convergTimeout ?? 0,
            commsTimeout: commsTimeout ?? 0,
            turbLim: turbLim ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Follow Reference Maneuver immutable class
///
class _$FollowReference extends FollowReference {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int controlSrc;
  @override
  final int controlEnt;
  @override
  final double timeout;
  @override
  final double loiterRadius;
  @override
  final double altitudeInterval;

  factory _$FollowReference(
          [void Function(FollowReferenceBuilder b) updates]) =>
      (FollowReferenceBuilder()..update(updates)).build();

  _$FollowReference._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.controlSrc,
      this.controlEnt,
      this.timeout,
      this.loiterRadius,
      this.altitudeInterval})
      : super._();

  @override
  FollowReference rebuild(void Function(FollowReferenceBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowReferenceBuilder toBuilder() => FollowReferenceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowReference &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        controlSrc == other.controlSrc &&
        controlEnt == other.controlEnt &&
        (timeout == other.timeout || timeout - other.timeout <= 1E-7) &&
        (loiterRadius == other.loiterRadius ||
            loiterRadius - other.loiterRadius <= 1E-7) &&
        (altitudeInterval == other.altitudeInterval ||
            altitudeInterval - other.altitudeInterval <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, timestamp?.hashCode),
                                        src?.hashCode),
                                    srcEnt?.hashCode),
                                dst?.hashCode),
                            dstEnt?.hashCode),
                        controlSrc?.hashCode),
                    controlEnt?.hashCode),
                timeout?.hashCode),
            loiterRadius?.hashCode),
        altitudeInterval?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowReference')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('controlSrc', '$controlSrc')
          ..add('controlEnt', '$controlEnt')
          ..add('timeout', '$timeout')
          ..add('loiterRadius', '$loiterRadius')
          ..add('altitudeInterval', '$altitudeInterval'))
        .toString();
  }
}

/// Follow Reference Maneuver builder class
///
class FollowReferenceBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<FollowReference, FollowReferenceBuilder> {
  _$FollowReference _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _controlSrc = 0;
  int get controlSrc => _$this._controlSrc;
  set controlSrc(int controlSrc) => _$this._controlSrc = controlSrc;

  int _controlEnt = 0;
  int get controlEnt => _$this._controlEnt;
  set controlEnt(int controlEnt) => _$this._controlEnt = controlEnt;

  double _timeout = 0;
  double get timeout => _$this._timeout;
  set timeout(double timeout) => _$this._timeout = timeout;

  double _loiterRadius = 0;
  double get loiterRadius => _$this._loiterRadius;
  set loiterRadius(double loiterRadius) => _$this._loiterRadius = loiterRadius;

  double _altitudeInterval = 0;
  double get altitudeInterval => _$this._altitudeInterval;
  set altitudeInterval(double altitudeInterval) =>
      _$this._altitudeInterval = altitudeInterval;

  FollowReferenceBuilder();

  FollowReferenceBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FollowReferenceBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FollowReferenceBuilder()..copyFromHeader(headerFrom);

  FollowReferenceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _controlSrc = _$v.controlSrc;
      _controlEnt = _$v.controlEnt;
      _timeout = _$v.timeout;
      _loiterRadius = _$v.loiterRadius;
      _altitudeInterval = _$v.altitudeInterval;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowReference other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FollowReference;
  }

  @override
  void update(void Function(FollowReferenceBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowReference build() {
    final _$result = _$v ??
        _$FollowReference._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            controlSrc: controlSrc ?? 0,
            controlEnt: controlEnt ?? 0,
            timeout: timeout ?? 0,
            loiterRadius: loiterRadius ?? 0,
            altitudeInterval: altitudeInterval ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Reference To Follow immutable class
///
class _$Reference extends Reference {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ReferenceBitfieldFlags flags;
  @override
  final DesiredSpeed speed;
  @override
  final DesiredZ z;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double radius;

  factory _$Reference([void Function(ReferenceBuilder b) updates]) =>
      (ReferenceBuilder()..update(updates)).build();

  _$Reference._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.flags,
      this.speed,
      this.z,
      this.lat,
      this.lon,
      this.radius})
      : super._();

  @override
  Reference rebuild(void Function(ReferenceBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ReferenceBuilder toBuilder() => ReferenceBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Reference &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        flags == other.flags &&
        speed == other.speed &&
        z == other.z &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (radius == other.radius || radius - other.radius <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, timestamp?.hashCode),
                                            src?.hashCode),
                                        srcEnt?.hashCode),
                                    dst?.hashCode),
                                dstEnt?.hashCode),
                            flags?.hashCode),
                        speed?.hashCode),
                    z?.hashCode),
                lat?.hashCode),
            lon?.hashCode),
        radius?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Reference')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('flags', '$flags (Bitfield)')
          ..add('speed', '$speed')
          ..add('z', '$z')
          ..add('lat', '$lat')
          ..add('lon', '$lon')
          ..add('radius', '$radius'))
        .toString();
  }
}

/// Reference To Follow builder class
///
class ReferenceBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Reference, ReferenceBuilder> {
  _$Reference _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ReferenceBitfieldFlags _flags = ReferenceBitfieldFlags(0);
  ReferenceBitfieldFlags get flags => _$this._flags;
  set flags(ReferenceBitfieldFlags flags) => _$this._flags = flags;

  DesiredSpeed _speed;
  DesiredSpeed get speed => _$this._speed;
  set speed(DesiredSpeed speed) => _$this._speed = speed;

  DesiredZ _z;
  DesiredZ get z => _$this._z;
  set z(DesiredZ z) => _$this._z = z;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _radius = 0;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  ReferenceBuilder();

  ReferenceBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ReferenceBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ReferenceBuilder()..copyFromHeader(headerFrom);

  ReferenceBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _flags = _$v.flags;
      _speed = _$v.speed;
      _z = _$v.z;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _radius = _$v.radius;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Reference other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Reference;
  }

  @override
  void update(void Function(ReferenceBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Reference build() {
    final _$result = _$v ??
        _$Reference._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            flags: flags ?? ReferenceBitfieldFlags(0),
            speed: speed,
            z: z,
            lat: lat ?? 0,
            lon: lon ?? 0,
            radius: radius ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Follow Reference State immutable class
///
class _$FollowRefState extends FollowRefState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int controlSrc;
  @override
  final int controlEnt;
  @override
  final Reference reference;
  @override
  final FollowRefStateEnumState state;
  @override
  final FollowRefStateBitfieldProximity proximity;

  factory _$FollowRefState([void Function(FollowRefStateBuilder b) updates]) =>
      (FollowRefStateBuilder()..update(updates)).build();

  _$FollowRefState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.controlSrc,
      this.controlEnt,
      this.reference,
      this.state,
      this.proximity})
      : super._();

  @override
  FollowRefState rebuild(void Function(FollowRefStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowRefStateBuilder toBuilder() => FollowRefStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowRefState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        controlSrc == other.controlSrc &&
        controlEnt == other.controlEnt &&
        reference == other.reference &&
        state == other.state &&
        proximity == other.proximity;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, timestamp?.hashCode),
                                        src?.hashCode),
                                    srcEnt?.hashCode),
                                dst?.hashCode),
                            dstEnt?.hashCode),
                        controlSrc?.hashCode),
                    controlEnt?.hashCode),
                reference?.hashCode),
            state?.hashCode),
        proximity?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowRefState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('controlSrc', '$controlSrc')
          ..add('controlEnt', '$controlEnt')
          ..add('reference', '$reference')
          ..add('state', '$state (Enumerated)')
          ..add('proximity', '$proximity (Bitfield)'))
        .toString();
  }
}

/// Follow Reference State builder class
///
class FollowRefStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<FollowRefState, FollowRefStateBuilder> {
  _$FollowRefState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _controlSrc = 0;
  int get controlSrc => _$this._controlSrc;
  set controlSrc(int controlSrc) => _$this._controlSrc = controlSrc;

  int _controlEnt = 0;
  int get controlEnt => _$this._controlEnt;
  set controlEnt(int controlEnt) => _$this._controlEnt = controlEnt;

  Reference _reference;
  Reference get reference => _$this._reference;
  set reference(Reference reference) => _$this._reference = reference;

  FollowRefStateEnumState _state = FollowRefStateEnumState(0);
  FollowRefStateEnumState get state => _$this._state;
  set state(FollowRefStateEnumState state) => _$this._state = state;

  FollowRefStateBitfieldProximity _proximity =
      FollowRefStateBitfieldProximity(0);
  FollowRefStateBitfieldProximity get proximity => _$this._proximity;
  set proximity(FollowRefStateBitfieldProximity proximity) =>
      _$this._proximity = proximity;

  FollowRefStateBuilder();

  FollowRefStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FollowRefStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FollowRefStateBuilder()..copyFromHeader(headerFrom);

  FollowRefStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _controlSrc = _$v.controlSrc;
      _controlEnt = _$v.controlEnt;
      _reference = _$v.reference;
      _state = _$v.state;
      _proximity = _$v.proximity;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowRefState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FollowRefState;
  }

  @override
  void update(void Function(FollowRefStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowRefState build() {
    final _$result = _$v ??
        _$FollowRefState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            controlSrc: controlSrc ?? 0,
            controlEnt: controlEnt ?? 0,
            reference: reference,
            state: state ?? FollowRefStateEnumState(0),
            proximity: proximity ?? FollowRefStateBitfieldProximity(0));
    replace(_$result);
    return _$result;
  }
}

/// Formation Monitoring Data immutable class
///
class _$FormationMonitor extends FormationMonitor {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double axCmd;
  @override
  final double ayCmd;
  @override
  final double azCmd;
  @override
  final double axDes;
  @override
  final double ayDes;
  @override
  final double azDes;
  @override
  final double virtErrX;
  @override
  final double virtErrY;
  @override
  final double virtErrZ;
  @override
  final double surfFdbkX;
  @override
  final double surfFdbkY;
  @override
  final double surfFdbkZ;
  @override
  final double surfUnknX;
  @override
  final double surfUnknY;
  @override
  final double surfUnknZ;
  @override
  final double ssX;
  @override
  final double ssY;
  @override
  final double ssZ;
  @override
  final List<RelativeState> relState;

  factory _$FormationMonitor(
          [void Function(FormationMonitorBuilder b) updates]) =>
      (FormationMonitorBuilder()..update(updates)).build();

  _$FormationMonitor._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.axCmd,
      this.ayCmd,
      this.azCmd,
      this.axDes,
      this.ayDes,
      this.azDes,
      this.virtErrX,
      this.virtErrY,
      this.virtErrZ,
      this.surfFdbkX,
      this.surfFdbkY,
      this.surfFdbkZ,
      this.surfUnknX,
      this.surfUnknY,
      this.surfUnknZ,
      this.ssX,
      this.ssY,
      this.ssZ,
      this.relState})
      : super._();

  @override
  FormationMonitor rebuild(void Function(FormationMonitorBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationMonitorBuilder toBuilder() =>
      FormationMonitorBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationMonitor &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (axCmd == other.axCmd || axCmd - other.axCmd <= 1E-7) &&
        (ayCmd == other.ayCmd || ayCmd - other.ayCmd <= 1E-7) &&
        (azCmd == other.azCmd || azCmd - other.azCmd <= 1E-7) &&
        (axDes == other.axDes || axDes - other.axDes <= 1E-7) &&
        (ayDes == other.ayDes || ayDes - other.ayDes <= 1E-7) &&
        (azDes == other.azDes || azDes - other.azDes <= 1E-7) &&
        (virtErrX == other.virtErrX || virtErrX - other.virtErrX <= 1E-7) &&
        (virtErrY == other.virtErrY || virtErrY - other.virtErrY <= 1E-7) &&
        (virtErrZ == other.virtErrZ || virtErrZ - other.virtErrZ <= 1E-7) &&
        (surfFdbkX == other.surfFdbkX || surfFdbkX - other.surfFdbkX <= 1E-7) &&
        (surfFdbkY == other.surfFdbkY || surfFdbkY - other.surfFdbkY <= 1E-7) &&
        (surfFdbkZ == other.surfFdbkZ || surfFdbkZ - other.surfFdbkZ <= 1E-7) &&
        (surfUnknX == other.surfUnknX || surfUnknX - other.surfUnknX <= 1E-7) &&
        (surfUnknY == other.surfUnknY || surfUnknY - other.surfUnknY <= 1E-7) &&
        (surfUnknZ == other.surfUnknZ || surfUnknZ - other.surfUnknZ <= 1E-7) &&
        (ssX == other.ssX || ssX - other.ssX <= 1E-7) &&
        (ssY == other.ssY || ssY - other.ssY <= 1E-7) &&
        (ssZ == other.ssZ || ssZ - other.ssZ <= 1E-7) &&
        DeepCollectionEquality().equals(relState, other.relState);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc(0, timestamp?.hashCode), src?.hashCode), srcEnt?.hashCode), dst?.hashCode), dstEnt?.hashCode),
                                                                                axCmd?.hashCode),
                                                                            ayCmd?.hashCode),
                                                                        azCmd?.hashCode),
                                                                    axDes?.hashCode),
                                                                ayDes?.hashCode),
                                                            azDes?.hashCode),
                                                        virtErrX?.hashCode),
                                                    virtErrY?.hashCode),
                                                virtErrZ?.hashCode),
                                            surfFdbkX?.hashCode),
                                        surfFdbkY?.hashCode),
                                    surfFdbkZ?.hashCode),
                                surfUnknX?.hashCode),
                            surfUnknY?.hashCode),
                        surfUnknZ?.hashCode),
                    ssX?.hashCode),
                ssY?.hashCode),
            ssZ?.hashCode),
        relState?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationMonitor')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('axCmd', '$axCmd')
          ..add('ayCmd', '$ayCmd')
          ..add('azCmd', '$azCmd')
          ..add('axDes', '$axDes')
          ..add('ayDes', '$ayDes')
          ..add('azDes', '$azDes')
          ..add('virtErrX', '$virtErrX')
          ..add('virtErrY', '$virtErrY')
          ..add('virtErrZ', '$virtErrZ')
          ..add('surfFdbkX', '$surfFdbkX')
          ..add('surfFdbkY', '$surfFdbkY')
          ..add('surfFdbkZ', '$surfFdbkZ')
          ..add('surfUnknX', '$surfUnknX')
          ..add('surfUnknY', '$surfUnknY')
          ..add('surfUnknZ', '$surfUnknZ')
          ..add('ssX', '$ssX')
          ..add('ssY', '$ssY')
          ..add('ssZ', '$ssZ')
          ..add('relState', '$relState'))
        .toString();
  }
}

/// Formation Monitoring Data builder class
///
class FormationMonitorBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<FormationMonitor, FormationMonitorBuilder> {
  _$FormationMonitor _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _axCmd = 0;
  double get axCmd => _$this._axCmd;
  set axCmd(double axCmd) => _$this._axCmd = axCmd;

  double _ayCmd = 0;
  double get ayCmd => _$this._ayCmd;
  set ayCmd(double ayCmd) => _$this._ayCmd = ayCmd;

  double _azCmd = 0;
  double get azCmd => _$this._azCmd;
  set azCmd(double azCmd) => _$this._azCmd = azCmd;

  double _axDes = 0;
  double get axDes => _$this._axDes;
  set axDes(double axDes) => _$this._axDes = axDes;

  double _ayDes = 0;
  double get ayDes => _$this._ayDes;
  set ayDes(double ayDes) => _$this._ayDes = ayDes;

  double _azDes = 0;
  double get azDes => _$this._azDes;
  set azDes(double azDes) => _$this._azDes = azDes;

  double _virtErrX = 0;
  double get virtErrX => _$this._virtErrX;
  set virtErrX(double virtErrX) => _$this._virtErrX = virtErrX;

  double _virtErrY = 0;
  double get virtErrY => _$this._virtErrY;
  set virtErrY(double virtErrY) => _$this._virtErrY = virtErrY;

  double _virtErrZ = 0;
  double get virtErrZ => _$this._virtErrZ;
  set virtErrZ(double virtErrZ) => _$this._virtErrZ = virtErrZ;

  double _surfFdbkX = 0;
  double get surfFdbkX => _$this._surfFdbkX;
  set surfFdbkX(double surfFdbkX) => _$this._surfFdbkX = surfFdbkX;

  double _surfFdbkY = 0;
  double get surfFdbkY => _$this._surfFdbkY;
  set surfFdbkY(double surfFdbkY) => _$this._surfFdbkY = surfFdbkY;

  double _surfFdbkZ = 0;
  double get surfFdbkZ => _$this._surfFdbkZ;
  set surfFdbkZ(double surfFdbkZ) => _$this._surfFdbkZ = surfFdbkZ;

  double _surfUnknX = 0;
  double get surfUnknX => _$this._surfUnknX;
  set surfUnknX(double surfUnknX) => _$this._surfUnknX = surfUnknX;

  double _surfUnknY = 0;
  double get surfUnknY => _$this._surfUnknY;
  set surfUnknY(double surfUnknY) => _$this._surfUnknY = surfUnknY;

  double _surfUnknZ = 0;
  double get surfUnknZ => _$this._surfUnknZ;
  set surfUnknZ(double surfUnknZ) => _$this._surfUnknZ = surfUnknZ;

  double _ssX = 0;
  double get ssX => _$this._ssX;
  set ssX(double ssX) => _$this._ssX = ssX;

  double _ssY = 0;
  double get ssY => _$this._ssY;
  set ssY(double ssY) => _$this._ssY = ssY;

  double _ssZ = 0;
  double get ssZ => _$this._ssZ;
  set ssZ(double ssZ) => _$this._ssZ = ssZ;

  List<RelativeState> _relState = <RelativeState>[];
  List<RelativeState> get relState => _$this._relState;
  set relState(List<RelativeState> relState) => _$this._relState = relState;

  FormationMonitorBuilder();

  FormationMonitorBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FormationMonitorBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FormationMonitorBuilder()..copyFromHeader(headerFrom);

  FormationMonitorBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _axCmd = _$v.axCmd;
      _ayCmd = _$v.ayCmd;
      _azCmd = _$v.azCmd;
      _axDes = _$v.axDes;
      _ayDes = _$v.ayDes;
      _azDes = _$v.azDes;
      _virtErrX = _$v.virtErrX;
      _virtErrY = _$v.virtErrY;
      _virtErrZ = _$v.virtErrZ;
      _surfFdbkX = _$v.surfFdbkX;
      _surfFdbkY = _$v.surfFdbkY;
      _surfFdbkZ = _$v.surfFdbkZ;
      _surfUnknX = _$v.surfUnknX;
      _surfUnknY = _$v.surfUnknY;
      _surfUnknZ = _$v.surfUnknZ;
      _ssX = _$v.ssX;
      _ssY = _$v.ssY;
      _ssZ = _$v.ssZ;
      _relState = _$v.relState;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationMonitor other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FormationMonitor;
  }

  @override
  void update(void Function(FormationMonitorBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationMonitor build() {
    final _$result = _$v ??
        _$FormationMonitor._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            axCmd: axCmd ?? 0,
            ayCmd: ayCmd ?? 0,
            azCmd: azCmd ?? 0,
            axDes: axDes ?? 0,
            ayDes: ayDes ?? 0,
            azDes: azDes ?? 0,
            virtErrX: virtErrX ?? 0,
            virtErrY: virtErrY ?? 0,
            virtErrZ: virtErrZ ?? 0,
            surfFdbkX: surfFdbkX ?? 0,
            surfFdbkY: surfFdbkY ?? 0,
            surfFdbkZ: surfFdbkZ ?? 0,
            surfUnknX: surfUnknX ?? 0,
            surfUnknY: surfUnknY ?? 0,
            surfUnknZ: surfUnknZ ?? 0,
            ssX: ssX ?? 0,
            ssY: ssY ?? 0,
            ssZ: ssZ ?? 0,
            relState: relState ?? <RelativeState>[]);
    replace(_$result);
    return _$result;
  }
}

/// Relative State immutable class
///
class _$RelativeState extends RelativeState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String sId;
  @override
  final double dist;
  @override
  final double err;
  @override
  final double ctrlImp;
  @override
  final double relDirX;
  @override
  final double relDirY;
  @override
  final double relDirZ;
  @override
  final double errX;
  @override
  final double errY;
  @override
  final double errZ;
  @override
  final double rfErrX;
  @override
  final double rfErrY;
  @override
  final double rfErrZ;
  @override
  final double rfErrVx;
  @override
  final double rfErrVy;
  @override
  final double rfErrVz;
  @override
  final double ssX;
  @override
  final double ssY;
  @override
  final double ssZ;
  @override
  final double virtErrX;
  @override
  final double virtErrY;
  @override
  final double virtErrZ;

  factory _$RelativeState([void Function(RelativeStateBuilder b) updates]) =>
      (RelativeStateBuilder()..update(updates)).build();

  _$RelativeState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.sId,
      this.dist,
      this.err,
      this.ctrlImp,
      this.relDirX,
      this.relDirY,
      this.relDirZ,
      this.errX,
      this.errY,
      this.errZ,
      this.rfErrX,
      this.rfErrY,
      this.rfErrZ,
      this.rfErrVx,
      this.rfErrVy,
      this.rfErrVz,
      this.ssX,
      this.ssY,
      this.ssZ,
      this.virtErrX,
      this.virtErrY,
      this.virtErrZ})
      : super._();

  @override
  RelativeState rebuild(void Function(RelativeStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RelativeStateBuilder toBuilder() => RelativeStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RelativeState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sId == other.sId &&
        (dist == other.dist || dist - other.dist <= 1E-7) &&
        (err == other.err || err - other.err <= 1E-7) &&
        (ctrlImp == other.ctrlImp || ctrlImp - other.ctrlImp <= 1E-7) &&
        (relDirX == other.relDirX || relDirX - other.relDirX <= 1E-7) &&
        (relDirY == other.relDirY || relDirY - other.relDirY <= 1E-7) &&
        (relDirZ == other.relDirZ || relDirZ - other.relDirZ <= 1E-7) &&
        (errX == other.errX || errX - other.errX <= 1E-7) &&
        (errY == other.errY || errY - other.errY <= 1E-7) &&
        (errZ == other.errZ || errZ - other.errZ <= 1E-7) &&
        (rfErrX == other.rfErrX || rfErrX - other.rfErrX <= 1E-7) &&
        (rfErrY == other.rfErrY || rfErrY - other.rfErrY <= 1E-7) &&
        (rfErrZ == other.rfErrZ || rfErrZ - other.rfErrZ <= 1E-7) &&
        (rfErrVx == other.rfErrVx || rfErrVx - other.rfErrVx <= 1E-7) &&
        (rfErrVy == other.rfErrVy || rfErrVy - other.rfErrVy <= 1E-7) &&
        (rfErrVz == other.rfErrVz || rfErrVz - other.rfErrVz <= 1E-7) &&
        (ssX == other.ssX || ssX - other.ssX <= 1E-7) &&
        (ssY == other.ssY || ssY - other.ssY <= 1E-7) &&
        (ssZ == other.ssZ || ssZ - other.ssZ <= 1E-7) &&
        (virtErrX == other.virtErrX || virtErrX - other.virtErrX <= 1E-7) &&
        (virtErrY == other.virtErrY || virtErrY - other.virtErrY <= 1E-7) &&
        (virtErrZ == other.virtErrZ || virtErrZ - other.virtErrZ <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc($jc($jc(0, timestamp?.hashCode), src?.hashCode), srcEnt?.hashCode), dst?.hashCode), dstEnt?.hashCode), sId?.hashCode), dist?.hashCode), err?.hashCode),
                                                                                ctrlImp?.hashCode),
                                                                            relDirX?.hashCode),
                                                                        relDirY?.hashCode),
                                                                    relDirZ?.hashCode),
                                                                errX?.hashCode),
                                                            errY?.hashCode),
                                                        errZ?.hashCode),
                                                    rfErrX?.hashCode),
                                                rfErrY?.hashCode),
                                            rfErrZ?.hashCode),
                                        rfErrVx?.hashCode),
                                    rfErrVy?.hashCode),
                                rfErrVz?.hashCode),
                            ssX?.hashCode),
                        ssY?.hashCode),
                    ssZ?.hashCode),
                virtErrX?.hashCode),
            virtErrY?.hashCode),
        virtErrZ?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RelativeState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sId', '$sId')
          ..add('dist', '$dist')
          ..add('err', '$err')
          ..add('ctrlImp', '$ctrlImp')
          ..add('relDirX', '$relDirX')
          ..add('relDirY', '$relDirY')
          ..add('relDirZ', '$relDirZ')
          ..add('errX', '$errX')
          ..add('errY', '$errY')
          ..add('errZ', '$errZ')
          ..add('rfErrX', '$rfErrX')
          ..add('rfErrY', '$rfErrY')
          ..add('rfErrZ', '$rfErrZ')
          ..add('rfErrVx', '$rfErrVx')
          ..add('rfErrVy', '$rfErrVy')
          ..add('rfErrVz', '$rfErrVz')
          ..add('ssX', '$ssX')
          ..add('ssY', '$ssY')
          ..add('ssZ', '$ssZ')
          ..add('virtErrX', '$virtErrX')
          ..add('virtErrY', '$virtErrY')
          ..add('virtErrZ', '$virtErrZ'))
        .toString();
  }
}

/// Relative State builder class
///
class RelativeStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<RelativeState, RelativeStateBuilder> {
  _$RelativeState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _sId = '';
  String get sId => _$this._sId;
  set sId(String sId) => _$this._sId = sId;

  double _dist = 0;
  double get dist => _$this._dist;
  set dist(double dist) => _$this._dist = dist;

  double _err = 0;
  double get err => _$this._err;
  set err(double err) => _$this._err = err;

  double _ctrlImp = 0;
  double get ctrlImp => _$this._ctrlImp;
  set ctrlImp(double ctrlImp) => _$this._ctrlImp = ctrlImp;

  double _relDirX = 0;
  double get relDirX => _$this._relDirX;
  set relDirX(double relDirX) => _$this._relDirX = relDirX;

  double _relDirY = 0;
  double get relDirY => _$this._relDirY;
  set relDirY(double relDirY) => _$this._relDirY = relDirY;

  double _relDirZ = 0;
  double get relDirZ => _$this._relDirZ;
  set relDirZ(double relDirZ) => _$this._relDirZ = relDirZ;

  double _errX = 0;
  double get errX => _$this._errX;
  set errX(double errX) => _$this._errX = errX;

  double _errY = 0;
  double get errY => _$this._errY;
  set errY(double errY) => _$this._errY = errY;

  double _errZ = 0;
  double get errZ => _$this._errZ;
  set errZ(double errZ) => _$this._errZ = errZ;

  double _rfErrX = 0;
  double get rfErrX => _$this._rfErrX;
  set rfErrX(double rfErrX) => _$this._rfErrX = rfErrX;

  double _rfErrY = 0;
  double get rfErrY => _$this._rfErrY;
  set rfErrY(double rfErrY) => _$this._rfErrY = rfErrY;

  double _rfErrZ = 0;
  double get rfErrZ => _$this._rfErrZ;
  set rfErrZ(double rfErrZ) => _$this._rfErrZ = rfErrZ;

  double _rfErrVx = 0;
  double get rfErrVx => _$this._rfErrVx;
  set rfErrVx(double rfErrVx) => _$this._rfErrVx = rfErrVx;

  double _rfErrVy = 0;
  double get rfErrVy => _$this._rfErrVy;
  set rfErrVy(double rfErrVy) => _$this._rfErrVy = rfErrVy;

  double _rfErrVz = 0;
  double get rfErrVz => _$this._rfErrVz;
  set rfErrVz(double rfErrVz) => _$this._rfErrVz = rfErrVz;

  double _ssX = 0;
  double get ssX => _$this._ssX;
  set ssX(double ssX) => _$this._ssX = ssX;

  double _ssY = 0;
  double get ssY => _$this._ssY;
  set ssY(double ssY) => _$this._ssY = ssY;

  double _ssZ = 0;
  double get ssZ => _$this._ssZ;
  set ssZ(double ssZ) => _$this._ssZ = ssZ;

  double _virtErrX = 0;
  double get virtErrX => _$this._virtErrX;
  set virtErrX(double virtErrX) => _$this._virtErrX = virtErrX;

  double _virtErrY = 0;
  double get virtErrY => _$this._virtErrY;
  set virtErrY(double virtErrY) => _$this._virtErrY = virtErrY;

  double _virtErrZ = 0;
  double get virtErrZ => _$this._virtErrZ;
  set virtErrZ(double virtErrZ) => _$this._virtErrZ = virtErrZ;

  RelativeStateBuilder();

  RelativeStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RelativeStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RelativeStateBuilder()..copyFromHeader(headerFrom);

  RelativeStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sId = _$v.sId;
      _dist = _$v.dist;
      _err = _$v.err;
      _ctrlImp = _$v.ctrlImp;
      _relDirX = _$v.relDirX;
      _relDirY = _$v.relDirY;
      _relDirZ = _$v.relDirZ;
      _errX = _$v.errX;
      _errY = _$v.errY;
      _errZ = _$v.errZ;
      _rfErrX = _$v.rfErrX;
      _rfErrY = _$v.rfErrY;
      _rfErrZ = _$v.rfErrZ;
      _rfErrVx = _$v.rfErrVx;
      _rfErrVy = _$v.rfErrVy;
      _rfErrVz = _$v.rfErrVz;
      _ssX = _$v.ssX;
      _ssY = _$v.ssY;
      _ssZ = _$v.ssZ;
      _virtErrX = _$v.virtErrX;
      _virtErrY = _$v.virtErrY;
      _virtErrZ = _$v.virtErrZ;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RelativeState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$RelativeState;
  }

  @override
  void update(void Function(RelativeStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$RelativeState build() {
    final _$result = _$v ??
        _$RelativeState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sId: sId ?? '',
            dist: dist ?? 0,
            err: err ?? 0,
            ctrlImp: ctrlImp ?? 0,
            relDirX: relDirX ?? 0,
            relDirY: relDirY ?? 0,
            relDirZ: relDirZ ?? 0,
            errX: errX ?? 0,
            errY: errY ?? 0,
            errZ: errZ ?? 0,
            rfErrX: rfErrX ?? 0,
            rfErrY: rfErrY ?? 0,
            rfErrZ: rfErrZ ?? 0,
            rfErrVx: rfErrVx ?? 0,
            rfErrVy: rfErrVy ?? 0,
            rfErrVz: rfErrVz ?? 0,
            ssX: ssX ?? 0,
            ssY: ssY ?? 0,
            ssZ: ssZ ?? 0,
            virtErrX: virtErrX ?? 0,
            virtErrY: virtErrY ?? 0,
            virtErrZ: virtErrZ ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Dislodge Maneuver immutable class
///
class _$Dislodge extends Dislodge {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double rpm;
  @override
  final DislodgeEnumDirection direction;
  @override
  final String custom;

  factory _$Dislodge([void Function(DislodgeBuilder b) updates]) =>
      (DislodgeBuilder()..update(updates)).build();

  _$Dislodge._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.rpm,
      this.direction,
      this.custom})
      : super._();

  @override
  Dislodge rebuild(void Function(DislodgeBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DislodgeBuilder toBuilder() => DislodgeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Dislodge &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        (rpm == other.rpm || rpm - other.rpm <= 1E-7) &&
        direction == other.direction &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    timeout?.hashCode),
                rpm?.hashCode),
            direction?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Dislodge')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('rpm', '$rpm')
          ..add('direction', '$direction (Enumerated)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Dislodge Maneuver builder class
///
class DislodgeBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Dislodge, DislodgeBuilder> {
  _$Dislodge _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _rpm = 0;
  double get rpm => _$this._rpm;
  set rpm(double rpm) => _$this._rpm = rpm;

  DislodgeEnumDirection _direction = DislodgeEnumDirection(0);
  DislodgeEnumDirection get direction => _$this._direction;
  set direction(DislodgeEnumDirection direction) =>
      _$this._direction = direction;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  DislodgeBuilder();

  DislodgeBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DislodgeBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DislodgeBuilder()..copyFromHeader(headerFrom);

  DislodgeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _rpm = _$v.rpm;
      _direction = _$v.direction;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Dislodge other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Dislodge;
  }

  @override
  void update(void Function(DislodgeBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Dislodge build() {
    final _$result = _$v ??
        _$Dislodge._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            rpm: rpm ?? 0,
            direction: direction ?? DislodgeEnumDirection(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Formation immutable class
///
class _$Formation extends Formation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String formationName;
  @override
  final FormationEnumType type;
  @override
  final FormationEnumOp op;
  @override
  final String groupName;
  @override
  final String planId;
  @override
  final String description;
  @override
  final FormationEnumReferenceFrame referenceFrame;
  @override
  final List<VehicleFormationParticipant> participants;
  @override
  final double leaderBankLim;
  @override
  final double leaderSpeedMin;
  @override
  final double leaderSpeedMax;
  @override
  final double leaderAltMin;
  @override
  final double leaderAltMax;
  @override
  final double posSimErrLim;
  @override
  final double posSimErrWrn;
  @override
  final int posSimErrTimeout;
  @override
  final double convergMax;
  @override
  final int convergTimeout;
  @override
  final int commsTimeout;
  @override
  final double turbLim;
  @override
  final String custom;

  factory _$Formation([void Function(FormationBuilder b) updates]) =>
      (FormationBuilder()..update(updates)).build();

  _$Formation._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.formationName,
      this.type,
      this.op,
      this.groupName,
      this.planId,
      this.description,
      this.referenceFrame,
      this.participants,
      this.leaderBankLim,
      this.leaderSpeedMin,
      this.leaderSpeedMax,
      this.leaderAltMin,
      this.leaderAltMax,
      this.posSimErrLim,
      this.posSimErrWrn,
      this.posSimErrTimeout,
      this.convergMax,
      this.convergTimeout,
      this.commsTimeout,
      this.turbLim,
      this.custom})
      : super._();

  @override
  Formation rebuild(void Function(FormationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationBuilder toBuilder() => FormationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Formation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        formationName == other.formationName &&
        type == other.type &&
        op == other.op &&
        groupName == other.groupName &&
        planId == other.planId &&
        description == other.description &&
        referenceFrame == other.referenceFrame &&
        DeepCollectionEquality().equals(participants, other.participants) &&
        (leaderBankLim == other.leaderBankLim ||
            leaderBankLim - other.leaderBankLim <= 1E-7) &&
        (leaderSpeedMin == other.leaderSpeedMin ||
            leaderSpeedMin - other.leaderSpeedMin <= 1E-7) &&
        (leaderSpeedMax == other.leaderSpeedMax ||
            leaderSpeedMax - other.leaderSpeedMax <= 1E-7) &&
        (leaderAltMin == other.leaderAltMin ||
            leaderAltMin - other.leaderAltMin <= 1E-7) &&
        (leaderAltMax == other.leaderAltMax ||
            leaderAltMax - other.leaderAltMax <= 1E-7) &&
        (posSimErrLim == other.posSimErrLim ||
            posSimErrLim - other.posSimErrLim <= 1E-7) &&
        (posSimErrWrn == other.posSimErrWrn ||
            posSimErrWrn - other.posSimErrWrn <= 1E-7) &&
        posSimErrTimeout == other.posSimErrTimeout &&
        (convergMax == other.convergMax ||
            convergMax - other.convergMax <= 1E-7) &&
        convergTimeout == other.convergTimeout &&
        commsTimeout == other.commsTimeout &&
        (turbLim == other.turbLim || turbLim - other.turbLim <= 1E-7) &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc($jc(0, timestamp?.hashCode), src?.hashCode), srcEnt?.hashCode), dst?.hashCode), dstEnt?.hashCode), formationName?.hashCode), type?.hashCode),
                                                                                op?.hashCode),
                                                                            groupName?.hashCode),
                                                                        planId?.hashCode),
                                                                    description?.hashCode),
                                                                referenceFrame?.hashCode),
                                                            participants?.hashCode),
                                                        leaderBankLim?.hashCode),
                                                    leaderSpeedMin?.hashCode),
                                                leaderSpeedMax?.hashCode),
                                            leaderAltMin?.hashCode),
                                        leaderAltMax?.hashCode),
                                    posSimErrLim?.hashCode),
                                posSimErrWrn?.hashCode),
                            posSimErrTimeout?.hashCode),
                        convergMax?.hashCode),
                    convergTimeout?.hashCode),
                commsTimeout?.hashCode),
            turbLim?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Formation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('formationName', '$formationName')
          ..add('type', '$type (Enumerated)')
          ..add('op', '$op (Enumerated)')
          ..add('groupName', '$groupName')
          ..add('planId', '$planId')
          ..add('description', '$description')
          ..add('referenceFrame', '$referenceFrame (Enumerated)')
          ..add('participants', '$participants')
          ..add('leaderBankLim',
              '$leaderBankLim (rad)${leaderBankLim != null ? ' [${leaderBankLim * 180.0 / math.pi} (deg)]' : ''}')
          ..add('leaderSpeedMin', '$leaderSpeedMin (m/s)')
          ..add('leaderSpeedMax', '$leaderSpeedMax (m/s)')
          ..add('leaderAltMin', '$leaderAltMin (m)')
          ..add('leaderAltMax', '$leaderAltMax (m)')
          ..add('posSimErrLim', '$posSimErrLim (m)')
          ..add('posSimErrWrn', '$posSimErrWrn (m)')
          ..add('posSimErrTimeout', '$posSimErrTimeout (s)')
          ..add('convergMax', '$convergMax (m)')
          ..add('convergTimeout', '$convergTimeout (s)')
          ..add('commsTimeout', '$commsTimeout (s)')
          ..add('turbLim', '$turbLim (m/s)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Formation builder class
///
class FormationBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Formation, FormationBuilder> {
  _$Formation _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _formationName = '';
  String get formationName => _$this._formationName;
  set formationName(String formationName) =>
      _$this._formationName = formationName;

  FormationEnumType _type = FormationEnumType(0);
  FormationEnumType get type => _$this._type;
  set type(FormationEnumType type) => _$this._type = type;

  FormationEnumOp _op = FormationEnumOp(0);
  FormationEnumOp get op => _$this._op;
  set op(FormationEnumOp op) => _$this._op = op;

  String _groupName = '';
  String get groupName => _$this._groupName;
  set groupName(String groupName) => _$this._groupName = groupName;

  String _planId = '';
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  String _description = '';
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  FormationEnumReferenceFrame _referenceFrame = FormationEnumReferenceFrame(0);
  FormationEnumReferenceFrame get referenceFrame => _$this._referenceFrame;
  set referenceFrame(FormationEnumReferenceFrame referenceFrame) =>
      _$this._referenceFrame = referenceFrame;

  List<VehicleFormationParticipant> _participants =
      <VehicleFormationParticipant>[];
  List<VehicleFormationParticipant> get participants => _$this._participants;
  set participants(List<VehicleFormationParticipant> participants) =>
      _$this._participants = participants;

  double _leaderBankLim = 0;
  double get leaderBankLim => _$this._leaderBankLim;
  set leaderBankLim(double leaderBankLim) =>
      _$this._leaderBankLim = leaderBankLim;

  double _leaderSpeedMin = 0;
  double get leaderSpeedMin => _$this._leaderSpeedMin;
  set leaderSpeedMin(double leaderSpeedMin) =>
      _$this._leaderSpeedMin = leaderSpeedMin;

  double _leaderSpeedMax = 0;
  double get leaderSpeedMax => _$this._leaderSpeedMax;
  set leaderSpeedMax(double leaderSpeedMax) =>
      _$this._leaderSpeedMax = leaderSpeedMax;

  double _leaderAltMin = 0;
  double get leaderAltMin => _$this._leaderAltMin;
  set leaderAltMin(double leaderAltMin) => _$this._leaderAltMin = leaderAltMin;

  double _leaderAltMax = 0;
  double get leaderAltMax => _$this._leaderAltMax;
  set leaderAltMax(double leaderAltMax) => _$this._leaderAltMax = leaderAltMax;

  double _posSimErrLim = 0;
  double get posSimErrLim => _$this._posSimErrLim;
  set posSimErrLim(double posSimErrLim) => _$this._posSimErrLim = posSimErrLim;

  double _posSimErrWrn = 0;
  double get posSimErrWrn => _$this._posSimErrWrn;
  set posSimErrWrn(double posSimErrWrn) => _$this._posSimErrWrn = posSimErrWrn;

  int _posSimErrTimeout = 0;
  int get posSimErrTimeout => _$this._posSimErrTimeout;
  set posSimErrTimeout(int posSimErrTimeout) =>
      _$this._posSimErrTimeout = posSimErrTimeout;

  double _convergMax = 0;
  double get convergMax => _$this._convergMax;
  set convergMax(double convergMax) => _$this._convergMax = convergMax;

  int _convergTimeout = 0;
  int get convergTimeout => _$this._convergTimeout;
  set convergTimeout(int convergTimeout) =>
      _$this._convergTimeout = convergTimeout;

  int _commsTimeout = 0;
  int get commsTimeout => _$this._commsTimeout;
  set commsTimeout(int commsTimeout) => _$this._commsTimeout = commsTimeout;

  double _turbLim = 0;
  double get turbLim => _$this._turbLim;
  set turbLim(double turbLim) => _$this._turbLim = turbLim;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FormationBuilder();

  FormationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FormationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FormationBuilder()..copyFromHeader(headerFrom);

  FormationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _formationName = _$v.formationName;
      _type = _$v.type;
      _op = _$v.op;
      _groupName = _$v.groupName;
      _planId = _$v.planId;
      _description = _$v.description;
      _referenceFrame = _$v.referenceFrame;
      _participants = _$v.participants;
      _leaderBankLim = _$v.leaderBankLim;
      _leaderSpeedMin = _$v.leaderSpeedMin;
      _leaderSpeedMax = _$v.leaderSpeedMax;
      _leaderAltMin = _$v.leaderAltMin;
      _leaderAltMax = _$v.leaderAltMax;
      _posSimErrLim = _$v.posSimErrLim;
      _posSimErrWrn = _$v.posSimErrWrn;
      _posSimErrTimeout = _$v.posSimErrTimeout;
      _convergMax = _$v.convergMax;
      _convergTimeout = _$v.convergTimeout;
      _commsTimeout = _$v.commsTimeout;
      _turbLim = _$v.turbLim;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Formation other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Formation;
  }

  @override
  void update(void Function(FormationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Formation build() {
    final _$result = _$v ??
        _$Formation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            formationName: formationName ?? '',
            type: type ?? FormationEnumType(0),
            op: op ?? FormationEnumOp(0),
            groupName: groupName ?? '',
            planId: planId ?? '',
            description: description ?? '',
            referenceFrame: referenceFrame ?? FormationEnumReferenceFrame(0),
            participants: participants ?? <VehicleFormationParticipant>[],
            leaderBankLim: leaderBankLim ?? 0,
            leaderSpeedMin: leaderSpeedMin ?? 0,
            leaderSpeedMax: leaderSpeedMax ?? 0,
            leaderAltMin: leaderAltMin ?? 0,
            leaderAltMax: leaderAltMax ?? 0,
            posSimErrLim: posSimErrLim ?? 0,
            posSimErrWrn: posSimErrWrn ?? 0,
            posSimErrTimeout: posSimErrTimeout ?? 0,
            convergMax: convergMax ?? 0,
            convergTimeout: convergTimeout ?? 0,
            commsTimeout: commsTimeout ?? 0,
            turbLim: turbLim ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Launch Maneuver immutable class
///
class _$Launch extends Launch {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final String custom;

  factory _$Launch([void Function(LaunchBuilder b) updates]) =>
      (LaunchBuilder()..update(updates)).build();

  _$Launch._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.custom})
      : super._();

  @override
  Launch rebuild(void Function(LaunchBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LaunchBuilder toBuilder() => LaunchBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Launch &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, timestamp?.hashCode),
                                                    src?.hashCode),
                                                srcEnt?.hashCode),
                                            dst?.hashCode),
                                        dstEnt?.hashCode),
                                    timeout?.hashCode),
                                lat?.hashCode),
                            lon?.hashCode),
                        z?.hashCode),
                    zUnits?.hashCode),
                speed?.hashCode),
            speedUnits?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Launch')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Launch Maneuver builder class
///
class LaunchBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Launch, LaunchBuilder> {
  _$Launch _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  LaunchBuilder();

  LaunchBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LaunchBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LaunchBuilder()..copyFromHeader(headerFrom);

  LaunchBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Launch other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Launch;
  }

  @override
  void update(void Function(LaunchBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Launch build() {
    final _$result = _$v ??
        _$Launch._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Drop Maneuver immutable class
///
class _$Drop extends Drop {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final String custom;

  factory _$Drop([void Function(DropBuilder b) updates]) =>
      (DropBuilder()..update(updates)).build();

  _$Drop._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.custom})
      : super._();

  @override
  Drop rebuild(void Function(DropBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DropBuilder toBuilder() => DropBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Drop &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, timestamp?.hashCode),
                                                    src?.hashCode),
                                                srcEnt?.hashCode),
                                            dst?.hashCode),
                                        dstEnt?.hashCode),
                                    timeout?.hashCode),
                                lat?.hashCode),
                            lon?.hashCode),
                        z?.hashCode),
                    zUnits?.hashCode),
                speed?.hashCode),
            speedUnits?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Drop')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Drop Maneuver builder class
///
class DropBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Drop, DropBuilder> {
  _$Drop _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  DropBuilder();

  DropBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DropBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DropBuilder()..copyFromHeader(headerFrom);

  DropBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Drop other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Drop;
  }

  @override
  void update(void Function(DropBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Drop build() {
    final _$result = _$v ??
        _$Drop._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Scheduled Goto immutable class
///
class _$ScheduledGoto extends ScheduledGoto {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double arrivalTime;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double travelZ;
  @override
  final ZUnitsEnum travelZUnits;
  @override
  final ScheduledGotoEnumDelayed delayed;

  factory _$ScheduledGoto([void Function(ScheduledGotoBuilder b) updates]) =>
      (ScheduledGotoBuilder()..update(updates)).build();

  _$ScheduledGoto._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.arrivalTime,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.travelZ,
      this.travelZUnits,
      this.delayed})
      : super._();

  @override
  ScheduledGoto rebuild(void Function(ScheduledGotoBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ScheduledGotoBuilder toBuilder() => ScheduledGotoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ScheduledGoto &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (arrivalTime == other.arrivalTime ||
            arrivalTime - other.arrivalTime <= 1E-7) &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (travelZ == other.travelZ || travelZ - other.travelZ <= 1E-7) &&
        travelZUnits == other.travelZUnits &&
        delayed == other.delayed;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, timestamp?.hashCode),
                                                    src?.hashCode),
                                                srcEnt?.hashCode),
                                            dst?.hashCode),
                                        dstEnt?.hashCode),
                                    arrivalTime?.hashCode),
                                lat?.hashCode),
                            lon?.hashCode),
                        z?.hashCode),
                    zUnits?.hashCode),
                travelZ?.hashCode),
            travelZUnits?.hashCode),
        delayed?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ScheduledGoto')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('arrivalTime', '$arrivalTime (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('travelZ', '$travelZ (m)')
          ..add('travelZUnits', '$travelZUnits (Enumerated)')
          ..add('delayed', '$delayed (Enumerated)'))
        .toString();
  }
}

/// Scheduled Goto builder class
///
class ScheduledGotoBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ScheduledGoto, ScheduledGotoBuilder> {
  _$ScheduledGoto _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _arrivalTime = 0;
  double get arrivalTime => _$this._arrivalTime;
  set arrivalTime(double arrivalTime) => _$this._arrivalTime = arrivalTime;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _travelZ = 0;
  double get travelZ => _$this._travelZ;
  set travelZ(double travelZ) => _$this._travelZ = travelZ;

  ZUnitsEnum _travelZUnits = ZUnitsEnum(0);
  ZUnitsEnum get travelZUnits => _$this._travelZUnits;
  set travelZUnits(ZUnitsEnum travelZUnits) =>
      _$this._travelZUnits = travelZUnits;

  ScheduledGotoEnumDelayed _delayed = ScheduledGotoEnumDelayed(0);
  ScheduledGotoEnumDelayed get delayed => _$this._delayed;
  set delayed(ScheduledGotoEnumDelayed delayed) => _$this._delayed = delayed;

  ScheduledGotoBuilder();

  ScheduledGotoBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ScheduledGotoBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ScheduledGotoBuilder()..copyFromHeader(headerFrom);

  ScheduledGotoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _arrivalTime = _$v.arrivalTime;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _travelZ = _$v.travelZ;
      _travelZUnits = _$v.travelZUnits;
      _delayed = _$v.delayed;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ScheduledGoto other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ScheduledGoto;
  }

  @override
  void update(void Function(ScheduledGotoBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ScheduledGoto build() {
    final _$result = _$v ??
        _$ScheduledGoto._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            arrivalTime: arrivalTime ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            travelZ: travelZ ?? 0,
            travelZUnits: travelZUnits ?? ZUnitsEnum(0),
            delayed: delayed ?? ScheduledGotoEnumDelayed(0));
    replace(_$result);
    return _$result;
  }
}

/// Rows Coverage immutable class
///
class _$RowsCoverage extends RowsCoverage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double bearing;
  @override
  final double crossAngle;
  @override
  final double width;
  @override
  final double length;
  @override
  final int coff;
  @override
  final double angAperture;
  @override
  final int range;
  @override
  final int overlap;
  @override
  final RowsCoverageBitfieldFlags flags;
  @override
  final String custom;

  factory _$RowsCoverage([void Function(RowsCoverageBuilder b) updates]) =>
      (RowsCoverageBuilder()..update(updates)).build();

  _$RowsCoverage._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.bearing,
      this.crossAngle,
      this.width,
      this.length,
      this.coff,
      this.angAperture,
      this.range,
      this.overlap,
      this.flags,
      this.custom})
      : super._();

  @override
  RowsCoverage rebuild(void Function(RowsCoverageBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RowsCoverageBuilder toBuilder() => RowsCoverageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RowsCoverage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        (bearing == other.bearing || bearing - other.bearing <= 1E-7) &&
        (crossAngle == other.crossAngle ||
            crossAngle - other.crossAngle <= 1E-7) &&
        (width == other.width || width - other.width <= 1E-7) &&
        (length == other.length || length - other.length <= 1E-7) &&
        coff == other.coff &&
        (angAperture == other.angAperture ||
            angAperture - other.angAperture <= 1E-7) &&
        range == other.range &&
        overlap == other.overlap &&
        flags == other.flags &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                                                                srcEnt?.hashCode),
                                                                            dst?.hashCode),
                                                                        dstEnt?.hashCode),
                                                                    lat?.hashCode),
                                                                lon?.hashCode),
                                                            z?.hashCode),
                                                        zUnits?.hashCode),
                                                    speed?.hashCode),
                                                speedUnits?.hashCode),
                                            bearing?.hashCode),
                                        crossAngle?.hashCode),
                                    width?.hashCode),
                                length?.hashCode),
                            coff?.hashCode),
                        angAperture?.hashCode),
                    range?.hashCode),
                overlap?.hashCode),
            flags?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RowsCoverage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('bearing',
              '$bearing (rad)${bearing != null ? ' [${bearing * 180.0 / math.pi} (deg)]' : ''}')
          ..add('crossAngle',
              '$crossAngle (rad)${crossAngle != null ? ' [${crossAngle * 180.0 / math.pi} (deg)]' : ''}')
          ..add('width', '$width (m)')
          ..add('length', '$length (m)')
          ..add('coff', '$coff (m)')
          ..add('angAperture',
              '$angAperture (rad)${angAperture != null ? ' [${angAperture * 180.0 / math.pi} (deg)]' : ''}')
          ..add('range', '$range (m)')
          ..add('overlap', '$overlap (%)')
          ..add('flags', '$flags (Bitfield)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Rows Coverage builder class
///
class RowsCoverageBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<RowsCoverage, RowsCoverageBuilder> {
  _$RowsCoverage _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _bearing = 0;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _crossAngle = 0;
  double get crossAngle => _$this._crossAngle;
  set crossAngle(double crossAngle) => _$this._crossAngle = crossAngle;

  double _width = 0;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  double _length = 0;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  int _coff = 0;
  int get coff => _$this._coff;
  set coff(int coff) => _$this._coff = coff;

  double _angAperture = 2.094395;
  double get angAperture => _$this._angAperture;
  set angAperture(double angAperture) => _$this._angAperture = angAperture;

  int _range = 0;
  int get range => _$this._range;
  set range(int range) => _$this._range = range;

  int _overlap = 10;
  int get overlap => _$this._overlap;
  set overlap(int overlap) => _$this._overlap = overlap;

  RowsCoverageBitfieldFlags _flags = RowsCoverageBitfieldFlags(0);
  RowsCoverageBitfieldFlags get flags => _$this._flags;
  set flags(RowsCoverageBitfieldFlags flags) => _$this._flags = flags;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  RowsCoverageBuilder();

  RowsCoverageBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RowsCoverageBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RowsCoverageBuilder()..copyFromHeader(headerFrom);

  RowsCoverageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _bearing = _$v.bearing;
      _crossAngle = _$v.crossAngle;
      _width = _$v.width;
      _length = _$v.length;
      _coff = _$v.coff;
      _angAperture = _$v.angAperture;
      _range = _$v.range;
      _overlap = _$v.overlap;
      _flags = _$v.flags;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RowsCoverage other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$RowsCoverage;
  }

  @override
  void update(void Function(RowsCoverageBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$RowsCoverage build() {
    final _$result = _$v ??
        _$RowsCoverage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            bearing: bearing ?? 0,
            crossAngle: crossAngle ?? 0,
            width: width ?? 0,
            length: length ?? 0,
            coff: coff ?? 0,
            angAperture: angAperture ?? 2.094395,
            range: range ?? 0,
            overlap: overlap ?? 10,
            flags: flags ?? RowsCoverageBitfieldFlags(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Sample Maneuver immutable class
///
class _$Sample extends Sample {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final BooleanEnum syringe0;
  @override
  final BooleanEnum syringe1;
  @override
  final BooleanEnum syringe2;
  @override
  final String custom;

  factory _$Sample([void Function(SampleBuilder b) updates]) =>
      (SampleBuilder()..update(updates)).build();

  _$Sample._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.syringe0,
      this.syringe1,
      this.syringe2,
      this.custom})
      : super._();

  @override
  Sample rebuild(void Function(SampleBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SampleBuilder toBuilder() => SampleBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Sample &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        syringe0 == other.syringe0 &&
        syringe1 == other.syringe1 &&
        syringe2 == other.syringe2 &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    0,
                                                                    timestamp
                                                                        ?.hashCode),
                                                                src?.hashCode),
                                                            srcEnt?.hashCode),
                                                        dst?.hashCode),
                                                    dstEnt?.hashCode),
                                                timeout?.hashCode),
                                            lat?.hashCode),
                                        lon?.hashCode),
                                    z?.hashCode),
                                zUnits?.hashCode),
                            speed?.hashCode),
                        speedUnits?.hashCode),
                    syringe0?.hashCode),
                syringe1?.hashCode),
            syringe2?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Sample')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('syringe0', '$syringe0 (Enumerated)')
          ..add('syringe1', '$syringe1 (Enumerated)')
          ..add('syringe2', '$syringe2 (Enumerated)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Sample Maneuver builder class
///
class SampleBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Sample, SampleBuilder> {
  _$Sample _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  BooleanEnum _syringe0 = BooleanEnum(0);
  BooleanEnum get syringe0 => _$this._syringe0;
  set syringe0(BooleanEnum syringe0) => _$this._syringe0 = syringe0;

  BooleanEnum _syringe1 = BooleanEnum(0);
  BooleanEnum get syringe1 => _$this._syringe1;
  set syringe1(BooleanEnum syringe1) => _$this._syringe1 = syringe1;

  BooleanEnum _syringe2 = BooleanEnum(0);
  BooleanEnum get syringe2 => _$this._syringe2;
  set syringe2(BooleanEnum syringe2) => _$this._syringe2 = syringe2;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  SampleBuilder();

  SampleBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SampleBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SampleBuilder()..copyFromHeader(headerFrom);

  SampleBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _syringe0 = _$v.syringe0;
      _syringe1 = _$v.syringe1;
      _syringe2 = _$v.syringe2;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Sample other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Sample;
  }

  @override
  void update(void Function(SampleBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Sample build() {
    final _$result = _$v ??
        _$Sample._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            syringe0: syringe0 ?? BooleanEnum(0),
            syringe1: syringe1 ?? BooleanEnum(0),
            syringe2: syringe2 ?? BooleanEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Image Tracking immutable class
///
class _$ImageTracking extends ImageTracking {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  factory _$ImageTracking([void Function(ImageTrackingBuilder b) updates]) =>
      (ImageTrackingBuilder()..update(updates)).build();

  _$ImageTracking._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId})
      : super._();

  @override
  ImageTracking rebuild(void Function(ImageTrackingBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ImageTrackingBuilder toBuilder() => ImageTrackingBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ImageTracking &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                srcEnt?.hashCode),
            dst?.hashCode),
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ImageTracking')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Image Tracking builder class
///
class ImageTrackingBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ImageTracking, ImageTrackingBuilder> {
  _$ImageTracking _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ImageTrackingBuilder();

  ImageTrackingBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ImageTrackingBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ImageTrackingBuilder()..copyFromHeader(headerFrom);

  ImageTrackingBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ImageTracking other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ImageTracking;
  }

  @override
  void update(void Function(ImageTrackingBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ImageTracking build() {
    final _$result = _$v ??
        _$ImageTracking._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Takeoff Maneuver immutable class
///
class _$Takeoff extends Takeoff {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double takeoffPitch;
  @override
  final String custom;

  factory _$Takeoff([void Function(TakeoffBuilder b) updates]) =>
      (TakeoffBuilder()..update(updates)).build();

  _$Takeoff._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.takeoffPitch,
      this.custom})
      : super._();

  @override
  Takeoff rebuild(void Function(TakeoffBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TakeoffBuilder toBuilder() => TakeoffBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Takeoff &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        (takeoffPitch == other.takeoffPitch ||
            takeoffPitch - other.takeoffPitch <= 1E-7) &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, timestamp?.hashCode),
                                                    src?.hashCode),
                                                srcEnt?.hashCode),
                                            dst?.hashCode),
                                        dstEnt?.hashCode),
                                    lat?.hashCode),
                                lon?.hashCode),
                            z?.hashCode),
                        zUnits?.hashCode),
                    speed?.hashCode),
                speedUnits?.hashCode),
            takeoffPitch?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Takeoff')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('takeoffPitch',
              '$takeoffPitch (rad)${takeoffPitch != null ? ' [${takeoffPitch * 180.0 / math.pi} (deg)]' : ''}')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Takeoff Maneuver builder class
///
class TakeoffBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Takeoff, TakeoffBuilder> {
  _$Takeoff _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _takeoffPitch = 0;
  double get takeoffPitch => _$this._takeoffPitch;
  set takeoffPitch(double takeoffPitch) => _$this._takeoffPitch = takeoffPitch;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  TakeoffBuilder();

  TakeoffBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TakeoffBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TakeoffBuilder()..copyFromHeader(headerFrom);

  TakeoffBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _takeoffPitch = _$v.takeoffPitch;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Takeoff other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Takeoff;
  }

  @override
  void update(void Function(TakeoffBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Takeoff build() {
    final _$result = _$v ??
        _$Takeoff._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            takeoffPitch: takeoffPitch ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Land Maneuver immutable class
///
class _$Land extends Land {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double abortZ;
  @override
  final double bearing;
  @override
  final int glideSlope;
  @override
  final double glideSlopeAlt;
  @override
  final String custom;

  factory _$Land([void Function(LandBuilder b) updates]) =>
      (LandBuilder()..update(updates)).build();

  _$Land._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.abortZ,
      this.bearing,
      this.glideSlope,
      this.glideSlopeAlt,
      this.custom})
      : super._();

  @override
  Land rebuild(void Function(LandBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LandBuilder toBuilder() => LandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Land &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        (abortZ == other.abortZ || abortZ - other.abortZ <= 1E-7) &&
        (bearing == other.bearing || bearing - other.bearing <= 1E-7) &&
        glideSlope == other.glideSlope &&
        (glideSlopeAlt == other.glideSlopeAlt ||
            glideSlopeAlt - other.glideSlopeAlt <= 1E-7) &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    0,
                                                                    timestamp
                                                                        ?.hashCode),
                                                                src?.hashCode),
                                                            srcEnt?.hashCode),
                                                        dst?.hashCode),
                                                    dstEnt?.hashCode),
                                                lat?.hashCode),
                                            lon?.hashCode),
                                        z?.hashCode),
                                    zUnits?.hashCode),
                                speed?.hashCode),
                            speedUnits?.hashCode),
                        abortZ?.hashCode),
                    bearing?.hashCode),
                glideSlope?.hashCode),
            glideSlopeAlt?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Land')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('abortZ', '$abortZ (m)')
          ..add('bearing',
              '$bearing (rad)${bearing != null ? ' [${bearing * 180.0 / math.pi} (deg)]' : ''}')
          ..add('glideSlope', '$glideSlope (%)')
          ..add('glideSlopeAlt', '$glideSlopeAlt (m)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Land Maneuver builder class
///
class LandBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Land, LandBuilder> {
  _$Land _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _abortZ = 0;
  double get abortZ => _$this._abortZ;
  set abortZ(double abortZ) => _$this._abortZ = abortZ;

  double _bearing = 0;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  int _glideSlope = 0;
  int get glideSlope => _$this._glideSlope;
  set glideSlope(int glideSlope) => _$this._glideSlope = glideSlope;

  double _glideSlopeAlt = 0;
  double get glideSlopeAlt => _$this._glideSlopeAlt;
  set glideSlopeAlt(double glideSlopeAlt) =>
      _$this._glideSlopeAlt = glideSlopeAlt;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  LandBuilder();

  LandBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LandBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LandBuilder()..copyFromHeader(headerFrom);

  LandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _abortZ = _$v.abortZ;
      _bearing = _$v.bearing;
      _glideSlope = _$v.glideSlope;
      _glideSlopeAlt = _$v.glideSlopeAlt;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Land other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Land;
  }

  @override
  void update(void Function(LandBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Land build() {
    final _$result = _$v ??
        _$Land._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            abortZ: abortZ ?? 0,
            bearing: bearing ?? 0,
            glideSlope: glideSlope ?? 0,
            glideSlopeAlt: glideSlopeAlt ?? 0,
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Autonomous Section immutable class
///
class _$AutonomousSection extends AutonomousSection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final AutonomousSectionBitfieldLimits limits;
  @override
  final double maxDepth;
  @override
  final double minAlt;
  @override
  final double timeLimit;
  @override
  final List<PolygonVertex> areaLimits;
  @override
  final String controller;
  @override
  final String custom;

  factory _$AutonomousSection(
          [void Function(AutonomousSectionBuilder b) updates]) =>
      (AutonomousSectionBuilder()..update(updates)).build();

  _$AutonomousSection._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.speed,
      this.speedUnits,
      this.limits,
      this.maxDepth,
      this.minAlt,
      this.timeLimit,
      this.areaLimits,
      this.controller,
      this.custom})
      : super._();

  @override
  AutonomousSection rebuild(
          void Function(AutonomousSectionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AutonomousSectionBuilder toBuilder() =>
      AutonomousSectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AutonomousSection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        limits == other.limits &&
        (maxDepth == other.maxDepth || maxDepth - other.maxDepth <= 1E-7) &&
        (minAlt == other.minAlt || minAlt - other.minAlt <= 1E-7) &&
        (timeLimit == other.timeLimit || timeLimit - other.timeLimit <= 1E-7) &&
        DeepCollectionEquality().equals(areaLimits, other.areaLimits) &&
        controller == other.controller &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    0,
                                                                    timestamp
                                                                        ?.hashCode),
                                                                src?.hashCode),
                                                            srcEnt?.hashCode),
                                                        dst?.hashCode),
                                                    dstEnt?.hashCode),
                                                lat?.hashCode),
                                            lon?.hashCode),
                                        speed?.hashCode),
                                    speedUnits?.hashCode),
                                limits?.hashCode),
                            maxDepth?.hashCode),
                        minAlt?.hashCode),
                    timeLimit?.hashCode),
                areaLimits?.hashCode),
            controller?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AutonomousSection')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('limits', '$limits (Bitfield)')
          ..add('maxDepth', '$maxDepth (m)')
          ..add('minAlt', '$minAlt (m)')
          ..add('timeLimit', '$timeLimit (s)')
          ..add('areaLimits', '$areaLimits')
          ..add('controller', '$controller')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Autonomous Section builder class
///
class AutonomousSectionBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<AutonomousSection, AutonomousSectionBuilder> {
  _$AutonomousSection _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  AutonomousSectionBitfieldLimits _limits = AutonomousSectionBitfieldLimits(0);
  AutonomousSectionBitfieldLimits get limits => _$this._limits;
  set limits(AutonomousSectionBitfieldLimits limits) => _$this._limits = limits;

  double _maxDepth = 0;
  double get maxDepth => _$this._maxDepth;
  set maxDepth(double maxDepth) => _$this._maxDepth = maxDepth;

  double _minAlt = 0;
  double get minAlt => _$this._minAlt;
  set minAlt(double minAlt) => _$this._minAlt = minAlt;

  double _timeLimit = 0;
  double get timeLimit => _$this._timeLimit;
  set timeLimit(double timeLimit) => _$this._timeLimit = timeLimit;

  List<PolygonVertex> _areaLimits = <PolygonVertex>[];
  List<PolygonVertex> get areaLimits => _$this._areaLimits;
  set areaLimits(List<PolygonVertex> areaLimits) =>
      _$this._areaLimits = areaLimits;

  String _controller = '';
  String get controller => _$this._controller;
  set controller(String controller) => _$this._controller = controller;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  AutonomousSectionBuilder();

  AutonomousSectionBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AutonomousSectionBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AutonomousSectionBuilder()..copyFromHeader(headerFrom);

  AutonomousSectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _limits = _$v.limits;
      _maxDepth = _$v.maxDepth;
      _minAlt = _$v.minAlt;
      _timeLimit = _$v.timeLimit;
      _areaLimits = _$v.areaLimits;
      _controller = _$v.controller;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AutonomousSection other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$AutonomousSection;
  }

  @override
  void update(void Function(AutonomousSectionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$AutonomousSection build() {
    final _$result = _$v ??
        _$AutonomousSection._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            limits: limits ?? AutonomousSectionBitfieldLimits(0),
            maxDepth: maxDepth ?? 0,
            minAlt: minAlt ?? 0,
            timeLimit: timeLimit ?? 0,
            areaLimits: areaLimits ?? <PolygonVertex>[],
            controller: controller ?? '',
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Follow Point Maneuver immutable class
///
class _$FollowPoint extends FollowPoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String target;
  @override
  final double maxSpeed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final String custom;

  factory _$FollowPoint([void Function(FollowPointBuilder b) updates]) =>
      (FollowPointBuilder()..update(updates)).build();

  _$FollowPoint._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.target,
      this.maxSpeed,
      this.speedUnits,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.custom})
      : super._();

  @override
  FollowPoint rebuild(void Function(FollowPointBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FollowPointBuilder toBuilder() => FollowPointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FollowPoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == other.target &&
        (maxSpeed == other.maxSpeed || maxSpeed - other.maxSpeed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, timestamp?.hashCode),
                                                    src?.hashCode),
                                                srcEnt?.hashCode),
                                            dst?.hashCode),
                                        dstEnt?.hashCode),
                                    target?.hashCode),
                                maxSpeed?.hashCode),
                            speedUnits?.hashCode),
                        lat?.hashCode),
                    lon?.hashCode),
                z?.hashCode),
            zUnits?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FollowPoint')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('target', '$target')
          ..add('maxSpeed', '$maxSpeed (m/s)')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Follow Point Maneuver builder class
///
class FollowPointBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<FollowPoint, FollowPointBuilder> {
  _$FollowPoint _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _target = '';
  String get target => _$this._target;
  set target(String target) => _$this._target = target;

  double _maxSpeed = 0;
  double get maxSpeed => _$this._maxSpeed;
  set maxSpeed(double maxSpeed) => _$this._maxSpeed = maxSpeed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  FollowPointBuilder();

  FollowPointBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FollowPointBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FollowPointBuilder()..copyFromHeader(headerFrom);

  FollowPointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _maxSpeed = _$v.maxSpeed;
      _speedUnits = _$v.speedUnits;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FollowPoint other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FollowPoint;
  }

  @override
  void update(void Function(FollowPointBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FollowPoint build() {
    final _$result = _$v ??
        _$FollowPoint._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            target: target ?? '',
            maxSpeed: maxSpeed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Alignment Maneuver immutable class
///
class _$Alignment extends Alignment {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final String custom;

  factory _$Alignment([void Function(AlignmentBuilder b) updates]) =>
      (AlignmentBuilder()..update(updates)).build();

  _$Alignment._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.speed,
      this.speedUnits,
      this.custom})
      : super._();

  @override
  Alignment rebuild(void Function(AlignmentBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AlignmentBuilder toBuilder() => AlignmentBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Alignment &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, timestamp?.hashCode),
                                            src?.hashCode),
                                        srcEnt?.hashCode),
                                    dst?.hashCode),
                                dstEnt?.hashCode),
                            timeout?.hashCode),
                        lat?.hashCode),
                    lon?.hashCode),
                speed?.hashCode),
            speedUnits?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Alignment')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Alignment Maneuver builder class
///
class AlignmentBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Alignment, AlignmentBuilder> {
  _$Alignment _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  AlignmentBuilder();

  AlignmentBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AlignmentBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AlignmentBuilder()..copyFromHeader(headerFrom);

  AlignmentBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Alignment other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Alignment;
  }

  @override
  void update(void Function(AlignmentBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Alignment build() {
    final _$result = _$v ??
        _$Alignment._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Station Keeping Extended immutable class
///
class _$StationKeepingExtended extends StationKeepingExtended {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double radius;
  @override
  final int duration;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final int popupPeriod;
  @override
  final int popupDuration;
  @override
  final StationKeepingExtendedBitfieldFlags flags;
  @override
  final String custom;

  factory _$StationKeepingExtended(
          [void Function(StationKeepingExtendedBuilder b) updates]) =>
      (StationKeepingExtendedBuilder()..update(updates)).build();

  _$StationKeepingExtended._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.radius,
      this.duration,
      this.speed,
      this.speedUnits,
      this.popupPeriod,
      this.popupDuration,
      this.flags,
      this.custom})
      : super._();

  @override
  StationKeepingExtended rebuild(
          void Function(StationKeepingExtendedBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  StationKeepingExtendedBuilder toBuilder() =>
      StationKeepingExtendedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StationKeepingExtended &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (radius == other.radius || radius - other.radius <= 1E-7) &&
        duration == other.duration &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        popupPeriod == other.popupPeriod &&
        popupDuration == other.popupDuration &&
        flags == other.flags &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        0,
                                                                        timestamp
                                                                            ?.hashCode),
                                                                    src
                                                                        ?.hashCode),
                                                                srcEnt
                                                                    ?.hashCode),
                                                            dst?.hashCode),
                                                        dstEnt?.hashCode),
                                                    lat?.hashCode),
                                                lon?.hashCode),
                                            z?.hashCode),
                                        zUnits?.hashCode),
                                    radius?.hashCode),
                                duration?.hashCode),
                            speed?.hashCode),
                        speedUnits?.hashCode),
                    popupPeriod?.hashCode),
                popupDuration?.hashCode),
            flags?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StationKeepingExtended')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('radius', '$radius (m)')
          ..add('duration', '$duration (s)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('popupPeriod', '$popupPeriod (s)')
          ..add('popupDuration', '$popupDuration (s)')
          ..add('flags', '$flags (Bitfield)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Station Keeping Extended builder class
///
class StationKeepingExtendedBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<StationKeepingExtended,
            StationKeepingExtendedBuilder> {
  _$StationKeepingExtended _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _radius = 0;
  double get radius => _$this._radius;
  set radius(double radius) => _$this._radius = radius;

  int _duration = 0;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  int _popupPeriod = 0;
  int get popupPeriod => _$this._popupPeriod;
  set popupPeriod(int popupPeriod) => _$this._popupPeriod = popupPeriod;

  int _popupDuration = 0;
  int get popupDuration => _$this._popupDuration;
  set popupDuration(int popupDuration) => _$this._popupDuration = popupDuration;

  StationKeepingExtendedBitfieldFlags _flags =
      StationKeepingExtendedBitfieldFlags(0);
  StationKeepingExtendedBitfieldFlags get flags => _$this._flags;
  set flags(StationKeepingExtendedBitfieldFlags flags) => _$this._flags = flags;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  StationKeepingExtendedBuilder();

  StationKeepingExtendedBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  StationKeepingExtendedBuilder newInstance(
          [ImcBuilderHeaderPart headerFrom]) =>
      StationKeepingExtendedBuilder()..copyFromHeader(headerFrom);

  StationKeepingExtendedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _radius = _$v.radius;
      _duration = _$v.duration;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _popupPeriod = _$v.popupPeriod;
      _popupDuration = _$v.popupDuration;
      _flags = _$v.flags;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StationKeepingExtended other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$StationKeepingExtended;
  }

  @override
  void update(void Function(StationKeepingExtendedBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$StationKeepingExtended build() {
    final _$result = _$v ??
        _$StationKeepingExtended._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            radius: radius ?? 0,
            duration: duration ?? 0,
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            popupPeriod: popupPeriod ?? 0,
            popupDuration: popupDuration ?? 0,
            flags: flags ?? StationKeepingExtendedBitfieldFlags(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Maneuver Done immutable class
///
class _$ManeuverDone extends ManeuverDone {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  factory _$ManeuverDone([void Function(ManeuverDoneBuilder b) updates]) =>
      (ManeuverDoneBuilder()..update(updates)).build();

  _$ManeuverDone._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId})
      : super._();

  @override
  ManeuverDone rebuild(void Function(ManeuverDoneBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ManeuverDoneBuilder toBuilder() => ManeuverDoneBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ManeuverDone &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                srcEnt?.hashCode),
            dst?.hashCode),
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ManeuverDone')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Maneuver Done builder class
///
class ManeuverDoneBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ManeuverDone, ManeuverDoneBuilder> {
  _$ManeuverDone _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ManeuverDoneBuilder();

  ManeuverDoneBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ManeuverDoneBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ManeuverDoneBuilder()..copyFromHeader(headerFrom);

  ManeuverDoneBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ManeuverDone other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ManeuverDone;
  }

  @override
  void update(void Function(ManeuverDoneBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ManeuverDone build() {
    final _$result = _$v ??
        _$ManeuverDone._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Magnetometer Maneuver immutable class
///
class _$Magnetometer extends Magnetometer {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double speed;
  @override
  final SpeedUnitsEnum speedUnits;
  @override
  final double bearing;
  @override
  final double width;
  @override
  final MagnetometerEnumDirection direction;
  @override
  final String custom;

  factory _$Magnetometer([void Function(MagnetometerBuilder b) updates]) =>
      (MagnetometerBuilder()..update(updates)).build();

  _$Magnetometer._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.speed,
      this.speedUnits,
      this.bearing,
      this.width,
      this.direction,
      this.custom})
      : super._();

  @override
  Magnetometer rebuild(void Function(MagnetometerBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  MagnetometerBuilder toBuilder() => MagnetometerBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Magnetometer &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        speedUnits == other.speedUnits &&
        (bearing == other.bearing || bearing - other.bearing <= 1E-7) &&
        (width == other.width || width - other.width <= 1E-7) &&
        direction == other.direction &&
        custom == other.custom;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    0,
                                                                    timestamp
                                                                        ?.hashCode),
                                                                src?.hashCode),
                                                            srcEnt?.hashCode),
                                                        dst?.hashCode),
                                                    dstEnt?.hashCode),
                                                timeout?.hashCode),
                                            lat?.hashCode),
                                        lon?.hashCode),
                                    z?.hashCode),
                                zUnits?.hashCode),
                            speed?.hashCode),
                        speedUnits?.hashCode),
                    bearing?.hashCode),
                width?.hashCode),
            direction?.hashCode),
        custom?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Magnetometer')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout (s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('speed', '$speed')
          ..add('speedUnits', '$speedUnits (Enumerated)')
          ..add('bearing',
              '$bearing (rad)${bearing != null ? ' [${bearing * 180.0 / math.pi} (deg)]' : ''}')
          ..add('width', '$width (m)')
          ..add('direction', '$direction (Enumerated)')
          ..add('custom', '$custom (TupleList)'))
        .toString();
  }
}

/// Magnetometer Maneuver builder class
///
class MagnetometerBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Magnetometer, MagnetometerBuilder> {
  _$Magnetometer _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  SpeedUnitsEnum _speedUnits = SpeedUnitsEnum(0);
  SpeedUnitsEnum get speedUnits => _$this._speedUnits;
  set speedUnits(SpeedUnitsEnum speedUnits) => _$this._speedUnits = speedUnits;

  double _bearing = 0;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _width = 0;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  MagnetometerEnumDirection _direction = MagnetometerEnumDirection(0);
  MagnetometerEnumDirection get direction => _$this._direction;
  set direction(MagnetometerEnumDirection direction) =>
      _$this._direction = direction;

  String _custom = '';
  String get custom => _$this._custom;
  set custom(String custom) => _$this._custom = custom;

  MagnetometerBuilder();

  MagnetometerBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  MagnetometerBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      MagnetometerBuilder()..copyFromHeader(headerFrom);

  MagnetometerBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _speed = _$v.speed;
      _speedUnits = _$v.speedUnits;
      _bearing = _$v.bearing;
      _width = _$v.width;
      _direction = _$v.direction;
      _custom = _$v.custom;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Magnetometer other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Magnetometer;
  }

  @override
  void update(void Function(MagnetometerBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Magnetometer build() {
    final _$result = _$v ??
        _$Magnetometer._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            speed: speed ?? 0,
            speedUnits: speedUnits ?? SpeedUnitsEnum(0),
            bearing: bearing ?? 0,
            width: width ?? 0,
            direction: direction ?? MagnetometerEnumDirection(0),
            custom: custom ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Vehicle State immutable class
///
class _$VehicleState extends VehicleState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VehicleStateEnumOpMode opMode;
  @override
  final int errorCount;
  @override
  final String errorEnts;
  @override
  final int maneuverType;
  @override
  final double maneuverStime;
  @override
  final int maneuverEta;
  @override
  final CLoopsMaskBitfield controlLoops;
  @override
  final VehicleStateBitfieldFlags flags;
  @override
  final String lastError;
  @override
  final double lastErrorTime;

  factory _$VehicleState([void Function(VehicleStateBuilder b) updates]) =>
      (VehicleStateBuilder()..update(updates)).build();

  _$VehicleState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.opMode,
      this.errorCount,
      this.errorEnts,
      this.maneuverType,
      this.maneuverStime,
      this.maneuverEta,
      this.controlLoops,
      this.flags,
      this.lastError,
      this.lastErrorTime})
      : super._();

  @override
  VehicleState rebuild(void Function(VehicleStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleStateBuilder toBuilder() => VehicleStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        opMode == other.opMode &&
        errorCount == other.errorCount &&
        errorEnts == other.errorEnts &&
        maneuverType == other.maneuverType &&
        (maneuverStime == other.maneuverStime ||
            maneuverStime - other.maneuverStime <= 1E-7) &&
        maneuverEta == other.maneuverEta &&
        controlLoops == other.controlLoops &&
        flags == other.flags &&
        lastError == other.lastError &&
        (lastErrorTime == other.lastErrorTime ||
            lastErrorTime - other.lastErrorTime <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                0,
                                                                timestamp
                                                                    ?.hashCode),
                                                            src?.hashCode),
                                                        srcEnt?.hashCode),
                                                    dst?.hashCode),
                                                dstEnt?.hashCode),
                                            opMode?.hashCode),
                                        errorCount?.hashCode),
                                    errorEnts?.hashCode),
                                maneuverType?.hashCode),
                            maneuverStime?.hashCode),
                        maneuverEta?.hashCode),
                    controlLoops?.hashCode),
                flags?.hashCode),
            lastError?.hashCode),
        lastErrorTime?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('opMode', '$opMode (Enumerated)')
          ..add('errorCount', '$errorCount')
          ..add('errorEnts', '$errorEnts')
          ..add('maneuverType', '$maneuverType')
          ..add('maneuverStime', '$maneuverStime (s)')
          ..add('maneuverEta', '$maneuverEta (s)')
          ..add('controlLoops', '$controlLoops (Bitfield)')
          ..add('flags', '$flags (Bitfield)')
          ..add('lastError', '$lastError')
          ..add('lastErrorTime', '$lastErrorTime (s)'))
        .toString();
  }
}

/// Vehicle State builder class
///
class VehicleStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<VehicleState, VehicleStateBuilder> {
  _$VehicleState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VehicleStateEnumOpMode _opMode = VehicleStateEnumOpMode(0);
  VehicleStateEnumOpMode get opMode => _$this._opMode;
  set opMode(VehicleStateEnumOpMode opMode) => _$this._opMode = opMode;

  int _errorCount = 0;
  int get errorCount => _$this._errorCount;
  set errorCount(int errorCount) => _$this._errorCount = errorCount;

  String _errorEnts = '';
  String get errorEnts => _$this._errorEnts;
  set errorEnts(String errorEnts) => _$this._errorEnts = errorEnts;

  int _maneuverType = 0;
  int get maneuverType => _$this._maneuverType;
  set maneuverType(int maneuverType) => _$this._maneuverType = maneuverType;

  double _maneuverStime = 0;
  double get maneuverStime => _$this._maneuverStime;
  set maneuverStime(double maneuverStime) =>
      _$this._maneuverStime = maneuverStime;

  int _maneuverEta = 0;
  int get maneuverEta => _$this._maneuverEta;
  set maneuverEta(int maneuverEta) => _$this._maneuverEta = maneuverEta;

  CLoopsMaskBitfield _controlLoops = CLoopsMaskBitfield(0);
  CLoopsMaskBitfield get controlLoops => _$this._controlLoops;
  set controlLoops(CLoopsMaskBitfield controlLoops) =>
      _$this._controlLoops = controlLoops;

  VehicleStateBitfieldFlags _flags = VehicleStateBitfieldFlags(0);
  VehicleStateBitfieldFlags get flags => _$this._flags;
  set flags(VehicleStateBitfieldFlags flags) => _$this._flags = flags;

  String _lastError = '';
  String get lastError => _$this._lastError;
  set lastError(String lastError) => _$this._lastError = lastError;

  double _lastErrorTime = 0;
  double get lastErrorTime => _$this._lastErrorTime;
  set lastErrorTime(double lastErrorTime) =>
      _$this._lastErrorTime = lastErrorTime;

  VehicleStateBuilder();

  VehicleStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  VehicleStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      VehicleStateBuilder()..copyFromHeader(headerFrom);

  VehicleStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _opMode = _$v.opMode;
      _errorCount = _$v.errorCount;
      _errorEnts = _$v.errorEnts;
      _maneuverType = _$v.maneuverType;
      _maneuverStime = _$v.maneuverStime;
      _maneuverEta = _$v.maneuverEta;
      _controlLoops = _$v.controlLoops;
      _flags = _$v.flags;
      _lastError = _$v.lastError;
      _lastErrorTime = _$v.lastErrorTime;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleState;
  }

  @override
  void update(void Function(VehicleStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleState build() {
    final _$result = _$v ??
        _$VehicleState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            opMode: opMode ?? VehicleStateEnumOpMode(0),
            errorCount: errorCount ?? 0,
            errorEnts: errorEnts ?? '',
            maneuverType: maneuverType ?? 0,
            maneuverStime: maneuverStime ?? 0,
            maneuverEta: maneuverEta ?? 0,
            controlLoops: controlLoops ?? CLoopsMaskBitfield(0),
            flags: flags ?? VehicleStateBitfieldFlags(0),
            lastError: lastError ?? '',
            lastErrorTime: lastErrorTime ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Command immutable class
///
class _$VehicleCommand extends VehicleCommand {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VehicleCommandEnumType type;
  @override
  final int requestId;
  @override
  final VehicleCommandEnumCommand command;
  @override
  final Maneuver maneuver;
  @override
  final int calibTime;
  @override
  final String info;

  factory _$VehicleCommand([void Function(VehicleCommandBuilder b) updates]) =>
      (VehicleCommandBuilder()..update(updates)).build();

  _$VehicleCommand._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type,
      this.requestId,
      this.command,
      this.maneuver,
      this.calibTime,
      this.info})
      : super._();

  @override
  VehicleCommand rebuild(void Function(VehicleCommandBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleCommandBuilder toBuilder() => VehicleCommandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleCommand &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type &&
        requestId == other.requestId &&
        command == other.command &&
        maneuver == other.maneuver &&
        calibTime == other.calibTime &&
        info == other.info;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, timestamp?.hashCode),
                                            src?.hashCode),
                                        srcEnt?.hashCode),
                                    dst?.hashCode),
                                dstEnt?.hashCode),
                            type?.hashCode),
                        requestId?.hashCode),
                    command?.hashCode),
                maneuver?.hashCode),
            calibTime?.hashCode),
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleCommand')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Enumerated)')
          ..add('requestId', '$requestId')
          ..add('command', '$command (Enumerated)')
          ..add('maneuver', '$maneuver')
          ..add('calibTime', '$calibTime (s)')
          ..add('info', '$info'))
        .toString();
  }
}

/// Vehicle Command builder class
///
class VehicleCommandBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<VehicleCommand, VehicleCommandBuilder> {
  _$VehicleCommand _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VehicleCommandEnumType _type = VehicleCommandEnumType(0);
  VehicleCommandEnumType get type => _$this._type;
  set type(VehicleCommandEnumType type) => _$this._type = type;

  int _requestId = 0;
  int get requestId => _$this._requestId;
  set requestId(int requestId) => _$this._requestId = requestId;

  VehicleCommandEnumCommand _command = VehicleCommandEnumCommand(0);
  VehicleCommandEnumCommand get command => _$this._command;
  set command(VehicleCommandEnumCommand command) => _$this._command = command;

  Maneuver _maneuver;
  Maneuver get maneuver => _$this._maneuver;
  set maneuver(Maneuver maneuver) => _$this._maneuver = maneuver;

  int _calibTime = 0;
  int get calibTime => _$this._calibTime;
  set calibTime(int calibTime) => _$this._calibTime = calibTime;

  String _info = '';
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  VehicleCommandBuilder();

  VehicleCommandBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  VehicleCommandBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      VehicleCommandBuilder()..copyFromHeader(headerFrom);

  VehicleCommandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _requestId = _$v.requestId;
      _command = _$v.command;
      _maneuver = _$v.maneuver;
      _calibTime = _$v.calibTime;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleCommand other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleCommand;
  }

  @override
  void update(void Function(VehicleCommandBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleCommand build() {
    final _$result = _$v ??
        _$VehicleCommand._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? VehicleCommandEnumType(0),
            requestId: requestId ?? 0,
            command: command ?? VehicleCommandEnumCommand(0),
            maneuver: maneuver,
            calibTime: calibTime ?? 0,
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Monitor Entity State immutable class
///
class _$MonitorEntityState extends MonitorEntityState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final MonitorEntityStateEnumCommand command;
  @override
  final String entities;

  factory _$MonitorEntityState(
          [void Function(MonitorEntityStateBuilder b) updates]) =>
      (MonitorEntityStateBuilder()..update(updates)).build();

  _$MonitorEntityState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.command,
      this.entities})
      : super._();

  @override
  MonitorEntityState rebuild(
          void Function(MonitorEntityStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  MonitorEntityStateBuilder toBuilder() =>
      MonitorEntityStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MonitorEntityState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        command == other.command &&
        entities == other.entities;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            command?.hashCode),
        entities?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MonitorEntityState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('command', '$command (Enumerated)')
          ..add('entities', '$entities'))
        .toString();
  }
}

/// Monitor Entity State builder class
///
class MonitorEntityStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<MonitorEntityState, MonitorEntityStateBuilder> {
  _$MonitorEntityState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  MonitorEntityStateEnumCommand _command = MonitorEntityStateEnumCommand(0);
  MonitorEntityStateEnumCommand get command => _$this._command;
  set command(MonitorEntityStateEnumCommand command) =>
      _$this._command = command;

  String _entities = '';
  String get entities => _$this._entities;
  set entities(String entities) => _$this._entities = entities;

  MonitorEntityStateBuilder();

  MonitorEntityStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  MonitorEntityStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      MonitorEntityStateBuilder()..copyFromHeader(headerFrom);

  MonitorEntityStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _command = _$v.command;
      _entities = _$v.entities;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MonitorEntityState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$MonitorEntityState;
  }

  @override
  void update(void Function(MonitorEntityStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$MonitorEntityState build() {
    final _$result = _$v ??
        _$MonitorEntityState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            command: command ?? MonitorEntityStateEnumCommand(0),
            entities: entities ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Entity Monitoring State immutable class
///
class _$EntityMonitoringState extends EntityMonitoringState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int mcount;
  @override
  final String mnames;
  @override
  final int ecount;
  @override
  final String enames;
  @override
  final int ccount;
  @override
  final String cnames;
  @override
  final String lastError;
  @override
  final double lastErrorTime;

  factory _$EntityMonitoringState(
          [void Function(EntityMonitoringStateBuilder b) updates]) =>
      (EntityMonitoringStateBuilder()..update(updates)).build();

  _$EntityMonitoringState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.mcount,
      this.mnames,
      this.ecount,
      this.enames,
      this.ccount,
      this.cnames,
      this.lastError,
      this.lastErrorTime})
      : super._();

  @override
  EntityMonitoringState rebuild(
          void Function(EntityMonitoringStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityMonitoringStateBuilder toBuilder() =>
      EntityMonitoringStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityMonitoringState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        mcount == other.mcount &&
        mnames == other.mnames &&
        ecount == other.ecount &&
        enames == other.enames &&
        ccount == other.ccount &&
        cnames == other.cnames &&
        lastError == other.lastError &&
        (lastErrorTime == other.lastErrorTime ||
            lastErrorTime - other.lastErrorTime <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, timestamp?.hashCode),
                                                    src?.hashCode),
                                                srcEnt?.hashCode),
                                            dst?.hashCode),
                                        dstEnt?.hashCode),
                                    mcount?.hashCode),
                                mnames?.hashCode),
                            ecount?.hashCode),
                        enames?.hashCode),
                    ccount?.hashCode),
                cnames?.hashCode),
            lastError?.hashCode),
        lastErrorTime?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityMonitoringState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('mcount', '$mcount')
          ..add('mnames', '$mnames')
          ..add('ecount', '$ecount')
          ..add('enames', '$enames')
          ..add('ccount', '$ccount')
          ..add('cnames', '$cnames')
          ..add('lastError', '$lastError')
          ..add('lastErrorTime', '$lastErrorTime (s)'))
        .toString();
  }
}

/// Entity Monitoring State builder class
///
class EntityMonitoringStateBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<EntityMonitoringState,
            EntityMonitoringStateBuilder> {
  _$EntityMonitoringState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _mcount = 0;
  int get mcount => _$this._mcount;
  set mcount(int mcount) => _$this._mcount = mcount;

  String _mnames = '';
  String get mnames => _$this._mnames;
  set mnames(String mnames) => _$this._mnames = mnames;

  int _ecount = 0;
  int get ecount => _$this._ecount;
  set ecount(int ecount) => _$this._ecount = ecount;

  String _enames = '';
  String get enames => _$this._enames;
  set enames(String enames) => _$this._enames = enames;

  int _ccount = 0;
  int get ccount => _$this._ccount;
  set ccount(int ccount) => _$this._ccount = ccount;

  String _cnames = '';
  String get cnames => _$this._cnames;
  set cnames(String cnames) => _$this._cnames = cnames;

  String _lastError = '';
  String get lastError => _$this._lastError;
  set lastError(String lastError) => _$this._lastError = lastError;

  double _lastErrorTime = 0;
  double get lastErrorTime => _$this._lastErrorTime;
  set lastErrorTime(double lastErrorTime) =>
      _$this._lastErrorTime = lastErrorTime;

  EntityMonitoringStateBuilder();

  EntityMonitoringStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  EntityMonitoringStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      EntityMonitoringStateBuilder()..copyFromHeader(headerFrom);

  EntityMonitoringStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _mcount = _$v.mcount;
      _mnames = _$v.mnames;
      _ecount = _$v.ecount;
      _enames = _$v.enames;
      _ccount = _$v.ccount;
      _cnames = _$v.cnames;
      _lastError = _$v.lastError;
      _lastErrorTime = _$v.lastErrorTime;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityMonitoringState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$EntityMonitoringState;
  }

  @override
  void update(void Function(EntityMonitoringStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityMonitoringState build() {
    final _$result = _$v ??
        _$EntityMonitoringState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            mcount: mcount ?? 0,
            mnames: mnames ?? '',
            ecount: ecount ?? 0,
            enames: enames ?? '',
            ccount: ccount ?? 0,
            cnames: cnames ?? '',
            lastError: lastError ?? '',
            lastErrorTime: lastErrorTime ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Operational Limits immutable class
///
class _$OperationalLimits extends OperationalLimits {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final OpLimitsMaskBitfield mask;
  @override
  final double maxDepth;
  @override
  final double minAltitude;
  @override
  final double maxAltitude;
  @override
  final double minSpeed;
  @override
  final double maxSpeed;
  @override
  final double maxVrate;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double orientation;
  @override
  final double width;
  @override
  final double length;

  factory _$OperationalLimits(
          [void Function(OperationalLimitsBuilder b) updates]) =>
      (OperationalLimitsBuilder()..update(updates)).build();

  _$OperationalLimits._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.mask,
      this.maxDepth,
      this.minAltitude,
      this.maxAltitude,
      this.minSpeed,
      this.maxSpeed,
      this.maxVrate,
      this.lat,
      this.lon,
      this.orientation,
      this.width,
      this.length})
      : super._();

  @override
  OperationalLimits rebuild(
          void Function(OperationalLimitsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  OperationalLimitsBuilder toBuilder() =>
      OperationalLimitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is OperationalLimits &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        mask == other.mask &&
        (maxDepth == other.maxDepth || maxDepth - other.maxDepth <= 1E-7) &&
        (minAltitude == other.minAltitude ||
            minAltitude - other.minAltitude <= 1E-7) &&
        (maxAltitude == other.maxAltitude ||
            maxAltitude - other.maxAltitude <= 1E-7) &&
        (minSpeed == other.minSpeed || minSpeed - other.minSpeed <= 1E-7) &&
        (maxSpeed == other.maxSpeed || maxSpeed - other.maxSpeed <= 1E-7) &&
        (maxVrate == other.maxVrate || maxVrate - other.maxVrate <= 1E-7) &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (orientation == other.orientation ||
            orientation - other.orientation <= 1E-7) &&
        (width == other.width || width - other.width <= 1E-7) &&
        (length == other.length || length - other.length <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        0,
                                                                        timestamp
                                                                            ?.hashCode),
                                                                    src
                                                                        ?.hashCode),
                                                                srcEnt
                                                                    ?.hashCode),
                                                            dst?.hashCode),
                                                        dstEnt?.hashCode),
                                                    mask?.hashCode),
                                                maxDepth?.hashCode),
                                            minAltitude?.hashCode),
                                        maxAltitude?.hashCode),
                                    minSpeed?.hashCode),
                                maxSpeed?.hashCode),
                            maxVrate?.hashCode),
                        lat?.hashCode),
                    lon?.hashCode),
                orientation?.hashCode),
            width?.hashCode),
        length?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('OperationalLimits')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('mask', '$mask (Bitfield)')
          ..add('maxDepth', '$maxDepth (m)')
          ..add('minAltitude', '$minAltitude (m)')
          ..add('maxAltitude', '$maxAltitude (m)')
          ..add('minSpeed', '$minSpeed (m/s)')
          ..add('maxSpeed', '$maxSpeed (m/s)')
          ..add('maxVrate', '$maxVrate (m/s)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('orientation',
              '$orientation (rad)${orientation != null ? ' [${orientation * 180.0 / math.pi} (deg)]' : ''}')
          ..add('width', '$width (m)')
          ..add('length', '$length (m)'))
        .toString();
  }
}

/// Operational Limits builder class
///
class OperationalLimitsBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<OperationalLimits, OperationalLimitsBuilder> {
  _$OperationalLimits _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  OpLimitsMaskBitfield _mask = OpLimitsMaskBitfield(0);
  OpLimitsMaskBitfield get mask => _$this._mask;
  set mask(OpLimitsMaskBitfield mask) => _$this._mask = mask;

  double _maxDepth = 0;
  double get maxDepth => _$this._maxDepth;
  set maxDepth(double maxDepth) => _$this._maxDepth = maxDepth;

  double _minAltitude = 0;
  double get minAltitude => _$this._minAltitude;
  set minAltitude(double minAltitude) => _$this._minAltitude = minAltitude;

  double _maxAltitude = 0;
  double get maxAltitude => _$this._maxAltitude;
  set maxAltitude(double maxAltitude) => _$this._maxAltitude = maxAltitude;

  double _minSpeed = 0;
  double get minSpeed => _$this._minSpeed;
  set minSpeed(double minSpeed) => _$this._minSpeed = minSpeed;

  double _maxSpeed = 0;
  double get maxSpeed => _$this._maxSpeed;
  set maxSpeed(double maxSpeed) => _$this._maxSpeed = maxSpeed;

  double _maxVrate = 0;
  double get maxVrate => _$this._maxVrate;
  set maxVrate(double maxVrate) => _$this._maxVrate = maxVrate;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _orientation = 0;
  double get orientation => _$this._orientation;
  set orientation(double orientation) => _$this._orientation = orientation;

  double _width = 0;
  double get width => _$this._width;
  set width(double width) => _$this._width = width;

  double _length = 0;
  double get length => _$this._length;
  set length(double length) => _$this._length = length;

  OperationalLimitsBuilder();

  OperationalLimitsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  OperationalLimitsBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      OperationalLimitsBuilder()..copyFromHeader(headerFrom);

  OperationalLimitsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _mask = _$v.mask;
      _maxDepth = _$v.maxDepth;
      _minAltitude = _$v.minAltitude;
      _maxAltitude = _$v.maxAltitude;
      _minSpeed = _$v.minSpeed;
      _maxSpeed = _$v.maxSpeed;
      _maxVrate = _$v.maxVrate;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _orientation = _$v.orientation;
      _width = _$v.width;
      _length = _$v.length;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(OperationalLimits other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$OperationalLimits;
  }

  @override
  void update(void Function(OperationalLimitsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$OperationalLimits build() {
    final _$result = _$v ??
        _$OperationalLimits._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            mask: mask ?? OpLimitsMaskBitfield(0),
            maxDepth: maxDepth ?? 0,
            minAltitude: minAltitude ?? 0,
            maxAltitude: maxAltitude ?? 0,
            minSpeed: minSpeed ?? 0,
            maxSpeed: maxSpeed ?? 0,
            maxVrate: maxVrate ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            orientation: orientation ?? 0,
            width: width ?? 0,
            length: length ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Get Operational Limits immutable class
///
class _$GetOperationalLimits extends GetOperationalLimits {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  factory _$GetOperationalLimits(
          [void Function(GetOperationalLimitsBuilder b) updates]) =>
      (GetOperationalLimitsBuilder()..update(updates)).build();

  _$GetOperationalLimits._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId})
      : super._();

  @override
  GetOperationalLimits rebuild(
          void Function(GetOperationalLimitsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GetOperationalLimitsBuilder toBuilder() =>
      GetOperationalLimitsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GetOperationalLimits &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                srcEnt?.hashCode),
            dst?.hashCode),
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GetOperationalLimits')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Get Operational Limits builder class
///
class GetOperationalLimitsBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<GetOperationalLimits,
            GetOperationalLimitsBuilder> {
  _$GetOperationalLimits _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GetOperationalLimitsBuilder();

  GetOperationalLimitsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  GetOperationalLimitsBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      GetOperationalLimitsBuilder()..copyFromHeader(headerFrom);

  GetOperationalLimitsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GetOperationalLimits other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$GetOperationalLimits;
  }

  @override
  void update(void Function(GetOperationalLimitsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GetOperationalLimits build() {
    final _$result = _$v ??
        _$GetOperationalLimits._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Calibration immutable class
///
class _$Calibration extends Calibration {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int duration;

  factory _$Calibration([void Function(CalibrationBuilder b) updates]) =>
      (CalibrationBuilder()..update(updates)).build();

  _$Calibration._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.duration})
      : super._();

  @override
  Calibration rebuild(void Function(CalibrationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CalibrationBuilder toBuilder() => CalibrationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Calibration &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        duration == other.duration;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        duration?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Calibration')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('duration', '$duration (s)'))
        .toString();
  }
}

/// Calibration builder class
///
class CalibrationBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Calibration, CalibrationBuilder> {
  _$Calibration _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _duration = 0;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  CalibrationBuilder();

  CalibrationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CalibrationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CalibrationBuilder()..copyFromHeader(headerFrom);

  CalibrationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _duration = _$v.duration;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Calibration other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Calibration;
  }

  @override
  void update(void Function(CalibrationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Calibration build() {
    final _$result = _$v ??
        _$Calibration._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            duration: duration ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Control Loops immutable class
///
class _$ControlLoops extends ControlLoops {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ControlLoopsEnumEnable enable;
  @override
  final CLoopsMaskBitfield mask;
  @override
  final int scopeRef;

  factory _$ControlLoops([void Function(ControlLoopsBuilder b) updates]) =>
      (ControlLoopsBuilder()..update(updates)).build();

  _$ControlLoops._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.enable,
      this.mask,
      this.scopeRef})
      : super._();

  @override
  ControlLoops rebuild(void Function(ControlLoopsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ControlLoopsBuilder toBuilder() => ControlLoopsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ControlLoops &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        enable == other.enable &&
        mask == other.mask &&
        scopeRef == other.scopeRef;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                enable?.hashCode),
            mask?.hashCode),
        scopeRef?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ControlLoops')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('enable', '$enable (Enumerated)')
          ..add('mask', '$mask (Bitfield)')
          ..add('scopeRef', '$scopeRef'))
        .toString();
  }
}

/// Control Loops builder class
///
class ControlLoopsBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ControlLoops, ControlLoopsBuilder> {
  _$ControlLoops _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ControlLoopsEnumEnable _enable = ControlLoopsEnumEnable(0);
  ControlLoopsEnumEnable get enable => _$this._enable;
  set enable(ControlLoopsEnumEnable enable) => _$this._enable = enable;

  CLoopsMaskBitfield _mask = CLoopsMaskBitfield(0);
  CLoopsMaskBitfield get mask => _$this._mask;
  set mask(CLoopsMaskBitfield mask) => _$this._mask = mask;

  int _scopeRef = 0;
  int get scopeRef => _$this._scopeRef;
  set scopeRef(int scopeRef) => _$this._scopeRef = scopeRef;

  ControlLoopsBuilder();

  ControlLoopsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ControlLoopsBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ControlLoopsBuilder()..copyFromHeader(headerFrom);

  ControlLoopsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _enable = _$v.enable;
      _mask = _$v.mask;
      _scopeRef = _$v.scopeRef;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ControlLoops other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ControlLoops;
  }

  @override
  void update(void Function(ControlLoopsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ControlLoops build() {
    final _$result = _$v ??
        _$ControlLoops._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            enable: enable ?? ControlLoopsEnumEnable(0),
            mask: mask ?? CLoopsMaskBitfield(0),
            scopeRef: scopeRef ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Medium immutable class
///
class _$VehicleMedium extends VehicleMedium {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VehicleMediumEnumMedium medium;

  factory _$VehicleMedium([void Function(VehicleMediumBuilder b) updates]) =>
      (VehicleMediumBuilder()..update(updates)).build();

  _$VehicleMedium._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.medium})
      : super._();

  @override
  VehicleMedium rebuild(void Function(VehicleMediumBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleMediumBuilder toBuilder() => VehicleMediumBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleMedium &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        medium == other.medium;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        medium?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleMedium')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('medium', '$medium (Enumerated)'))
        .toString();
  }
}

/// Vehicle Medium builder class
///
class VehicleMediumBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<VehicleMedium, VehicleMediumBuilder> {
  _$VehicleMedium _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VehicleMediumEnumMedium _medium = VehicleMediumEnumMedium(0);
  VehicleMediumEnumMedium get medium => _$this._medium;
  set medium(VehicleMediumEnumMedium medium) => _$this._medium = medium;

  VehicleMediumBuilder();

  VehicleMediumBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  VehicleMediumBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      VehicleMediumBuilder()..copyFromHeader(headerFrom);

  VehicleMediumBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _medium = _$v.medium;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleMedium other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleMedium;
  }

  @override
  void update(void Function(VehicleMediumBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleMedium build() {
    final _$result = _$v ??
        _$VehicleMedium._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            medium: medium ?? VehicleMediumEnumMedium(0));
    replace(_$result);
    return _$result;
  }
}

/// Collision immutable class
///
class _$Collision extends Collision {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final CollisionBitfieldType type;

  factory _$Collision([void Function(CollisionBuilder b) updates]) =>
      (CollisionBuilder()..update(updates)).build();

  _$Collision._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value,
      this.type})
      : super._();

  @override
  Collision rebuild(void Function(CollisionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CollisionBuilder toBuilder() => CollisionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Collision &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7) &&
        type == other.type;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            value?.hashCode),
        type?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Collision')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (m/s/s)')
          ..add('type', '$type (Bitfield)'))
        .toString();
  }
}

/// Collision builder class
///
class CollisionBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Collision, CollisionBuilder> {
  _$Collision _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  CollisionBitfieldType _type = CollisionBitfieldType(0);
  CollisionBitfieldType get type => _$this._type;
  set type(CollisionBitfieldType type) => _$this._type = type;

  CollisionBuilder();

  CollisionBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CollisionBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CollisionBuilder()..copyFromHeader(headerFrom);

  CollisionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Collision other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Collision;
  }

  @override
  void update(void Function(CollisionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Collision build() {
    final _$result = _$v ??
        _$Collision._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0,
            type: type ?? CollisionBitfieldType(0));
    replace(_$result);
    return _$result;
  }
}

/// Formation Tracking State immutable class
///
class _$FormState extends FormState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double posSimErr;
  @override
  final double converg;
  @override
  final double turbulence;
  @override
  final FormStateEnumPosSimMon posSimMon;
  @override
  final FormStateEnumCommMon commMon;
  @override
  final FormStateEnumConvergMon convergMon;

  factory _$FormState([void Function(FormStateBuilder b) updates]) =>
      (FormStateBuilder()..update(updates)).build();

  _$FormState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.posSimErr,
      this.converg,
      this.turbulence,
      this.posSimMon,
      this.commMon,
      this.convergMon})
      : super._();

  @override
  FormState rebuild(void Function(FormStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FormStateBuilder toBuilder() => FormStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (posSimErr == other.posSimErr || posSimErr - other.posSimErr <= 1E-7) &&
        (converg == other.converg || converg - other.converg <= 1E-7) &&
        (turbulence == other.turbulence ||
            turbulence - other.turbulence <= 1E-7) &&
        posSimMon == other.posSimMon &&
        commMon == other.commMon &&
        convergMon == other.convergMon;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, timestamp?.hashCode),
                                            src?.hashCode),
                                        srcEnt?.hashCode),
                                    dst?.hashCode),
                                dstEnt?.hashCode),
                            posSimErr?.hashCode),
                        converg?.hashCode),
                    turbulence?.hashCode),
                posSimMon?.hashCode),
            commMon?.hashCode),
        convergMon?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('posSimErr', '$posSimErr (m)')
          ..add('converg', '$converg (m)')
          ..add('turbulence', '$turbulence (m/s/s)')
          ..add('posSimMon', '$posSimMon (Enumerated)')
          ..add('commMon', '$commMon (Enumerated)')
          ..add('convergMon', '$convergMon (Enumerated)'))
        .toString();
  }
}

/// Formation Tracking State builder class
///
class FormStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<FormState, FormStateBuilder> {
  _$FormState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _posSimErr = 0;
  double get posSimErr => _$this._posSimErr;
  set posSimErr(double posSimErr) => _$this._posSimErr = posSimErr;

  double _converg = 0;
  double get converg => _$this._converg;
  set converg(double converg) => _$this._converg = converg;

  double _turbulence = 0;
  double get turbulence => _$this._turbulence;
  set turbulence(double turbulence) => _$this._turbulence = turbulence;

  FormStateEnumPosSimMon _posSimMon = FormStateEnumPosSimMon(0);
  FormStateEnumPosSimMon get posSimMon => _$this._posSimMon;
  set posSimMon(FormStateEnumPosSimMon posSimMon) =>
      _$this._posSimMon = posSimMon;

  FormStateEnumCommMon _commMon = FormStateEnumCommMon(0);
  FormStateEnumCommMon get commMon => _$this._commMon;
  set commMon(FormStateEnumCommMon commMon) => _$this._commMon = commMon;

  FormStateEnumConvergMon _convergMon = FormStateEnumConvergMon(0);
  FormStateEnumConvergMon get convergMon => _$this._convergMon;
  set convergMon(FormStateEnumConvergMon convergMon) =>
      _$this._convergMon = convergMon;

  FormStateBuilder();

  FormStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FormStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FormStateBuilder()..copyFromHeader(headerFrom);

  FormStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _posSimErr = _$v.posSimErr;
      _converg = _$v.converg;
      _turbulence = _$v.turbulence;
      _posSimMon = _$v.posSimMon;
      _commMon = _$v.commMon;
      _convergMon = _$v.convergMon;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FormState;
  }

  @override
  void update(void Function(FormStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FormState build() {
    final _$result = _$v ??
        _$FormState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            posSimErr: posSimErr ?? 0,
            converg: converg ?? 0,
            turbulence: turbulence ?? 0,
            posSimMon: posSimMon ?? FormStateEnumPosSimMon(0),
            commMon: commMon ?? FormStateEnumCommMon(0),
            convergMon: convergMon ?? FormStateEnumConvergMon(0));
    replace(_$result);
    return _$result;
  }
}

/// Autopilot Mode immutable class
///
class _$AutopilotMode extends AutopilotMode {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final AutopilotModeEnumAutonomy autonomy;
  @override
  final String mode;

  factory _$AutopilotMode([void Function(AutopilotModeBuilder b) updates]) =>
      (AutopilotModeBuilder()..update(updates)).build();

  _$AutopilotMode._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.autonomy,
      this.mode})
      : super._();

  @override
  AutopilotMode rebuild(void Function(AutopilotModeBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AutopilotModeBuilder toBuilder() => AutopilotModeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is AutopilotMode &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        autonomy == other.autonomy &&
        mode == other.mode;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            autonomy?.hashCode),
        mode?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('AutopilotMode')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('autonomy', '$autonomy (Enumerated)')
          ..add('mode', '$mode'))
        .toString();
  }
}

/// Autopilot Mode builder class
///
class AutopilotModeBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<AutopilotMode, AutopilotModeBuilder> {
  _$AutopilotMode _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AutopilotModeEnumAutonomy _autonomy = AutopilotModeEnumAutonomy(0);
  AutopilotModeEnumAutonomy get autonomy => _$this._autonomy;
  set autonomy(AutopilotModeEnumAutonomy autonomy) =>
      _$this._autonomy = autonomy;

  String _mode = '';
  String get mode => _$this._mode;
  set mode(String mode) => _$this._mode = mode;

  AutopilotModeBuilder();

  AutopilotModeBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AutopilotModeBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AutopilotModeBuilder()..copyFromHeader(headerFrom);

  AutopilotModeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _autonomy = _$v.autonomy;
      _mode = _$v.mode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(AutopilotMode other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$AutopilotMode;
  }

  @override
  void update(void Function(AutopilotModeBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$AutopilotMode build() {
    final _$result = _$v ??
        _$AutopilotMode._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            autonomy: autonomy ?? AutopilotModeEnumAutonomy(0),
            mode: mode ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Formation Tracking State immutable class
///
class _$FormationState extends FormationState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final FormationStateEnumType type;
  @override
  final FormationStateEnumOp op;
  @override
  final double posSimErr;
  @override
  final double converg;
  @override
  final double turbulence;
  @override
  final FormationStateEnumPosSimMon posSimMon;
  @override
  final FormationStateEnumCommMon commMon;
  @override
  final FormationStateEnumConvergMon convergMon;

  factory _$FormationState([void Function(FormationStateBuilder b) updates]) =>
      (FormationStateBuilder()..update(updates)).build();

  _$FormationState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type,
      this.op,
      this.posSimErr,
      this.converg,
      this.turbulence,
      this.posSimMon,
      this.commMon,
      this.convergMon})
      : super._();

  @override
  FormationState rebuild(void Function(FormationStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationStateBuilder toBuilder() => FormationStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type &&
        op == other.op &&
        (posSimErr == other.posSimErr || posSimErr - other.posSimErr <= 1E-7) &&
        (converg == other.converg || converg - other.converg <= 1E-7) &&
        (turbulence == other.turbulence ||
            turbulence - other.turbulence <= 1E-7) &&
        posSimMon == other.posSimMon &&
        commMon == other.commMon &&
        convergMon == other.convergMon;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, timestamp?.hashCode),
                                                    src?.hashCode),
                                                srcEnt?.hashCode),
                                            dst?.hashCode),
                                        dstEnt?.hashCode),
                                    type?.hashCode),
                                op?.hashCode),
                            posSimErr?.hashCode),
                        converg?.hashCode),
                    turbulence?.hashCode),
                posSimMon?.hashCode),
            commMon?.hashCode),
        convergMon?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Enumerated)')
          ..add('op', '$op (Enumerated)')
          ..add('posSimErr', '$posSimErr (m)')
          ..add('converg', '$converg (m)')
          ..add('turbulence', '$turbulence (m/s/s)')
          ..add('posSimMon', '$posSimMon (Enumerated)')
          ..add('commMon', '$commMon (Enumerated)')
          ..add('convergMon', '$convergMon (Enumerated)'))
        .toString();
  }
}

/// Formation Tracking State builder class
///
class FormationStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<FormationState, FormationStateBuilder> {
  _$FormationState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  FormationStateEnumType _type = FormationStateEnumType(0);
  FormationStateEnumType get type => _$this._type;
  set type(FormationStateEnumType type) => _$this._type = type;

  FormationStateEnumOp _op = FormationStateEnumOp(0);
  FormationStateEnumOp get op => _$this._op;
  set op(FormationStateEnumOp op) => _$this._op = op;

  double _posSimErr = 0;
  double get posSimErr => _$this._posSimErr;
  set posSimErr(double posSimErr) => _$this._posSimErr = posSimErr;

  double _converg = 0;
  double get converg => _$this._converg;
  set converg(double converg) => _$this._converg = converg;

  double _turbulence = 0;
  double get turbulence => _$this._turbulence;
  set turbulence(double turbulence) => _$this._turbulence = turbulence;

  FormationStateEnumPosSimMon _posSimMon = FormationStateEnumPosSimMon(0);
  FormationStateEnumPosSimMon get posSimMon => _$this._posSimMon;
  set posSimMon(FormationStateEnumPosSimMon posSimMon) =>
      _$this._posSimMon = posSimMon;

  FormationStateEnumCommMon _commMon = FormationStateEnumCommMon(0);
  FormationStateEnumCommMon get commMon => _$this._commMon;
  set commMon(FormationStateEnumCommMon commMon) => _$this._commMon = commMon;

  FormationStateEnumConvergMon _convergMon = FormationStateEnumConvergMon(0);
  FormationStateEnumConvergMon get convergMon => _$this._convergMon;
  set convergMon(FormationStateEnumConvergMon convergMon) =>
      _$this._convergMon = convergMon;

  FormationStateBuilder();

  FormationStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FormationStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FormationStateBuilder()..copyFromHeader(headerFrom);

  FormationStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _op = _$v.op;
      _posSimErr = _$v.posSimErr;
      _converg = _$v.converg;
      _turbulence = _$v.turbulence;
      _posSimMon = _$v.posSimMon;
      _commMon = _$v.commMon;
      _convergMon = _$v.convergMon;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FormationState;
  }

  @override
  void update(void Function(FormationStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationState build() {
    final _$result = _$v ??
        _$FormationState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? FormationStateEnumType(0),
            op: op ?? FormationStateEnumOp(0),
            posSimErr: posSimErr ?? 0,
            converg: converg ?? 0,
            turbulence: turbulence ?? 0,
            posSimMon: posSimMon ?? FormationStateEnumPosSimMon(0),
            commMon: commMon ?? FormationStateEnumCommMon(0),
            convergMon: convergMon ?? FormationStateEnumConvergMon(0));
    replace(_$result);
    return _$result;
  }
}

/// Report Control immutable class
///
class _$ReportControl extends ReportControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ReportControlEnumOp op;
  @override
  final ReportControlBitfieldCommInterface commInterface;
  @override
  final int period;
  @override
  final String sysDst;

  factory _$ReportControl([void Function(ReportControlBuilder b) updates]) =>
      (ReportControlBuilder()..update(updates)).build();

  _$ReportControl._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.commInterface,
      this.period,
      this.sysDst})
      : super._();

  @override
  ReportControl rebuild(void Function(ReportControlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ReportControlBuilder toBuilder() => ReportControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ReportControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        commInterface == other.commInterface &&
        period == other.period &&
        sysDst == other.sysDst;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    op?.hashCode),
                commInterface?.hashCode),
            period?.hashCode),
        sysDst?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ReportControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('commInterface', '$commInterface (Bitfield)')
          ..add('period', '$period (s)')
          ..add('sysDst', '$sysDst'))
        .toString();
  }
}

/// Report Control builder class
///
class ReportControlBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ReportControl, ReportControlBuilder> {
  _$ReportControl _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ReportControlEnumOp _op = ReportControlEnumOp(0);
  ReportControlEnumOp get op => _$this._op;
  set op(ReportControlEnumOp op) => _$this._op = op;

  ReportControlBitfieldCommInterface _commInterface =
      ReportControlBitfieldCommInterface(0);
  ReportControlBitfieldCommInterface get commInterface => _$this._commInterface;
  set commInterface(ReportControlBitfieldCommInterface commInterface) =>
      _$this._commInterface = commInterface;

  int _period = 0;
  int get period => _$this._period;
  set period(int period) => _$this._period = period;

  String _sysDst = '';
  String get sysDst => _$this._sysDst;
  set sysDst(String sysDst) => _$this._sysDst = sysDst;

  ReportControlBuilder();

  ReportControlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ReportControlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ReportControlBuilder()..copyFromHeader(headerFrom);

  ReportControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _commInterface = _$v.commInterface;
      _period = _$v.period;
      _sysDst = _$v.sysDst;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ReportControl other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ReportControl;
  }

  @override
  void update(void Function(ReportControlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ReportControl build() {
    final _$result = _$v ??
        _$ReportControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? ReportControlEnumOp(0),
            commInterface:
                commInterface ?? ReportControlBitfieldCommInterface(0),
            period: period ?? 0,
            sysDst: sysDst ?? '');
    replace(_$result);
    return _$result;
  }
}

/// State Report immutable class
///
class _$StateReport extends StateReport {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int stime;
  @override
  final double latitude;
  @override
  final double longitude;
  @override
  final int altitude;
  @override
  final int depth;
  @override
  final int heading;
  @override
  final int speed;
  @override
  final int fuel;
  @override
  final int execState;
  @override
  final int planChecksum;

  factory _$StateReport([void Function(StateReportBuilder b) updates]) =>
      (StateReportBuilder()..update(updates)).build();

  _$StateReport._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.stime,
      this.latitude,
      this.longitude,
      this.altitude,
      this.depth,
      this.heading,
      this.speed,
      this.fuel,
      this.execState,
      this.planChecksum})
      : super._();

  @override
  StateReport rebuild(void Function(StateReportBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  StateReportBuilder toBuilder() => StateReportBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is StateReport &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        stime == other.stime &&
        (latitude == other.latitude || latitude - other.latitude <= 1E-7) &&
        (longitude == other.longitude || longitude - other.longitude <= 1E-7) &&
        altitude == other.altitude &&
        depth == other.depth &&
        heading == other.heading &&
        speed == other.speed &&
        fuel == other.fuel &&
        execState == other.execState &&
        planChecksum == other.planChecksum;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                0,
                                                                timestamp
                                                                    ?.hashCode),
                                                            src?.hashCode),
                                                        srcEnt?.hashCode),
                                                    dst?.hashCode),
                                                dstEnt?.hashCode),
                                            stime?.hashCode),
                                        latitude?.hashCode),
                                    longitude?.hashCode),
                                altitude?.hashCode),
                            depth?.hashCode),
                        heading?.hashCode),
                    speed?.hashCode),
                fuel?.hashCode),
            execState?.hashCode),
        planChecksum?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('StateReport')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('stime', '$stime (s)')
          ..add('latitude', '$latitude (°)')
          ..add('longitude', '$longitude (°)')
          ..add('altitude', '$altitude (dm)')
          ..add('depth', '$depth (dm)')
          ..add('heading', '$heading')
          ..add('speed', '$speed (cm/s)')
          ..add('fuel', '$fuel (%)')
          ..add('execState', '$execState (%)')
          ..add('planChecksum', '$planChecksum'))
        .toString();
  }
}

/// State Report builder class
///
class StateReportBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<StateReport, StateReportBuilder> {
  _$StateReport _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _stime = 0;
  int get stime => _$this._stime;
  set stime(int stime) => _$this._stime = stime;

  double _latitude = 0;
  double get latitude => _$this._latitude;
  set latitude(double latitude) => _$this._latitude = latitude;

  double _longitude = 0;
  double get longitude => _$this._longitude;
  set longitude(double longitude) => _$this._longitude = longitude;

  int _altitude = 0;
  int get altitude => _$this._altitude;
  set altitude(int altitude) => _$this._altitude = altitude;

  int _depth = 0;
  int get depth => _$this._depth;
  set depth(int depth) => _$this._depth = depth;

  int _heading = 0;
  int get heading => _$this._heading;
  set heading(int heading) => _$this._heading = heading;

  int _speed = 0;
  int get speed => _$this._speed;
  set speed(int speed) => _$this._speed = speed;

  int _fuel = 0;
  int get fuel => _$this._fuel;
  set fuel(int fuel) => _$this._fuel = fuel;

  int _execState = 0;
  int get execState => _$this._execState;
  set execState(int execState) => _$this._execState = execState;

  int _planChecksum = 0;
  int get planChecksum => _$this._planChecksum;
  set planChecksum(int planChecksum) => _$this._planChecksum = planChecksum;

  StateReportBuilder();

  StateReportBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  StateReportBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      StateReportBuilder()..copyFromHeader(headerFrom);

  StateReportBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _stime = _$v.stime;
      _latitude = _$v.latitude;
      _longitude = _$v.longitude;
      _altitude = _$v.altitude;
      _depth = _$v.depth;
      _heading = _$v.heading;
      _speed = _$v.speed;
      _fuel = _$v.fuel;
      _execState = _$v.execState;
      _planChecksum = _$v.planChecksum;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(StateReport other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$StateReport;
  }

  @override
  void update(void Function(StateReportBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$StateReport build() {
    final _$result = _$v ??
        _$StateReport._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            stime: stime ?? 0,
            latitude: latitude ?? 0,
            longitude: longitude ?? 0,
            altitude: altitude ?? 0,
            depth: depth ?? 0,
            heading: heading ?? 0,
            speed: speed ?? 0,
            fuel: fuel ?? 0,
            execState: execState ?? 0,
            planChecksum: planChecksum ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Transmission Request immutable class
///
class _$TransmissionRequest extends TransmissionRequest {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final TransmissionRequestEnumCommMean commMean;
  @override
  final String destination;
  @override
  final double deadline;
  @override
  final double range;
  @override
  final TransmissionRequestEnumDataMode dataMode;
  @override
  final ImcMessage msgData;
  @override
  final String txtData;
  @override
  final List<int> rawData;

  factory _$TransmissionRequest(
          [void Function(TransmissionRequestBuilder b) updates]) =>
      (TransmissionRequestBuilder()..update(updates)).build();

  _$TransmissionRequest._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.reqId,
      this.commMean,
      this.destination,
      this.deadline,
      this.range,
      this.dataMode,
      this.msgData,
      this.txtData,
      this.rawData})
      : super._();

  @override
  TransmissionRequest rebuild(
          void Function(TransmissionRequestBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TransmissionRequestBuilder toBuilder() =>
      TransmissionRequestBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TransmissionRequest &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == other.reqId &&
        commMean == other.commMean &&
        destination == other.destination &&
        (deadline == other.deadline || deadline - other.deadline <= 1E-7) &&
        (range == other.range || range - other.range <= 1E-7) &&
        dataMode == other.dataMode &&
        msgData == other.msgData &&
        txtData == other.txtData &&
        ListEquality().equals(rawData, other.rawData);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            0,
                                                            timestamp
                                                                ?.hashCode),
                                                        src?.hashCode),
                                                    srcEnt?.hashCode),
                                                dst?.hashCode),
                                            dstEnt?.hashCode),
                                        reqId?.hashCode),
                                    commMean?.hashCode),
                                destination?.hashCode),
                            deadline?.hashCode),
                        range?.hashCode),
                    dataMode?.hashCode),
                msgData?.hashCode),
            txtData?.hashCode),
        rawData?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TransmissionRequest')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', '$reqId')
          ..add('commMean', '$commMean (Enumerated)')
          ..add('destination', '$destination')
          ..add('deadline', '$deadline')
          ..add('range', '$range (m)')
          ..add('dataMode', '$dataMode (Enumerated)')
          ..add('msgData', '$msgData')
          ..add('txtData', '$txtData')
          ..add('rawData', '$rawData'))
        .toString();
  }
}

/// Transmission Request builder class
///
class TransmissionRequestBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<TransmissionRequest,
            TransmissionRequestBuilder> {
  _$TransmissionRequest _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId = 0;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  TransmissionRequestEnumCommMean _commMean =
      TransmissionRequestEnumCommMean(0);
  TransmissionRequestEnumCommMean get commMean => _$this._commMean;
  set commMean(TransmissionRequestEnumCommMean commMean) =>
      _$this._commMean = commMean;

  String _destination = '';
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  double _deadline = 0;
  double get deadline => _$this._deadline;
  set deadline(double deadline) => _$this._deadline = deadline;

  double _range = 0;
  double get range => _$this._range;
  set range(double range) => _$this._range = range;

  TransmissionRequestEnumDataMode _dataMode =
      TransmissionRequestEnumDataMode(0);
  TransmissionRequestEnumDataMode get dataMode => _$this._dataMode;
  set dataMode(TransmissionRequestEnumDataMode dataMode) =>
      _$this._dataMode = dataMode;

  ImcMessage _msgData;
  ImcMessage get msgData => _$this._msgData;
  set msgData(ImcMessage msgData) => _$this._msgData = msgData;

  String _txtData = '';
  String get txtData => _$this._txtData;
  set txtData(String txtData) => _$this._txtData = txtData;

  List<int> _rawData = <int>[];
  List<int> get rawData => _$this._rawData;
  set rawData(List<int> rawData) => _$this._rawData = rawData;

  TransmissionRequestBuilder();

  TransmissionRequestBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TransmissionRequestBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TransmissionRequestBuilder()..copyFromHeader(headerFrom);

  TransmissionRequestBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _commMean = _$v.commMean;
      _destination = _$v.destination;
      _deadline = _$v.deadline;
      _range = _$v.range;
      _dataMode = _$v.dataMode;
      _msgData = _$v.msgData;
      _txtData = _$v.txtData;
      _rawData = _$v.rawData;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TransmissionRequest other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TransmissionRequest;
  }

  @override
  void update(void Function(TransmissionRequestBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TransmissionRequest build() {
    final _$result = _$v ??
        _$TransmissionRequest._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            commMean: commMean ?? TransmissionRequestEnumCommMean(0),
            destination: destination ?? '',
            deadline: deadline ?? 0,
            range: range ?? 0,
            dataMode: dataMode ?? TransmissionRequestEnumDataMode(0),
            msgData: msgData,
            txtData: txtData ?? '',
            rawData: rawData ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// Transmission Status immutable class
///
class _$TransmissionStatus extends TransmissionStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final TransmissionStatusEnumStatus status;
  @override
  final double range;
  @override
  final String info;

  factory _$TransmissionStatus(
          [void Function(TransmissionStatusBuilder b) updates]) =>
      (TransmissionStatusBuilder()..update(updates)).build();

  _$TransmissionStatus._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.reqId,
      this.status,
      this.range,
      this.info})
      : super._();

  @override
  TransmissionStatus rebuild(
          void Function(TransmissionStatusBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TransmissionStatusBuilder toBuilder() =>
      TransmissionStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TransmissionStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == other.reqId &&
        status == other.status &&
        (range == other.range || range - other.range <= 1E-7) &&
        info == other.info;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    reqId?.hashCode),
                status?.hashCode),
            range?.hashCode),
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TransmissionStatus')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', '$reqId')
          ..add('status', '$status (Enumerated)')
          ..add('range', '$range (m)')
          ..add('info', '$info'))
        .toString();
  }
}

/// Transmission Status builder class
///
class TransmissionStatusBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<TransmissionStatus, TransmissionStatusBuilder> {
  _$TransmissionStatus _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId = 0;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  TransmissionStatusEnumStatus _status = TransmissionStatusEnumStatus(0);
  TransmissionStatusEnumStatus get status => _$this._status;
  set status(TransmissionStatusEnumStatus status) => _$this._status = status;

  double _range = 0;
  double get range => _$this._range;
  set range(double range) => _$this._range = range;

  String _info = '';
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  TransmissionStatusBuilder();

  TransmissionStatusBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TransmissionStatusBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TransmissionStatusBuilder()..copyFromHeader(headerFrom);

  TransmissionStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _status = _$v.status;
      _range = _$v.range;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TransmissionStatus other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TransmissionStatus;
  }

  @override
  void update(void Function(TransmissionStatusBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TransmissionStatus build() {
    final _$result = _$v ??
        _$TransmissionStatus._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            status: status ?? TransmissionStatusEnumStatus(0),
            range: range ?? 0,
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// SMS Transmission Request immutable class
///
class _$SmsRequest extends SmsRequest {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final String destination;
  @override
  final double timeout;
  @override
  final String smsText;

  factory _$SmsRequest([void Function(SmsRequestBuilder b) updates]) =>
      (SmsRequestBuilder()..update(updates)).build();

  _$SmsRequest._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.reqId,
      this.destination,
      this.timeout,
      this.smsText})
      : super._();

  @override
  SmsRequest rebuild(void Function(SmsRequestBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsRequestBuilder toBuilder() => SmsRequestBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsRequest &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == other.reqId &&
        destination == other.destination &&
        (timeout == other.timeout || timeout - other.timeout <= 1E-7) &&
        smsText == other.smsText;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    reqId?.hashCode),
                destination?.hashCode),
            timeout?.hashCode),
        smsText?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsRequest')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', '$reqId')
          ..add('destination', '$destination')
          ..add('timeout', '$timeout (s)')
          ..add('smsText', '$smsText'))
        .toString();
  }
}

/// SMS Transmission Request builder class
///
class SmsRequestBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SmsRequest, SmsRequestBuilder> {
  _$SmsRequest _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId = 0;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  String _destination = '';
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  double _timeout = 0;
  double get timeout => _$this._timeout;
  set timeout(double timeout) => _$this._timeout = timeout;

  String _smsText = '';
  String get smsText => _$this._smsText;
  set smsText(String smsText) => _$this._smsText = smsText;

  SmsRequestBuilder();

  SmsRequestBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SmsRequestBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SmsRequestBuilder()..copyFromHeader(headerFrom);

  SmsRequestBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _destination = _$v.destination;
      _timeout = _$v.timeout;
      _smsText = _$v.smsText;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsRequest other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SmsRequest;
  }

  @override
  void update(void Function(SmsRequestBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsRequest build() {
    final _$result = _$v ??
        _$SmsRequest._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            destination: destination ?? '',
            timeout: timeout ?? 0,
            smsText: smsText ?? '');
    replace(_$result);
    return _$result;
  }
}

/// SMS Transmission Status immutable class
///
class _$SmsStatus extends SmsStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final SmsStatusEnumStatus status;
  @override
  final String info;

  factory _$SmsStatus([void Function(SmsStatusBuilder b) updates]) =>
      (SmsStatusBuilder()..update(updates)).build();

  _$SmsStatus._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.reqId,
      this.status,
      this.info})
      : super._();

  @override
  SmsStatus rebuild(void Function(SmsStatusBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SmsStatusBuilder toBuilder() => SmsStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SmsStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == other.reqId &&
        status == other.status &&
        info == other.info;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                reqId?.hashCode),
            status?.hashCode),
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SmsStatus')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', '$reqId')
          ..add('status', '$status (Enumerated)')
          ..add('info', '$info'))
        .toString();
  }
}

/// SMS Transmission Status builder class
///
class SmsStatusBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SmsStatus, SmsStatusBuilder> {
  _$SmsStatus _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId = 0;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  SmsStatusEnumStatus _status = SmsStatusEnumStatus(0);
  SmsStatusEnumStatus get status => _$this._status;
  set status(SmsStatusEnumStatus status) => _$this._status = status;

  String _info = '';
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  SmsStatusBuilder();

  SmsStatusBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SmsStatusBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SmsStatusBuilder()..copyFromHeader(headerFrom);

  SmsStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _status = _$v.status;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SmsStatus other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SmsStatus;
  }

  @override
  void update(void Function(SmsStatusBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SmsStatus build() {
    final _$result = _$v ??
        _$SmsStatus._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            status: status ?? SmsStatusEnumStatus(0),
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// VTOL State immutable class
///
class _$VtolState extends VtolState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final VtolStateEnumState state;

  factory _$VtolState([void Function(VtolStateBuilder b) updates]) =>
      (VtolStateBuilder()..update(updates)).build();

  _$VtolState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.state})
      : super._();

  @override
  VtolState rebuild(void Function(VtolStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  VtolStateBuilder toBuilder() => VtolStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VtolState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == other.state;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        state?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VtolState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', '$state (Enumerated)'))
        .toString();
  }
}

/// VTOL State builder class
///
class VtolStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<VtolState, VtolStateBuilder> {
  _$VtolState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  VtolStateEnumState _state = VtolStateEnumState(0);
  VtolStateEnumState get state => _$this._state;
  set state(VtolStateEnumState state) => _$this._state = state;

  VtolStateBuilder();

  VtolStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  VtolStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      VtolStateBuilder()..copyFromHeader(headerFrom);

  VtolStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VtolState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$VtolState;
  }

  @override
  void update(void Function(VtolStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$VtolState build() {
    final _$result = _$v ??
        _$VtolState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? VtolStateEnumState(0));
    replace(_$result);
    return _$result;
  }
}

/// Arming State immutable class
///
class _$ArmingState extends ArmingState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ArmingStateEnumState state;

  factory _$ArmingState([void Function(ArmingStateBuilder b) updates]) =>
      (ArmingStateBuilder()..update(updates)).build();

  _$ArmingState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.state})
      : super._();

  @override
  ArmingState rebuild(void Function(ArmingStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ArmingStateBuilder toBuilder() => ArmingStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ArmingState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == other.state;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        state?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ArmingState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', '$state (Enumerated)'))
        .toString();
  }
}

/// Arming State builder class
///
class ArmingStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ArmingState, ArmingStateBuilder> {
  _$ArmingState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ArmingStateEnumState _state = ArmingStateEnumState(0);
  ArmingStateEnumState get state => _$this._state;
  set state(ArmingStateEnumState state) => _$this._state = state;

  ArmingStateBuilder();

  ArmingStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ArmingStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ArmingStateBuilder()..copyFromHeader(headerFrom);

  ArmingStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ArmingState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ArmingState;
  }

  @override
  void update(void Function(ArmingStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ArmingState build() {
    final _$result = _$v ??
        _$ArmingState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? ArmingStateEnumState(0));
    replace(_$result);
    return _$result;
  }
}

/// TCP Transmission Request immutable class
///
class _$TCPRequest extends TCPRequest {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final String destination;
  @override
  final double timeout;
  @override
  final ImcMessage msgData;

  factory _$TCPRequest([void Function(TCPRequestBuilder b) updates]) =>
      (TCPRequestBuilder()..update(updates)).build();

  _$TCPRequest._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.reqId,
      this.destination,
      this.timeout,
      this.msgData})
      : super._();

  @override
  TCPRequest rebuild(void Function(TCPRequestBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TCPRequestBuilder toBuilder() => TCPRequestBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TCPRequest &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == other.reqId &&
        destination == other.destination &&
        (timeout == other.timeout || timeout - other.timeout <= 1E-7) &&
        msgData == other.msgData;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    reqId?.hashCode),
                destination?.hashCode),
            timeout?.hashCode),
        msgData?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TCPRequest')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', '$reqId')
          ..add('destination', '$destination')
          ..add('timeout', '$timeout (s)')
          ..add('msgData', '$msgData'))
        .toString();
  }
}

/// TCP Transmission Request builder class
///
class TCPRequestBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<TCPRequest, TCPRequestBuilder> {
  _$TCPRequest _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId = 0;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  String _destination = '';
  String get destination => _$this._destination;
  set destination(String destination) => _$this._destination = destination;

  double _timeout = 0;
  double get timeout => _$this._timeout;
  set timeout(double timeout) => _$this._timeout = timeout;

  ImcMessage _msgData;
  ImcMessage get msgData => _$this._msgData;
  set msgData(ImcMessage msgData) => _$this._msgData = msgData;

  TCPRequestBuilder();

  TCPRequestBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TCPRequestBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TCPRequestBuilder()..copyFromHeader(headerFrom);

  TCPRequestBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _destination = _$v.destination;
      _timeout = _$v.timeout;
      _msgData = _$v.msgData;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TCPRequest other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TCPRequest;
  }

  @override
  void update(void Function(TCPRequestBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TCPRequest build() {
    final _$result = _$v ??
        _$TCPRequest._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            destination: destination ?? '',
            timeout: timeout ?? 0,
            msgData: msgData);
    replace(_$result);
    return _$result;
  }
}

/// TCP Transmission Status immutable class
///
class _$TCPStatus extends TCPStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int reqId;
  @override
  final TCPStatusEnumStatus status;
  @override
  final String info;

  factory _$TCPStatus([void Function(TCPStatusBuilder b) updates]) =>
      (TCPStatusBuilder()..update(updates)).build();

  _$TCPStatus._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.reqId,
      this.status,
      this.info})
      : super._();

  @override
  TCPStatus rebuild(void Function(TCPStatusBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TCPStatusBuilder toBuilder() => TCPStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TCPStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reqId == other.reqId &&
        status == other.status &&
        info == other.info;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                reqId?.hashCode),
            status?.hashCode),
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TCPStatus')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reqId', '$reqId')
          ..add('status', '$status (Enumerated)')
          ..add('info', '$info'))
        .toString();
  }
}

/// TCP Transmission Status builder class
///
class TCPStatusBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<TCPStatus, TCPStatusBuilder> {
  _$TCPStatus _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _reqId = 0;
  int get reqId => _$this._reqId;
  set reqId(int reqId) => _$this._reqId = reqId;

  TCPStatusEnumStatus _status = TCPStatusEnumStatus(0);
  TCPStatusEnumStatus get status => _$this._status;
  set status(TCPStatusEnumStatus status) => _$this._status = status;

  String _info = '';
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  TCPStatusBuilder();

  TCPStatusBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TCPStatusBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TCPStatusBuilder()..copyFromHeader(headerFrom);

  TCPStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reqId = _$v.reqId;
      _status = _$v.status;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TCPStatus other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TCPStatus;
  }

  @override
  void update(void Function(TCPStatusBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TCPStatus build() {
    final _$result = _$v ??
        _$TCPStatus._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reqId: reqId ?? 0,
            status: status ?? TCPStatusEnumStatus(0),
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Abort immutable class
///
class _$Abort extends Abort {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  factory _$Abort([void Function(AbortBuilder b) updates]) =>
      (AbortBuilder()..update(updates)).build();

  _$Abort._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId})
      : super._();

  @override
  Abort rebuild(void Function(AbortBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AbortBuilder toBuilder() => AbortBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Abort &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                srcEnt?.hashCode),
            dst?.hashCode),
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Abort')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Abort builder class
///
class AbortBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Abort, AbortBuilder> {
  _$Abort _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AbortBuilder();

  AbortBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AbortBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AbortBuilder()..copyFromHeader(headerFrom);

  AbortBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Abort other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Abort;
  }

  @override
  void update(void Function(AbortBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Abort build() {
    final _$result = _$v ??
        _$Abort._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Plan Specification immutable class
///
class _$PlanSpecification extends PlanSpecification {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String planId;
  @override
  final String description;
  @override
  final String vnamespace;
  @override
  final List<PlanVariable> variables;
  @override
  final String startManId;
  @override
  final List<PlanManeuver> maneuvers;
  @override
  final List<PlanTransition> transitions;
  @override
  final List<ImcMessage> startActions;
  @override
  final List<ImcMessage> endActions;

  factory _$PlanSpecification(
          [void Function(PlanSpecificationBuilder b) updates]) =>
      (PlanSpecificationBuilder()..update(updates)).build();

  _$PlanSpecification._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.planId,
      this.description,
      this.vnamespace,
      this.variables,
      this.startManId,
      this.maneuvers,
      this.transitions,
      this.startActions,
      this.endActions})
      : super._();

  @override
  PlanSpecification rebuild(
          void Function(PlanSpecificationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanSpecificationBuilder toBuilder() =>
      PlanSpecificationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanSpecification &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        planId == other.planId &&
        description == other.description &&
        vnamespace == other.vnamespace &&
        DeepCollectionEquality().equals(variables, other.variables) &&
        startManId == other.startManId &&
        DeepCollectionEquality().equals(maneuvers, other.maneuvers) &&
        DeepCollectionEquality().equals(transitions, other.transitions) &&
        DeepCollectionEquality().equals(startActions, other.startActions) &&
        DeepCollectionEquality().equals(endActions, other.endActions);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            0,
                                                            timestamp
                                                                ?.hashCode),
                                                        src?.hashCode),
                                                    srcEnt?.hashCode),
                                                dst?.hashCode),
                                            dstEnt?.hashCode),
                                        planId?.hashCode),
                                    description?.hashCode),
                                vnamespace?.hashCode),
                            variables?.hashCode),
                        startManId?.hashCode),
                    maneuvers?.hashCode),
                transitions?.hashCode),
            startActions?.hashCode),
        endActions?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanSpecification')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('planId', '$planId')
          ..add('description', '$description')
          ..add('vnamespace', '$vnamespace')
          ..add('variables', '$variables')
          ..add('startManId', '$startManId')
          ..add('maneuvers', '$maneuvers')
          ..add('transitions', '$transitions')
          ..add('startActions', '$startActions')
          ..add('endActions', '$endActions'))
        .toString();
  }
}

/// Plan Specification builder class
///
class PlanSpecificationBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<PlanSpecification, PlanSpecificationBuilder> {
  _$PlanSpecification _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _planId = '';
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  String _description = '';
  String get description => _$this._description;
  set description(String description) => _$this._description = description;

  String _vnamespace = '';
  String get vnamespace => _$this._vnamespace;
  set vnamespace(String vnamespace) => _$this._vnamespace = vnamespace;

  List<PlanVariable> _variables = <PlanVariable>[];
  List<PlanVariable> get variables => _$this._variables;
  set variables(List<PlanVariable> variables) => _$this._variables = variables;

  String _startManId = '';
  String get startManId => _$this._startManId;
  set startManId(String startManId) => _$this._startManId = startManId;

  List<PlanManeuver> _maneuvers = <PlanManeuver>[];
  List<PlanManeuver> get maneuvers => _$this._maneuvers;
  set maneuvers(List<PlanManeuver> maneuvers) => _$this._maneuvers = maneuvers;

  List<PlanTransition> _transitions = <PlanTransition>[];
  List<PlanTransition> get transitions => _$this._transitions;
  set transitions(List<PlanTransition> transitions) =>
      _$this._transitions = transitions;

  List<ImcMessage> _startActions = <ImcMessage>[];
  List<ImcMessage> get startActions => _$this._startActions;
  set startActions(List<ImcMessage> startActions) =>
      _$this._startActions = startActions;

  List<ImcMessage> _endActions = <ImcMessage>[];
  List<ImcMessage> get endActions => _$this._endActions;
  set endActions(List<ImcMessage> endActions) =>
      _$this._endActions = endActions;

  PlanSpecificationBuilder();

  PlanSpecificationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PlanSpecificationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PlanSpecificationBuilder()..copyFromHeader(headerFrom);

  PlanSpecificationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _planId = _$v.planId;
      _description = _$v.description;
      _vnamespace = _$v.vnamespace;
      _variables = _$v.variables;
      _startManId = _$v.startManId;
      _maneuvers = _$v.maneuvers;
      _transitions = _$v.transitions;
      _startActions = _$v.startActions;
      _endActions = _$v.endActions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanSpecification other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PlanSpecification;
  }

  @override
  void update(void Function(PlanSpecificationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanSpecification build() {
    final _$result = _$v ??
        _$PlanSpecification._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            planId: planId ?? '',
            description: description ?? '',
            vnamespace: vnamespace ?? '',
            variables: variables ?? <PlanVariable>[],
            startManId: startManId ?? '',
            maneuvers: maneuvers ?? <PlanManeuver>[],
            transitions: transitions ?? <PlanTransition>[],
            startActions: startActions ?? <ImcMessage>[],
            endActions: endActions ?? <ImcMessage>[]);
    replace(_$result);
    return _$result;
  }
}

/// Plan Maneuver immutable class
///
class _$PlanManeuver extends PlanManeuver {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String maneuverId;
  @override
  final Maneuver data;
  @override
  final List<ImcMessage> startActions;
  @override
  final List<ImcMessage> endActions;

  factory _$PlanManeuver([void Function(PlanManeuverBuilder b) updates]) =>
      (PlanManeuverBuilder()..update(updates)).build();

  _$PlanManeuver._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.maneuverId,
      this.data,
      this.startActions,
      this.endActions})
      : super._();

  @override
  PlanManeuver rebuild(void Function(PlanManeuverBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanManeuverBuilder toBuilder() => PlanManeuverBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanManeuver &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        maneuverId == other.maneuverId &&
        data == other.data &&
        DeepCollectionEquality().equals(startActions, other.startActions) &&
        DeepCollectionEquality().equals(endActions, other.endActions);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    maneuverId?.hashCode),
                data?.hashCode),
            startActions?.hashCode),
        endActions?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanManeuver')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('maneuverId', '$maneuverId')
          ..add('data', '$data')
          ..add('startActions', '$startActions')
          ..add('endActions', '$endActions'))
        .toString();
  }
}

/// Plan Maneuver builder class
///
class PlanManeuverBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<PlanManeuver, PlanManeuverBuilder> {
  _$PlanManeuver _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _maneuverId = '';
  String get maneuverId => _$this._maneuverId;
  set maneuverId(String maneuverId) => _$this._maneuverId = maneuverId;

  Maneuver _data;
  Maneuver get data => _$this._data;
  set data(Maneuver data) => _$this._data = data;

  List<ImcMessage> _startActions = <ImcMessage>[];
  List<ImcMessage> get startActions => _$this._startActions;
  set startActions(List<ImcMessage> startActions) =>
      _$this._startActions = startActions;

  List<ImcMessage> _endActions = <ImcMessage>[];
  List<ImcMessage> get endActions => _$this._endActions;
  set endActions(List<ImcMessage> endActions) =>
      _$this._endActions = endActions;

  PlanManeuverBuilder();

  PlanManeuverBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PlanManeuverBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PlanManeuverBuilder()..copyFromHeader(headerFrom);

  PlanManeuverBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _maneuverId = _$v.maneuverId;
      _data = _$v.data;
      _startActions = _$v.startActions;
      _endActions = _$v.endActions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanManeuver other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PlanManeuver;
  }

  @override
  void update(void Function(PlanManeuverBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanManeuver build() {
    final _$result = _$v ??
        _$PlanManeuver._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            maneuverId: maneuverId ?? '',
            data: data,
            startActions: startActions ?? <ImcMessage>[],
            endActions: endActions ?? <ImcMessage>[]);
    replace(_$result);
    return _$result;
  }
}

/// Plan Transition immutable class
///
class _$PlanTransition extends PlanTransition {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String sourceMan;
  @override
  final String destMan;
  @override
  final String conditions;
  @override
  final List<ImcMessage> actions;

  factory _$PlanTransition([void Function(PlanTransitionBuilder b) updates]) =>
      (PlanTransitionBuilder()..update(updates)).build();

  _$PlanTransition._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.sourceMan,
      this.destMan,
      this.conditions,
      this.actions})
      : super._();

  @override
  PlanTransition rebuild(void Function(PlanTransitionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanTransitionBuilder toBuilder() => PlanTransitionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanTransition &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sourceMan == other.sourceMan &&
        destMan == other.destMan &&
        conditions == other.conditions &&
        DeepCollectionEquality().equals(actions, other.actions);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    sourceMan?.hashCode),
                destMan?.hashCode),
            conditions?.hashCode),
        actions?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanTransition')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sourceMan', '$sourceMan')
          ..add('destMan', '$destMan')
          ..add('conditions', '$conditions')
          ..add('actions', '$actions'))
        .toString();
  }
}

/// Plan Transition builder class
///
class PlanTransitionBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<PlanTransition, PlanTransitionBuilder> {
  _$PlanTransition _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _sourceMan = '';
  String get sourceMan => _$this._sourceMan;
  set sourceMan(String sourceMan) => _$this._sourceMan = sourceMan;

  String _destMan = '';
  String get destMan => _$this._destMan;
  set destMan(String destMan) => _$this._destMan = destMan;

  String _conditions = '';
  String get conditions => _$this._conditions;
  set conditions(String conditions) => _$this._conditions = conditions;

  List<ImcMessage> _actions = <ImcMessage>[];
  List<ImcMessage> get actions => _$this._actions;
  set actions(List<ImcMessage> actions) => _$this._actions = actions;

  PlanTransitionBuilder();

  PlanTransitionBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PlanTransitionBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PlanTransitionBuilder()..copyFromHeader(headerFrom);

  PlanTransitionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sourceMan = _$v.sourceMan;
      _destMan = _$v.destMan;
      _conditions = _$v.conditions;
      _actions = _$v.actions;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanTransition other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PlanTransition;
  }

  @override
  void update(void Function(PlanTransitionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanTransition build() {
    final _$result = _$v ??
        _$PlanTransition._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sourceMan: sourceMan ?? '',
            destMan: destMan ?? '',
            conditions: conditions ?? '',
            actions: actions ?? <ImcMessage>[]);
    replace(_$result);
    return _$result;
  }
}

/// Emergency Control immutable class
///
class _$EmergencyControl extends EmergencyControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EmergencyControlEnumCommand command;
  @override
  final PlanSpecification plan;

  factory _$EmergencyControl(
          [void Function(EmergencyControlBuilder b) updates]) =>
      (EmergencyControlBuilder()..update(updates)).build();

  _$EmergencyControl._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.command,
      this.plan})
      : super._();

  @override
  EmergencyControl rebuild(void Function(EmergencyControlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  EmergencyControlBuilder toBuilder() =>
      EmergencyControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EmergencyControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        command == other.command &&
        plan == other.plan;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            command?.hashCode),
        plan?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EmergencyControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('command', '$command (Enumerated)')
          ..add('plan', '$plan'))
        .toString();
  }
}

/// Emergency Control builder class
///
class EmergencyControlBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<EmergencyControl, EmergencyControlBuilder> {
  _$EmergencyControl _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EmergencyControlEnumCommand _command = EmergencyControlEnumCommand(0);
  EmergencyControlEnumCommand get command => _$this._command;
  set command(EmergencyControlEnumCommand command) => _$this._command = command;

  PlanSpecification _plan;
  PlanSpecification get plan => _$this._plan;
  set plan(PlanSpecification plan) => _$this._plan = plan;

  EmergencyControlBuilder();

  EmergencyControlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  EmergencyControlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      EmergencyControlBuilder()..copyFromHeader(headerFrom);

  EmergencyControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _command = _$v.command;
      _plan = _$v.plan;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EmergencyControl other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$EmergencyControl;
  }

  @override
  void update(void Function(EmergencyControlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$EmergencyControl build() {
    final _$result = _$v ??
        _$EmergencyControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            command: command ?? EmergencyControlEnumCommand(0),
            plan: plan);
    replace(_$result);
    return _$result;
  }
}

/// Emergency Control State immutable class
///
class _$EmergencyControlState extends EmergencyControlState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final EmergencyControlStateEnumState state;
  @override
  final String planId;
  @override
  final int commLevel;

  factory _$EmergencyControlState(
          [void Function(EmergencyControlStateBuilder b) updates]) =>
      (EmergencyControlStateBuilder()..update(updates)).build();

  _$EmergencyControlState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.state,
      this.planId,
      this.commLevel})
      : super._();

  @override
  EmergencyControlState rebuild(
          void Function(EmergencyControlStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  EmergencyControlStateBuilder toBuilder() =>
      EmergencyControlStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EmergencyControlState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == other.state &&
        planId == other.planId &&
        commLevel == other.commLevel;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                state?.hashCode),
            planId?.hashCode),
        commLevel?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EmergencyControlState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', '$state (Enumerated)')
          ..add('planId', '$planId')
          ..add('commLevel', '$commLevel (%)'))
        .toString();
  }
}

/// Emergency Control State builder class
///
class EmergencyControlStateBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<EmergencyControlState,
            EmergencyControlStateBuilder> {
  _$EmergencyControlState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  EmergencyControlStateEnumState _state = EmergencyControlStateEnumState(0);
  EmergencyControlStateEnumState get state => _$this._state;
  set state(EmergencyControlStateEnumState state) => _$this._state = state;

  String _planId = '';
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  int _commLevel = 0;
  int get commLevel => _$this._commLevel;
  set commLevel(int commLevel) => _$this._commLevel = commLevel;

  EmergencyControlStateBuilder();

  EmergencyControlStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  EmergencyControlStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      EmergencyControlStateBuilder()..copyFromHeader(headerFrom);

  EmergencyControlStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _planId = _$v.planId;
      _commLevel = _$v.commLevel;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EmergencyControlState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$EmergencyControlState;
  }

  @override
  void update(void Function(EmergencyControlStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$EmergencyControlState build() {
    final _$result = _$v ??
        _$EmergencyControlState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? EmergencyControlStateEnumState(0),
            planId: planId ?? '',
            commLevel: commLevel ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Plan DB immutable class
///
class _$PlanDB extends PlanDB {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PlanDBEnumType type;
  @override
  final PlanDBEnumOp op;
  @override
  final int requestId;
  @override
  final String planId;
  @override
  final ImcMessage arg;
  @override
  final String info;

  factory _$PlanDB([void Function(PlanDBBuilder b) updates]) =>
      (PlanDBBuilder()..update(updates)).build();

  _$PlanDB._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type,
      this.op,
      this.requestId,
      this.planId,
      this.arg,
      this.info})
      : super._();

  @override
  PlanDB rebuild(void Function(PlanDBBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanDBBuilder toBuilder() => PlanDBBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanDB &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type &&
        op == other.op &&
        requestId == other.requestId &&
        planId == other.planId &&
        arg == other.arg &&
        info == other.info;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, timestamp?.hashCode),
                                            src?.hashCode),
                                        srcEnt?.hashCode),
                                    dst?.hashCode),
                                dstEnt?.hashCode),
                            type?.hashCode),
                        op?.hashCode),
                    requestId?.hashCode),
                planId?.hashCode),
            arg?.hashCode),
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanDB')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Enumerated)')
          ..add('op', '$op (Enumerated)')
          ..add('requestId', '$requestId')
          ..add('planId', '$planId')
          ..add('arg', '$arg')
          ..add('info', '$info'))
        .toString();
  }
}

/// Plan DB builder class
///
class PlanDBBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<PlanDB, PlanDBBuilder> {
  _$PlanDB _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PlanDBEnumType _type = PlanDBEnumType(0);
  PlanDBEnumType get type => _$this._type;
  set type(PlanDBEnumType type) => _$this._type = type;

  PlanDBEnumOp _op = PlanDBEnumOp(0);
  PlanDBEnumOp get op => _$this._op;
  set op(PlanDBEnumOp op) => _$this._op = op;

  int _requestId = 0;
  int get requestId => _$this._requestId;
  set requestId(int requestId) => _$this._requestId = requestId;

  String _planId = '';
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  ImcMessage _arg;
  ImcMessage get arg => _$this._arg;
  set arg(ImcMessage arg) => _$this._arg = arg;

  String _info = '';
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  PlanDBBuilder();

  PlanDBBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PlanDBBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PlanDBBuilder()..copyFromHeader(headerFrom);

  PlanDBBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _op = _$v.op;
      _requestId = _$v.requestId;
      _planId = _$v.planId;
      _arg = _$v.arg;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanDB other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PlanDB;
  }

  @override
  void update(void Function(PlanDBBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanDB build() {
    final _$result = _$v ??
        _$PlanDB._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? PlanDBEnumType(0),
            op: op ?? PlanDBEnumOp(0),
            requestId: requestId ?? 0,
            planId: planId ?? '',
            arg: arg,
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Plan DB State immutable class
///
class _$PlanDBState extends PlanDBState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int planCount;
  @override
  final int planSize;
  @override
  final double changeTime;
  @override
  final int changeSid;
  @override
  final String changeSname;
  @override
  final List<int> md5;
  @override
  final List<PlanDBInformation> plansInfo;

  factory _$PlanDBState([void Function(PlanDBStateBuilder b) updates]) =>
      (PlanDBStateBuilder()..update(updates)).build();

  _$PlanDBState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.planCount,
      this.planSize,
      this.changeTime,
      this.changeSid,
      this.changeSname,
      this.md5,
      this.plansInfo})
      : super._();

  @override
  PlanDBState rebuild(void Function(PlanDBStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanDBStateBuilder toBuilder() => PlanDBStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanDBState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        planCount == other.planCount &&
        planSize == other.planSize &&
        (changeTime == other.changeTime ||
            changeTime - other.changeTime <= 1E-7) &&
        changeSid == other.changeSid &&
        changeSname == other.changeSname &&
        ListEquality().equals(md5, other.md5) &&
        DeepCollectionEquality().equals(plansInfo, other.plansInfo);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, timestamp?.hashCode),
                                                src?.hashCode),
                                            srcEnt?.hashCode),
                                        dst?.hashCode),
                                    dstEnt?.hashCode),
                                planCount?.hashCode),
                            planSize?.hashCode),
                        changeTime?.hashCode),
                    changeSid?.hashCode),
                changeSname?.hashCode),
            md5?.hashCode),
        plansInfo?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanDBState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('planCount', '$planCount')
          ..add('planSize', '$planSize')
          ..add('changeTime', '$changeTime (s)')
          ..add('changeSid', '$changeSid')
          ..add('changeSname', '$changeSname')
          ..add('md5', '$md5')
          ..add('plansInfo', '$plansInfo'))
        .toString();
  }
}

/// Plan DB State builder class
///
class PlanDBStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<PlanDBState, PlanDBStateBuilder> {
  _$PlanDBState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _planCount = 0;
  int get planCount => _$this._planCount;
  set planCount(int planCount) => _$this._planCount = planCount;

  int _planSize = 0;
  int get planSize => _$this._planSize;
  set planSize(int planSize) => _$this._planSize = planSize;

  double _changeTime = 0;
  double get changeTime => _$this._changeTime;
  set changeTime(double changeTime) => _$this._changeTime = changeTime;

  int _changeSid = 0;
  int get changeSid => _$this._changeSid;
  set changeSid(int changeSid) => _$this._changeSid = changeSid;

  String _changeSname = '';
  String get changeSname => _$this._changeSname;
  set changeSname(String changeSname) => _$this._changeSname = changeSname;

  List<int> _md5 = <int>[];
  List<int> get md5 => _$this._md5;
  set md5(List<int> md5) => _$this._md5 = md5;

  List<PlanDBInformation> _plansInfo = <PlanDBInformation>[];
  List<PlanDBInformation> get plansInfo => _$this._plansInfo;
  set plansInfo(List<PlanDBInformation> plansInfo) =>
      _$this._plansInfo = plansInfo;

  PlanDBStateBuilder();

  PlanDBStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PlanDBStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PlanDBStateBuilder()..copyFromHeader(headerFrom);

  PlanDBStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _planCount = _$v.planCount;
      _planSize = _$v.planSize;
      _changeTime = _$v.changeTime;
      _changeSid = _$v.changeSid;
      _changeSname = _$v.changeSname;
      _md5 = _$v.md5;
      _plansInfo = _$v.plansInfo;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanDBState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PlanDBState;
  }

  @override
  void update(void Function(PlanDBStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanDBState build() {
    final _$result = _$v ??
        _$PlanDBState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            planCount: planCount ?? 0,
            planSize: planSize ?? 0,
            changeTime: changeTime ?? 0,
            changeSid: changeSid ?? 0,
            changeSname: changeSname ?? '',
            md5: md5 ?? <int>[],
            plansInfo: plansInfo ?? <PlanDBInformation>[]);
    replace(_$result);
    return _$result;
  }
}

/// Plan DB Information immutable class
///
class _$PlanDBInformation extends PlanDBInformation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String planId;
  @override
  final int planSize;
  @override
  final double changeTime;
  @override
  final int changeSid;
  @override
  final String changeSname;
  @override
  final List<int> md5;

  factory _$PlanDBInformation(
          [void Function(PlanDBInformationBuilder b) updates]) =>
      (PlanDBInformationBuilder()..update(updates)).build();

  _$PlanDBInformation._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.planId,
      this.planSize,
      this.changeTime,
      this.changeSid,
      this.changeSname,
      this.md5})
      : super._();

  @override
  PlanDBInformation rebuild(
          void Function(PlanDBInformationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanDBInformationBuilder toBuilder() =>
      PlanDBInformationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanDBInformation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        planId == other.planId &&
        planSize == other.planSize &&
        (changeTime == other.changeTime ||
            changeTime - other.changeTime <= 1E-7) &&
        changeSid == other.changeSid &&
        changeSname == other.changeSname &&
        ListEquality().equals(md5, other.md5);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, timestamp?.hashCode),
                                            src?.hashCode),
                                        srcEnt?.hashCode),
                                    dst?.hashCode),
                                dstEnt?.hashCode),
                            planId?.hashCode),
                        planSize?.hashCode),
                    changeTime?.hashCode),
                changeSid?.hashCode),
            changeSname?.hashCode),
        md5?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanDBInformation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('planId', '$planId')
          ..add('planSize', '$planSize')
          ..add('changeTime', '$changeTime')
          ..add('changeSid', '$changeSid')
          ..add('changeSname', '$changeSname')
          ..add('md5', '$md5'))
        .toString();
  }
}

/// Plan DB Information builder class
///
class PlanDBInformationBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<PlanDBInformation, PlanDBInformationBuilder> {
  _$PlanDBInformation _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _planId = '';
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  int _planSize = 0;
  int get planSize => _$this._planSize;
  set planSize(int planSize) => _$this._planSize = planSize;

  double _changeTime = 0;
  double get changeTime => _$this._changeTime;
  set changeTime(double changeTime) => _$this._changeTime = changeTime;

  int _changeSid = 0;
  int get changeSid => _$this._changeSid;
  set changeSid(int changeSid) => _$this._changeSid = changeSid;

  String _changeSname = '';
  String get changeSname => _$this._changeSname;
  set changeSname(String changeSname) => _$this._changeSname = changeSname;

  List<int> _md5 = <int>[];
  List<int> get md5 => _$this._md5;
  set md5(List<int> md5) => _$this._md5 = md5;

  PlanDBInformationBuilder();

  PlanDBInformationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PlanDBInformationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PlanDBInformationBuilder()..copyFromHeader(headerFrom);

  PlanDBInformationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _planId = _$v.planId;
      _planSize = _$v.planSize;
      _changeTime = _$v.changeTime;
      _changeSid = _$v.changeSid;
      _changeSname = _$v.changeSname;
      _md5 = _$v.md5;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanDBInformation other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PlanDBInformation;
  }

  @override
  void update(void Function(PlanDBInformationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanDBInformation build() {
    final _$result = _$v ??
        _$PlanDBInformation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            planId: planId ?? '',
            planSize: planSize ?? 0,
            changeTime: changeTime ?? 0,
            changeSid: changeSid ?? 0,
            changeSname: changeSname ?? '',
            md5: md5 ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// Plan Control immutable class
///
class _$PlanControl extends PlanControl {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PlanControlEnumType type;
  @override
  final PlanControlEnumOp op;
  @override
  final int requestId;
  @override
  final String planId;
  @override
  final PlanControlBitfieldFlags flags;
  @override
  final ImcMessage arg;
  @override
  final String info;

  factory _$PlanControl([void Function(PlanControlBuilder b) updates]) =>
      (PlanControlBuilder()..update(updates)).build();

  _$PlanControl._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type,
      this.op,
      this.requestId,
      this.planId,
      this.flags,
      this.arg,
      this.info})
      : super._();

  @override
  PlanControl rebuild(void Function(PlanControlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanControlBuilder toBuilder() => PlanControlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanControl &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type &&
        op == other.op &&
        requestId == other.requestId &&
        planId == other.planId &&
        flags == other.flags &&
        arg == other.arg &&
        info == other.info;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, timestamp?.hashCode),
                                                src?.hashCode),
                                            srcEnt?.hashCode),
                                        dst?.hashCode),
                                    dstEnt?.hashCode),
                                type?.hashCode),
                            op?.hashCode),
                        requestId?.hashCode),
                    planId?.hashCode),
                flags?.hashCode),
            arg?.hashCode),
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanControl')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Enumerated)')
          ..add('op', '$op (Enumerated)')
          ..add('requestId', '$requestId')
          ..add('planId', '$planId')
          ..add('flags', '$flags (Bitfield)')
          ..add('arg', '$arg')
          ..add('info', '$info'))
        .toString();
  }
}

/// Plan Control builder class
///
class PlanControlBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<PlanControl, PlanControlBuilder> {
  _$PlanControl _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PlanControlEnumType _type = PlanControlEnumType(0);
  PlanControlEnumType get type => _$this._type;
  set type(PlanControlEnumType type) => _$this._type = type;

  PlanControlEnumOp _op = PlanControlEnumOp(0);
  PlanControlEnumOp get op => _$this._op;
  set op(PlanControlEnumOp op) => _$this._op = op;

  int _requestId = 0;
  int get requestId => _$this._requestId;
  set requestId(int requestId) => _$this._requestId = requestId;

  String _planId = '';
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  PlanControlBitfieldFlags _flags = PlanControlBitfieldFlags(0);
  PlanControlBitfieldFlags get flags => _$this._flags;
  set flags(PlanControlBitfieldFlags flags) => _$this._flags = flags;

  ImcMessage _arg;
  ImcMessage get arg => _$this._arg;
  set arg(ImcMessage arg) => _$this._arg = arg;

  String _info = '';
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  PlanControlBuilder();

  PlanControlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PlanControlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PlanControlBuilder()..copyFromHeader(headerFrom);

  PlanControlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _op = _$v.op;
      _requestId = _$v.requestId;
      _planId = _$v.planId;
      _flags = _$v.flags;
      _arg = _$v.arg;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanControl other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PlanControl;
  }

  @override
  void update(void Function(PlanControlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanControl build() {
    final _$result = _$v ??
        _$PlanControl._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? PlanControlEnumType(0),
            op: op ?? PlanControlEnumOp(0),
            requestId: requestId ?? 0,
            planId: planId ?? '',
            flags: flags ?? PlanControlBitfieldFlags(0),
            arg: arg,
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Plan Control State immutable class
///
class _$PlanControlState extends PlanControlState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PlanControlStateEnumState state;
  @override
  final String planId;
  @override
  final int planEta;
  @override
  final double planProgress;
  @override
  final String manId;
  @override
  final int manType;
  @override
  final int manEta;
  @override
  final PlanControlStateEnumLastOutcome lastOutcome;

  factory _$PlanControlState(
          [void Function(PlanControlStateBuilder b) updates]) =>
      (PlanControlStateBuilder()..update(updates)).build();

  _$PlanControlState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.state,
      this.planId,
      this.planEta,
      this.planProgress,
      this.manId,
      this.manType,
      this.manEta,
      this.lastOutcome})
      : super._();

  @override
  PlanControlState rebuild(void Function(PlanControlStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanControlStateBuilder toBuilder() =>
      PlanControlStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanControlState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == other.state &&
        planId == other.planId &&
        planEta == other.planEta &&
        (planProgress == other.planProgress ||
            planProgress - other.planProgress <= 1E-7) &&
        manId == other.manId &&
        manType == other.manType &&
        manEta == other.manEta &&
        lastOutcome == other.lastOutcome;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, timestamp?.hashCode),
                                                    src?.hashCode),
                                                srcEnt?.hashCode),
                                            dst?.hashCode),
                                        dstEnt?.hashCode),
                                    state?.hashCode),
                                planId?.hashCode),
                            planEta?.hashCode),
                        planProgress?.hashCode),
                    manId?.hashCode),
                manType?.hashCode),
            manEta?.hashCode),
        lastOutcome?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanControlState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', '$state (Enumerated)')
          ..add('planId', '$planId')
          ..add('planEta', '$planEta (s)')
          ..add('planProgress', '$planProgress (%)')
          ..add('manId', '$manId')
          ..add('manType', '$manType')
          ..add('manEta', '$manEta (s)')
          ..add('lastOutcome', '$lastOutcome (Enumerated)'))
        .toString();
  }
}

/// Plan Control State builder class
///
class PlanControlStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<PlanControlState, PlanControlStateBuilder> {
  _$PlanControlState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PlanControlStateEnumState _state = PlanControlStateEnumState(0);
  PlanControlStateEnumState get state => _$this._state;
  set state(PlanControlStateEnumState state) => _$this._state = state;

  String _planId = '';
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  int _planEta = 0;
  int get planEta => _$this._planEta;
  set planEta(int planEta) => _$this._planEta = planEta;

  double _planProgress = 0;
  double get planProgress => _$this._planProgress;
  set planProgress(double planProgress) => _$this._planProgress = planProgress;

  String _manId = '';
  String get manId => _$this._manId;
  set manId(String manId) => _$this._manId = manId;

  int _manType = 0;
  int get manType => _$this._manType;
  set manType(int manType) => _$this._manType = manType;

  int _manEta = 0;
  int get manEta => _$this._manEta;
  set manEta(int manEta) => _$this._manEta = manEta;

  PlanControlStateEnumLastOutcome _lastOutcome =
      PlanControlStateEnumLastOutcome(0);
  PlanControlStateEnumLastOutcome get lastOutcome => _$this._lastOutcome;
  set lastOutcome(PlanControlStateEnumLastOutcome lastOutcome) =>
      _$this._lastOutcome = lastOutcome;

  PlanControlStateBuilder();

  PlanControlStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PlanControlStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PlanControlStateBuilder()..copyFromHeader(headerFrom);

  PlanControlStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _planId = _$v.planId;
      _planEta = _$v.planEta;
      _planProgress = _$v.planProgress;
      _manId = _$v.manId;
      _manType = _$v.manType;
      _manEta = _$v.manEta;
      _lastOutcome = _$v.lastOutcome;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanControlState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PlanControlState;
  }

  @override
  void update(void Function(PlanControlStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanControlState build() {
    final _$result = _$v ??
        _$PlanControlState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? PlanControlStateEnumState(0),
            planId: planId ?? '',
            planEta: planEta ?? 0,
            planProgress: planProgress ?? 0,
            manId: manId ?? '',
            manType: manType ?? 0,
            manEta: manEta ?? 0,
            lastOutcome: lastOutcome ?? PlanControlStateEnumLastOutcome(0));
    replace(_$result);
    return _$result;
  }
}

/// Plan Variable immutable class
///
class _$PlanVariable extends PlanVariable {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final String value;
  @override
  final PlanVariableEnumType type;
  @override
  final PlanVariableEnumAccess access;

  factory _$PlanVariable([void Function(PlanVariableBuilder b) updates]) =>
      (PlanVariableBuilder()..update(updates)).build();

  _$PlanVariable._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name,
      this.value,
      this.type,
      this.access})
      : super._();

  @override
  PlanVariable rebuild(void Function(PlanVariableBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanVariableBuilder toBuilder() => PlanVariableBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanVariable &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name &&
        value == other.value &&
        type == other.type &&
        access == other.access;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    name?.hashCode),
                value?.hashCode),
            type?.hashCode),
        access?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanVariable')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name')
          ..add('value', '$value')
          ..add('type', '$type (Enumerated)')
          ..add('access', '$access (Enumerated)'))
        .toString();
  }
}

/// Plan Variable builder class
///
class PlanVariableBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<PlanVariable, PlanVariableBuilder> {
  _$PlanVariable _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _value = '';
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  PlanVariableEnumType _type = PlanVariableEnumType(0);
  PlanVariableEnumType get type => _$this._type;
  set type(PlanVariableEnumType type) => _$this._type = type;

  PlanVariableEnumAccess _access = PlanVariableEnumAccess(0);
  PlanVariableEnumAccess get access => _$this._access;
  set access(PlanVariableEnumAccess access) => _$this._access = access;

  PlanVariableBuilder();

  PlanVariableBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PlanVariableBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PlanVariableBuilder()..copyFromHeader(headerFrom);

  PlanVariableBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _value = _$v.value;
      _type = _$v.type;
      _access = _$v.access;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanVariable other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PlanVariable;
  }

  @override
  void update(void Function(PlanVariableBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanVariable build() {
    final _$result = _$v ??
        _$PlanVariable._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            value: value ?? '',
            type: type ?? PlanVariableEnumType(0),
            access: access ?? PlanVariableEnumAccess(0));
    replace(_$result);
    return _$result;
  }
}

/// Plan Generation immutable class
///
class _$PlanGeneration extends PlanGeneration {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final PlanGenerationEnumCmd cmd;
  @override
  final PlanGenerationEnumOp op;
  @override
  final String planId;
  @override
  final String params;

  factory _$PlanGeneration([void Function(PlanGenerationBuilder b) updates]) =>
      (PlanGenerationBuilder()..update(updates)).build();

  _$PlanGeneration._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.cmd,
      this.op,
      this.planId,
      this.params})
      : super._();

  @override
  PlanGeneration rebuild(void Function(PlanGenerationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanGenerationBuilder toBuilder() => PlanGenerationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanGeneration &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        cmd == other.cmd &&
        op == other.op &&
        planId == other.planId &&
        params == other.params;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    cmd?.hashCode),
                op?.hashCode),
            planId?.hashCode),
        params?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanGeneration')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('cmd', '$cmd (Enumerated)')
          ..add('op', '$op (Enumerated)')
          ..add('planId', '$planId')
          ..add('params', '$params (TupleList)'))
        .toString();
  }
}

/// Plan Generation builder class
///
class PlanGenerationBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<PlanGeneration, PlanGenerationBuilder> {
  _$PlanGeneration _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  PlanGenerationEnumCmd _cmd = PlanGenerationEnumCmd(0);
  PlanGenerationEnumCmd get cmd => _$this._cmd;
  set cmd(PlanGenerationEnumCmd cmd) => _$this._cmd = cmd;

  PlanGenerationEnumOp _op = PlanGenerationEnumOp(0);
  PlanGenerationEnumOp get op => _$this._op;
  set op(PlanGenerationEnumOp op) => _$this._op = op;

  String _planId = '';
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  String _params = '';
  String get params => _$this._params;
  set params(String params) => _$this._params = params;

  PlanGenerationBuilder();

  PlanGenerationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PlanGenerationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PlanGenerationBuilder()..copyFromHeader(headerFrom);

  PlanGenerationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _cmd = _$v.cmd;
      _op = _$v.op;
      _planId = _$v.planId;
      _params = _$v.params;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanGeneration other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PlanGeneration;
  }

  @override
  void update(void Function(PlanGenerationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanGeneration build() {
    final _$result = _$v ??
        _$PlanGeneration._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            cmd: cmd ?? PlanGenerationEnumCmd(0),
            op: op ?? PlanGenerationEnumOp(0),
            planId: planId ?? '',
            params: params ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Leader State immutable class
///
class _$LeaderState extends LeaderState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String groupName;
  @override
  final LeaderStateEnumOp op;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double vx;
  @override
  final double vy;
  @override
  final double vz;
  @override
  final double p;
  @override
  final double q;
  @override
  final double r;
  @override
  final double svx;
  @override
  final double svy;
  @override
  final double svz;

  factory _$LeaderState([void Function(LeaderStateBuilder b) updates]) =>
      (LeaderStateBuilder()..update(updates)).build();

  _$LeaderState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.groupName,
      this.op,
      this.lat,
      this.lon,
      this.height,
      this.x,
      this.y,
      this.z,
      this.phi,
      this.theta,
      this.psi,
      this.vx,
      this.vy,
      this.vz,
      this.p,
      this.q,
      this.r,
      this.svx,
      this.svy,
      this.svz})
      : super._();

  @override
  LeaderState rebuild(void Function(LeaderStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  LeaderStateBuilder toBuilder() => LeaderStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is LeaderState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        groupName == other.groupName &&
        op == other.op &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (height == other.height || height - other.height <= 1E-7) &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        (phi == other.phi || phi - other.phi <= 1E-7) &&
        (theta == other.theta || theta - other.theta <= 1E-7) &&
        (psi == other.psi || psi - other.psi <= 1E-7) &&
        (vx == other.vx || vx - other.vx <= 1E-7) &&
        (vy == other.vy || vy - other.vy <= 1E-7) &&
        (vz == other.vz || vz - other.vz <= 1E-7) &&
        (p == other.p || p - other.p <= 1E-7) &&
        (q == other.q || q - other.q <= 1E-7) &&
        (r == other.r || r - other.r <= 1E-7) &&
        (svx == other.svx || svx - other.svx <= 1E-7) &&
        (svy == other.svy || svy - other.svy <= 1E-7) &&
        (svz == other.svz || svz - other.svz <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc($jc($jc($jc(0, timestamp?.hashCode), src?.hashCode), srcEnt?.hashCode), dst?.hashCode), dstEnt?.hashCode), groupName?.hashCode),
                                                                                op?.hashCode),
                                                                            lat?.hashCode),
                                                                        lon?.hashCode),
                                                                    height?.hashCode),
                                                                x?.hashCode),
                                                            y?.hashCode),
                                                        z?.hashCode),
                                                    phi?.hashCode),
                                                theta?.hashCode),
                                            psi?.hashCode),
                                        vx?.hashCode),
                                    vy?.hashCode),
                                vz?.hashCode),
                            p?.hashCode),
                        q?.hashCode),
                    r?.hashCode),
                svx?.hashCode),
            svy?.hashCode),
        svz?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('LeaderState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('groupName', '$groupName')
          ..add('op', '$op (Enumerated)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('height', '$height (m)')
          ..add('x', '$x (m)')
          ..add('y', '$y (m)')
          ..add('z', '$z (m)')
          ..add('phi',
              '$phi (rad)${phi != null ? ' [${phi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('theta',
              '$theta (rad)${theta != null ? ' [${theta * 180.0 / math.pi} (deg)]' : ''}')
          ..add('psi',
              '$psi (rad)${psi != null ? ' [${psi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('vx', '$vx (m/s)')
          ..add('vy', '$vy (m/s)')
          ..add('vz', '$vz (m/s)')
          ..add('p',
              '$p (rad/s)${p != null ? ' [${p * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('q',
              '$q (rad/s)${q != null ? ' [${q * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('r',
              '$r (rad/s)${r != null ? ' [${r * 180.0 / math.pi} (deg/s)]' : ''}')
          ..add('svx', '$svx (m/s)')
          ..add('svy', '$svy (m/s)')
          ..add('svz', '$svz (m/s)'))
        .toString();
  }
}

/// Leader State builder class
///
class LeaderStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<LeaderState, LeaderStateBuilder> {
  _$LeaderState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _groupName = '';
  String get groupName => _$this._groupName;
  set groupName(String groupName) => _$this._groupName = groupName;

  LeaderStateEnumOp _op = LeaderStateEnumOp(0);
  LeaderStateEnumOp get op => _$this._op;
  set op(LeaderStateEnumOp op) => _$this._op = op;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height = 0;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _phi = 0;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta = 0;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi = 0;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _vx = 0;
  double get vx => _$this._vx;
  set vx(double vx) => _$this._vx = vx;

  double _vy = 0;
  double get vy => _$this._vy;
  set vy(double vy) => _$this._vy = vy;

  double _vz = 0;
  double get vz => _$this._vz;
  set vz(double vz) => _$this._vz = vz;

  double _p = 0;
  double get p => _$this._p;
  set p(double p) => _$this._p = p;

  double _q = 0;
  double get q => _$this._q;
  set q(double q) => _$this._q = q;

  double _r = 0;
  double get r => _$this._r;
  set r(double r) => _$this._r = r;

  double _svx = 0;
  double get svx => _$this._svx;
  set svx(double svx) => _$this._svx = svx;

  double _svy = 0;
  double get svy => _$this._svy;
  set svy(double svy) => _$this._svy = svy;

  double _svz = 0;
  double get svz => _$this._svz;
  set svz(double svz) => _$this._svz = svz;

  LeaderStateBuilder();

  LeaderStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  LeaderStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      LeaderStateBuilder()..copyFromHeader(headerFrom);

  LeaderStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _groupName = _$v.groupName;
      _op = _$v.op;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _vx = _$v.vx;
      _vy = _$v.vy;
      _vz = _$v.vz;
      _p = _$v.p;
      _q = _$v.q;
      _r = _$v.r;
      _svx = _$v.svx;
      _svy = _$v.svy;
      _svz = _$v.svz;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(LeaderState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$LeaderState;
  }

  @override
  void update(void Function(LeaderStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$LeaderState build() {
    final _$result = _$v ??
        _$LeaderState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            groupName: groupName ?? '',
            op: op ?? LeaderStateEnumOp(0),
            lat: lat ?? 0,
            lon: lon ?? 0,
            height: height ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0,
            vx: vx ?? 0,
            vy: vy ?? 0,
            vz: vz ?? 0,
            p: p ?? 0,
            q: q ?? 0,
            r: r ?? 0,
            svx: svx ?? 0,
            svy: svy ?? 0,
            svz: svz ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Plan Statistics immutable class
///
class _$PlanStatistics extends PlanStatistics {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String planId;
  @override
  final PlanStatisticsEnumType type;
  @override
  final PlanStatisticsBitfieldProperties properties;
  @override
  final String durations;
  @override
  final String distances;
  @override
  final String actions;
  @override
  final String fuel;

  factory _$PlanStatistics([void Function(PlanStatisticsBuilder b) updates]) =>
      (PlanStatisticsBuilder()..update(updates)).build();

  _$PlanStatistics._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.planId,
      this.type,
      this.properties,
      this.durations,
      this.distances,
      this.actions,
      this.fuel})
      : super._();

  @override
  PlanStatistics rebuild(void Function(PlanStatisticsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PlanStatisticsBuilder toBuilder() => PlanStatisticsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PlanStatistics &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        planId == other.planId &&
        type == other.type &&
        properties == other.properties &&
        durations == other.durations &&
        distances == other.distances &&
        actions == other.actions &&
        fuel == other.fuel;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, timestamp?.hashCode),
                                                src?.hashCode),
                                            srcEnt?.hashCode),
                                        dst?.hashCode),
                                    dstEnt?.hashCode),
                                planId?.hashCode),
                            type?.hashCode),
                        properties?.hashCode),
                    durations?.hashCode),
                distances?.hashCode),
            actions?.hashCode),
        fuel?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PlanStatistics')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('planId', '$planId')
          ..add('type', '$type (Enumerated)')
          ..add('properties', '$properties (Bitfield)')
          ..add('durations', '$durations (TupleList)')
          ..add('distances', '$distances (TupleList)')
          ..add('actions', '$actions (TupleList)')
          ..add('fuel', '$fuel (TupleList)'))
        .toString();
  }
}

/// Plan Statistics builder class
///
class PlanStatisticsBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<PlanStatistics, PlanStatisticsBuilder> {
  _$PlanStatistics _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _planId = '';
  String get planId => _$this._planId;
  set planId(String planId) => _$this._planId = planId;

  PlanStatisticsEnumType _type = PlanStatisticsEnumType(0);
  PlanStatisticsEnumType get type => _$this._type;
  set type(PlanStatisticsEnumType type) => _$this._type = type;

  PlanStatisticsBitfieldProperties _properties =
      PlanStatisticsBitfieldProperties(0);
  PlanStatisticsBitfieldProperties get properties => _$this._properties;
  set properties(PlanStatisticsBitfieldProperties properties) =>
      _$this._properties = properties;

  String _durations = '';
  String get durations => _$this._durations;
  set durations(String durations) => _$this._durations = durations;

  String _distances = '';
  String get distances => _$this._distances;
  set distances(String distances) => _$this._distances = distances;

  String _actions = '';
  String get actions => _$this._actions;
  set actions(String actions) => _$this._actions = actions;

  String _fuel = '';
  String get fuel => _$this._fuel;
  set fuel(String fuel) => _$this._fuel = fuel;

  PlanStatisticsBuilder();

  PlanStatisticsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PlanStatisticsBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PlanStatisticsBuilder()..copyFromHeader(headerFrom);

  PlanStatisticsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _planId = _$v.planId;
      _type = _$v.type;
      _properties = _$v.properties;
      _durations = _$v.durations;
      _distances = _$v.distances;
      _actions = _$v.actions;
      _fuel = _$v.fuel;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PlanStatistics other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PlanStatistics;
  }

  @override
  void update(void Function(PlanStatisticsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PlanStatistics build() {
    final _$result = _$v ??
        _$PlanStatistics._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            planId: planId ?? '',
            type: type ?? PlanStatisticsEnumType(0),
            properties: properties ?? PlanStatisticsBitfieldProperties(0),
            durations: durations ?? '',
            distances: distances ?? '',
            actions: actions ?? '',
            fuel: fuel ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Reported State immutable class
///
class _$ReportedState extends ReportedState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double depth;
  @override
  final double roll;
  @override
  final double pitch;
  @override
  final double yaw;
  @override
  final double rcpTime;
  @override
  final String sid;
  @override
  final ReportedStateEnumSType sType;

  factory _$ReportedState([void Function(ReportedStateBuilder b) updates]) =>
      (ReportedStateBuilder()..update(updates)).build();

  _$ReportedState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.depth,
      this.roll,
      this.pitch,
      this.yaw,
      this.rcpTime,
      this.sid,
      this.sType})
      : super._();

  @override
  ReportedState rebuild(void Function(ReportedStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ReportedStateBuilder toBuilder() => ReportedStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ReportedState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (depth == other.depth || depth - other.depth <= 1E-7) &&
        (roll == other.roll || roll - other.roll <= 1E-7) &&
        (pitch == other.pitch || pitch - other.pitch <= 1E-7) &&
        (yaw == other.yaw || yaw - other.yaw <= 1E-7) &&
        (rcpTime == other.rcpTime || rcpTime - other.rcpTime <= 1E-7) &&
        sid == other.sid &&
        sType == other.sType;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            0,
                                                            timestamp
                                                                ?.hashCode),
                                                        src?.hashCode),
                                                    srcEnt?.hashCode),
                                                dst?.hashCode),
                                            dstEnt?.hashCode),
                                        lat?.hashCode),
                                    lon?.hashCode),
                                depth?.hashCode),
                            roll?.hashCode),
                        pitch?.hashCode),
                    yaw?.hashCode),
                rcpTime?.hashCode),
            sid?.hashCode),
        sType?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ReportedState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('depth', '$depth (m)')
          ..add('roll',
              '$roll (rad)${roll != null ? ' [${roll * 180.0 / math.pi} (deg)]' : ''}')
          ..add('pitch',
              '$pitch (rad)${pitch != null ? ' [${pitch * 180.0 / math.pi} (deg)]' : ''}')
          ..add('yaw',
              '$yaw (rad)${yaw != null ? ' [${yaw * 180.0 / math.pi} (deg)]' : ''}')
          ..add('rcpTime', '$rcpTime (s)')
          ..add('sid', '$sid')
          ..add('sType', '$sType (Enumerated)'))
        .toString();
  }
}

/// Reported State builder class
///
class ReportedStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ReportedState, ReportedStateBuilder> {
  _$ReportedState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _depth = 0;
  double get depth => _$this._depth;
  set depth(double depth) => _$this._depth = depth;

  double _roll = 0;
  double get roll => _$this._roll;
  set roll(double roll) => _$this._roll = roll;

  double _pitch = 0;
  double get pitch => _$this._pitch;
  set pitch(double pitch) => _$this._pitch = pitch;

  double _yaw = 0;
  double get yaw => _$this._yaw;
  set yaw(double yaw) => _$this._yaw = yaw;

  double _rcpTime = 0;
  double get rcpTime => _$this._rcpTime;
  set rcpTime(double rcpTime) => _$this._rcpTime = rcpTime;

  String _sid = '';
  String get sid => _$this._sid;
  set sid(String sid) => _$this._sid = sid;

  ReportedStateEnumSType _sType = ReportedStateEnumSType(0);
  ReportedStateEnumSType get sType => _$this._sType;
  set sType(ReportedStateEnumSType sType) => _$this._sType = sType;

  ReportedStateBuilder();

  ReportedStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ReportedStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ReportedStateBuilder()..copyFromHeader(headerFrom);

  ReportedStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _depth = _$v.depth;
      _roll = _$v.roll;
      _pitch = _$v.pitch;
      _yaw = _$v.yaw;
      _rcpTime = _$v.rcpTime;
      _sid = _$v.sid;
      _sType = _$v.sType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ReportedState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ReportedState;
  }

  @override
  void update(void Function(ReportedStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ReportedState build() {
    final _$result = _$v ??
        _$ReportedState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            depth: depth ?? 0,
            roll: roll ?? 0,
            pitch: pitch ?? 0,
            yaw: yaw ?? 0,
            rcpTime: rcpTime ?? 0,
            sid: sid ?? '',
            sType: sType ?? ReportedStateEnumSType(0));
    replace(_$result);
    return _$result;
  }
}

/// Remote Sensor Info immutable class
///
class _$RemoteSensorInfo extends RemoteSensorInfo {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String id;
  @override
  final String sensorClass;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double alt;
  @override
  final double heading;
  @override
  final String data;

  factory _$RemoteSensorInfo(
          [void Function(RemoteSensorInfoBuilder b) updates]) =>
      (RemoteSensorInfoBuilder()..update(updates)).build();

  _$RemoteSensorInfo._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.id,
      this.sensorClass,
      this.lat,
      this.lon,
      this.alt,
      this.heading,
      this.data})
      : super._();

  @override
  RemoteSensorInfo rebuild(void Function(RemoteSensorInfoBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteSensorInfoBuilder toBuilder() =>
      RemoteSensorInfoBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteSensorInfo &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == other.id &&
        sensorClass == other.sensorClass &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (alt == other.alt || alt - other.alt <= 1E-7) &&
        (heading == other.heading || heading - other.heading <= 1E-7) &&
        data == other.data;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, timestamp?.hashCode),
                                                src?.hashCode),
                                            srcEnt?.hashCode),
                                        dst?.hashCode),
                                    dstEnt?.hashCode),
                                id?.hashCode),
                            sensorClass?.hashCode),
                        lat?.hashCode),
                    lon?.hashCode),
                alt?.hashCode),
            heading?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteSensorInfo')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', '$id')
          ..add('sensorClass', '$sensorClass')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('alt', '$alt (m)')
          ..add('heading',
              '$heading (rad)${heading != null ? ' [${heading * 180.0 / math.pi} (deg)]' : ''}')
          ..add('data', '$data (TupleList)'))
        .toString();
  }
}

/// Remote Sensor Info builder class
///
class RemoteSensorInfoBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<RemoteSensorInfo, RemoteSensorInfoBuilder> {
  _$RemoteSensorInfo _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _id = '';
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  String _sensorClass = '';
  String get sensorClass => _$this._sensorClass;
  set sensorClass(String sensorClass) => _$this._sensorClass = sensorClass;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _alt = 0;
  double get alt => _$this._alt;
  set alt(double alt) => _$this._alt = alt;

  double _heading = 0;
  double get heading => _$this._heading;
  set heading(double heading) => _$this._heading = heading;

  String _data = '';
  String get data => _$this._data;
  set data(String data) => _$this._data = data;

  RemoteSensorInfoBuilder();

  RemoteSensorInfoBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RemoteSensorInfoBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RemoteSensorInfoBuilder()..copyFromHeader(headerFrom);

  RemoteSensorInfoBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _sensorClass = _$v.sensorClass;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _alt = _$v.alt;
      _heading = _$v.heading;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteSensorInfo other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteSensorInfo;
  }

  @override
  void update(void Function(RemoteSensorInfoBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteSensorInfo build() {
    final _$result = _$v ??
        _$RemoteSensorInfo._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? '',
            sensorClass: sensorClass ?? '',
            lat: lat ?? 0,
            lon: lon ?? 0,
            alt: alt ?? 0,
            heading: heading ?? 0,
            data: data ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Map immutable class
///
class _$Map extends Map {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String id;
  @override
  final List<MapFeature> features;

  factory _$Map([void Function(MapBuilder b) updates]) =>
      (MapBuilder()..update(updates)).build();

  _$Map._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.id,
      this.features})
      : super._();

  @override
  Map rebuild(void Function(MapBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  MapBuilder toBuilder() => MapBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Map &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == other.id &&
        DeepCollectionEquality().equals(features, other.features);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            id?.hashCode),
        features?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Map')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', '$id')
          ..add('features', '$features'))
        .toString();
  }
}

/// Map builder class
///
class MapBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Map, MapBuilder> {
  _$Map _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _id = '';
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  List<MapFeature> _features = <MapFeature>[];
  List<MapFeature> get features => _$this._features;
  set features(List<MapFeature> features) => _$this._features = features;

  MapBuilder();

  MapBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  MapBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      MapBuilder()..copyFromHeader(headerFrom);

  MapBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _features = _$v.features;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Map other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Map;
  }

  @override
  void update(void Function(MapBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Map build() {
    final _$result = _$v ??
        _$Map._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? '',
            features: features ?? <MapFeature>[]);
    replace(_$result);
    return _$result;
  }
}

/// Map Feature immutable class
///
class _$MapFeature extends MapFeature {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String id;
  @override
  final MapFeatureEnumFeatureType featureType;
  @override
  final int rgbRed;
  @override
  final int rgbGreen;
  @override
  final int rgbBlue;
  @override
  final List<MapPoint> feature;

  factory _$MapFeature([void Function(MapFeatureBuilder b) updates]) =>
      (MapFeatureBuilder()..update(updates)).build();

  _$MapFeature._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.id,
      this.featureType,
      this.rgbRed,
      this.rgbGreen,
      this.rgbBlue,
      this.feature})
      : super._();

  @override
  MapFeature rebuild(void Function(MapFeatureBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  MapFeatureBuilder toBuilder() => MapFeatureBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MapFeature &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        id == other.id &&
        featureType == other.featureType &&
        rgbRed == other.rgbRed &&
        rgbGreen == other.rgbGreen &&
        rgbBlue == other.rgbBlue &&
        DeepCollectionEquality().equals(feature, other.feature);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, timestamp?.hashCode),
                                            src?.hashCode),
                                        srcEnt?.hashCode),
                                    dst?.hashCode),
                                dstEnt?.hashCode),
                            id?.hashCode),
                        featureType?.hashCode),
                    rgbRed?.hashCode),
                rgbGreen?.hashCode),
            rgbBlue?.hashCode),
        feature?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MapFeature')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('id', '$id')
          ..add('featureType', '$featureType (Enumerated)')
          ..add('rgbRed', '$rgbRed')
          ..add('rgbGreen', '$rgbGreen')
          ..add('rgbBlue', '$rgbBlue')
          ..add('feature', '$feature'))
        .toString();
  }
}

/// Map Feature builder class
///
class MapFeatureBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<MapFeature, MapFeatureBuilder> {
  _$MapFeature _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _id = '';
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  MapFeatureEnumFeatureType _featureType = MapFeatureEnumFeatureType(0);
  MapFeatureEnumFeatureType get featureType => _$this._featureType;
  set featureType(MapFeatureEnumFeatureType featureType) =>
      _$this._featureType = featureType;

  int _rgbRed = 0;
  int get rgbRed => _$this._rgbRed;
  set rgbRed(int rgbRed) => _$this._rgbRed = rgbRed;

  int _rgbGreen = 0;
  int get rgbGreen => _$this._rgbGreen;
  set rgbGreen(int rgbGreen) => _$this._rgbGreen = rgbGreen;

  int _rgbBlue = 0;
  int get rgbBlue => _$this._rgbBlue;
  set rgbBlue(int rgbBlue) => _$this._rgbBlue = rgbBlue;

  List<MapPoint> _feature = <MapPoint>[];
  List<MapPoint> get feature => _$this._feature;
  set feature(List<MapPoint> feature) => _$this._feature = feature;

  MapFeatureBuilder();

  MapFeatureBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  MapFeatureBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      MapFeatureBuilder()..copyFromHeader(headerFrom);

  MapFeatureBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _id = _$v.id;
      _featureType = _$v.featureType;
      _rgbRed = _$v.rgbRed;
      _rgbGreen = _$v.rgbGreen;
      _rgbBlue = _$v.rgbBlue;
      _feature = _$v.feature;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MapFeature other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$MapFeature;
  }

  @override
  void update(void Function(MapFeatureBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$MapFeature build() {
    final _$result = _$v ??
        _$MapFeature._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            id: id ?? '',
            featureType: featureType ?? MapFeatureEnumFeatureType(0),
            rgbRed: rgbRed ?? 0,
            rgbGreen: rgbGreen ?? 0,
            rgbBlue: rgbBlue ?? 0,
            feature: feature ?? <MapPoint>[]);
    replace(_$result);
    return _$result;
  }
}

/// MapPoint immutable class
///
class _$MapPoint extends MapPoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final double alt;

  factory _$MapPoint([void Function(MapPointBuilder b) updates]) =>
      (MapPointBuilder()..update(updates)).build();

  _$MapPoint._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.alt})
      : super._();

  @override
  MapPoint rebuild(void Function(MapPointBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  MapPointBuilder toBuilder() => MapPointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MapPoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (alt == other.alt || alt - other.alt <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                lat?.hashCode),
            lon?.hashCode),
        alt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MapPoint')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('alt', '$alt (m)'))
        .toString();
  }
}

/// MapPoint builder class
///
class MapPointBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<MapPoint, MapPointBuilder> {
  _$MapPoint _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _alt = 0;
  double get alt => _$this._alt;
  set alt(double alt) => _$this._alt = alt;

  MapPointBuilder();

  MapPointBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  MapPointBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      MapPointBuilder()..copyFromHeader(headerFrom);

  MapPointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _alt = _$v.alt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MapPoint other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$MapPoint;
  }

  @override
  void update(void Function(MapPointBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$MapPoint build() {
    final _$result = _$v ??
        _$MapPoint._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            alt: alt ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// CCU Event immutable class
///
class _$CcuEvent extends CcuEvent {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final CcuEventEnumType type;
  @override
  final String id;
  @override
  final ImcMessage arg;

  factory _$CcuEvent([void Function(CcuEventBuilder b) updates]) =>
      (CcuEventBuilder()..update(updates)).build();

  _$CcuEvent._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type,
      this.id,
      this.arg})
      : super._();

  @override
  CcuEvent rebuild(void Function(CcuEventBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CcuEventBuilder toBuilder() => CcuEventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CcuEvent &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type &&
        id == other.id &&
        arg == other.arg;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                type?.hashCode),
            id?.hashCode),
        arg?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CcuEvent')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Enumerated)')
          ..add('id', '$id')
          ..add('arg', '$arg'))
        .toString();
  }
}

/// CCU Event builder class
///
class CcuEventBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<CcuEvent, CcuEventBuilder> {
  _$CcuEvent _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  CcuEventEnumType _type = CcuEventEnumType(0);
  CcuEventEnumType get type => _$this._type;
  set type(CcuEventEnumType type) => _$this._type = type;

  String _id = '';
  String get id => _$this._id;
  set id(String id) => _$this._id = id;

  ImcMessage _arg;
  ImcMessage get arg => _$this._arg;
  set arg(ImcMessage arg) => _$this._arg = arg;

  CcuEventBuilder();

  CcuEventBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CcuEventBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CcuEventBuilder()..copyFromHeader(headerFrom);

  CcuEventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _id = _$v.id;
      _arg = _$v.arg;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CcuEvent other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$CcuEvent;
  }

  @override
  void update(void Function(CcuEventBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$CcuEvent build() {
    final _$result = _$v ??
        _$CcuEvent._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? CcuEventEnumType(0),
            id: id ?? '',
            arg: arg);
    replace(_$result);
    return _$result;
  }
}

/// Vehicle Links immutable class
///
class _$VehicleLinks extends VehicleLinks {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String localname;
  @override
  final List<Announce> links;

  factory _$VehicleLinks([void Function(VehicleLinksBuilder b) updates]) =>
      (VehicleLinksBuilder()..update(updates)).build();

  _$VehicleLinks._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.localname,
      this.links})
      : super._();

  @override
  VehicleLinks rebuild(void Function(VehicleLinksBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  VehicleLinksBuilder toBuilder() => VehicleLinksBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is VehicleLinks &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        localname == other.localname &&
        DeepCollectionEquality().equals(links, other.links);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            localname?.hashCode),
        links?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('VehicleLinks')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('localname', '$localname')
          ..add('links', '$links'))
        .toString();
  }
}

/// Vehicle Links builder class
///
class VehicleLinksBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<VehicleLinks, VehicleLinksBuilder> {
  _$VehicleLinks _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _localname = '';
  String get localname => _$this._localname;
  set localname(String localname) => _$this._localname = localname;

  List<Announce> _links = <Announce>[];
  List<Announce> get links => _$this._links;
  set links(List<Announce> links) => _$this._links = links;

  VehicleLinksBuilder();

  VehicleLinksBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  VehicleLinksBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      VehicleLinksBuilder()..copyFromHeader(headerFrom);

  VehicleLinksBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _localname = _$v.localname;
      _links = _$v.links;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(VehicleLinks other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$VehicleLinks;
  }

  @override
  void update(void Function(VehicleLinksBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$VehicleLinks build() {
    final _$result = _$v ??
        _$VehicleLinks._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            localname: localname ?? '',
            links: links ?? <Announce>[]);
    replace(_$result);
    return _$result;
  }
}

/// TREX Observation immutable class
///
class _$TrexObservation extends TrexObservation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String timeline;
  @override
  final String predicate;
  @override
  final String attributes;

  factory _$TrexObservation(
          [void Function(TrexObservationBuilder b) updates]) =>
      (TrexObservationBuilder()..update(updates)).build();

  _$TrexObservation._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeline,
      this.predicate,
      this.attributes})
      : super._();

  @override
  TrexObservation rebuild(void Function(TrexObservationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexObservationBuilder toBuilder() => TrexObservationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexObservation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeline == other.timeline &&
        predicate == other.predicate &&
        attributes == other.attributes;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                timeline?.hashCode),
            predicate?.hashCode),
        attributes?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexObservation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeline', '$timeline')
          ..add('predicate', '$predicate')
          ..add('attributes', '$attributes (TupleList)'))
        .toString();
  }
}

/// TREX Observation builder class
///
class TrexObservationBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<TrexObservation, TrexObservationBuilder> {
  _$TrexObservation _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _timeline = '';
  String get timeline => _$this._timeline;
  set timeline(String timeline) => _$this._timeline = timeline;

  String _predicate = '';
  String get predicate => _$this._predicate;
  set predicate(String predicate) => _$this._predicate = predicate;

  String _attributes = '';
  String get attributes => _$this._attributes;
  set attributes(String attributes) => _$this._attributes = attributes;

  TrexObservationBuilder();

  TrexObservationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TrexObservationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TrexObservationBuilder()..copyFromHeader(headerFrom);

  TrexObservationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeline = _$v.timeline;
      _predicate = _$v.predicate;
      _attributes = _$v.attributes;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexObservation other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TrexObservation;
  }

  @override
  void update(void Function(TrexObservationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexObservation build() {
    final _$result = _$v ??
        _$TrexObservation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeline: timeline ?? '',
            predicate: predicate ?? '',
            attributes: attributes ?? '');
    replace(_$result);
    return _$result;
  }
}

/// TREX Command immutable class
///
class _$TrexCommand extends TrexCommand {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final TrexCommandEnumCommand command;
  @override
  final String goalId;
  @override
  final String goalXml;

  factory _$TrexCommand([void Function(TrexCommandBuilder b) updates]) =>
      (TrexCommandBuilder()..update(updates)).build();

  _$TrexCommand._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.command,
      this.goalId,
      this.goalXml})
      : super._();

  @override
  TrexCommand rebuild(void Function(TrexCommandBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexCommandBuilder toBuilder() => TrexCommandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexCommand &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        command == other.command &&
        goalId == other.goalId &&
        goalXml == other.goalXml;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                command?.hashCode),
            goalId?.hashCode),
        goalXml?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexCommand')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('command', '$command (Enumerated)')
          ..add('goalId', '$goalId')
          ..add('goalXml', '$goalXml'))
        .toString();
  }
}

/// TREX Command builder class
///
class TrexCommandBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<TrexCommand, TrexCommandBuilder> {
  _$TrexCommand _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  TrexCommandEnumCommand _command = TrexCommandEnumCommand(0);
  TrexCommandEnumCommand get command => _$this._command;
  set command(TrexCommandEnumCommand command) => _$this._command = command;

  String _goalId = '';
  String get goalId => _$this._goalId;
  set goalId(String goalId) => _$this._goalId = goalId;

  String _goalXml = '';
  String get goalXml => _$this._goalXml;
  set goalXml(String goalXml) => _$this._goalXml = goalXml;

  TrexCommandBuilder();

  TrexCommandBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TrexCommandBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TrexCommandBuilder()..copyFromHeader(headerFrom);

  TrexCommandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _command = _$v.command;
      _goalId = _$v.goalId;
      _goalXml = _$v.goalXml;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexCommand other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TrexCommand;
  }

  @override
  void update(void Function(TrexCommandBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexCommand build() {
    final _$result = _$v ??
        _$TrexCommand._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            command: command ?? TrexCommandEnumCommand(0),
            goalId: goalId ?? '',
            goalXml: goalXml ?? '');
    replace(_$result);
    return _$result;
  }
}

/// TREX Operation immutable class
///
class _$TrexOperation extends TrexOperation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final TrexOperationEnumOp op;
  @override
  final String goalId;
  @override
  final TrexToken token;

  factory _$TrexOperation([void Function(TrexOperationBuilder b) updates]) =>
      (TrexOperationBuilder()..update(updates)).build();

  _$TrexOperation._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.goalId,
      this.token})
      : super._();

  @override
  TrexOperation rebuild(void Function(TrexOperationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexOperationBuilder toBuilder() => TrexOperationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexOperation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        goalId == other.goalId &&
        token == other.token;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                op?.hashCode),
            goalId?.hashCode),
        token?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexOperation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('goalId', '$goalId')
          ..add('token', '$token'))
        .toString();
  }
}

/// TREX Operation builder class
///
class TrexOperationBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<TrexOperation, TrexOperationBuilder> {
  _$TrexOperation _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  TrexOperationEnumOp _op = TrexOperationEnumOp(0);
  TrexOperationEnumOp get op => _$this._op;
  set op(TrexOperationEnumOp op) => _$this._op = op;

  String _goalId = '';
  String get goalId => _$this._goalId;
  set goalId(String goalId) => _$this._goalId = goalId;

  TrexToken _token;
  TrexToken get token => _$this._token;
  set token(TrexToken token) => _$this._token = token;

  TrexOperationBuilder();

  TrexOperationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TrexOperationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TrexOperationBuilder()..copyFromHeader(headerFrom);

  TrexOperationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _goalId = _$v.goalId;
      _token = _$v.token;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexOperation other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TrexOperation;
  }

  @override
  void update(void Function(TrexOperationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexOperation build() {
    final _$result = _$v ??
        _$TrexOperation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? TrexOperationEnumOp(0),
            goalId: goalId ?? '',
            token: token);
    replace(_$result);
    return _$result;
  }
}

/// TREX Attribute immutable class
///
class _$TrexAttribute extends TrexAttribute {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final TrexAttributeEnumAttrType attrType;
  @override
  final String min;
  @override
  final String max;

  factory _$TrexAttribute([void Function(TrexAttributeBuilder b) updates]) =>
      (TrexAttributeBuilder()..update(updates)).build();

  _$TrexAttribute._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name,
      this.attrType,
      this.min,
      this.max})
      : super._();

  @override
  TrexAttribute rebuild(void Function(TrexAttributeBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexAttributeBuilder toBuilder() => TrexAttributeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexAttribute &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name &&
        attrType == other.attrType &&
        min == other.min &&
        max == other.max;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    name?.hashCode),
                attrType?.hashCode),
            min?.hashCode),
        max?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexAttribute')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name')
          ..add('attrType', '$attrType (Enumerated)')
          ..add('min', '$min')
          ..add('max', '$max'))
        .toString();
  }
}

/// TREX Attribute builder class
///
class TrexAttributeBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<TrexAttribute, TrexAttributeBuilder> {
  _$TrexAttribute _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  TrexAttributeEnumAttrType _attrType = TrexAttributeEnumAttrType(0);
  TrexAttributeEnumAttrType get attrType => _$this._attrType;
  set attrType(TrexAttributeEnumAttrType attrType) =>
      _$this._attrType = attrType;

  String _min = '';
  String get min => _$this._min;
  set min(String min) => _$this._min = min;

  String _max = '';
  String get max => _$this._max;
  set max(String max) => _$this._max = max;

  TrexAttributeBuilder();

  TrexAttributeBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TrexAttributeBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TrexAttributeBuilder()..copyFromHeader(headerFrom);

  TrexAttributeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _attrType = _$v.attrType;
      _min = _$v.min;
      _max = _$v.max;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexAttribute other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TrexAttribute;
  }

  @override
  void update(void Function(TrexAttributeBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexAttribute build() {
    final _$result = _$v ??
        _$TrexAttribute._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            attrType: attrType ?? TrexAttributeEnumAttrType(0),
            min: min ?? '',
            max: max ?? '');
    replace(_$result);
    return _$result;
  }
}

/// TREX Token immutable class
///
class _$TrexToken extends TrexToken {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String timeline;
  @override
  final String predicate;
  @override
  final List<TrexAttribute> attributes;

  factory _$TrexToken([void Function(TrexTokenBuilder b) updates]) =>
      (TrexTokenBuilder()..update(updates)).build();

  _$TrexToken._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeline,
      this.predicate,
      this.attributes})
      : super._();

  @override
  TrexToken rebuild(void Function(TrexTokenBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexTokenBuilder toBuilder() => TrexTokenBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexToken &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeline == other.timeline &&
        predicate == other.predicate &&
        DeepCollectionEquality().equals(attributes, other.attributes);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                timeline?.hashCode),
            predicate?.hashCode),
        attributes?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexToken')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeline', '$timeline')
          ..add('predicate', '$predicate')
          ..add('attributes', '$attributes'))
        .toString();
  }
}

/// TREX Token builder class
///
class TrexTokenBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<TrexToken, TrexTokenBuilder> {
  _$TrexToken _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _timeline = '';
  String get timeline => _$this._timeline;
  set timeline(String timeline) => _$this._timeline = timeline;

  String _predicate = '';
  String get predicate => _$this._predicate;
  set predicate(String predicate) => _$this._predicate = predicate;

  List<TrexAttribute> _attributes = <TrexAttribute>[];
  List<TrexAttribute> get attributes => _$this._attributes;
  set attributes(List<TrexAttribute> attributes) =>
      _$this._attributes = attributes;

  TrexTokenBuilder();

  TrexTokenBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TrexTokenBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TrexTokenBuilder()..copyFromHeader(headerFrom);

  TrexTokenBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeline = _$v.timeline;
      _predicate = _$v.predicate;
      _attributes = _$v.attributes;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexToken other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TrexToken;
  }

  @override
  void update(void Function(TrexTokenBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexToken build() {
    final _$result = _$v ??
        _$TrexToken._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeline: timeline ?? '',
            predicate: predicate ?? '',
            attributes: attributes ?? <TrexAttribute>[]);
    replace(_$result);
    return _$result;
  }
}

/// TREX Plan immutable class
///
class _$TrexPlan extends TrexPlan {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String reactor;
  @override
  final List<TrexToken> tokens;

  factory _$TrexPlan([void Function(TrexPlanBuilder b) updates]) =>
      (TrexPlanBuilder()..update(updates)).build();

  _$TrexPlan._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.reactor,
      this.tokens})
      : super._();

  @override
  TrexPlan rebuild(void Function(TrexPlanBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TrexPlanBuilder toBuilder() => TrexPlanBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TrexPlan &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        reactor == other.reactor &&
        DeepCollectionEquality().equals(tokens, other.tokens);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            reactor?.hashCode),
        tokens?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TrexPlan')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('reactor', '$reactor')
          ..add('tokens', '$tokens'))
        .toString();
  }
}

/// TREX Plan builder class
///
class TrexPlanBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<TrexPlan, TrexPlanBuilder> {
  _$TrexPlan _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _reactor = '';
  String get reactor => _$this._reactor;
  set reactor(String reactor) => _$this._reactor = reactor;

  List<TrexToken> _tokens = <TrexToken>[];
  List<TrexToken> get tokens => _$this._tokens;
  set tokens(List<TrexToken> tokens) => _$this._tokens = tokens;

  TrexPlanBuilder();

  TrexPlanBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TrexPlanBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TrexPlanBuilder()..copyFromHeader(headerFrom);

  TrexPlanBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _reactor = _$v.reactor;
      _tokens = _$v.tokens;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TrexPlan other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TrexPlan;
  }

  @override
  void update(void Function(TrexPlanBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TrexPlan build() {
    final _$result = _$v ??
        _$TrexPlan._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            reactor: reactor ?? '',
            tokens: tokens ?? <TrexToken>[]);
    replace(_$result);
    return _$result;
  }
}

/// Event immutable class
///
class _$Event extends Event {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String topic;
  @override
  final String data;

  factory _$Event([void Function(EventBuilder b) updates]) =>
      (EventBuilder()..update(updates)).build();

  _$Event._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.topic,
      this.data})
      : super._();

  @override
  Event rebuild(void Function(EventBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  EventBuilder toBuilder() => EventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Event &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        topic == other.topic &&
        data == other.data;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            topic?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Event')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('topic', '$topic')
          ..add('data', '$data (TupleList)'))
        .toString();
  }
}

/// Event builder class
///
class EventBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Event, EventBuilder> {
  _$Event _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _topic = '';
  String get topic => _$this._topic;
  set topic(String topic) => _$this._topic = topic;

  String _data = '';
  String get data => _$this._data;
  set data(String data) => _$this._data = data;

  EventBuilder();

  EventBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  EventBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      EventBuilder()..copyFromHeader(headerFrom);

  EventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _topic = _$v.topic;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Event other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Event;
  }

  @override
  void update(void Function(EventBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Event build() {
    final _$result = _$v ??
        _$Event._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            topic: topic ?? '',
            data: data ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Compressed Image immutable class
///
class _$CompressedImage extends CompressedImage {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int frameid;
  @override
  final List<int> data;

  factory _$CompressedImage(
          [void Function(CompressedImageBuilder b) updates]) =>
      (CompressedImageBuilder()..update(updates)).build();

  _$CompressedImage._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.frameid,
      this.data})
      : super._();

  @override
  CompressedImage rebuild(void Function(CompressedImageBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CompressedImageBuilder toBuilder() => CompressedImageBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CompressedImage &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        frameid == other.frameid &&
        ListEquality().equals(data, other.data);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            frameid?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CompressedImage')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('frameid', '$frameid')
          ..add('data', '$data'))
        .toString();
  }
}

/// Compressed Image builder class
///
class CompressedImageBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<CompressedImage, CompressedImageBuilder> {
  _$CompressedImage _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _frameid = 0;
  int get frameid => _$this._frameid;
  set frameid(int frameid) => _$this._frameid = frameid;

  List<int> _data = <int>[];
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  CompressedImageBuilder();

  CompressedImageBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CompressedImageBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CompressedImageBuilder()..copyFromHeader(headerFrom);

  CompressedImageBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _frameid = _$v.frameid;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CompressedImage other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$CompressedImage;
  }

  @override
  void update(void Function(CompressedImageBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$CompressedImage build() {
    final _$result = _$v ??
        _$CompressedImage._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            frameid: frameid ?? 0,
            data: data ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// Image Transmission Settings immutable class
///
class _$ImageTxSettings extends ImageTxSettings {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int fps;
  @override
  final int quality;
  @override
  final int reps;
  @override
  final int tsize;

  factory _$ImageTxSettings(
          [void Function(ImageTxSettingsBuilder b) updates]) =>
      (ImageTxSettingsBuilder()..update(updates)).build();

  _$ImageTxSettings._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.fps,
      this.quality,
      this.reps,
      this.tsize})
      : super._();

  @override
  ImageTxSettings rebuild(void Function(ImageTxSettingsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ImageTxSettingsBuilder toBuilder() => ImageTxSettingsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ImageTxSettings &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        fps == other.fps &&
        quality == other.quality &&
        reps == other.reps &&
        tsize == other.tsize;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    fps?.hashCode),
                quality?.hashCode),
            reps?.hashCode),
        tsize?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ImageTxSettings')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('fps', '$fps')
          ..add('quality', '$quality')
          ..add('reps', '$reps')
          ..add('tsize', '$tsize'))
        .toString();
  }
}

/// Image Transmission Settings builder class
///
class ImageTxSettingsBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<ImageTxSettings, ImageTxSettingsBuilder> {
  _$ImageTxSettings _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _fps = 0;
  int get fps => _$this._fps;
  set fps(int fps) => _$this._fps = fps;

  int _quality = 0;
  int get quality => _$this._quality;
  set quality(int quality) => _$this._quality = quality;

  int _reps = 0;
  int get reps => _$this._reps;
  set reps(int reps) => _$this._reps = reps;

  int _tsize = 0;
  int get tsize => _$this._tsize;
  set tsize(int tsize) => _$this._tsize = tsize;

  ImageTxSettingsBuilder();

  ImageTxSettingsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ImageTxSettingsBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ImageTxSettingsBuilder()..copyFromHeader(headerFrom);

  ImageTxSettingsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _fps = _$v.fps;
      _quality = _$v.quality;
      _reps = _$v.reps;
      _tsize = _$v.tsize;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ImageTxSettings other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ImageTxSettings;
  }

  @override
  void update(void Function(ImageTxSettingsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ImageTxSettings build() {
    final _$result = _$v ??
        _$ImageTxSettings._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            fps: fps ?? 0,
            quality: quality ?? 0,
            reps: reps ?? 0,
            tsize: tsize ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Remote State immutable class
///
class _$RemoteState extends RemoteState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final int depth;
  @override
  final double speed;
  @override
  final double psi;

  factory _$RemoteState([void Function(RemoteStateBuilder b) updates]) =>
      (RemoteStateBuilder()..update(updates)).build();

  _$RemoteState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.depth,
      this.speed,
      this.psi})
      : super._();

  @override
  RemoteState rebuild(void Function(RemoteStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  RemoteStateBuilder toBuilder() => RemoteStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is RemoteState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        depth == other.depth &&
        (speed == other.speed || speed - other.speed <= 1E-7) &&
        (psi == other.psi || psi - other.psi <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, timestamp?.hashCode),
                                        src?.hashCode),
                                    srcEnt?.hashCode),
                                dst?.hashCode),
                            dstEnt?.hashCode),
                        lat?.hashCode),
                    lon?.hashCode),
                depth?.hashCode),
            speed?.hashCode),
        psi?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('RemoteState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('depth', '$depth (m)')
          ..add('speed', '$speed (m/s)')
          ..add('psi',
              '$psi (rad)${psi != null ? ' [${psi * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// Remote State builder class
///
class RemoteStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<RemoteState, RemoteStateBuilder> {
  _$RemoteState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  int _depth = 0;
  int get depth => _$this._depth;
  set depth(int depth) => _$this._depth = depth;

  double _speed = 0;
  double get speed => _$this._speed;
  set speed(double speed) => _$this._speed = speed;

  double _psi = 0;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  RemoteStateBuilder();

  RemoteStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  RemoteStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      RemoteStateBuilder()..copyFromHeader(headerFrom);

  RemoteStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _depth = _$v.depth;
      _speed = _$v.speed;
      _psi = _$v.psi;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(RemoteState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$RemoteState;
  }

  @override
  void update(void Function(RemoteStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$RemoteState build() {
    final _$result = _$v ??
        _$RemoteState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            depth: depth ?? 0,
            speed: speed ?? 0,
            psi: psi ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Target immutable class
///
class _$Target extends Target {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String label;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double cog;
  @override
  final double sog;

  factory _$Target([void Function(TargetBuilder b) updates]) =>
      (TargetBuilder()..update(updates)).build();

  _$Target._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.label,
      this.lat,
      this.lon,
      this.z,
      this.zUnits,
      this.cog,
      this.sog})
      : super._();

  @override
  Target rebuild(void Function(TargetBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TargetBuilder toBuilder() => TargetBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Target &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        label == other.label &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits &&
        (cog == other.cog || cog - other.cog <= 1E-7) &&
        (sog == other.sog || sog - other.sog <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, timestamp?.hashCode),
                                                src?.hashCode),
                                            srcEnt?.hashCode),
                                        dst?.hashCode),
                                    dstEnt?.hashCode),
                                label?.hashCode),
                            lat?.hashCode),
                        lon?.hashCode),
                    z?.hashCode),
                zUnits?.hashCode),
            cog?.hashCode),
        sog?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Target')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('label', '$label')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('cog',
              '$cog (rad)${cog != null ? ' [${cog * 180.0 / math.pi} (deg)]' : ''}')
          ..add('sog', '$sog (m/s)'))
        .toString();
  }
}

/// Target builder class
///
class TargetBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Target, TargetBuilder> {
  _$Target _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _label = '';
  String get label => _$this._label;
  set label(String label) => _$this._label = label;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _cog = 0;
  double get cog => _$this._cog;
  set cog(double cog) => _$this._cog = cog;

  double _sog = 0;
  double get sog => _$this._sog;
  set sog(double sog) => _$this._sog = sog;

  TargetBuilder();

  TargetBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TargetBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TargetBuilder()..copyFromHeader(headerFrom);

  TargetBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _label = _$v.label;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _cog = _$v.cog;
      _sog = _$v.sog;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Target other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Target;
  }

  @override
  void update(void Function(TargetBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Target build() {
    final _$result = _$v ??
        _$Target._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            label: label ?? '',
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            cog: cog ?? 0,
            sog: sog ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// EntityParameter immutable class
///
class _$EntityParameter extends EntityParameter {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final String value;

  factory _$EntityParameter(
          [void Function(EntityParameterBuilder b) updates]) =>
      (EntityParameterBuilder()..update(updates)).build();

  _$EntityParameter._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name,
      this.value})
      : super._();

  @override
  EntityParameter rebuild(void Function(EntityParameterBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityParameterBuilder toBuilder() => EntityParameterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityParameter &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            name?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityParameter')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name')
          ..add('value', '$value'))
        .toString();
  }
}

/// EntityParameter builder class
///
class EntityParameterBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<EntityParameter, EntityParameterBuilder> {
  _$EntityParameter _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _value = '';
  String get value => _$this._value;
  set value(String value) => _$this._value = value;

  EntityParameterBuilder();

  EntityParameterBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  EntityParameterBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      EntityParameterBuilder()..copyFromHeader(headerFrom);

  EntityParameterBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityParameter other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$EntityParameter;
  }

  @override
  void update(void Function(EntityParameterBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityParameter build() {
    final _$result = _$v ??
        _$EntityParameter._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            value: value ?? '');
    replace(_$result);
    return _$result;
  }
}

/// EntityParameters immutable class
///
class _$EntityParameters extends EntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final List<EntityParameter> params;

  factory _$EntityParameters(
          [void Function(EntityParametersBuilder b) updates]) =>
      (EntityParametersBuilder()..update(updates)).build();

  _$EntityParameters._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name,
      this.params})
      : super._();

  @override
  EntityParameters rebuild(void Function(EntityParametersBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  EntityParametersBuilder toBuilder() =>
      EntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is EntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name &&
        DeepCollectionEquality().equals(params, other.params);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            name?.hashCode),
        params?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('EntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name')
          ..add('params', '$params'))
        .toString();
  }
}

/// EntityParameters builder class
///
class EntityParametersBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<EntityParameters, EntityParametersBuilder> {
  _$EntityParameters _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  List<EntityParameter> _params = <EntityParameter>[];
  List<EntityParameter> get params => _$this._params;
  set params(List<EntityParameter> params) => _$this._params = params;

  EntityParametersBuilder();

  EntityParametersBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  EntityParametersBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      EntityParametersBuilder()..copyFromHeader(headerFrom);

  EntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _params = _$v.params;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(EntityParameters other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$EntityParameters;
  }

  @override
  void update(void Function(EntityParametersBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$EntityParameters build() {
    final _$result = _$v ??
        _$EntityParameters._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            params: params ?? <EntityParameter>[]);
    replace(_$result);
    return _$result;
  }
}

/// QueryEntityParameters immutable class
///
class _$QueryEntityParameters extends QueryEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final String visibility;
  @override
  final String scope;

  factory _$QueryEntityParameters(
          [void Function(QueryEntityParametersBuilder b) updates]) =>
      (QueryEntityParametersBuilder()..update(updates)).build();

  _$QueryEntityParameters._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name,
      this.visibility,
      this.scope})
      : super._();

  @override
  QueryEntityParameters rebuild(
          void Function(QueryEntityParametersBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  QueryEntityParametersBuilder toBuilder() =>
      QueryEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is QueryEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name &&
        visibility == other.visibility &&
        scope == other.scope;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                name?.hashCode),
            visibility?.hashCode),
        scope?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('QueryEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name')
          ..add('visibility', '$visibility')
          ..add('scope', '$scope'))
        .toString();
  }
}

/// QueryEntityParameters builder class
///
class QueryEntityParametersBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<QueryEntityParameters,
            QueryEntityParametersBuilder> {
  _$QueryEntityParameters _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  String _visibility = '';
  String get visibility => _$this._visibility;
  set visibility(String visibility) => _$this._visibility = visibility;

  String _scope = '';
  String get scope => _$this._scope;
  set scope(String scope) => _$this._scope = scope;

  QueryEntityParametersBuilder();

  QueryEntityParametersBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  QueryEntityParametersBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      QueryEntityParametersBuilder()..copyFromHeader(headerFrom);

  QueryEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _visibility = _$v.visibility;
      _scope = _$v.scope;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(QueryEntityParameters other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$QueryEntityParameters;
  }

  @override
  void update(void Function(QueryEntityParametersBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$QueryEntityParameters build() {
    final _$result = _$v ??
        _$QueryEntityParameters._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            visibility: visibility ?? '',
            scope: scope ?? '');
    replace(_$result);
    return _$result;
  }
}

/// SetEntityParameters immutable class
///
class _$SetEntityParameters extends SetEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final List<EntityParameter> params;

  factory _$SetEntityParameters(
          [void Function(SetEntityParametersBuilder b) updates]) =>
      (SetEntityParametersBuilder()..update(updates)).build();

  _$SetEntityParameters._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name,
      this.params})
      : super._();

  @override
  SetEntityParameters rebuild(
          void Function(SetEntityParametersBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SetEntityParametersBuilder toBuilder() =>
      SetEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name &&
        DeepCollectionEquality().equals(params, other.params);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            name?.hashCode),
        params?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name')
          ..add('params', '$params'))
        .toString();
  }
}

/// SetEntityParameters builder class
///
class SetEntityParametersBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<SetEntityParameters,
            SetEntityParametersBuilder> {
  _$SetEntityParameters _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  List<EntityParameter> _params = <EntityParameter>[];
  List<EntityParameter> get params => _$this._params;
  set params(List<EntityParameter> params) => _$this._params = params;

  SetEntityParametersBuilder();

  SetEntityParametersBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SetEntityParametersBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SetEntityParametersBuilder()..copyFromHeader(headerFrom);

  SetEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _params = _$v.params;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetEntityParameters other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SetEntityParameters;
  }

  @override
  void update(void Function(SetEntityParametersBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SetEntityParameters build() {
    final _$result = _$v ??
        _$SetEntityParameters._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            params: params ?? <EntityParameter>[]);
    replace(_$result);
    return _$result;
  }
}

/// SaveEntityParameters immutable class
///
class _$SaveEntityParameters extends SaveEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;

  factory _$SaveEntityParameters(
          [void Function(SaveEntityParametersBuilder b) updates]) =>
      (SaveEntityParametersBuilder()..update(updates)).build();

  _$SaveEntityParameters._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name})
      : super._();

  @override
  SaveEntityParameters rebuild(
          void Function(SaveEntityParametersBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SaveEntityParametersBuilder toBuilder() =>
      SaveEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SaveEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        name?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SaveEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name'))
        .toString();
  }
}

/// SaveEntityParameters builder class
///
class SaveEntityParametersBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<SaveEntityParameters,
            SaveEntityParametersBuilder> {
  _$SaveEntityParameters _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  SaveEntityParametersBuilder();

  SaveEntityParametersBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SaveEntityParametersBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SaveEntityParametersBuilder()..copyFromHeader(headerFrom);

  SaveEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SaveEntityParameters other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SaveEntityParameters;
  }

  @override
  void update(void Function(SaveEntityParametersBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SaveEntityParameters build() {
    final _$result = _$v ??
        _$SaveEntityParameters._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Create Session immutable class
///
class _$CreateSession extends CreateSession {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int timeout;

  factory _$CreateSession([void Function(CreateSessionBuilder b) updates]) =>
      (CreateSessionBuilder()..update(updates)).build();

  _$CreateSession._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timeout})
      : super._();

  @override
  CreateSession rebuild(void Function(CreateSessionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CreateSessionBuilder toBuilder() => CreateSessionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CreateSession &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        timeout == other.timeout;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        timeout?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CreateSession')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timeout', '$timeout'))
        .toString();
  }
}

/// Create Session builder class
///
class CreateSessionBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<CreateSession, CreateSessionBuilder> {
  _$CreateSession _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _timeout = 0;
  int get timeout => _$this._timeout;
  set timeout(int timeout) => _$this._timeout = timeout;

  CreateSessionBuilder();

  CreateSessionBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CreateSessionBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CreateSessionBuilder()..copyFromHeader(headerFrom);

  CreateSessionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timeout = _$v.timeout;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CreateSession other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$CreateSession;
  }

  @override
  void update(void Function(CreateSessionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$CreateSession build() {
    final _$result = _$v ??
        _$CreateSession._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timeout: timeout ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Close Session immutable class
///
class _$CloseSession extends CloseSession {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sessid;

  factory _$CloseSession([void Function(CloseSessionBuilder b) updates]) =>
      (CloseSessionBuilder()..update(updates)).build();

  _$CloseSession._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.sessid})
      : super._();

  @override
  CloseSession rebuild(void Function(CloseSessionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  CloseSessionBuilder toBuilder() => CloseSessionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is CloseSession &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sessid == other.sessid;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        sessid?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('CloseSession')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sessid', '$sessid'))
        .toString();
  }
}

/// Close Session builder class
///
class CloseSessionBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<CloseSession, CloseSessionBuilder> {
  _$CloseSession _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sessid = 0;
  int get sessid => _$this._sessid;
  set sessid(int sessid) => _$this._sessid = sessid;

  CloseSessionBuilder();

  CloseSessionBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  CloseSessionBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      CloseSessionBuilder()..copyFromHeader(headerFrom);

  CloseSessionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sessid = _$v.sessid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(CloseSession other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$CloseSession;
  }

  @override
  void update(void Function(CloseSessionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$CloseSession build() {
    final _$result = _$v ??
        _$CloseSession._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sessid: sessid ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Session Subscription immutable class
///
class _$SessionSubscription extends SessionSubscription {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sessid;
  @override
  final String messages;

  factory _$SessionSubscription(
          [void Function(SessionSubscriptionBuilder b) updates]) =>
      (SessionSubscriptionBuilder()..update(updates)).build();

  _$SessionSubscription._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.sessid,
      this.messages})
      : super._();

  @override
  SessionSubscription rebuild(
          void Function(SessionSubscriptionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SessionSubscriptionBuilder toBuilder() =>
      SessionSubscriptionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SessionSubscription &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sessid == other.sessid &&
        messages == other.messages;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            sessid?.hashCode),
        messages?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SessionSubscription')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sessid', '$sessid')
          ..add('messages', '$messages'))
        .toString();
  }
}

/// Session Subscription builder class
///
class SessionSubscriptionBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<SessionSubscription,
            SessionSubscriptionBuilder> {
  _$SessionSubscription _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sessid = 0;
  int get sessid => _$this._sessid;
  set sessid(int sessid) => _$this._sessid = sessid;

  String _messages = '';
  String get messages => _$this._messages;
  set messages(String messages) => _$this._messages = messages;

  SessionSubscriptionBuilder();

  SessionSubscriptionBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SessionSubscriptionBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SessionSubscriptionBuilder()..copyFromHeader(headerFrom);

  SessionSubscriptionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sessid = _$v.sessid;
      _messages = _$v.messages;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SessionSubscription other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SessionSubscription;
  }

  @override
  void update(void Function(SessionSubscriptionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SessionSubscription build() {
    final _$result = _$v ??
        _$SessionSubscription._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sessid: sessid ?? 0,
            messages: messages ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Session Keep-Alive immutable class
///
class _$SessionKeepAlive extends SessionKeepAlive {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sessid;

  factory _$SessionKeepAlive(
          [void Function(SessionKeepAliveBuilder b) updates]) =>
      (SessionKeepAliveBuilder()..update(updates)).build();

  _$SessionKeepAlive._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.sessid})
      : super._();

  @override
  SessionKeepAlive rebuild(void Function(SessionKeepAliveBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SessionKeepAliveBuilder toBuilder() =>
      SessionKeepAliveBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SessionKeepAlive &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sessid == other.sessid;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        sessid?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SessionKeepAlive')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sessid', '$sessid'))
        .toString();
  }
}

/// Session Keep-Alive builder class
///
class SessionKeepAliveBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<SessionKeepAlive, SessionKeepAliveBuilder> {
  _$SessionKeepAlive _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sessid = 0;
  int get sessid => _$this._sessid;
  set sessid(int sessid) => _$this._sessid = sessid;

  SessionKeepAliveBuilder();

  SessionKeepAliveBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SessionKeepAliveBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SessionKeepAliveBuilder()..copyFromHeader(headerFrom);

  SessionKeepAliveBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sessid = _$v.sessid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SessionKeepAlive other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SessionKeepAlive;
  }

  @override
  void update(void Function(SessionKeepAliveBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SessionKeepAlive build() {
    final _$result = _$v ??
        _$SessionKeepAlive._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sessid: sessid ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Session Status immutable class
///
class _$SessionStatus extends SessionStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int sessid;
  @override
  final SessionStatusEnumStatus status;

  factory _$SessionStatus([void Function(SessionStatusBuilder b) updates]) =>
      (SessionStatusBuilder()..update(updates)).build();

  _$SessionStatus._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.sessid,
      this.status})
      : super._();

  @override
  SessionStatus rebuild(void Function(SessionStatusBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SessionStatusBuilder toBuilder() => SessionStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SessionStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sessid == other.sessid &&
        status == other.status;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            sessid?.hashCode),
        status?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SessionStatus')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sessid', '$sessid')
          ..add('status', '$status (Enumerated)'))
        .toString();
  }
}

/// Session Status builder class
///
class SessionStatusBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SessionStatus, SessionStatusBuilder> {
  _$SessionStatus _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _sessid = 0;
  int get sessid => _$this._sessid;
  set sessid(int sessid) => _$this._sessid = sessid;

  SessionStatusEnumStatus _status = SessionStatusEnumStatus(0);
  SessionStatusEnumStatus get status => _$this._status;
  set status(SessionStatusEnumStatus status) => _$this._status = status;

  SessionStatusBuilder();

  SessionStatusBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SessionStatusBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SessionStatusBuilder()..copyFromHeader(headerFrom);

  SessionStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sessid = _$v.sessid;
      _status = _$v.status;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SessionStatus other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SessionStatus;
  }

  @override
  void update(void Function(SessionStatusBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SessionStatus build() {
    final _$result = _$v ??
        _$SessionStatus._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sessid: sessid ?? 0,
            status: status ?? SessionStatusEnumStatus(0));
    replace(_$result);
    return _$result;
  }
}

/// Push Entity Parameters immutable class
///
class _$PushEntityParameters extends PushEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;

  factory _$PushEntityParameters(
          [void Function(PushEntityParametersBuilder b) updates]) =>
      (PushEntityParametersBuilder()..update(updates)).build();

  _$PushEntityParameters._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name})
      : super._();

  @override
  PushEntityParameters rebuild(
          void Function(PushEntityParametersBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PushEntityParametersBuilder toBuilder() =>
      PushEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PushEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        name?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PushEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name'))
        .toString();
  }
}

/// Push Entity Parameters builder class
///
class PushEntityParametersBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<PushEntityParameters,
            PushEntityParametersBuilder> {
  _$PushEntityParameters _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  PushEntityParametersBuilder();

  PushEntityParametersBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PushEntityParametersBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PushEntityParametersBuilder()..copyFromHeader(headerFrom);

  PushEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PushEntityParameters other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PushEntityParameters;
  }

  @override
  void update(void Function(PushEntityParametersBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PushEntityParameters build() {
    final _$result = _$v ??
        _$PushEntityParameters._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '');
    replace(_$result);
    return _$result;
  }
}

/// Pop Entity Parameters immutable class
///
class _$PopEntityParameters extends PopEntityParameters {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;

  factory _$PopEntityParameters(
          [void Function(PopEntityParametersBuilder b) updates]) =>
      (PopEntityParametersBuilder()..update(updates)).build();

  _$PopEntityParameters._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name})
      : super._();

  @override
  PopEntityParameters rebuild(
          void Function(PopEntityParametersBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  PopEntityParametersBuilder toBuilder() =>
      PopEntityParametersBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is PopEntityParameters &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        name?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('PopEntityParameters')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name'))
        .toString();
  }
}

/// Pop Entity Parameters builder class
///
class PopEntityParametersBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<PopEntityParameters,
            PopEntityParametersBuilder> {
  _$PopEntityParameters _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  PopEntityParametersBuilder();

  PopEntityParametersBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  PopEntityParametersBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      PopEntityParametersBuilder()..copyFromHeader(headerFrom);

  PopEntityParametersBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(PopEntityParameters other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$PopEntityParameters;
  }

  @override
  void update(void Function(PopEntityParametersBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$PopEntityParameters build() {
    final _$result = _$v ??
        _$PopEntityParameters._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '');
    replace(_$result);
    return _$result;
  }
}

/// I/O Event immutable class
///
class _$IoEvent extends IoEvent {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final IoEventEnumType type;
  @override
  final String error;

  factory _$IoEvent([void Function(IoEventBuilder b) updates]) =>
      (IoEventBuilder()..update(updates)).build();

  _$IoEvent._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type,
      this.error})
      : super._();

  @override
  IoEvent rebuild(void Function(IoEventBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  IoEventBuilder toBuilder() => IoEventBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is IoEvent &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type &&
        error == other.error;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            type?.hashCode),
        error?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('IoEvent')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Enumerated)')
          ..add('error', '$error'))
        .toString();
  }
}

/// I/O Event builder class
///
class IoEventBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<IoEvent, IoEventBuilder> {
  _$IoEvent _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  IoEventEnumType _type = IoEventEnumType(0);
  IoEventEnumType get type => _$this._type;
  set type(IoEventEnumType type) => _$this._type = type;

  String _error = '';
  String get error => _$this._error;
  set error(String error) => _$this._error = error;

  IoEventBuilder();

  IoEventBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  IoEventBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      IoEventBuilder()..copyFromHeader(headerFrom);

  IoEventBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _error = _$v.error;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(IoEvent other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$IoEvent;
  }

  @override
  void update(void Function(IoEventBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$IoEvent build() {
    final _$result = _$v ??
        _$IoEvent._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? IoEventEnumType(0),
            error: error ?? '');
    replace(_$result);
    return _$result;
  }
}

/// UamTxFrame immutable class
///
class _$UamTxFrame extends UamTxFrame {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final String sysDst;
  @override
  final UamTxFrameBitfieldFlags flags;
  @override
  final List<int> data;

  factory _$UamTxFrame([void Function(UamTxFrameBuilder b) updates]) =>
      (UamTxFrameBuilder()..update(updates)).build();

  _$UamTxFrame._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.seq,
      this.sysDst,
      this.flags,
      this.data})
      : super._();

  @override
  UamTxFrame rebuild(void Function(UamTxFrameBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  UamTxFrameBuilder toBuilder() => UamTxFrameBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UamTxFrame &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == other.seq &&
        sysDst == other.sysDst &&
        flags == other.flags &&
        ListEquality().equals(data, other.data);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    seq?.hashCode),
                sysDst?.hashCode),
            flags?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UamTxFrame')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('seq', '$seq')
          ..add('sysDst', '$sysDst')
          ..add('flags', '$flags (Bitfield)')
          ..add('data', '$data'))
        .toString();
  }
}

/// UamTxFrame builder class
///
class UamTxFrameBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<UamTxFrame, UamTxFrameBuilder> {
  _$UamTxFrame _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq = 0;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  String _sysDst = '';
  String get sysDst => _$this._sysDst;
  set sysDst(String sysDst) => _$this._sysDst = sysDst;

  UamTxFrameBitfieldFlags _flags = UamTxFrameBitfieldFlags(0);
  UamTxFrameBitfieldFlags get flags => _$this._flags;
  set flags(UamTxFrameBitfieldFlags flags) => _$this._flags = flags;

  List<int> _data = <int>[];
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  UamTxFrameBuilder();

  UamTxFrameBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  UamTxFrameBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      UamTxFrameBuilder()..copyFromHeader(headerFrom);

  UamTxFrameBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _sysDst = _$v.sysDst;
      _flags = _$v.flags;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UamTxFrame other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$UamTxFrame;
  }

  @override
  void update(void Function(UamTxFrameBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$UamTxFrame build() {
    final _$result = _$v ??
        _$UamTxFrame._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            seq: seq ?? 0,
            sysDst: sysDst ?? '',
            flags: flags ?? UamTxFrameBitfieldFlags(0),
            data: data ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// UamRxFrame immutable class
///
class _$UamRxFrame extends UamRxFrame {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String sysSrc;
  @override
  final String sysDst;
  @override
  final UamRxFrameBitfieldFlags flags;
  @override
  final List<int> data;

  factory _$UamRxFrame([void Function(UamRxFrameBuilder b) updates]) =>
      (UamRxFrameBuilder()..update(updates)).build();

  _$UamRxFrame._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.sysSrc,
      this.sysDst,
      this.flags,
      this.data})
      : super._();

  @override
  UamRxFrame rebuild(void Function(UamRxFrameBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  UamRxFrameBuilder toBuilder() => UamRxFrameBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UamRxFrame &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        sysSrc == other.sysSrc &&
        sysDst == other.sysDst &&
        flags == other.flags &&
        ListEquality().equals(data, other.data);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    sysSrc?.hashCode),
                sysDst?.hashCode),
            flags?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UamRxFrame')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('sysSrc', '$sysSrc')
          ..add('sysDst', '$sysDst')
          ..add('flags', '$flags (Bitfield)')
          ..add('data', '$data'))
        .toString();
  }
}

/// UamRxFrame builder class
///
class UamRxFrameBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<UamRxFrame, UamRxFrameBuilder> {
  _$UamRxFrame _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _sysSrc = '';
  String get sysSrc => _$this._sysSrc;
  set sysSrc(String sysSrc) => _$this._sysSrc = sysSrc;

  String _sysDst = '';
  String get sysDst => _$this._sysDst;
  set sysDst(String sysDst) => _$this._sysDst = sysDst;

  UamRxFrameBitfieldFlags _flags = UamRxFrameBitfieldFlags(0);
  UamRxFrameBitfieldFlags get flags => _$this._flags;
  set flags(UamRxFrameBitfieldFlags flags) => _$this._flags = flags;

  List<int> _data = <int>[];
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  UamRxFrameBuilder();

  UamRxFrameBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  UamRxFrameBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      UamRxFrameBuilder()..copyFromHeader(headerFrom);

  UamRxFrameBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _sysSrc = _$v.sysSrc;
      _sysDst = _$v.sysDst;
      _flags = _$v.flags;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UamRxFrame other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$UamRxFrame;
  }

  @override
  void update(void Function(UamRxFrameBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$UamRxFrame build() {
    final _$result = _$v ??
        _$UamRxFrame._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            sysSrc: sysSrc ?? '',
            sysDst: sysDst ?? '',
            flags: flags ?? UamRxFrameBitfieldFlags(0),
            data: data ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// UamTxStatus immutable class
///
class _$UamTxStatus extends UamTxStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final UamTxStatusEnumValue value;
  @override
  final String error;

  factory _$UamTxStatus([void Function(UamTxStatusBuilder b) updates]) =>
      (UamTxStatusBuilder()..update(updates)).build();

  _$UamTxStatus._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.seq,
      this.value,
      this.error})
      : super._();

  @override
  UamTxStatus rebuild(void Function(UamTxStatusBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  UamTxStatusBuilder toBuilder() => UamTxStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UamTxStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == other.seq &&
        value == other.value &&
        error == other.error;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                seq?.hashCode),
            value?.hashCode),
        error?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UamTxStatus')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('seq', '$seq')
          ..add('value', '$value (Enumerated)')
          ..add('error', '$error'))
        .toString();
  }
}

/// UamTxStatus builder class
///
class UamTxStatusBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<UamTxStatus, UamTxStatusBuilder> {
  _$UamTxStatus _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq = 0;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  UamTxStatusEnumValue _value = UamTxStatusEnumValue(0);
  UamTxStatusEnumValue get value => _$this._value;
  set value(UamTxStatusEnumValue value) => _$this._value = value;

  String _error = '';
  String get error => _$this._error;
  set error(String error) => _$this._error = error;

  UamTxStatusBuilder();

  UamTxStatusBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  UamTxStatusBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      UamTxStatusBuilder()..copyFromHeader(headerFrom);

  UamTxStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _value = _$v.value;
      _error = _$v.error;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UamTxStatus other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$UamTxStatus;
  }

  @override
  void update(void Function(UamTxStatusBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$UamTxStatus build() {
    final _$result = _$v ??
        _$UamTxStatus._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            seq: seq ?? 0,
            value: value ?? UamTxStatusEnumValue(0),
            error: error ?? '');
    replace(_$result);
    return _$result;
  }
}

/// UamRxRange immutable class
///
class _$UamRxRange extends UamRxRange {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final String sys;
  @override
  final double value;

  factory _$UamRxRange([void Function(UamRxRangeBuilder b) updates]) =>
      (UamRxRangeBuilder()..update(updates)).build();

  _$UamRxRange._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.seq,
      this.sys,
      this.value})
      : super._();

  @override
  UamRxRange rebuild(void Function(UamRxRangeBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  UamRxRangeBuilder toBuilder() => UamRxRangeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UamRxRange &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == other.seq &&
        sys == other.sys &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                seq?.hashCode),
            sys?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UamRxRange')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('seq', '$seq')
          ..add('sys', '$sys')
          ..add('value', '$value'))
        .toString();
  }
}

/// UamRxRange builder class
///
class UamRxRangeBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<UamRxRange, UamRxRangeBuilder> {
  _$UamRxRange _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq = 0;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  String _sys = '';
  String get sys => _$this._sys;
  set sys(String sys) => _$this._sys = sys;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  UamRxRangeBuilder();

  UamRxRangeBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  UamRxRangeBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      UamRxRangeBuilder()..copyFromHeader(headerFrom);

  UamRxRangeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _sys = _$v.sys;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UamRxRange other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$UamRxRange;
  }

  @override
  void update(void Function(UamRxRangeBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$UamRxRange build() {
    final _$result = _$v ??
        _$UamRxRange._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            seq: seq ?? 0,
            sys: sys ?? '',
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// UamTxRange immutable class
///
class _$UamTxRange extends UamTxRange {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int seq;
  @override
  final String sysDst;
  @override
  final double timeout;

  factory _$UamTxRange([void Function(UamTxRangeBuilder b) updates]) =>
      (UamTxRangeBuilder()..update(updates)).build();

  _$UamTxRange._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.seq,
      this.sysDst,
      this.timeout})
      : super._();

  @override
  UamTxRange rebuild(void Function(UamTxRangeBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  UamTxRangeBuilder toBuilder() => UamTxRangeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UamTxRange &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        seq == other.seq &&
        sysDst == other.sysDst &&
        (timeout == other.timeout || timeout - other.timeout <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                seq?.hashCode),
            sysDst?.hashCode),
        timeout?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UamTxRange')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('seq', '$seq')
          ..add('sysDst', '$sysDst')
          ..add('timeout', '$timeout (s)'))
        .toString();
  }
}

/// UamTxRange builder class
///
class UamTxRangeBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<UamTxRange, UamTxRangeBuilder> {
  _$UamTxRange _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _seq = 0;
  int get seq => _$this._seq;
  set seq(int seq) => _$this._seq = seq;

  String _sysDst = '';
  String get sysDst => _$this._sysDst;
  set sysDst(String sysDst) => _$this._sysDst = sysDst;

  double _timeout = 0;
  double get timeout => _$this._timeout;
  set timeout(double timeout) => _$this._timeout = timeout;

  UamTxRangeBuilder();

  UamTxRangeBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  UamTxRangeBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      UamTxRangeBuilder()..copyFromHeader(headerFrom);

  UamTxRangeBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _seq = _$v.seq;
      _sysDst = _$v.sysDst;
      _timeout = _$v.timeout;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UamTxRange other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$UamTxRange;
  }

  @override
  void update(void Function(UamTxRangeBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$UamTxRange build() {
    final _$result = _$v ??
        _$UamTxRange._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            seq: seq ?? 0,
            sysDst: sysDst ?? '',
            timeout: timeout ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Formation Control Parameters immutable class
///
class _$FormCtrlParam extends FormCtrlParam {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final FormCtrlParamEnumAction action;
  @override
  final double lonGain;
  @override
  final double latGain;
  @override
  final int bondThick;
  @override
  final double leadGain;
  @override
  final double deconflGain;

  factory _$FormCtrlParam([void Function(FormCtrlParamBuilder b) updates]) =>
      (FormCtrlParamBuilder()..update(updates)).build();

  _$FormCtrlParam._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.action,
      this.lonGain,
      this.latGain,
      this.bondThick,
      this.leadGain,
      this.deconflGain})
      : super._();

  @override
  FormCtrlParam rebuild(void Function(FormCtrlParamBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FormCtrlParamBuilder toBuilder() => FormCtrlParamBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormCtrlParam &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        action == other.action &&
        (lonGain == other.lonGain || lonGain - other.lonGain <= 1E-7) &&
        (latGain == other.latGain || latGain - other.latGain <= 1E-7) &&
        bondThick == other.bondThick &&
        (leadGain == other.leadGain || leadGain - other.leadGain <= 1E-7) &&
        (deconflGain == other.deconflGain ||
            deconflGain - other.deconflGain <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, timestamp?.hashCode),
                                            src?.hashCode),
                                        srcEnt?.hashCode),
                                    dst?.hashCode),
                                dstEnt?.hashCode),
                            action?.hashCode),
                        lonGain?.hashCode),
                    latGain?.hashCode),
                bondThick?.hashCode),
            leadGain?.hashCode),
        deconflGain?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormCtrlParam')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('action', '$action (Enumerated)')
          ..add('lonGain', '$lonGain')
          ..add('latGain', '$latGain')
          ..add('bondThick', '$bondThick')
          ..add('leadGain', '$leadGain')
          ..add('deconflGain', '$deconflGain'))
        .toString();
  }
}

/// Formation Control Parameters builder class
///
class FormCtrlParamBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<FormCtrlParam, FormCtrlParamBuilder> {
  _$FormCtrlParam _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  FormCtrlParamEnumAction _action = FormCtrlParamEnumAction(0);
  FormCtrlParamEnumAction get action => _$this._action;
  set action(FormCtrlParamEnumAction action) => _$this._action = action;

  double _lonGain = 0;
  double get lonGain => _$this._lonGain;
  set lonGain(double lonGain) => _$this._lonGain = lonGain;

  double _latGain = 0;
  double get latGain => _$this._latGain;
  set latGain(double latGain) => _$this._latGain = latGain;

  int _bondThick = 0;
  int get bondThick => _$this._bondThick;
  set bondThick(int bondThick) => _$this._bondThick = bondThick;

  double _leadGain = 0;
  double get leadGain => _$this._leadGain;
  set leadGain(double leadGain) => _$this._leadGain = leadGain;

  double _deconflGain = 0;
  double get deconflGain => _$this._deconflGain;
  set deconflGain(double deconflGain) => _$this._deconflGain = deconflGain;

  FormCtrlParamBuilder();

  FormCtrlParamBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FormCtrlParamBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FormCtrlParamBuilder()..copyFromHeader(headerFrom);

  FormCtrlParamBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _action = _$v.action;
      _lonGain = _$v.lonGain;
      _latGain = _$v.latGain;
      _bondThick = _$v.bondThick;
      _leadGain = _$v.leadGain;
      _deconflGain = _$v.deconflGain;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormCtrlParam other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FormCtrlParam;
  }

  @override
  void update(void Function(FormCtrlParamBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FormCtrlParam build() {
    final _$result = _$v ??
        _$FormCtrlParam._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            action: action ?? FormCtrlParamEnumAction(0),
            lonGain: lonGain ?? 0,
            latGain: latGain ?? 0,
            bondThick: bondThick ?? 0,
            leadGain: leadGain ?? 0,
            deconflGain: deconflGain ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Formation Evaluation Data immutable class
///
class _$FormationEval extends FormationEval {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double errMean;
  @override
  final double distMinAbs;
  @override
  final double distMinMean;

  factory _$FormationEval([void Function(FormationEvalBuilder b) updates]) =>
      (FormationEvalBuilder()..update(updates)).build();

  _$FormationEval._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.errMean,
      this.distMinAbs,
      this.distMinMean})
      : super._();

  @override
  FormationEval rebuild(void Function(FormationEvalBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationEvalBuilder toBuilder() => FormationEvalBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationEval &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (errMean == other.errMean || errMean - other.errMean <= 1E-7) &&
        (distMinAbs == other.distMinAbs ||
            distMinAbs - other.distMinAbs <= 1E-7) &&
        (distMinMean == other.distMinMean ||
            distMinMean - other.distMinMean <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                errMean?.hashCode),
            distMinAbs?.hashCode),
        distMinMean?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationEval')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('errMean', '$errMean')
          ..add('distMinAbs', '$distMinAbs')
          ..add('distMinMean', '$distMinMean'))
        .toString();
  }
}

/// Formation Evaluation Data builder class
///
class FormationEvalBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<FormationEval, FormationEvalBuilder> {
  _$FormationEval _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _errMean = 0;
  double get errMean => _$this._errMean;
  set errMean(double errMean) => _$this._errMean = errMean;

  double _distMinAbs = 0;
  double get distMinAbs => _$this._distMinAbs;
  set distMinAbs(double distMinAbs) => _$this._distMinAbs = distMinAbs;

  double _distMinMean = 0;
  double get distMinMean => _$this._distMinMean;
  set distMinMean(double distMinMean) => _$this._distMinMean = distMinMean;

  FormationEvalBuilder();

  FormationEvalBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FormationEvalBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FormationEvalBuilder()..copyFromHeader(headerFrom);

  FormationEvalBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _errMean = _$v.errMean;
      _distMinAbs = _$v.distMinAbs;
      _distMinMean = _$v.distMinMean;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationEval other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FormationEval;
  }

  @override
  void update(void Function(FormationEvalBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationEval build() {
    final _$result = _$v ??
        _$FormationEval._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            errMean: errMean ?? 0,
            distMinAbs: distMinAbs ?? 0,
            distMinMean: distMinMean ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Formation Control Parameters immutable class
///
class _$FormationControlParams extends FormationControlParams {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final FormationControlParamsEnumAction action;
  @override
  final double lonGain;
  @override
  final double latGain;
  @override
  final double bondThick;
  @override
  final double leadGain;
  @override
  final double deconflGain;
  @override
  final double accelSwitchGain;
  @override
  final double safeDist;
  @override
  final double deconflictOffset;
  @override
  final double accelSafeMargin;
  @override
  final double accelLimX;

  factory _$FormationControlParams(
          [void Function(FormationControlParamsBuilder b) updates]) =>
      (FormationControlParamsBuilder()..update(updates)).build();

  _$FormationControlParams._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.action,
      this.lonGain,
      this.latGain,
      this.bondThick,
      this.leadGain,
      this.deconflGain,
      this.accelSwitchGain,
      this.safeDist,
      this.deconflictOffset,
      this.accelSafeMargin,
      this.accelLimX})
      : super._();

  @override
  FormationControlParams rebuild(
          void Function(FormationControlParamsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationControlParamsBuilder toBuilder() =>
      FormationControlParamsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationControlParams &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        action == other.action &&
        (lonGain == other.lonGain || lonGain - other.lonGain <= 1E-7) &&
        (latGain == other.latGain || latGain - other.latGain <= 1E-7) &&
        (bondThick == other.bondThick || bondThick - other.bondThick <= 1E-7) &&
        (leadGain == other.leadGain || leadGain - other.leadGain <= 1E-7) &&
        (deconflGain == other.deconflGain ||
            deconflGain - other.deconflGain <= 1E-7) &&
        (accelSwitchGain == other.accelSwitchGain ||
            accelSwitchGain - other.accelSwitchGain <= 1E-7) &&
        (safeDist == other.safeDist || safeDist - other.safeDist <= 1E-7) &&
        (deconflictOffset == other.deconflictOffset ||
            deconflictOffset - other.deconflictOffset <= 1E-7) &&
        (accelSafeMargin == other.accelSafeMargin ||
            accelSafeMargin - other.accelSafeMargin <= 1E-7) &&
        (accelLimX == other.accelLimX || accelLimX - other.accelLimX <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    0,
                                                                    timestamp
                                                                        ?.hashCode),
                                                                src?.hashCode),
                                                            srcEnt?.hashCode),
                                                        dst?.hashCode),
                                                    dstEnt?.hashCode),
                                                action?.hashCode),
                                            lonGain?.hashCode),
                                        latGain?.hashCode),
                                    bondThick?.hashCode),
                                leadGain?.hashCode),
                            deconflGain?.hashCode),
                        accelSwitchGain?.hashCode),
                    safeDist?.hashCode),
                deconflictOffset?.hashCode),
            accelSafeMargin?.hashCode),
        accelLimX?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationControlParams')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('action', '$action (Enumerated)')
          ..add('lonGain', '$lonGain')
          ..add('latGain', '$latGain')
          ..add('bondThick', '$bondThick')
          ..add('leadGain', '$leadGain')
          ..add('deconflGain', '$deconflGain')
          ..add('accelSwitchGain', '$accelSwitchGain')
          ..add('safeDist', '$safeDist')
          ..add('deconflictOffset', '$deconflictOffset')
          ..add('accelSafeMargin', '$accelSafeMargin')
          ..add('accelLimX', '$accelLimX'))
        .toString();
  }
}

/// Formation Control Parameters builder class
///
class FormationControlParamsBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<FormationControlParams,
            FormationControlParamsBuilder> {
  _$FormationControlParams _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  FormationControlParamsEnumAction _action =
      FormationControlParamsEnumAction(0);
  FormationControlParamsEnumAction get action => _$this._action;
  set action(FormationControlParamsEnumAction action) =>
      _$this._action = action;

  double _lonGain = 0;
  double get lonGain => _$this._lonGain;
  set lonGain(double lonGain) => _$this._lonGain = lonGain;

  double _latGain = 0;
  double get latGain => _$this._latGain;
  set latGain(double latGain) => _$this._latGain = latGain;

  double _bondThick = 0;
  double get bondThick => _$this._bondThick;
  set bondThick(double bondThick) => _$this._bondThick = bondThick;

  double _leadGain = 0;
  double get leadGain => _$this._leadGain;
  set leadGain(double leadGain) => _$this._leadGain = leadGain;

  double _deconflGain = 0;
  double get deconflGain => _$this._deconflGain;
  set deconflGain(double deconflGain) => _$this._deconflGain = deconflGain;

  double _accelSwitchGain = 0;
  double get accelSwitchGain => _$this._accelSwitchGain;
  set accelSwitchGain(double accelSwitchGain) =>
      _$this._accelSwitchGain = accelSwitchGain;

  double _safeDist = 0;
  double get safeDist => _$this._safeDist;
  set safeDist(double safeDist) => _$this._safeDist = safeDist;

  double _deconflictOffset = 0;
  double get deconflictOffset => _$this._deconflictOffset;
  set deconflictOffset(double deconflictOffset) =>
      _$this._deconflictOffset = deconflictOffset;

  double _accelSafeMargin = 0;
  double get accelSafeMargin => _$this._accelSafeMargin;
  set accelSafeMargin(double accelSafeMargin) =>
      _$this._accelSafeMargin = accelSafeMargin;

  double _accelLimX = 0;
  double get accelLimX => _$this._accelLimX;
  set accelLimX(double accelLimX) => _$this._accelLimX = accelLimX;

  FormationControlParamsBuilder();

  FormationControlParamsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FormationControlParamsBuilder newInstance(
          [ImcBuilderHeaderPart headerFrom]) =>
      FormationControlParamsBuilder()..copyFromHeader(headerFrom);

  FormationControlParamsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _action = _$v.action;
      _lonGain = _$v.lonGain;
      _latGain = _$v.latGain;
      _bondThick = _$v.bondThick;
      _leadGain = _$v.leadGain;
      _deconflGain = _$v.deconflGain;
      _accelSwitchGain = _$v.accelSwitchGain;
      _safeDist = _$v.safeDist;
      _deconflictOffset = _$v.deconflictOffset;
      _accelSafeMargin = _$v.accelSafeMargin;
      _accelLimX = _$v.accelLimX;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationControlParams other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FormationControlParams;
  }

  @override
  void update(void Function(FormationControlParamsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationControlParams build() {
    final _$result = _$v ??
        _$FormationControlParams._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            action: action ?? FormationControlParamsEnumAction(0),
            lonGain: lonGain ?? 0,
            latGain: latGain ?? 0,
            bondThick: bondThick ?? 0,
            leadGain: leadGain ?? 0,
            deconflGain: deconflGain ?? 0,
            accelSwitchGain: accelSwitchGain ?? 0,
            safeDist: safeDist ?? 0,
            deconflictOffset: deconflictOffset ?? 0,
            accelSafeMargin: accelSafeMargin ?? 0,
            accelLimX: accelLimX ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Formation Evaluation Data immutable class
///
class _$FormationEvaluation extends FormationEvaluation {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final FormationEvaluationEnumType type;
  @override
  final FormationEvaluationEnumOp op;
  @override
  final double errMean;
  @override
  final double distMinAbs;
  @override
  final double distMinMean;
  @override
  final double rollRateMean;
  @override
  final double time;
  @override
  final FormationControlParams controlParams;

  factory _$FormationEvaluation(
          [void Function(FormationEvaluationBuilder b) updates]) =>
      (FormationEvaluationBuilder()..update(updates)).build();

  _$FormationEvaluation._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type,
      this.op,
      this.errMean,
      this.distMinAbs,
      this.distMinMean,
      this.rollRateMean,
      this.time,
      this.controlParams})
      : super._();

  @override
  FormationEvaluation rebuild(
          void Function(FormationEvaluationBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  FormationEvaluationBuilder toBuilder() =>
      FormationEvaluationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is FormationEvaluation &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type &&
        op == other.op &&
        (errMean == other.errMean || errMean - other.errMean <= 1E-7) &&
        (distMinAbs == other.distMinAbs ||
            distMinAbs - other.distMinAbs <= 1E-7) &&
        (distMinMean == other.distMinMean ||
            distMinMean - other.distMinMean <= 1E-7) &&
        (rollRateMean == other.rollRateMean ||
            rollRateMean - other.rollRateMean <= 1E-7) &&
        (time == other.time || time - other.time <= 1E-7) &&
        controlParams == other.controlParams;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, timestamp?.hashCode),
                                                    src?.hashCode),
                                                srcEnt?.hashCode),
                                            dst?.hashCode),
                                        dstEnt?.hashCode),
                                    type?.hashCode),
                                op?.hashCode),
                            errMean?.hashCode),
                        distMinAbs?.hashCode),
                    distMinMean?.hashCode),
                rollRateMean?.hashCode),
            time?.hashCode),
        controlParams?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('FormationEvaluation')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Enumerated)')
          ..add('op', '$op (Enumerated)')
          ..add('errMean', '$errMean')
          ..add('distMinAbs', '$distMinAbs')
          ..add('distMinMean', '$distMinMean')
          ..add('rollRateMean', '$rollRateMean')
          ..add('time', '$time')
          ..add('controlParams', '$controlParams'))
        .toString();
  }
}

/// Formation Evaluation Data builder class
///
class FormationEvaluationBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<FormationEvaluation,
            FormationEvaluationBuilder> {
  _$FormationEvaluation _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  FormationEvaluationEnumType _type = FormationEvaluationEnumType(0);
  FormationEvaluationEnumType get type => _$this._type;
  set type(FormationEvaluationEnumType type) => _$this._type = type;

  FormationEvaluationEnumOp _op = FormationEvaluationEnumOp(0);
  FormationEvaluationEnumOp get op => _$this._op;
  set op(FormationEvaluationEnumOp op) => _$this._op = op;

  double _errMean = 0;
  double get errMean => _$this._errMean;
  set errMean(double errMean) => _$this._errMean = errMean;

  double _distMinAbs = 0;
  double get distMinAbs => _$this._distMinAbs;
  set distMinAbs(double distMinAbs) => _$this._distMinAbs = distMinAbs;

  double _distMinMean = 0;
  double get distMinMean => _$this._distMinMean;
  set distMinMean(double distMinMean) => _$this._distMinMean = distMinMean;

  double _rollRateMean = 0;
  double get rollRateMean => _$this._rollRateMean;
  set rollRateMean(double rollRateMean) => _$this._rollRateMean = rollRateMean;

  double _time = 0;
  double get time => _$this._time;
  set time(double time) => _$this._time = time;

  FormationControlParams _controlParams;
  FormationControlParams get controlParams => _$this._controlParams;
  set controlParams(FormationControlParams controlParams) =>
      _$this._controlParams = controlParams;

  FormationEvaluationBuilder();

  FormationEvaluationBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  FormationEvaluationBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      FormationEvaluationBuilder()..copyFromHeader(headerFrom);

  FormationEvaluationBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _op = _$v.op;
      _errMean = _$v.errMean;
      _distMinAbs = _$v.distMinAbs;
      _distMinMean = _$v.distMinMean;
      _rollRateMean = _$v.rollRateMean;
      _time = _$v.time;
      _controlParams = _$v.controlParams;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(FormationEvaluation other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$FormationEvaluation;
  }

  @override
  void update(void Function(FormationEvaluationBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$FormationEvaluation build() {
    final _$result = _$v ??
        _$FormationEvaluation._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? FormationEvaluationEnumType(0),
            op: op ?? FormationEvaluationEnumOp(0),
            errMean: errMean ?? 0,
            distMinAbs: distMinAbs ?? 0,
            distMinMean: distMinMean ?? 0,
            rollRateMean: rollRateMean ?? 0,
            time: time ?? 0,
            controlParams: controlParams);
    replace(_$result);
    return _$result;
  }
}

/// SOI Waypoint immutable class
///
class _$SoiWaypoint extends SoiWaypoint {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double lat;
  @override
  final double lon;
  @override
  final int eta;
  @override
  final int duration;

  factory _$SoiWaypoint([void Function(SoiWaypointBuilder b) updates]) =>
      (SoiWaypointBuilder()..update(updates)).build();

  _$SoiWaypoint._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.lat,
      this.lon,
      this.eta,
      this.duration})
      : super._();

  @override
  SoiWaypoint rebuild(void Function(SoiWaypointBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SoiWaypointBuilder toBuilder() => SoiWaypointBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoiWaypoint &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        eta == other.eta &&
        duration == other.duration;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    lat?.hashCode),
                lon?.hashCode),
            eta?.hashCode),
        duration?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoiWaypoint')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('lat', '$lat (°)')
          ..add('lon', '$lon (°)')
          ..add('eta', '$eta')
          ..add('duration', '$duration (s)'))
        .toString();
  }
}

/// SOI Waypoint builder class
///
class SoiWaypointBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SoiWaypoint, SoiWaypointBuilder> {
  _$SoiWaypoint _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  int _eta = 0;
  int get eta => _$this._eta;
  set eta(int eta) => _$this._eta = eta;

  int _duration = 0;
  int get duration => _$this._duration;
  set duration(int duration) => _$this._duration = duration;

  SoiWaypointBuilder();

  SoiWaypointBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SoiWaypointBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SoiWaypointBuilder()..copyFromHeader(headerFrom);

  SoiWaypointBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _eta = _$v.eta;
      _duration = _$v.duration;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoiWaypoint other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SoiWaypoint;
  }

  @override
  void update(void Function(SoiWaypointBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SoiWaypoint build() {
    final _$result = _$v ??
        _$SoiWaypoint._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            lat: lat ?? 0,
            lon: lon ?? 0,
            eta: eta ?? 0,
            duration: duration ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// SOI Plan immutable class
///
class _$SoiPlan extends SoiPlan {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int planId;
  @override
  final List<SoiWaypoint> waypoints;

  factory _$SoiPlan([void Function(SoiPlanBuilder b) updates]) =>
      (SoiPlanBuilder()..update(updates)).build();

  _$SoiPlan._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.planId,
      this.waypoints})
      : super._();

  @override
  SoiPlan rebuild(void Function(SoiPlanBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SoiPlanBuilder toBuilder() => SoiPlanBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoiPlan &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        planId == other.planId &&
        DeepCollectionEquality().equals(waypoints, other.waypoints);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            planId?.hashCode),
        waypoints?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoiPlan')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('planId', '$planId')
          ..add('waypoints', '$waypoints'))
        .toString();
  }
}

/// SOI Plan builder class
///
class SoiPlanBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SoiPlan, SoiPlanBuilder> {
  _$SoiPlan _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _planId = 0;
  int get planId => _$this._planId;
  set planId(int planId) => _$this._planId = planId;

  List<SoiWaypoint> _waypoints = <SoiWaypoint>[];
  List<SoiWaypoint> get waypoints => _$this._waypoints;
  set waypoints(List<SoiWaypoint> waypoints) => _$this._waypoints = waypoints;

  SoiPlanBuilder();

  SoiPlanBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SoiPlanBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SoiPlanBuilder()..copyFromHeader(headerFrom);

  SoiPlanBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _planId = _$v.planId;
      _waypoints = _$v.waypoints;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoiPlan other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SoiPlan;
  }

  @override
  void update(void Function(SoiPlanBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SoiPlan build() {
    final _$result = _$v ??
        _$SoiPlan._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            planId: planId ?? 0,
            waypoints: waypoints ?? <SoiWaypoint>[]);
    replace(_$result);
    return _$result;
  }
}

/// SOI Command immutable class
///
class _$SoiCommand extends SoiCommand {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final SoiCommandEnumType type;
  @override
  final SoiCommandEnumCommand command;
  @override
  final String settings;
  @override
  final SoiPlan plan;
  @override
  final String info;

  factory _$SoiCommand([void Function(SoiCommandBuilder b) updates]) =>
      (SoiCommandBuilder()..update(updates)).build();

  _$SoiCommand._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.type,
      this.command,
      this.settings,
      this.plan,
      this.info})
      : super._();

  @override
  SoiCommand rebuild(void Function(SoiCommandBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SoiCommandBuilder toBuilder() => SoiCommandBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoiCommand &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        type == other.type &&
        command == other.command &&
        settings == other.settings &&
        plan == other.plan &&
        info == other.info;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, timestamp?.hashCode),
                                        src?.hashCode),
                                    srcEnt?.hashCode),
                                dst?.hashCode),
                            dstEnt?.hashCode),
                        type?.hashCode),
                    command?.hashCode),
                settings?.hashCode),
            plan?.hashCode),
        info?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoiCommand')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('type', '$type (Enumerated)')
          ..add('command', '$command (Enumerated)')
          ..add('settings', '$settings (TupleList)')
          ..add('plan', '$plan')
          ..add('info', '$info'))
        .toString();
  }
}

/// SOI Command builder class
///
class SoiCommandBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SoiCommand, SoiCommandBuilder> {
  _$SoiCommand _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  SoiCommandEnumType _type = SoiCommandEnumType(0);
  SoiCommandEnumType get type => _$this._type;
  set type(SoiCommandEnumType type) => _$this._type = type;

  SoiCommandEnumCommand _command = SoiCommandEnumCommand(0);
  SoiCommandEnumCommand get command => _$this._command;
  set command(SoiCommandEnumCommand command) => _$this._command = command;

  String _settings = '';
  String get settings => _$this._settings;
  set settings(String settings) => _$this._settings = settings;

  SoiPlan _plan;
  SoiPlan get plan => _$this._plan;
  set plan(SoiPlan plan) => _$this._plan = plan;

  String _info = '';
  String get info => _$this._info;
  set info(String info) => _$this._info = info;

  SoiCommandBuilder();

  SoiCommandBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SoiCommandBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SoiCommandBuilder()..copyFromHeader(headerFrom);

  SoiCommandBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _type = _$v.type;
      _command = _$v.command;
      _settings = _$v.settings;
      _plan = _$v.plan;
      _info = _$v.info;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoiCommand other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SoiCommand;
  }

  @override
  void update(void Function(SoiCommandBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SoiCommand build() {
    final _$result = _$v ??
        _$SoiCommand._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            type: type ?? SoiCommandEnumType(0),
            command: command ?? SoiCommandEnumCommand(0),
            settings: settings ?? '',
            plan: plan,
            info: info ?? '');
    replace(_$result);
    return _$result;
  }
}

/// SOI State immutable class
///
class _$SoiState extends SoiState {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final SoiStateEnumState state;
  @override
  final int planId;
  @override
  final int wptId;
  @override
  final int settingsChk;

  factory _$SoiState([void Function(SoiStateBuilder b) updates]) =>
      (SoiStateBuilder()..update(updates)).build();

  _$SoiState._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.state,
      this.planId,
      this.wptId,
      this.settingsChk})
      : super._();

  @override
  SoiState rebuild(void Function(SoiStateBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SoiStateBuilder toBuilder() => SoiStateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SoiState &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        state == other.state &&
        planId == other.planId &&
        wptId == other.wptId &&
        settingsChk == other.settingsChk;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    state?.hashCode),
                planId?.hashCode),
            wptId?.hashCode),
        settingsChk?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SoiState')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('state', '$state (Enumerated)')
          ..add('planId', '$planId')
          ..add('wptId', '$wptId')
          ..add('settingsChk', '$settingsChk'))
        .toString();
  }
}

/// SOI State builder class
///
class SoiStateBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SoiState, SoiStateBuilder> {
  _$SoiState _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  SoiStateEnumState _state = SoiStateEnumState(0);
  SoiStateEnumState get state => _$this._state;
  set state(SoiStateEnumState state) => _$this._state = state;

  int _planId = 0;
  int get planId => _$this._planId;
  set planId(int planId) => _$this._planId = planId;

  int _wptId = 0;
  int get wptId => _$this._wptId;
  set wptId(int wptId) => _$this._wptId = wptId;

  int _settingsChk = 0;
  int get settingsChk => _$this._settingsChk;
  set settingsChk(int settingsChk) => _$this._settingsChk = settingsChk;

  SoiStateBuilder();

  SoiStateBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SoiStateBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SoiStateBuilder()..copyFromHeader(headerFrom);

  SoiStateBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _state = _$v.state;
      _planId = _$v.planId;
      _wptId = _$v.wptId;
      _settingsChk = _$v.settingsChk;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SoiState other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SoiState;
  }

  @override
  void update(void Function(SoiStateBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SoiState build() {
    final _$result = _$v ??
        _$SoiState._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            state: state ?? SoiStateEnumState(0),
            planId: planId ?? 0,
            wptId: wptId ?? 0,
            settingsChk: settingsChk ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Message Fragment immutable class
///
class _$MessagePart extends MessagePart {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int uid;
  @override
  final int fragNumber;
  @override
  final int numFrags;
  @override
  final List<int> data;

  factory _$MessagePart([void Function(MessagePartBuilder b) updates]) =>
      (MessagePartBuilder()..update(updates)).build();

  _$MessagePart._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.uid,
      this.fragNumber,
      this.numFrags,
      this.data})
      : super._();

  @override
  MessagePart rebuild(void Function(MessagePartBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  MessagePartBuilder toBuilder() => MessagePartBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is MessagePart &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        uid == other.uid &&
        fragNumber == other.fragNumber &&
        numFrags == other.numFrags &&
        ListEquality().equals(data, other.data);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    uid?.hashCode),
                fragNumber?.hashCode),
            numFrags?.hashCode),
        data?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('MessagePart')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('uid', '$uid')
          ..add('fragNumber', '$fragNumber')
          ..add('numFrags', '$numFrags')
          ..add('data', '$data'))
        .toString();
  }
}

/// Message Fragment builder class
///
class MessagePartBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<MessagePart, MessagePartBuilder> {
  _$MessagePart _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _uid = 0;
  int get uid => _$this._uid;
  set uid(int uid) => _$this._uid = uid;

  int _fragNumber = 0;
  int get fragNumber => _$this._fragNumber;
  set fragNumber(int fragNumber) => _$this._fragNumber = fragNumber;

  int _numFrags = 0;
  int get numFrags => _$this._numFrags;
  set numFrags(int numFrags) => _$this._numFrags = numFrags;

  List<int> _data = <int>[];
  List<int> get data => _$this._data;
  set data(List<int> data) => _$this._data = data;

  MessagePartBuilder();

  MessagePartBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  MessagePartBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      MessagePartBuilder()..copyFromHeader(headerFrom);

  MessagePartBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _uid = _$v.uid;
      _fragNumber = _$v.fragNumber;
      _numFrags = _$v.numFrags;
      _data = _$v.data;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(MessagePart other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$MessagePart;
  }

  @override
  void update(void Function(MessagePartBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$MessagePart build() {
    final _$result = _$v ??
        _$MessagePart._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            uid: uid ?? 0,
            fragNumber: fragNumber ?? 0,
            numFrags: numFrags ?? 0,
            data: data ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// Neptus Blob immutable class
///
class _$NeptusBlob extends NeptusBlob {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String contentType;
  @override
  final List<int> content;

  factory _$NeptusBlob([void Function(NeptusBlobBuilder b) updates]) =>
      (NeptusBlobBuilder()..update(updates)).build();

  _$NeptusBlob._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.contentType,
      this.content})
      : super._();

  @override
  NeptusBlob rebuild(void Function(NeptusBlobBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  NeptusBlobBuilder toBuilder() => NeptusBlobBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is NeptusBlob &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        contentType == other.contentType &&
        ListEquality().equals(content, other.content);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            contentType?.hashCode),
        content?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('NeptusBlob')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('contentType', '$contentType')
          ..add('content', '$content'))
        .toString();
  }
}

/// Neptus Blob builder class
///
class NeptusBlobBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<NeptusBlob, NeptusBlobBuilder> {
  _$NeptusBlob _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _contentType = '';
  String get contentType => _$this._contentType;
  set contentType(String contentType) => _$this._contentType = contentType;

  List<int> _content = <int>[];
  List<int> get content => _$this._content;
  set content(List<int> content) => _$this._content = content;

  NeptusBlobBuilder();

  NeptusBlobBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  NeptusBlobBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      NeptusBlobBuilder()..copyFromHeader(headerFrom);

  NeptusBlobBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _contentType = _$v.contentType;
      _content = _$v.content;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(NeptusBlob other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$NeptusBlob;
  }

  @override
  void update(void Function(NeptusBlobBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$NeptusBlob build() {
    final _$result = _$v ??
        _$NeptusBlob._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            contentType: contentType ?? '',
            content: content ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// Aborted immutable class
///
class _$Aborted extends Aborted {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  factory _$Aborted([void Function(AbortedBuilder b) updates]) =>
      (AbortedBuilder()..update(updates)).build();

  _$Aborted._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId})
      : super._();

  @override
  Aborted rebuild(void Function(AbortedBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  AbortedBuilder toBuilder() => AbortedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Aborted &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                srcEnt?.hashCode),
            dst?.hashCode),
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Aborted')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Aborted builder class
///
class AbortedBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Aborted, AbortedBuilder> {
  _$Aborted _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  AbortedBuilder();

  AbortedBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  AbortedBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      AbortedBuilder()..copyFromHeader(headerFrom);

  AbortedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Aborted other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Aborted;
  }

  @override
  void update(void Function(AbortedBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Aborted build() {
    final _$result = _$v ??
        _$Aborted._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// USBL Angles immutable class
///
class _$UsblAngles extends UsblAngles {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int target;
  @override
  final double bearing;
  @override
  final double elevation;

  factory _$UsblAngles([void Function(UsblAnglesBuilder b) updates]) =>
      (UsblAnglesBuilder()..update(updates)).build();

  _$UsblAngles._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.target,
      this.bearing,
      this.elevation})
      : super._();

  @override
  UsblAngles rebuild(void Function(UsblAnglesBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblAnglesBuilder toBuilder() => UsblAnglesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblAngles &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == other.target &&
        (bearing == other.bearing || bearing - other.bearing <= 1E-7) &&
        (elevation == other.elevation || elevation - other.elevation <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                target?.hashCode),
            bearing?.hashCode),
        elevation?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblAngles')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('target', '$target')
          ..add('bearing',
              '$bearing (rad)${bearing != null ? ' [${bearing * 180.0 / math.pi} (deg)]' : ''}')
          ..add('elevation',
              '$elevation (rad)${elevation != null ? ' [${elevation * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// USBL Angles builder class
///
class UsblAnglesBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<UsblAngles, UsblAnglesBuilder> {
  _$UsblAngles _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _target = 0;
  int get target => _$this._target;
  set target(int target) => _$this._target = target;

  double _bearing = 0;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _elevation = 0;
  double get elevation => _$this._elevation;
  set elevation(double elevation) => _$this._elevation = elevation;

  UsblAnglesBuilder();

  UsblAnglesBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  UsblAnglesBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      UsblAnglesBuilder()..copyFromHeader(headerFrom);

  UsblAnglesBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _bearing = _$v.bearing;
      _elevation = _$v.elevation;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblAngles other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$UsblAngles;
  }

  @override
  void update(void Function(UsblAnglesBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblAngles build() {
    final _$result = _$v ??
        _$UsblAngles._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            target: target ?? 0,
            bearing: bearing ?? 0,
            elevation: elevation ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// USBL Position immutable class
///
class _$UsblPosition extends UsblPosition {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int target;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$UsblPosition([void Function(UsblPositionBuilder b) updates]) =>
      (UsblPositionBuilder()..update(updates)).build();

  _$UsblPosition._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.target,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  UsblPosition rebuild(void Function(UsblPositionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblPositionBuilder toBuilder() => UsblPositionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblPosition &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == other.target &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                srcEnt?.hashCode),
                            dst?.hashCode),
                        dstEnt?.hashCode),
                    target?.hashCode),
                x?.hashCode),
            y?.hashCode),
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblPosition')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('target', '$target')
          ..add('x', '$x (m)')
          ..add('y', '$y (m)')
          ..add('z', '$z (m)'))
        .toString();
  }
}

/// USBL Position builder class
///
class UsblPositionBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<UsblPosition, UsblPositionBuilder> {
  _$UsblPosition _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _target = 0;
  int get target => _$this._target;
  set target(int target) => _$this._target = target;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  UsblPositionBuilder();

  UsblPositionBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  UsblPositionBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      UsblPositionBuilder()..copyFromHeader(headerFrom);

  UsblPositionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblPosition other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$UsblPosition;
  }

  @override
  void update(void Function(UsblPositionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblPosition build() {
    final _$result = _$v ??
        _$UsblPosition._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            target: target ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// USBL Fix immutable class
///
class _$UsblFix extends UsblFix {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int target;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double z;

  factory _$UsblFix([void Function(UsblFixBuilder b) updates]) =>
      (UsblFixBuilder()..update(updates)).build();

  _$UsblFix._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.target,
      this.lat,
      this.lon,
      this.zUnits,
      this.z})
      : super._();

  @override
  UsblFix rebuild(void Function(UsblFixBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblFixBuilder toBuilder() => UsblFixBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblFix &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == other.target &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        zUnits == other.zUnits &&
        (z == other.z || z - other.z <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, timestamp?.hashCode),
                                        src?.hashCode),
                                    srcEnt?.hashCode),
                                dst?.hashCode),
                            dstEnt?.hashCode),
                        target?.hashCode),
                    lat?.hashCode),
                lon?.hashCode),
            zUnits?.hashCode),
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblFix')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('target', '$target')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('z', '$z (m)'))
        .toString();
  }
}

/// USBL Fix builder class
///
class UsblFixBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<UsblFix, UsblFixBuilder> {
  _$UsblFix _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _target = 0;
  int get target => _$this._target;
  set target(int target) => _$this._target = target;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  UsblFixBuilder();

  UsblFixBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  UsblFixBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      UsblFixBuilder()..copyFromHeader(headerFrom);

  UsblFixBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _zUnits = _$v.zUnits;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblFix other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$UsblFix;
  }

  @override
  void update(void Function(UsblFixBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblFix build() {
    final _$result = _$v ??
        _$UsblFix._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            target: target ?? 0,
            lat: lat ?? 0,
            lon: lon ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Parameters XML immutable class
///
class _$ParametersXml extends ParametersXml {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String locale;
  @override
  final List<int> config;

  factory _$ParametersXml([void Function(ParametersXmlBuilder b) updates]) =>
      (ParametersXmlBuilder()..update(updates)).build();

  _$ParametersXml._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.locale,
      this.config})
      : super._();

  @override
  ParametersXml rebuild(void Function(ParametersXmlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ParametersXmlBuilder toBuilder() => ParametersXmlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ParametersXml &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        locale == other.locale &&
        ListEquality().equals(config, other.config);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            locale?.hashCode),
        config?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ParametersXml')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('locale', '$locale')
          ..add('config', '$config'))
        .toString();
  }
}

/// Parameters XML builder class
///
class ParametersXmlBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ParametersXml, ParametersXmlBuilder> {
  _$ParametersXml _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _locale = '';
  String get locale => _$this._locale;
  set locale(String locale) => _$this._locale = locale;

  List<int> _config = <int>[];
  List<int> get config => _$this._config;
  set config(List<int> config) => _$this._config = config;

  ParametersXmlBuilder();

  ParametersXmlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ParametersXmlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ParametersXmlBuilder()..copyFromHeader(headerFrom);

  ParametersXmlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _locale = _$v.locale;
      _config = _$v.config;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ParametersXml other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ParametersXml;
  }

  @override
  void update(void Function(ParametersXmlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ParametersXml build() {
    final _$result = _$v ??
        _$ParametersXml._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            locale: locale ?? '',
            config: config ?? <int>[]);
    replace(_$result);
    return _$result;
  }
}

/// Get Parameters XML immutable class
///
class _$GetParametersXml extends GetParametersXml {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  factory _$GetParametersXml(
          [void Function(GetParametersXmlBuilder b) updates]) =>
      (GetParametersXmlBuilder()..update(updates)).build();

  _$GetParametersXml._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId})
      : super._();

  @override
  GetParametersXml rebuild(void Function(GetParametersXmlBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GetParametersXmlBuilder toBuilder() =>
      GetParametersXmlBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GetParametersXml &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                srcEnt?.hashCode),
            dst?.hashCode),
        dstEnt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GetParametersXml')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})"))
        .toString();
  }
}

/// Get Parameters XML builder class
///
class GetParametersXmlBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<GetParametersXml, GetParametersXmlBuilder> {
  _$GetParametersXml _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  GetParametersXmlBuilder();

  GetParametersXmlBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  GetParametersXmlBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      GetParametersXmlBuilder()..copyFromHeader(headerFrom);

  GetParametersXmlBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GetParametersXml other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$GetParametersXml;
  }

  @override
  void update(void Function(GetParametersXmlBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GetParametersXml build() {
    final _$result = _$v ??
        _$GetParametersXml._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId);
    replace(_$result);
    return _$result;
  }
}

/// Set Image Coordinates immutable class
///
class _$SetImageCoords extends SetImageCoords {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int camId;
  @override
  final int x;
  @override
  final int y;

  factory _$SetImageCoords([void Function(SetImageCoordsBuilder b) updates]) =>
      (SetImageCoordsBuilder()..update(updates)).build();

  _$SetImageCoords._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.camId,
      this.x,
      this.y})
      : super._();

  @override
  SetImageCoords rebuild(void Function(SetImageCoordsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SetImageCoordsBuilder toBuilder() => SetImageCoordsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SetImageCoords &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        camId == other.camId &&
        x == other.x &&
        y == other.y;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                camId?.hashCode),
            x?.hashCode),
        y?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SetImageCoords')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('camId', '$camId')
          ..add('x', '$x (px)')
          ..add('y', '$y (px)'))
        .toString();
  }
}

/// Set Image Coordinates builder class
///
class SetImageCoordsBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SetImageCoords, SetImageCoordsBuilder> {
  _$SetImageCoords _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _camId = 0;
  int get camId => _$this._camId;
  set camId(int camId) => _$this._camId = camId;

  int _x = 0;
  int get x => _$this._x;
  set x(int x) => _$this._x = x;

  int _y = 0;
  int get y => _$this._y;
  set y(int y) => _$this._y = y;

  SetImageCoordsBuilder();

  SetImageCoordsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SetImageCoordsBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SetImageCoordsBuilder()..copyFromHeader(headerFrom);

  SetImageCoordsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _camId = _$v.camId;
      _x = _$v.x;
      _y = _$v.y;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SetImageCoords other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SetImageCoords;
  }

  @override
  void update(void Function(SetImageCoordsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SetImageCoords build() {
    final _$result = _$v ??
        _$SetImageCoords._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            camId: camId ?? 0,
            x: x ?? 0,
            y: y ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Get Image Coordinates immutable class
///
class _$GetImageCoords extends GetImageCoords {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int camId;
  @override
  final int x;
  @override
  final int y;

  factory _$GetImageCoords([void Function(GetImageCoordsBuilder b) updates]) =>
      (GetImageCoordsBuilder()..update(updates)).build();

  _$GetImageCoords._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.camId,
      this.x,
      this.y})
      : super._();

  @override
  GetImageCoords rebuild(void Function(GetImageCoordsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GetImageCoordsBuilder toBuilder() => GetImageCoordsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GetImageCoords &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        camId == other.camId &&
        x == other.x &&
        y == other.y;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                camId?.hashCode),
            x?.hashCode),
        y?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GetImageCoords')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('camId', '$camId')
          ..add('x', '$x (px)')
          ..add('y', '$y (px)'))
        .toString();
  }
}

/// Get Image Coordinates builder class
///
class GetImageCoordsBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<GetImageCoords, GetImageCoordsBuilder> {
  _$GetImageCoords _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _camId = 0;
  int get camId => _$this._camId;
  set camId(int camId) => _$this._camId = camId;

  int _x = 0;
  int get x => _$this._x;
  set x(int x) => _$this._x = x;

  int _y = 0;
  int get y => _$this._y;
  set y(int y) => _$this._y = y;

  GetImageCoordsBuilder();

  GetImageCoordsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  GetImageCoordsBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      GetImageCoordsBuilder()..copyFromHeader(headerFrom);

  GetImageCoordsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _camId = _$v.camId;
      _x = _$v.x;
      _y = _$v.y;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GetImageCoords other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$GetImageCoords;
  }

  @override
  void update(void Function(GetImageCoordsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GetImageCoords build() {
    final _$result = _$v ??
        _$GetImageCoords._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            camId: camId ?? 0,
            x: x ?? 0,
            y: y ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Get World Coordinates immutable class
///
class _$GetWorldCoordinates extends GetWorldCoordinates {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final BooleanEnum tracking;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;

  factory _$GetWorldCoordinates(
          [void Function(GetWorldCoordinatesBuilder b) updates]) =>
      (GetWorldCoordinatesBuilder()..update(updates)).build();

  _$GetWorldCoordinates._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.tracking,
      this.lat,
      this.lon,
      this.x,
      this.y,
      this.z})
      : super._();

  @override
  GetWorldCoordinates rebuild(
          void Function(GetWorldCoordinatesBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GetWorldCoordinatesBuilder toBuilder() =>
      GetWorldCoordinatesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GetWorldCoordinates &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        tracking == other.tracking &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, timestamp?.hashCode),
                                            src?.hashCode),
                                        srcEnt?.hashCode),
                                    dst?.hashCode),
                                dstEnt?.hashCode),
                            tracking?.hashCode),
                        lat?.hashCode),
                    lon?.hashCode),
                x?.hashCode),
            y?.hashCode),
        z?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('GetWorldCoordinates')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('tracking', '$tracking (Enumerated)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('x', '$x (m)')
          ..add('y', '$y (m)')
          ..add('z', '$z (m)'))
        .toString();
  }
}

/// Get World Coordinates builder class
///
class GetWorldCoordinatesBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<GetWorldCoordinates,
            GetWorldCoordinatesBuilder> {
  _$GetWorldCoordinates _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  BooleanEnum _tracking = BooleanEnum(0);
  BooleanEnum get tracking => _$this._tracking;
  set tracking(BooleanEnum tracking) => _$this._tracking = tracking;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  GetWorldCoordinatesBuilder();

  GetWorldCoordinatesBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  GetWorldCoordinatesBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      GetWorldCoordinatesBuilder()..copyFromHeader(headerFrom);

  GetWorldCoordinatesBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _tracking = _$v.tracking;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GetWorldCoordinates other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$GetWorldCoordinates;
  }

  @override
  void update(void Function(GetWorldCoordinatesBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$GetWorldCoordinates build() {
    final _$result = _$v ??
        _$GetWorldCoordinates._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            tracking: tracking ?? BooleanEnum(0),
            lat: lat ?? 0,
            lon: lon ?? 0,
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// USBL Angles Extended immutable class
///
class _$UsblAnglesExtended extends UsblAnglesExtended {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String target;
  @override
  final double lbearing;
  @override
  final double lelevation;
  @override
  final double bearing;
  @override
  final double elevation;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double accuracy;

  factory _$UsblAnglesExtended(
          [void Function(UsblAnglesExtendedBuilder b) updates]) =>
      (UsblAnglesExtendedBuilder()..update(updates)).build();

  _$UsblAnglesExtended._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.target,
      this.lbearing,
      this.lelevation,
      this.bearing,
      this.elevation,
      this.phi,
      this.theta,
      this.psi,
      this.accuracy})
      : super._();

  @override
  UsblAnglesExtended rebuild(
          void Function(UsblAnglesExtendedBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblAnglesExtendedBuilder toBuilder() =>
      UsblAnglesExtendedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblAnglesExtended &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == other.target &&
        (lbearing == other.lbearing || lbearing - other.lbearing <= 1E-7) &&
        (lelevation == other.lelevation ||
            lelevation - other.lelevation <= 1E-7) &&
        (bearing == other.bearing || bearing - other.bearing <= 1E-7) &&
        (elevation == other.elevation || elevation - other.elevation <= 1E-7) &&
        (phi == other.phi || phi - other.phi <= 1E-7) &&
        (theta == other.theta || theta - other.theta <= 1E-7) &&
        (psi == other.psi || psi - other.psi <= 1E-7) &&
        (accuracy == other.accuracy || accuracy - other.accuracy <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            0,
                                                            timestamp
                                                                ?.hashCode),
                                                        src?.hashCode),
                                                    srcEnt?.hashCode),
                                                dst?.hashCode),
                                            dstEnt?.hashCode),
                                        target?.hashCode),
                                    lbearing?.hashCode),
                                lelevation?.hashCode),
                            bearing?.hashCode),
                        elevation?.hashCode),
                    phi?.hashCode),
                theta?.hashCode),
            psi?.hashCode),
        accuracy?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblAnglesExtended')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('target', '$target')
          ..add('lbearing',
              '$lbearing (rad)${lbearing != null ? ' [${lbearing * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lelevation',
              '$lelevation (rad)${lelevation != null ? ' [${lelevation * 180.0 / math.pi} (deg)]' : ''}')
          ..add('bearing',
              '$bearing (rad)${bearing != null ? ' [${bearing * 180.0 / math.pi} (deg)]' : ''}')
          ..add('elevation',
              '$elevation (rad)${elevation != null ? ' [${elevation * 180.0 / math.pi} (deg)]' : ''}')
          ..add('phi',
              '$phi (rad)${phi != null ? ' [${phi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('theta',
              '$theta (rad)${theta != null ? ' [${theta * 180.0 / math.pi} (deg)]' : ''}')
          ..add('psi',
              '$psi (rad)${psi != null ? ' [${psi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('accuracy',
              '$accuracy (rad)${accuracy != null ? ' [${accuracy * 180.0 / math.pi} (deg)]' : ''}'))
        .toString();
  }
}

/// USBL Angles Extended builder class
///
class UsblAnglesExtendedBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<UsblAnglesExtended, UsblAnglesExtendedBuilder> {
  _$UsblAnglesExtended _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _target = '';
  String get target => _$this._target;
  set target(String target) => _$this._target = target;

  double _lbearing = 0;
  double get lbearing => _$this._lbearing;
  set lbearing(double lbearing) => _$this._lbearing = lbearing;

  double _lelevation = 0;
  double get lelevation => _$this._lelevation;
  set lelevation(double lelevation) => _$this._lelevation = lelevation;

  double _bearing = 0;
  double get bearing => _$this._bearing;
  set bearing(double bearing) => _$this._bearing = bearing;

  double _elevation = 0;
  double get elevation => _$this._elevation;
  set elevation(double elevation) => _$this._elevation = elevation;

  double _phi = 0;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta = 0;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi = 0;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _accuracy = 0;
  double get accuracy => _$this._accuracy;
  set accuracy(double accuracy) => _$this._accuracy = accuracy;

  UsblAnglesExtendedBuilder();

  UsblAnglesExtendedBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  UsblAnglesExtendedBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      UsblAnglesExtendedBuilder()..copyFromHeader(headerFrom);

  UsblAnglesExtendedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _lbearing = _$v.lbearing;
      _lelevation = _$v.lelevation;
      _bearing = _$v.bearing;
      _elevation = _$v.elevation;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _accuracy = _$v.accuracy;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblAnglesExtended other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$UsblAnglesExtended;
  }

  @override
  void update(void Function(UsblAnglesExtendedBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblAnglesExtended build() {
    final _$result = _$v ??
        _$UsblAnglesExtended._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            target: target ?? '',
            lbearing: lbearing ?? 0,
            lelevation: lelevation ?? 0,
            bearing: bearing ?? 0,
            elevation: elevation ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0,
            accuracy: accuracy ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// USBL Position Extended immutable class
///
class _$UsblPositionExtended extends UsblPositionExtended {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String target;
  @override
  final double x;
  @override
  final double y;
  @override
  final double z;
  @override
  final double n;
  @override
  final double e;
  @override
  final double d;
  @override
  final double phi;
  @override
  final double theta;
  @override
  final double psi;
  @override
  final double accuracy;

  factory _$UsblPositionExtended(
          [void Function(UsblPositionExtendedBuilder b) updates]) =>
      (UsblPositionExtendedBuilder()..update(updates)).build();

  _$UsblPositionExtended._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.target,
      this.x,
      this.y,
      this.z,
      this.n,
      this.e,
      this.d,
      this.phi,
      this.theta,
      this.psi,
      this.accuracy})
      : super._();

  @override
  UsblPositionExtended rebuild(
          void Function(UsblPositionExtendedBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblPositionExtendedBuilder toBuilder() =>
      UsblPositionExtendedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblPositionExtended &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == other.target &&
        (x == other.x || x - other.x <= 1E-7) &&
        (y == other.y || y - other.y <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        (n == other.n || n - other.n <= 1E-7) &&
        (e == other.e || e - other.e <= 1E-7) &&
        (d == other.d || d - other.d <= 1E-7) &&
        (phi == other.phi || phi - other.phi <= 1E-7) &&
        (theta == other.theta || theta - other.theta <= 1E-7) &&
        (psi == other.psi || psi - other.psi <= 1E-7) &&
        (accuracy == other.accuracy || accuracy - other.accuracy <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    0,
                                                                    timestamp
                                                                        ?.hashCode),
                                                                src?.hashCode),
                                                            srcEnt?.hashCode),
                                                        dst?.hashCode),
                                                    dstEnt?.hashCode),
                                                target?.hashCode),
                                            x?.hashCode),
                                        y?.hashCode),
                                    z?.hashCode),
                                n?.hashCode),
                            e?.hashCode),
                        d?.hashCode),
                    phi?.hashCode),
                theta?.hashCode),
            psi?.hashCode),
        accuracy?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblPositionExtended')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('target', '$target')
          ..add('x', '$x (m)')
          ..add('y', '$y (m)')
          ..add('z', '$z (m)')
          ..add('n', '$n (m)')
          ..add('e', '$e (m)')
          ..add('d', '$d (m)')
          ..add('phi',
              '$phi (rad)${phi != null ? ' [${phi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('theta',
              '$theta (rad)${theta != null ? ' [${theta * 180.0 / math.pi} (deg)]' : ''}')
          ..add('psi',
              '$psi (rad)${psi != null ? ' [${psi * 180.0 / math.pi} (deg)]' : ''}')
          ..add('accuracy', '$accuracy (m)'))
        .toString();
  }
}

/// USBL Position Extended builder class
///
class UsblPositionExtendedBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<UsblPositionExtended,
            UsblPositionExtendedBuilder> {
  _$UsblPositionExtended _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _target = '';
  String get target => _$this._target;
  set target(String target) => _$this._target = target;

  double _x = 0;
  double get x => _$this._x;
  set x(double x) => _$this._x = x;

  double _y = 0;
  double get y => _$this._y;
  set y(double y) => _$this._y = y;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _n = 0;
  double get n => _$this._n;
  set n(double n) => _$this._n = n;

  double _e = 0;
  double get e => _$this._e;
  set e(double e) => _$this._e = e;

  double _d = 0;
  double get d => _$this._d;
  set d(double d) => _$this._d = d;

  double _phi = 0;
  double get phi => _$this._phi;
  set phi(double phi) => _$this._phi = phi;

  double _theta = 0;
  double get theta => _$this._theta;
  set theta(double theta) => _$this._theta = theta;

  double _psi = 0;
  double get psi => _$this._psi;
  set psi(double psi) => _$this._psi = psi;

  double _accuracy = 0;
  double get accuracy => _$this._accuracy;
  set accuracy(double accuracy) => _$this._accuracy = accuracy;

  UsblPositionExtendedBuilder();

  UsblPositionExtendedBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  UsblPositionExtendedBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      UsblPositionExtendedBuilder()..copyFromHeader(headerFrom);

  UsblPositionExtendedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _x = _$v.x;
      _y = _$v.y;
      _z = _$v.z;
      _n = _$v.n;
      _e = _$v.e;
      _d = _$v.d;
      _phi = _$v.phi;
      _theta = _$v.theta;
      _psi = _$v.psi;
      _accuracy = _$v.accuracy;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblPositionExtended other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$UsblPositionExtended;
  }

  @override
  void update(void Function(UsblPositionExtendedBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblPositionExtended build() {
    final _$result = _$v ??
        _$UsblPositionExtended._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            target: target ?? '',
            x: x ?? 0,
            y: y ?? 0,
            z: z ?? 0,
            n: n ?? 0,
            e: e ?? 0,
            d: d ?? 0,
            phi: phi ?? 0,
            theta: theta ?? 0,
            psi: psi ?? 0,
            accuracy: accuracy ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// USBL Fix Extended immutable class
///
class _$UsblFixExtended extends UsblFixExtended {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String target;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final ZUnitsEnum zUnits;
  @override
  final double z;
  @override
  final double accuracy;

  factory _$UsblFixExtended(
          [void Function(UsblFixExtendedBuilder b) updates]) =>
      (UsblFixExtendedBuilder()..update(updates)).build();

  _$UsblFixExtended._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.target,
      this.lat,
      this.lon,
      this.zUnits,
      this.z,
      this.accuracy})
      : super._();

  @override
  UsblFixExtended rebuild(void Function(UsblFixExtendedBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblFixExtendedBuilder toBuilder() => UsblFixExtendedBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblFixExtended &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        target == other.target &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        zUnits == other.zUnits &&
        (z == other.z || z - other.z <= 1E-7) &&
        (accuracy == other.accuracy || accuracy - other.accuracy <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, timestamp?.hashCode),
                                            src?.hashCode),
                                        srcEnt?.hashCode),
                                    dst?.hashCode),
                                dstEnt?.hashCode),
                            target?.hashCode),
                        lat?.hashCode),
                    lon?.hashCode),
                zUnits?.hashCode),
            z?.hashCode),
        accuracy?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblFixExtended')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('target', '$target')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('zUnits', '$zUnits (Enumerated)')
          ..add('z', '$z (m)')
          ..add('accuracy', '$accuracy (m)'))
        .toString();
  }
}

/// USBL Fix Extended builder class
///
class UsblFixExtendedBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<UsblFixExtended, UsblFixExtendedBuilder> {
  _$UsblFixExtended _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _target = '';
  String get target => _$this._target;
  set target(String target) => _$this._target = target;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  double _accuracy = 0;
  double get accuracy => _$this._accuracy;
  set accuracy(double accuracy) => _$this._accuracy = accuracy;

  UsblFixExtendedBuilder();

  UsblFixExtendedBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  UsblFixExtendedBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      UsblFixExtendedBuilder()..copyFromHeader(headerFrom);

  UsblFixExtendedBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _target = _$v.target;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _zUnits = _$v.zUnits;
      _z = _$v.z;
      _accuracy = _$v.accuracy;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblFixExtended other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$UsblFixExtended;
  }

  @override
  void update(void Function(UsblFixExtendedBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblFixExtended build() {
    final _$result = _$v ??
        _$UsblFixExtended._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            target: target ?? '',
            lat: lat ?? 0,
            lon: lon ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0),
            z: z ?? 0,
            accuracy: accuracy ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// USBL Modem Configuration immutable class
///
class _$UsblModem extends UsblModem {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final String name;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double z;
  @override
  final ZUnitsEnum zUnits;

  factory _$UsblModem([void Function(UsblModemBuilder b) updates]) =>
      (UsblModemBuilder()..update(updates)).build();

  _$UsblModem._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.name,
      this.lat,
      this.lon,
      this.z,
      this.zUnits})
      : super._();

  @override
  UsblModem rebuild(void Function(UsblModemBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblModemBuilder toBuilder() => UsblModemBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblModem &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        name == other.name &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (z == other.z || z - other.z <= 1E-7) &&
        zUnits == other.zUnits;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, timestamp?.hashCode),
                                        src?.hashCode),
                                    srcEnt?.hashCode),
                                dst?.hashCode),
                            dstEnt?.hashCode),
                        name?.hashCode),
                    lat?.hashCode),
                lon?.hashCode),
            z?.hashCode),
        zUnits?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblModem')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('name', '$name')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('z', '$z (m)')
          ..add('zUnits', '$zUnits (Enumerated)'))
        .toString();
  }
}

/// USBL Modem Configuration builder class
///
class UsblModemBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<UsblModem, UsblModemBuilder> {
  _$UsblModem _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  String _name = '';
  String get name => _$this._name;
  set name(String name) => _$this._name = name;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _z = 0;
  double get z => _$this._z;
  set z(double z) => _$this._z = z;

  ZUnitsEnum _zUnits = ZUnitsEnum(0);
  ZUnitsEnum get zUnits => _$this._zUnits;
  set zUnits(ZUnitsEnum zUnits) => _$this._zUnits = zUnits;

  UsblModemBuilder();

  UsblModemBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  UsblModemBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      UsblModemBuilder()..copyFromHeader(headerFrom);

  UsblModemBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _name = _$v.name;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _z = _$v.z;
      _zUnits = _$v.zUnits;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblModem other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$UsblModem;
  }

  @override
  void update(void Function(UsblModemBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblModem build() {
    final _$result = _$v ??
        _$UsblModem._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            name: name ?? '',
            lat: lat ?? 0,
            lon: lon ?? 0,
            z: z ?? 0,
            zUnits: zUnits ?? ZUnitsEnum(0));
    replace(_$result);
    return _$result;
  }
}

/// USBL Configuration immutable class
///
class _$UsblConfig extends UsblConfig {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final UsblConfigEnumOp op;
  @override
  final List<UsblModem> modems;

  factory _$UsblConfig([void Function(UsblConfigBuilder b) updates]) =>
      (UsblConfigBuilder()..update(updates)).build();

  _$UsblConfig._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.modems})
      : super._();

  @override
  UsblConfig rebuild(void Function(UsblConfigBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  UsblConfigBuilder toBuilder() => UsblConfigBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is UsblConfig &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        DeepCollectionEquality().equals(modems, other.modems);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            op?.hashCode),
        modems?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('UsblConfig')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('modems', '$modems'))
        .toString();
  }
}

/// USBL Configuration builder class
///
class UsblConfigBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<UsblConfig, UsblConfigBuilder> {
  _$UsblConfig _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  UsblConfigEnumOp _op = UsblConfigEnumOp(0);
  UsblConfigEnumOp get op => _$this._op;
  set op(UsblConfigEnumOp op) => _$this._op = op;

  List<UsblModem> _modems = <UsblModem>[];
  List<UsblModem> get modems => _$this._modems;
  set modems(List<UsblModem> modems) => _$this._modems = modems;

  UsblConfigBuilder();

  UsblConfigBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  UsblConfigBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      UsblConfigBuilder()..copyFromHeader(headerFrom);

  UsblConfigBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _modems = _$v.modems;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(UsblConfig other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$UsblConfig;
  }

  @override
  void update(void Function(UsblConfigBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$UsblConfig build() {
    final _$result = _$v ??
        _$UsblConfig._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? UsblConfigEnumOp(0),
            modems: modems ?? <UsblModem>[]);
    replace(_$result);
    return _$result;
  }
}

/// Dissolved Organic Matter immutable class
///
class _$DissolvedOrganicMatter extends DissolvedOrganicMatter {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;
  @override
  final DissolvedOrganicMatterEnumType type;

  factory _$DissolvedOrganicMatter(
          [void Function(DissolvedOrganicMatterBuilder b) updates]) =>
      (DissolvedOrganicMatterBuilder()..update(updates)).build();

  _$DissolvedOrganicMatter._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value,
      this.type})
      : super._();

  @override
  DissolvedOrganicMatter rebuild(
          void Function(DissolvedOrganicMatterBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DissolvedOrganicMatterBuilder toBuilder() =>
      DissolvedOrganicMatterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DissolvedOrganicMatter &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7) &&
        type == other.type;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            value?.hashCode),
        type?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DissolvedOrganicMatter')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (PPB)')
          ..add('type', '$type (Enumerated)'))
        .toString();
  }
}

/// Dissolved Organic Matter builder class
///
class DissolvedOrganicMatterBuilder extends Object
    with
        ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<DissolvedOrganicMatter,
            DissolvedOrganicMatterBuilder> {
  _$DissolvedOrganicMatter _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  DissolvedOrganicMatterEnumType _type = DissolvedOrganicMatterEnumType(0);
  DissolvedOrganicMatterEnumType get type => _$this._type;
  set type(DissolvedOrganicMatterEnumType type) => _$this._type = type;

  DissolvedOrganicMatterBuilder();

  DissolvedOrganicMatterBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DissolvedOrganicMatterBuilder newInstance(
          [ImcBuilderHeaderPart headerFrom]) =>
      DissolvedOrganicMatterBuilder()..copyFromHeader(headerFrom);

  DissolvedOrganicMatterBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _type = _$v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DissolvedOrganicMatter other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DissolvedOrganicMatter;
  }

  @override
  void update(void Function(DissolvedOrganicMatterBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DissolvedOrganicMatter build() {
    final _$result = _$v ??
        _$DissolvedOrganicMatter._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0,
            type: type ?? DissolvedOrganicMatterEnumType(0));
    replace(_$result);
    return _$result;
  }
}

/// Optical Backscattering Coefficient immutable class
///
class _$OpticalBackscatter extends OpticalBackscatter {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$OpticalBackscatter(
          [void Function(OpticalBackscatterBuilder b) updates]) =>
      (OpticalBackscatterBuilder()..update(updates)).build();

  _$OpticalBackscatter._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  OpticalBackscatter rebuild(
          void Function(OpticalBackscatterBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  OpticalBackscatterBuilder toBuilder() =>
      OpticalBackscatterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is OpticalBackscatter &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('OpticalBackscatter')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value (1/m)'))
        .toString();
  }
}

/// Optical Backscattering Coefficient builder class
///
class OpticalBackscatterBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<OpticalBackscatter, OpticalBackscatterBuilder> {
  _$OpticalBackscatter _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  OpticalBackscatterBuilder();

  OpticalBackscatterBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  OpticalBackscatterBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      OpticalBackscatterBuilder()..copyFromHeader(headerFrom);

  OpticalBackscatterBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(OpticalBackscatter other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$OpticalBackscatter;
  }

  @override
  void update(void Function(OpticalBackscatterBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$OpticalBackscatter build() {
    final _$result = _$v ??
        _$OpticalBackscatter._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Tachograph immutable class
///
class _$Tachograph extends Tachograph {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double timestampLastService;
  @override
  final double timeNextService;
  @override
  final double timeMotorNextService;
  @override
  final double timeIdleGround;
  @override
  final double timeIdleAir;
  @override
  final double timeIdleWater;
  @override
  final double timeIdleUnderwater;
  @override
  final double timeIdleUnknown;
  @override
  final double timeMotorGround;
  @override
  final double timeMotorAir;
  @override
  final double timeMotorWater;
  @override
  final double timeMotorUnderwater;
  @override
  final double timeMotorUnknown;
  @override
  final int rpmMin;
  @override
  final int rpmMax;
  @override
  final double depthMax;

  factory _$Tachograph([void Function(TachographBuilder b) updates]) =>
      (TachographBuilder()..update(updates)).build();

  _$Tachograph._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.timestampLastService,
      this.timeNextService,
      this.timeMotorNextService,
      this.timeIdleGround,
      this.timeIdleAir,
      this.timeIdleWater,
      this.timeIdleUnderwater,
      this.timeIdleUnknown,
      this.timeMotorGround,
      this.timeMotorAir,
      this.timeMotorWater,
      this.timeMotorUnderwater,
      this.timeMotorUnknown,
      this.rpmMin,
      this.rpmMax,
      this.depthMax})
      : super._();

  @override
  Tachograph rebuild(void Function(TachographBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TachographBuilder toBuilder() => TachographBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is Tachograph &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (timestampLastService == other.timestampLastService ||
            timestampLastService - other.timestampLastService <= 1E-7) &&
        (timeNextService == other.timeNextService ||
            timeNextService - other.timeNextService <= 1E-7) &&
        (timeMotorNextService == other.timeMotorNextService ||
            timeMotorNextService - other.timeMotorNextService <= 1E-7) &&
        (timeIdleGround == other.timeIdleGround ||
            timeIdleGround - other.timeIdleGround <= 1E-7) &&
        (timeIdleAir == other.timeIdleAir ||
            timeIdleAir - other.timeIdleAir <= 1E-7) &&
        (timeIdleWater == other.timeIdleWater ||
            timeIdleWater - other.timeIdleWater <= 1E-7) &&
        (timeIdleUnderwater == other.timeIdleUnderwater ||
            timeIdleUnderwater - other.timeIdleUnderwater <= 1E-7) &&
        (timeIdleUnknown == other.timeIdleUnknown ||
            timeIdleUnknown - other.timeIdleUnknown <= 1E-7) &&
        (timeMotorGround == other.timeMotorGround ||
            timeMotorGround - other.timeMotorGround <= 1E-7) &&
        (timeMotorAir == other.timeMotorAir ||
            timeMotorAir - other.timeMotorAir <= 1E-7) &&
        (timeMotorWater == other.timeMotorWater ||
            timeMotorWater - other.timeMotorWater <= 1E-7) &&
        (timeMotorUnderwater == other.timeMotorUnderwater ||
            timeMotorUnderwater - other.timeMotorUnderwater <= 1E-7) &&
        (timeMotorUnknown == other.timeMotorUnknown ||
            timeMotorUnknown - other.timeMotorUnknown <= 1E-7) &&
        rpmMin == other.rpmMin &&
        rpmMax == other.rpmMax &&
        (depthMax == other.depthMax || depthMax - other.depthMax <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                                                                srcEnt?.hashCode),
                                                                            dst?.hashCode),
                                                                        dstEnt?.hashCode),
                                                                    timestampLastService?.hashCode),
                                                                timeNextService?.hashCode),
                                                            timeMotorNextService?.hashCode),
                                                        timeIdleGround?.hashCode),
                                                    timeIdleAir?.hashCode),
                                                timeIdleWater?.hashCode),
                                            timeIdleUnderwater?.hashCode),
                                        timeIdleUnknown?.hashCode),
                                    timeMotorGround?.hashCode),
                                timeMotorAir?.hashCode),
                            timeMotorWater?.hashCode),
                        timeMotorUnderwater?.hashCode),
                    timeMotorUnknown?.hashCode),
                rpmMin?.hashCode),
            rpmMax?.hashCode),
        depthMax?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('Tachograph')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('timestampLastService', '$timestampLastService (s)')
          ..add('timeNextService', '$timeNextService (s)')
          ..add('timeMotorNextService', '$timeMotorNextService (s)')
          ..add('timeIdleGround', '$timeIdleGround (s)')
          ..add('timeIdleAir', '$timeIdleAir (s)')
          ..add('timeIdleWater', '$timeIdleWater (s)')
          ..add('timeIdleUnderwater', '$timeIdleUnderwater (s)')
          ..add('timeIdleUnknown', '$timeIdleUnknown (s)')
          ..add('timeMotorGround', '$timeMotorGround (s)')
          ..add('timeMotorAir', '$timeMotorAir (s)')
          ..add('timeMotorWater', '$timeMotorWater (s)')
          ..add('timeMotorUnderwater', '$timeMotorUnderwater (s)')
          ..add('timeMotorUnknown', '$timeMotorUnknown (s)')
          ..add('rpmMin', '$rpmMin (rpm)')
          ..add('rpmMax', '$rpmMax (rpm)')
          ..add('depthMax', '$depthMax (m)'))
        .toString();
  }
}

/// Tachograph builder class
///
class TachographBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<Tachograph, TachographBuilder> {
  _$Tachograph _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _timestampLastService = 0;
  double get timestampLastService => _$this._timestampLastService;
  set timestampLastService(double timestampLastService) =>
      _$this._timestampLastService = timestampLastService;

  double _timeNextService = 0;
  double get timeNextService => _$this._timeNextService;
  set timeNextService(double timeNextService) =>
      _$this._timeNextService = timeNextService;

  double _timeMotorNextService = 0;
  double get timeMotorNextService => _$this._timeMotorNextService;
  set timeMotorNextService(double timeMotorNextService) =>
      _$this._timeMotorNextService = timeMotorNextService;

  double _timeIdleGround = 0;
  double get timeIdleGround => _$this._timeIdleGround;
  set timeIdleGround(double timeIdleGround) =>
      _$this._timeIdleGround = timeIdleGround;

  double _timeIdleAir = 0;
  double get timeIdleAir => _$this._timeIdleAir;
  set timeIdleAir(double timeIdleAir) => _$this._timeIdleAir = timeIdleAir;

  double _timeIdleWater = 0;
  double get timeIdleWater => _$this._timeIdleWater;
  set timeIdleWater(double timeIdleWater) =>
      _$this._timeIdleWater = timeIdleWater;

  double _timeIdleUnderwater = 0;
  double get timeIdleUnderwater => _$this._timeIdleUnderwater;
  set timeIdleUnderwater(double timeIdleUnderwater) =>
      _$this._timeIdleUnderwater = timeIdleUnderwater;

  double _timeIdleUnknown = 0;
  double get timeIdleUnknown => _$this._timeIdleUnknown;
  set timeIdleUnknown(double timeIdleUnknown) =>
      _$this._timeIdleUnknown = timeIdleUnknown;

  double _timeMotorGround = 0;
  double get timeMotorGround => _$this._timeMotorGround;
  set timeMotorGround(double timeMotorGround) =>
      _$this._timeMotorGround = timeMotorGround;

  double _timeMotorAir = 0;
  double get timeMotorAir => _$this._timeMotorAir;
  set timeMotorAir(double timeMotorAir) => _$this._timeMotorAir = timeMotorAir;

  double _timeMotorWater = 0;
  double get timeMotorWater => _$this._timeMotorWater;
  set timeMotorWater(double timeMotorWater) =>
      _$this._timeMotorWater = timeMotorWater;

  double _timeMotorUnderwater = 0;
  double get timeMotorUnderwater => _$this._timeMotorUnderwater;
  set timeMotorUnderwater(double timeMotorUnderwater) =>
      _$this._timeMotorUnderwater = timeMotorUnderwater;

  double _timeMotorUnknown = 0;
  double get timeMotorUnknown => _$this._timeMotorUnknown;
  set timeMotorUnknown(double timeMotorUnknown) =>
      _$this._timeMotorUnknown = timeMotorUnknown;

  int _rpmMin = 0;
  int get rpmMin => _$this._rpmMin;
  set rpmMin(int rpmMin) => _$this._rpmMin = rpmMin;

  int _rpmMax = 0;
  int get rpmMax => _$this._rpmMax;
  set rpmMax(int rpmMax) => _$this._rpmMax = rpmMax;

  double _depthMax = 0;
  double get depthMax => _$this._depthMax;
  set depthMax(double depthMax) => _$this._depthMax = depthMax;

  TachographBuilder();

  TachographBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TachographBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TachographBuilder()..copyFromHeader(headerFrom);

  TachographBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _timestampLastService = _$v.timestampLastService;
      _timeNextService = _$v.timeNextService;
      _timeMotorNextService = _$v.timeMotorNextService;
      _timeIdleGround = _$v.timeIdleGround;
      _timeIdleAir = _$v.timeIdleAir;
      _timeIdleWater = _$v.timeIdleWater;
      _timeIdleUnderwater = _$v.timeIdleUnderwater;
      _timeIdleUnknown = _$v.timeIdleUnknown;
      _timeMotorGround = _$v.timeMotorGround;
      _timeMotorAir = _$v.timeMotorAir;
      _timeMotorWater = _$v.timeMotorWater;
      _timeMotorUnderwater = _$v.timeMotorUnderwater;
      _timeMotorUnknown = _$v.timeMotorUnknown;
      _rpmMin = _$v.rpmMin;
      _rpmMax = _$v.rpmMax;
      _depthMax = _$v.depthMax;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(Tachograph other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$Tachograph;
  }

  @override
  void update(void Function(TachographBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$Tachograph build() {
    final _$result = _$v ??
        _$Tachograph._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            timestampLastService: timestampLastService ?? 0,
            timeNextService: timeNextService ?? 0,
            timeMotorNextService: timeMotorNextService ?? 0,
            timeIdleGround: timeIdleGround ?? 0,
            timeIdleAir: timeIdleAir ?? 0,
            timeIdleWater: timeIdleWater ?? 0,
            timeIdleUnderwater: timeIdleUnderwater ?? 0,
            timeIdleUnknown: timeIdleUnknown ?? 0,
            timeMotorGround: timeMotorGround ?? 0,
            timeMotorAir: timeMotorAir ?? 0,
            timeMotorWater: timeMotorWater ?? 0,
            timeMotorUnderwater: timeMotorUnderwater ?? 0,
            timeMotorUnknown: timeMotorUnknown ?? 0,
            rpmMin: rpmMin ?? 0,
            rpmMax: rpmMax ?? 0,
            depthMax: depthMax ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// APM Status immutable class
///
class _$ApmStatus extends ApmStatus {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final ApmStatusEnumSeverity severity;
  @override
  final String text;

  factory _$ApmStatus([void Function(ApmStatusBuilder b) updates]) =>
      (ApmStatusBuilder()..update(updates)).build();

  _$ApmStatus._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.severity,
      this.text})
      : super._();

  @override
  ApmStatus rebuild(void Function(ApmStatusBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  ApmStatusBuilder toBuilder() => ApmStatusBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is ApmStatus &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        severity == other.severity &&
        text == other.text;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                        srcEnt?.hashCode),
                    dst?.hashCode),
                dstEnt?.hashCode),
            severity?.hashCode),
        text?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('ApmStatus')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('severity', '$severity (Enumerated)')
          ..add('text', '$text'))
        .toString();
  }
}

/// APM Status builder class
///
class ApmStatusBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<ApmStatus, ApmStatusBuilder> {
  _$ApmStatus _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  ApmStatusEnumSeverity _severity = ApmStatusEnumSeverity(0);
  ApmStatusEnumSeverity get severity => _$this._severity;
  set severity(ApmStatusEnumSeverity severity) => _$this._severity = severity;

  String _text = '';
  String get text => _$this._text;
  set text(String text) => _$this._text = text;

  ApmStatusBuilder();

  ApmStatusBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  ApmStatusBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      ApmStatusBuilder()..copyFromHeader(headerFrom);

  ApmStatusBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _severity = _$v.severity;
      _text = _$v.text;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(ApmStatus other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$ApmStatus;
  }

  @override
  void update(void Function(ApmStatusBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$ApmStatus build() {
    final _$result = _$v ??
        _$ApmStatus._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            severity: severity ?? ApmStatusEnumSeverity(0),
            text: text ?? '');
    replace(_$result);
    return _$result;
  }
}

/// SADC Readings immutable class
///
class _$SadcReadings extends SadcReadings {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final int channel;
  @override
  final int value;
  @override
  final SadcReadingsEnumGain gain;

  factory _$SadcReadings([void Function(SadcReadingsBuilder b) updates]) =>
      (SadcReadingsBuilder()..update(updates)).build();

  _$SadcReadings._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.channel,
      this.value,
      this.gain})
      : super._();

  @override
  SadcReadings rebuild(void Function(SadcReadingsBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  SadcReadingsBuilder toBuilder() => SadcReadingsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is SadcReadings &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        channel == other.channel &&
        value == other.value &&
        gain == other.gain;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                            srcEnt?.hashCode),
                        dst?.hashCode),
                    dstEnt?.hashCode),
                channel?.hashCode),
            value?.hashCode),
        gain?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('SadcReadings')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('channel', '$channel')
          ..add('value', '$value')
          ..add('gain', '$gain (Enumerated)'))
        .toString();
  }
}

/// SADC Readings builder class
///
class SadcReadingsBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<SadcReadings, SadcReadingsBuilder> {
  _$SadcReadings _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  int _channel = 0;
  int get channel => _$this._channel;
  set channel(int channel) => _$this._channel = channel;

  int _value = 0;
  int get value => _$this._value;
  set value(int value) => _$this._value = value;

  SadcReadingsEnumGain _gain = SadcReadingsEnumGain(0);
  SadcReadingsEnumGain get gain => _$this._gain;
  set gain(SadcReadingsEnumGain gain) => _$this._gain = gain;

  SadcReadingsBuilder();

  SadcReadingsBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  SadcReadingsBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      SadcReadingsBuilder()..copyFromHeader(headerFrom);

  SadcReadingsBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _channel = _$v.channel;
      _value = _$v.value;
      _gain = _$v.gain;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(SadcReadings other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$SadcReadings;
  }

  @override
  void update(void Function(SadcReadingsBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$SadcReadings build() {
    final _$result = _$v ??
        _$SadcReadings._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            channel: channel ?? 0,
            value: value ?? 0,
            gain: gain ?? SadcReadingsEnumGain(0));
    replace(_$result);
    return _$result;
  }
}

/// DMS Detection immutable class
///
class _$DmsDetection extends DmsDetection {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double ch01;
  @override
  final double ch02;
  @override
  final double ch03;
  @override
  final double ch04;
  @override
  final double ch05;
  @override
  final double ch06;
  @override
  final double ch07;
  @override
  final double ch08;
  @override
  final double ch09;
  @override
  final double ch10;
  @override
  final double ch11;
  @override
  final double ch12;
  @override
  final double ch13;
  @override
  final double ch14;
  @override
  final double ch15;
  @override
  final double ch16;

  factory _$DmsDetection([void Function(DmsDetectionBuilder b) updates]) =>
      (DmsDetectionBuilder()..update(updates)).build();

  _$DmsDetection._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.ch01,
      this.ch02,
      this.ch03,
      this.ch04,
      this.ch05,
      this.ch06,
      this.ch07,
      this.ch08,
      this.ch09,
      this.ch10,
      this.ch11,
      this.ch12,
      this.ch13,
      this.ch14,
      this.ch15,
      this.ch16})
      : super._();

  @override
  DmsDetection rebuild(void Function(DmsDetectionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  DmsDetectionBuilder toBuilder() => DmsDetectionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is DmsDetection &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (ch01 == other.ch01 || ch01 - other.ch01 <= 1E-7) &&
        (ch02 == other.ch02 || ch02 - other.ch02 <= 1E-7) &&
        (ch03 == other.ch03 || ch03 - other.ch03 <= 1E-7) &&
        (ch04 == other.ch04 || ch04 - other.ch04 <= 1E-7) &&
        (ch05 == other.ch05 || ch05 - other.ch05 <= 1E-7) &&
        (ch06 == other.ch06 || ch06 - other.ch06 <= 1E-7) &&
        (ch07 == other.ch07 || ch07 - other.ch07 <= 1E-7) &&
        (ch08 == other.ch08 || ch08 - other.ch08 <= 1E-7) &&
        (ch09 == other.ch09 || ch09 - other.ch09 <= 1E-7) &&
        (ch10 == other.ch10 || ch10 - other.ch10 <= 1E-7) &&
        (ch11 == other.ch11 || ch11 - other.ch11 <= 1E-7) &&
        (ch12 == other.ch12 || ch12 - other.ch12 <= 1E-7) &&
        (ch13 == other.ch13 || ch13 - other.ch13 <= 1E-7) &&
        (ch14 == other.ch14 || ch14 - other.ch14 <= 1E-7) &&
        (ch15 == other.ch15 || ch15 - other.ch15 <= 1E-7) &&
        (ch16 == other.ch16 || ch16 - other.ch16 <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                                                                                srcEnt?.hashCode),
                                                                            dst?.hashCode),
                                                                        dstEnt?.hashCode),
                                                                    ch01?.hashCode),
                                                                ch02?.hashCode),
                                                            ch03?.hashCode),
                                                        ch04?.hashCode),
                                                    ch05?.hashCode),
                                                ch06?.hashCode),
                                            ch07?.hashCode),
                                        ch08?.hashCode),
                                    ch09?.hashCode),
                                ch10?.hashCode),
                            ch11?.hashCode),
                        ch12?.hashCode),
                    ch13?.hashCode),
                ch14?.hashCode),
            ch15?.hashCode),
        ch16?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('DmsDetection')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('ch01', '$ch01')
          ..add('ch02', '$ch02')
          ..add('ch03', '$ch03')
          ..add('ch04', '$ch04')
          ..add('ch05', '$ch05')
          ..add('ch06', '$ch06')
          ..add('ch07', '$ch07')
          ..add('ch08', '$ch08')
          ..add('ch09', '$ch09')
          ..add('ch10', '$ch10')
          ..add('ch11', '$ch11')
          ..add('ch12', '$ch12')
          ..add('ch13', '$ch13')
          ..add('ch14', '$ch14')
          ..add('ch15', '$ch15')
          ..add('ch16', '$ch16'))
        .toString();
  }
}

/// DMS Detection builder class
///
class DmsDetectionBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<DmsDetection, DmsDetectionBuilder> {
  _$DmsDetection _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _ch01 = 0;
  double get ch01 => _$this._ch01;
  set ch01(double ch01) => _$this._ch01 = ch01;

  double _ch02 = 0;
  double get ch02 => _$this._ch02;
  set ch02(double ch02) => _$this._ch02 = ch02;

  double _ch03 = 0;
  double get ch03 => _$this._ch03;
  set ch03(double ch03) => _$this._ch03 = ch03;

  double _ch04 = 0;
  double get ch04 => _$this._ch04;
  set ch04(double ch04) => _$this._ch04 = ch04;

  double _ch05 = 0;
  double get ch05 => _$this._ch05;
  set ch05(double ch05) => _$this._ch05 = ch05;

  double _ch06 = 0;
  double get ch06 => _$this._ch06;
  set ch06(double ch06) => _$this._ch06 = ch06;

  double _ch07 = 0;
  double get ch07 => _$this._ch07;
  set ch07(double ch07) => _$this._ch07 = ch07;

  double _ch08 = 0;
  double get ch08 => _$this._ch08;
  set ch08(double ch08) => _$this._ch08 = ch08;

  double _ch09 = 0;
  double get ch09 => _$this._ch09;
  set ch09(double ch09) => _$this._ch09 = ch09;

  double _ch10 = 0;
  double get ch10 => _$this._ch10;
  set ch10(double ch10) => _$this._ch10 = ch10;

  double _ch11 = 0;
  double get ch11 => _$this._ch11;
  set ch11(double ch11) => _$this._ch11 = ch11;

  double _ch12 = 0;
  double get ch12 => _$this._ch12;
  set ch12(double ch12) => _$this._ch12 = ch12;

  double _ch13 = 0;
  double get ch13 => _$this._ch13;
  set ch13(double ch13) => _$this._ch13 = ch13;

  double _ch14 = 0;
  double get ch14 => _$this._ch14;
  set ch14(double ch14) => _$this._ch14 = ch14;

  double _ch15 = 0;
  double get ch15 => _$this._ch15;
  set ch15(double ch15) => _$this._ch15 = ch15;

  double _ch16 = 0;
  double get ch16 => _$this._ch16;
  set ch16(double ch16) => _$this._ch16 = ch16;

  DmsDetectionBuilder();

  DmsDetectionBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  DmsDetectionBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      DmsDetectionBuilder()..copyFromHeader(headerFrom);

  DmsDetectionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _ch01 = _$v.ch01;
      _ch02 = _$v.ch02;
      _ch03 = _$v.ch03;
      _ch04 = _$v.ch04;
      _ch05 = _$v.ch05;
      _ch06 = _$v.ch06;
      _ch07 = _$v.ch07;
      _ch08 = _$v.ch08;
      _ch09 = _$v.ch09;
      _ch10 = _$v.ch10;
      _ch11 = _$v.ch11;
      _ch12 = _$v.ch12;
      _ch13 = _$v.ch13;
      _ch14 = _$v.ch14;
      _ch15 = _$v.ch15;
      _ch16 = _$v.ch16;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(DmsDetection other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$DmsDetection;
  }

  @override
  void update(void Function(DmsDetectionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$DmsDetection build() {
    final _$result = _$v ??
        _$DmsDetection._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            ch01: ch01 ?? 0,
            ch02: ch02 ?? 0,
            ch03: ch03 ?? 0,
            ch04: ch04 ?? 0,
            ch05: ch05 ?? 0,
            ch06: ch06 ?? 0,
            ch07: ch07 ?? 0,
            ch08: ch08 ?? 0,
            ch09: ch09 ?? 0,
            ch10: ch10 ?? 0,
            ch11: ch11 ?? 0,
            ch12: ch12 ?? 0,
            ch13: ch13 ?? 0,
            ch14: ch14 ?? 0,
            ch15: ch15 ?? 0,
            ch16: ch16 ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Total Magnetic Field Intensity immutable class
///
class _$TotalMagIntensity extends TotalMagIntensity {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final double value;

  factory _$TotalMagIntensity(
          [void Function(TotalMagIntensityBuilder b) updates]) =>
      (TotalMagIntensityBuilder()..update(updates)).build();

  _$TotalMagIntensity._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.value})
      : super._();

  @override
  TotalMagIntensity rebuild(
          void Function(TotalMagIntensityBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  TotalMagIntensityBuilder toBuilder() =>
      TotalMagIntensityBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is TotalMagIntensity &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        (value == other.value || value - other.value <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, timestamp?.hashCode), src?.hashCode),
                    srcEnt?.hashCode),
                dst?.hashCode),
            dstEnt?.hashCode),
        value?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('TotalMagIntensity')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('value', '$value'))
        .toString();
  }
}

/// Total Magnetic Field Intensity builder class
///
class TotalMagIntensityBuilder extends Object
    with ImcBuilderHeaderPart
    implements
        BuilderWithInstanciator<TotalMagIntensity, TotalMagIntensityBuilder> {
  _$TotalMagIntensity _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  double _value = 0;
  double get value => _$this._value;
  set value(double value) => _$this._value = value;

  TotalMagIntensityBuilder();

  TotalMagIntensityBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  TotalMagIntensityBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      TotalMagIntensityBuilder()..copyFromHeader(headerFrom);

  TotalMagIntensityBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _value = _$v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(TotalMagIntensity other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$TotalMagIntensity;
  }

  @override
  void update(void Function(TotalMagIntensityBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$TotalMagIntensity build() {
    final _$result = _$v ??
        _$TotalMagIntensity._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            value: value ?? 0);
    replace(_$result);
    return _$result;
  }
}

/// Home Position immutable class
///
class _$HomePosition extends HomePosition {
  @override
  final DateTime timestamp;
  @override
  final int src;
  @override
  final int srcEnt;
  @override
  final int dst;
  @override
  final int dstEnt;

  @override
  final HomePositionEnumOp op;
  @override
  final double lat;
  @override
  final double lon;
  @override
  final double height;
  @override
  final double depth;
  @override
  final double alt;

  factory _$HomePosition([void Function(HomePositionBuilder b) updates]) =>
      (HomePositionBuilder()..update(updates)).build();

  _$HomePosition._(
      {this.timestamp, //Should be DateTime.now() but is not const
      this.src = ImcId.nullId,
      this.srcEnt = ImcEntityId.nullId,
      this.dst = ImcId.nullId,
      this.dstEnt = ImcEntityId.nullId,
      this.op,
      this.lat,
      this.lon,
      this.height,
      this.depth,
      this.alt})
      : super._();

  @override
  HomePosition rebuild(void Function(HomePositionBuilder b) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  HomePositionBuilder toBuilder() => HomePositionBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is HomePosition &&
        timestamp == other.timestamp &&
        src == other.src &&
        srcEnt == other.srcEnt &&
        dst == other.dst &&
        dstEnt == other.dstEnt &&
        op == other.op &&
        (lat == other.lat || lat - other.lat <= 1E-7) &&
        (lon == other.lon || lon - other.lon <= 1E-7) &&
        (height == other.height || height - other.height <= 1E-7) &&
        (depth == other.depth || depth - other.depth <= 1E-7) &&
        (alt == other.alt || alt - other.alt <= 1E-7);
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, timestamp?.hashCode),
                                            src?.hashCode),
                                        srcEnt?.hashCode),
                                    dst?.hashCode),
                                dstEnt?.hashCode),
                            op?.hashCode),
                        lat?.hashCode),
                    lon?.hashCode),
                height?.hashCode),
            depth?.hashCode),
        alt?.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper('HomePosition')
          ..add('timestamp', timestamp)
          ..add('src', "0x${src?.toRadixString(16)} (${src ?? '-'})")
          ..add('srcEnt', "0x${srcEnt?.toRadixString(16)} (${srcEnt ?? '-'})")
          ..add('dst', "0x${dst?.toRadixString(16)} (${dst ?? '-'})")
          ..add('dstEnt', "0x${dstEnt?.toRadixString(16)} (${dstEnt ?? '-'})")
          ..add('op', '$op (Enumerated)')
          ..add('lat',
              '$lat (rad)${lat != null ? ' [${lat * 180.0 / math.pi} (deg)]' : ''}')
          ..add('lon',
              '$lon (rad)${lon != null ? ' [${lon * 180.0 / math.pi} (deg)]' : ''}')
          ..add('height', '$height (m)')
          ..add('depth', '$depth (m)')
          ..add('alt', '$alt (m)'))
        .toString();
  }
}

/// Home Position builder class
///
class HomePositionBuilder extends Object
    with ImcBuilderHeaderPart
    implements BuilderWithInstanciator<HomePosition, HomePositionBuilder> {
  _$HomePosition _$v;

  DateTime _timestamp = DateTime.now();
  @override
  DateTime get timestamp => _$this._timestamp;
  @override
  set timestamp(DateTime timestamp) => _$this._timestamp = timestamp;

  int _src = ImcId.nullId;
  @override
  int get src => _$this._src;
  @override
  set src(int src) => _$this._src = src;

  int _srcEnt = ImcEntityId.nullId;
  @override
  int get srcEnt => _$this._srcEnt;
  @override
  set srcEnt(int srcEnt) => _$this._srcEnt = srcEnt;

  int _dst = ImcId.nullId;
  @override
  int get dst => _$this._dst;
  @override
  set dst(int dst) => _$this._dst = dst;

  int _dstEnt = ImcEntityId.nullId;
  @override
  int get dstEnt => _$this._dstEnt;
  @override
  set dstEnt(int dstEnt) => _$this._dstEnt = dstEnt;

  HomePositionEnumOp _op = HomePositionEnumOp(0);
  HomePositionEnumOp get op => _$this._op;
  set op(HomePositionEnumOp op) => _$this._op = op;

  double _lat = 0;
  double get lat => _$this._lat;
  set lat(double lat) => _$this._lat = lat;

  double _lon = 0;
  double get lon => _$this._lon;
  set lon(double lon) => _$this._lon = lon;

  double _height = 0;
  double get height => _$this._height;
  set height(double height) => _$this._height = height;

  double _depth = 0;
  double get depth => _$this._depth;
  set depth(double depth) => _$this._depth = depth;

  double _alt = 0;
  double get alt => _$this._alt;
  set alt(double alt) => _$this._alt = alt;

  HomePositionBuilder();

  HomePositionBuilder.fromHeader(ImcBuilderHeaderPart headerFrom) {
    copyFromHeader(headerFrom);
  }

  @override
  HomePositionBuilder newInstance([ImcBuilderHeaderPart headerFrom]) =>
      HomePositionBuilder()..copyFromHeader(headerFrom);

  HomePositionBuilder get _$this {
    if (_$v != null) {
      _timestamp = _$v.timestamp;
      _src = _$v.src;
      _srcEnt = _$v.srcEnt;
      _dst = _$v.dst;
      _dstEnt = _$v.dstEnt;
      _op = _$v.op;
      _lat = _$v.lat;
      _lon = _$v.lon;
      _height = _$v.height;
      _depth = _$v.depth;
      _alt = _$v.alt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(HomePosition other) {
    if (other == null) {
      throw ArgumentError.notNull('other');
    }
    _$v = other as _$HomePosition;
  }

  @override
  void update(void Function(HomePositionBuilder b) updates) {
    if (updates != null) updates(this);
  }

  @override
  _$HomePosition build() {
    final _$result = _$v ??
        _$HomePosition._(
            timestamp: timestamp ?? DateTime.now(),
            src: src ?? ImcId.nullId,
            srcEnt: srcEnt ?? ImcEntityId.nullId,
            dst: dst ?? ImcId.nullId,
            dstEnt: dstEnt ?? ImcEntityId.nullId,
            op: op ?? HomePositionEnumOp(0),
            lat: lat ?? 0,
            lon: lon ?? 0,
            height: height ?? 0,
            depth: depth ?? 0,
            alt: alt ?? 0);
    replace(_$result);
    return _$result;
  }
}
